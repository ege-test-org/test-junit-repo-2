<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="8935" failures="0" errors="0" time="865.401">
  <testsuite name="QuizExerciseUpdateComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:12:16" time="44.098" tests="134">
    <testcase classname="QuizExerciseUpdateComponent onInit without exam id should call courseExerciseService.find and quizExerciseService.find" name="QuizExerciseUpdateComponent onInit without exam id should call courseExerciseService.find and quizExerciseService.find" time="1.58">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit with exam id should call exerciseGroupService.find" name="QuizExerciseUpdateComponent onInit with exam id should call exerciseGroupService.find" time="0.023">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit with exam id but without exercise id should call exerciseGroupService.find" name="QuizExerciseUpdateComponent onInit with exam id but without exercise id should call exerciseGroupService.find" time="0.027">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit without exam id and exercise id should call exerciseGroupService.find" name="QuizExerciseUpdateComponent onInit without exam id and exercise id should call exerciseGroupService.find" time="0.023">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit with exercise id and exam with test runs should not call alert service" name="QuizExerciseUpdateComponent onInit with exercise id and exam with test runs should not call alert service" time="0.02">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit with exercise id and exam with test runs should call alert service" name="QuizExerciseUpdateComponent onInit with exercise id and exam with test runs should call alert service" time="0.022">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit validate dates should set errors to false for valid dates for SYNCHRONIZED mode" name="QuizExerciseUpdateComponent onInit validate dates should set errors to false for valid dates for SYNCHRONIZED mode" time="0.006">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit validate dates should set errors to false for valid dates for BATCHED mode" name="QuizExerciseUpdateComponent onInit validate dates should set errors to false for valid dates for BATCHED mode" time="0.004">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit validate dates should set errors to false for valid dates for INDIVIDUAL mode" name="QuizExerciseUpdateComponent onInit validate dates should set errors to false for valid dates for INDIVIDUAL mode" time="0.005">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit validate dates should set errors to true for invalid dates for SYNCHRONIZED mode" name="QuizExerciseUpdateComponent onInit validate dates should set errors to true for invalid dates for SYNCHRONIZED mode" time="0.006">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit validate dates should set errors to true for invalid dates for BATCHED mode" name="QuizExerciseUpdateComponent onInit validate dates should set errors to true for invalid dates for BATCHED mode" time="0.005">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit validate dates should set errors to true for invalid dates for INDIVIDUAL mode" name="QuizExerciseUpdateComponent onInit validate dates should set errors to true for invalid dates for INDIVIDUAL mode" time="0.019">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit set isEditable should set isEditable to true if new quiz" name="QuizExerciseUpdateComponent onInit set isEditable should set isEditable to true if new quiz" time="0.026">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit set isEditable should set isEditable to true if existing quiz is synchronized, not active and not over" name="QuizExerciseUpdateComponent onInit set isEditable should set isEditable to true if existing quiz is synchronized, not active and not over" time="0.022">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit set isEditable should set isEditable to true if existing quiz is batched, no batch exists, not active and not over" name="QuizExerciseUpdateComponent onInit set isEditable should set isEditable to true if existing quiz is batched, no batch exists, not active and not over" time="0.068">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit set isEditable should set isEditable to false if existing quiz is batched, batch exists, not active and not over" name="QuizExerciseUpdateComponent onInit set isEditable should set isEditable to false if existing quiz is batched, batch exists, not active and not over" time="0.04">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit set isEditable should set isEditable to false if existing quiz is synchronized, active, and not over" name="QuizExerciseUpdateComponent onInit set isEditable should set isEditable to false if existing quiz is synchronized, active, and not over" time="0.029">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit set isEditable should set isEditable to false if existing quiz is synchronized, not active, and over" name="QuizExerciseUpdateComponent onInit set isEditable should set isEditable to false if existing quiz is synchronized, not active, and over" time="0.037">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent onInit should updateCategories properly by making category available for selection again when removing it" name="QuizExerciseUpdateComponent onInit should updateCategories properly by making category available for selection again when removing it" time="0.006">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange init should set quizExercise to entity if quiz exercise not defined" name="QuizExerciseUpdateComponent without routeChange init should set quizExercise to entity if quiz exercise not defined" time="0.038">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange init should set entity to quiz exercise if quiz exercise defined" name="QuizExerciseUpdateComponent without routeChange init should set entity to quiz exercise if quiz exercise defined" time="0.023">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange init should set quizExercise exercise group if exam and it does not have one" name="QuizExerciseUpdateComponent without routeChange init should set quizExercise exercise group if exam and it does not have one" time="0.016">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange init should call on error if course service fails" name="QuizExerciseUpdateComponent without routeChange init should call on error if course service fails" time="0.025">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange onDurationChange should update duration and quizExercise.duration with same values" name="QuizExerciseUpdateComponent without routeChange onDurationChange should update duration and quizExercise.duration with same values" time="0.014">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange onDurationChange should increase minutes when reaching 60 seconds" name="QuizExerciseUpdateComponent without routeChange onDurationChange should increase minutes when reaching 60 seconds" time="0.027">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange onDurationChange should decrease minutes when reaching -1 seconds" name="QuizExerciseUpdateComponent without routeChange onDurationChange should decrease minutes when reaching -1 seconds" time="0.014">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange onDurationChange should set duration to due date release date difference" name="QuizExerciseUpdateComponent without routeChange onDurationChange should set duration to due date release date difference" time="0.026">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange ngOnChanges should call init if there are changes on course or quiz exercise" name="QuizExerciseUpdateComponent without routeChange ngOnChanges should call init if there are changes on course or quiz exercise" time="0.014">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange updateCategories should update categories to given categories" name="QuizExerciseUpdateComponent without routeChange updateCategories should update categories to given categories" time="0.013">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange show dropdown should return isVisibleBeforeStart if no quizExercise" name="QuizExerciseUpdateComponent without routeChange show dropdown should return isVisibleBeforeStart if no quizExercise" time="0.013">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange show dropdown should return isVisibleBeforeStart if quizExercise not planned to start" name="QuizExerciseUpdateComponent without routeChange show dropdown should return isVisibleBeforeStart if quizExercise not planned to start" time="0.018">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange show dropdown should return if end of exercise is in the past" name="QuizExerciseUpdateComponent without routeChange show dropdown should return if end of exercise is in the past" time="0.034">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange show dropdown should return if end of exercise is in the future but release date is in the past" name="QuizExerciseUpdateComponent without routeChange show dropdown should return if end of exercise is in the future but release date is in the past" time="0.037">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange unloading notification and can deactivate should return opposite of pendingChangesCache" name="QuizExerciseUpdateComponent without routeChange unloading notification and can deactivate should return opposite of pendingChangesCache" time="0.032">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange unloading notification and can deactivate should not deactivate with pending changes" name="QuizExerciseUpdateComponent without routeChange unloading notification and can deactivate should not deactivate with pending changes" time="0.013">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange unloading notification and can deactivate should deactivate with no pending changes" name="QuizExerciseUpdateComponent without routeChange unloading notification and can deactivate should deactivate with no pending changes" time="0.023">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange check if date is in the past should return true if given month is before month we are in" name="QuizExerciseUpdateComponent without routeChange check if date is in the past should return true if given month is before month we are in" time="0.017">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange check if date is in the past should return false if given month is same or after month we are in" name="QuizExerciseUpdateComponent without routeChange check if date is in the past should return false if given month is same or after month we are in" time="0.012">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange check if date is in the past should return true if given date is before now" name="QuizExerciseUpdateComponent without routeChange check if date is in the past should return true if given date is before now" time="0.012">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange check if date is in the past should return false if given date is before now" name="QuizExerciseUpdateComponent without routeChange check if date is in the past should return false if given date is before now" time="0.03">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange calculating max exercise score should return sum of scores of the questions" name="QuizExerciseUpdateComponent without routeChange calculating max exercise score should return sum of scores of the questions" time="0.013">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should be valid with default test setting" name="QuizExerciseUpdateComponent without routeChange quiz validity should be valid with default test setting" time="0.016">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid without a quiz title" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid without a quiz title" time="0.016">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity unknown question type should be valid if a question has unknown type and a title" name="QuizExerciseUpdateComponent without routeChange quiz validity unknown question type should be valid if a question has unknown type and a title" time="0.017">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity unknown question type should not be valid if a question has unknown type and no title" name="QuizExerciseUpdateComponent without routeChange quiz validity unknown question type should not be valid if a question has unknown type and no title" time="0.031">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if a question has negative score" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if a question has negative score" time="0.021">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should be valid with valid MC question" name="QuizExerciseUpdateComponent without routeChange quiz validity should be valid with valid MC question" time="0.019">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if MC question has no title" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if MC question has no title" time="0.013">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if MC question has no correct answer" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if MC question has no correct answer" time="0.015">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if MC question hint is &lt;= 255 characters" name="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if MC question hint is &lt;= 255 characters" time="0.021">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if MC question explanation is &lt;= 500 characters" name="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if MC question explanation is &lt;= 500 characters" time="0.024">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if MC question hint has exactly 255 characters" name="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if MC question hint has exactly 255 characters" time="0.015">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if MC question explanation has exactly 500 characters" name="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if MC question explanation has exactly 500 characters" time="0.021">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if MC question hint has more than 255 characters" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if MC question hint has more than 255 characters" time="0.02">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if MC question explanation has more than 500 characters" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if MC question explanation has more than 500 characters" time="0.017">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if MC answer option hint has exactly 255 characters" name="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if MC answer option hint has exactly 255 characters" time="0.015">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if MC answer option explanation has exactly 500 characters" name="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if MC answer option explanation has exactly 500 characters" time="0.028">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if MC answer option hint has more than 255 characters" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if MC answer option hint has more than 255 characters" time="0.059">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if MC answer option explanation has more than 1000 characters" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if MC answer option explanation has more than 1000 characters" time="0.029">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if MC question has scoring type single choice" name="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if MC question has scoring type single choice" time="0.025">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if MC single choice question has multiple correct answers" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if MC single choice question has multiple correct answers" time="0.022">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should be valid with valid DnD question" name="QuizExerciseUpdateComponent without routeChange quiz validity should be valid with valid DnD question" time="0.029">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if DnD question has no title" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if DnD question has no title" time="0.032">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if DnD question has no correct mapping" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if DnD question has no correct mapping" time="0.042">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if DnD question hint has exactly 255 characters" name="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if DnD question hint has exactly 255 characters" time="0.032">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if DnD question explanation has exactly 500 characters" name="QuizExerciseUpdateComponent without routeChange quiz validity should be valid if DnD question explanation has exactly 500 characters" time="0.038">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if DnD question hint has more than 255 characters" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if DnD question hint has more than 255 characters" time="0.024">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if DnD question explanation has more than 500 characters" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if DnD question explanation has more than 500 characters" time="0.02">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should be valid with valid SA question" name="QuizExerciseUpdateComponent without routeChange quiz validity should be valid with valid SA question" time="0.018">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if SA question has no title" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if SA question has no title" time="0.024">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid with SA question with too long answer option" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid with SA question with too long answer option" time="0.02">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if SA question has no correct mapping" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if SA question has no correct mapping" time="0.02">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should be valid for synchronized mode when dueDate is less than releaseDate" name="QuizExerciseUpdateComponent without routeChange quiz validity should be valid for synchronized mode when dueDate is less than releaseDate" time="0.021">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if question point is not in valid range" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if question point is not in valid range" time="0.041">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if question point is in valid range" name="QuizExerciseUpdateComponent without routeChange quiz validity should not be valid if question point is in valid range" time="0.016">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange should delete a question" name="QuizExerciseUpdateComponent without routeChange should delete a question" time="0.021">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange saving should call create if valid and quiz exercise no id" name="QuizExerciseUpdateComponent without routeChange saving should call create if valid and quiz exercise no id" time="0.041">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange saving should call not update if testruns exist in exam mode" name="QuizExerciseUpdateComponent without routeChange saving should call not update if testruns exist in exam mode" time="0.033">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange saving should update if valid and quiz exercise has id" name="QuizExerciseUpdateComponent without routeChange saving should update if valid and quiz exercise has id" time="0.027">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange saving should import if valid and quiz exercise has id and flag" name="QuizExerciseUpdateComponent without routeChange saving should import if valid and quiz exercise has id and flag" time="0.037">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange saving should not save if not valid" name="QuizExerciseUpdateComponent without routeChange saving should not save if not valid" time="0.02">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange saving should call update with notification text if there is one" name="QuizExerciseUpdateComponent without routeChange saving should call update with notification text if there is one" time="0.024">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange saving should call alert service if response has no body on create" name="QuizExerciseUpdateComponent without routeChange saving should call alert service if response has no body on create" time="0.031">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange saving should call alert service if response has no body on update" name="QuizExerciseUpdateComponent without routeChange saving should call alert service if response has no body on update" time="0.025">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange saving should call alert service if response has no body on import" name="QuizExerciseUpdateComponent without routeChange saving should call alert service if response has no body on import" time="0.052">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange saving should call alert service if create fails" name="QuizExerciseUpdateComponent without routeChange saving should call alert service if create fails" time="0.042">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange saving should call alert service if update fails" name="QuizExerciseUpdateComponent without routeChange saving should call alert service if update fails" time="0.026">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange saving should call alert service if import fails" name="QuizExerciseUpdateComponent without routeChange saving should call alert service if import fails" time="0.024">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange routing should go back to quiz exercise page on cancel" name="QuizExerciseUpdateComponent without routeChange routing should go back to quiz exercise page on cancel" time="0.028">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange routing should go back to quiz exercise page on cancel (exam)" name="QuizExerciseUpdateComponent without routeChange routing should go back to quiz exercise page on cancel (exam)" time="0.037">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange prepare entity should set duration to 10 if not given" name="QuizExerciseUpdateComponent without routeChange prepare entity should set duration to 10 if not given" time="0.017">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange prepare entity should set release date to dayjs release date if exam mode" name="QuizExerciseUpdateComponent without routeChange prepare entity should set release date to dayjs release date if exam mode" time="0.011">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz mode should manage batches for synchronized mode" name="QuizExerciseUpdateComponent without routeChange quiz mode should manage batches for synchronized mode" time="0.019">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz mode should add batches" name="QuizExerciseUpdateComponent without routeChange quiz mode should add batches" time="0.023">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz mode should add batches when none exist" name="QuizExerciseUpdateComponent without routeChange quiz mode should add batches when none exist" time="0.015">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz mode should remove batches" name="QuizExerciseUpdateComponent without routeChange quiz mode should remove batches" time="0.013">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange quiz mode should not remove batches when they dont exist" name="QuizExerciseUpdateComponent without routeChange quiz mode should not remove batches when they dont exist" time="0.019">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for quiz should put reason for no title" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for quiz should put reason for no title" time="0.022">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for quiz should put reason for too long title" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for quiz should put reason for too long title" time="0.017">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for quiz should put reason for no duration" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for quiz should put reason for no duration" time="0.012">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for quiz should put reason for no questions" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for quiz should put reason for no questions" time="0.016">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason for undefined score" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason for undefined score" time="0.02">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason for negative score" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason for negative score" time="0.011">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason for score in invalid range" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason for score in invalid range" time="0.012">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason for no title" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason for no title" time="0.019">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason for no correct answer for MC" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason for no correct answer for MC" time="0.019">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason for no correct explanation for MC" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason for no correct explanation for MC" time="0.017">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason for too long title" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason for too long title" time="0.021">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason if question title is included in invalid flagged question" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason if question title is included in invalid flagged question" time="0.034">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason if question explanation is too long" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason if question explanation is too long" time="0.024">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason if question hint is too long" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason if question hint is too long" time="0.02">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason if answer option explanation is too long" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason if answer option explanation is too long" time="0.014">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason if answer option hint is too long" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason if answer option hint is too long" time="0.024">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason exactly once if more than one answer option explanation is too long" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason exactly once if more than one answer option explanation is too long" time="0.014">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason exactly once if more than one answer option hint is too long" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for MC and general should put reason exactly once if more than one answer option hint is too long" time="0.025">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for DnD should put reason for no correct mappings" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for DnD should put reason for no correct mappings" time="0.012">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for DnD should put reason for unsolvable" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for DnD should put reason for unsolvable" time="0.044">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for DnD should put reason for misleading correct mappings" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for DnD should put reason for misleading correct mappings" time="0.011">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for DnD should put reason and flag as invalid if a drag item is invalid" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for DnD should put reason and flag as invalid if a drag item is invalid" time="0.017">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for DnD should put reason and flag as invalid if a correct mapping is invalid" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for DnD should put reason and flag as invalid if a correct mapping is invalid" time="0.026">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for DnD should put reason and flag as invalid if a drop location is invalid" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for DnD should put reason and flag as invalid if a drop location is invalid" time="0.027">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for DnD should put reason if question explanation is too long" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for DnD should put reason if question explanation is too long" time="0.019">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for DnD should put reason if question hint is too long" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for DnD should put reason if question hint is too long" time="0.011">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason for no correct mappings" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason for no correct mappings" time="0.012">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason for misleading correct mappings" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason for misleading correct mappings" time="0.015">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason when every spot has a solution" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason when every spot has a solution" time="0.019">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason when every mapped solution has a spot" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason when every mapped solution has a spot" time="0.021">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason when there is an empty solution" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason when there is an empty solution" time="0.013">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason for too long answer option" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason for too long answer option" time="0.013">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason when duplicate mappings" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason when duplicate mappings" time="0.012">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason for not many solutions as spots" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason for not many solutions as spots" time="0.014">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason and flag as invalid if a solution is invalid" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason and flag as invalid if a solution is invalid" time="0.024">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason and flag as invalid if a answer mapping is invalid" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason and flag as invalid if a answer mapping is invalid" time="0.014">
    </testcase>
    <testcase classname="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason and flag as invalid if a spot is invalid" name="QuizExerciseUpdateComponent without routeChange invalid reasons should include right reasons in reasons array for SA should put reason and flag as invalid if a spot is invalid" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Metis Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:01" time="1.849" tests="64">
    <testcase classname="Metis Service Invoke post service methods should create a post" name="Metis Service Invoke post service methods should create a post" time="0.022">
    </testcase>
    <testcase classname="Metis Service Invoke post service methods should delete a post" name="Metis Service Invoke post service methods should delete a post" time="0.006">
    </testcase>
    <testcase classname="Metis Service Invoke post service methods should update a post" name="Metis Service Invoke post service methods should update a post" time="0.006">
    </testcase>
    <testcase classname="Metis Service Invoke post service methods should pin a post and add it to pinnedPosts$ when receiving a WebSocket update" name="Metis Service Invoke post service methods should pin a post and add it to pinnedPosts$ when receiving a WebSocket update" time="0.018">
    </testcase>
    <testcase classname="Metis Service Invoke post service methods should unpin a post and remove it from pinnedPosts$ when receiving a WebSocket update" name="Metis Service Invoke post service methods should unpin a post and remove it from pinnedPosts$ when receiving a WebSocket update" time="0.005">
    </testcase>
    <testcase classname="Metis Service Invoke post service methods should fetch pinned posts from server and update pinnedPosts$" name="Metis Service Invoke post service methods should fetch pinned posts from server and update pinnedPosts$" time="0.007">
    </testcase>
    <testcase classname="Metis Service Invoke post service methods should archive a post" name="Metis Service Invoke post service methods should archive a post" time="0.006">
    </testcase>
    <testcase classname="Metis Service Invoke post service methods should get correct list of posts when set" name="Metis Service Invoke post service methods should get correct list of posts when set" time="0.005">
    </testcase>
    <testcase classname="Metis Service Invoke post service methods should get posts for course" name="Metis Service Invoke post service methods should get posts for course" time="0.006">
    </testcase>
    <testcase classname="Metis Service Invoke answer post service methods should create an answer post" name="Metis Service Invoke answer post service methods should create an answer post" time="0.01">
    </testcase>
    <testcase classname="Metis Service Invoke answer post service methods should delete an answer post" name="Metis Service Invoke answer post service methods should delete an answer post" time="0.007">
    </testcase>
    <testcase classname="Metis Service Invoke answer post service methods should update an answer post" name="Metis Service Invoke answer post service methods should update an answer post" time="0.007">
    </testcase>
    <testcase classname="Metis Service Invoke reaction service methods should create a reaction" name="Metis Service Invoke reaction service methods should create a reaction" time="0.018">
    </testcase>
    <testcase classname="Metis Service Invoke reaction service methods should delete a reaction" name="Metis Service Invoke reaction service methods should delete a reaction" time="0.007">
    </testcase>
    <testcase classname="Metis Service should determine that metis user is author of post" name="Metis Service should determine that metis user is author of post" time="0.006">
    </testcase>
    <testcase classname="Metis Service should determine that metis user is not author of post" name="Metis Service should determine that metis user is not author of post" time="0.015">
    </testcase>
    <testcase classname="Metis Service should set course when current course has different id" name="Metis Service should set course when current course has different id" time="0.01">
    </testcase>
    <testcase classname="Metis Service should determine the link components for a reference to a post with course-wide context" name="Metis Service should determine the link components for a reference to a post with course-wide context" time="0.008">
    </testcase>
    <testcase classname="Metis Service should determine the router link required for referencing an exercise page within posting" name="Metis Service should determine the router link required for referencing an exercise page within posting" time="0.015">
    </testcase>
    <testcase classname="Metis Service should determine the router link required for referencing a lecture page within posting" name="Metis Service should determine the router link required for referencing a lecture page within posting" time="0.006">
    </testcase>
    <testcase classname="Metis Service should determine the router link required for referencing a exam page" name="Metis Service should determine the router link required for referencing a exam page" time="0.004">
    </testcase>
    <testcase classname="Metis Service should determine the router link required for referencing a faq" name="Metis Service should determine the router link required for referencing a faq" time="0.01">
    </testcase>
    <testcase classname="Metis Service should determine the router link required for navigation based on the channel subtype" name="Metis Service should determine the router link required for navigation based on the channel subtype" time="0.006">
    </testcase>
    <testcase classname="Metis Service should determine the query param for a reference to a post in a conversation" name="Metis Service should determine the query param for a reference to a post in a conversation" time="0.006">
    </testcase>
    <testcase classname="Metis Service should determine the query param for a reference to conversation message" name="Metis Service should determine the query param for a reference to conversation message" time="0.004">
    </testcase>
    <testcase classname="Metis Service should determine context information for a conversation message" name="Metis Service should determine context information for a conversation message" time="0.005">
    </testcase>
    <testcase classname="Metis Service should return &quot;Direct Message&quot; when conversation is a one-to-one chat" name="Metis Service should return &quot;Direct Message&quot; when conversation is a one-to-one chat" time="0.006">
    </testcase>
    <testcase classname="Metis Service should return &quot;Group Message&quot; when conversation is a group chat" name="Metis Service should return &quot;Group Message&quot; when conversation is a group chat" time="0.009">
    </testcase>
    <testcase classname="Metis Service Handle websocket related functionality should create websocket subscription when posts with lecture context are initially retrieved from DB" name="Metis Service Handle websocket related functionality should create websocket subscription when posts with lecture context are initially retrieved from DB" time="0.014">
    </testcase>
    <testcase classname="Metis Service Handle websocket related functionality should create websocket subscription when posts with exercise context are initially retrieved from DB" name="Metis Service Handle websocket related functionality should create websocket subscription when posts with exercise context are initially retrieved from DB" time="0.013">
    </testcase>
    <testcase classname="Metis Service Handle websocket related functionality should create websocket subscription when posts with course-wide context are initially retrieved from DB" name="Metis Service Handle websocket related functionality should create websocket subscription when posts with course-wide context are initially retrieved from DB" time="0.012">
    </testcase>
    <testcase classname="Metis Service Handle websocket related functionality should not create new subscription if already exists" name="Metis Service Handle websocket related functionality should not create new subscription if already exists" time="0.005">
    </testcase>
    <testcase classname="Metis Service Handle websocket related functionality subscribes to broadcast topic for course-wide channels" name="Metis Service Handle websocket related functionality subscribes to broadcast topic for course-wide channels" time="0.015">
    </testcase>
    <testcase classname="Metis Service Handle websocket related functionality subscribes to user specific topic for non-course-wide channels" name="Metis Service Handle websocket related functionality subscribes to user specific topic for non-course-wide channels" time="0.008">
    </testcase>
    <testcase classname="Metis Service Handle websocket related functionality should not call postService.getPosts() for new or updated messages received over WebSocket" name="Metis Service Handle websocket related functionality should not call postService.getPosts() for new or updated messages received over WebSocket" time="0.008">
    </testcase>
    <testcase classname="Metis Service Handle websocket related functionality should not call postService.getPosts() for new or updated messages received over WebSocket" name="Metis Service Handle websocket related functionality should not call postService.getPosts() for new or updated messages received over WebSocket" time="0.005">
    </testcase>
    <testcase classname="Metis Service Handle websocket related functionality should not call postService.getPosts() for new or updated messages received over WebSocket" name="Metis Service Handle websocket related functionality should not call postService.getPosts() for new or updated messages received over WebSocket" time="0.015">
    </testcase>
    <testcase classname="Metis Service Handle websocket related functionality should not call postService.getPosts() for new or updated plagiarism posts received over WebSocket" name="Metis Service Handle websocket related functionality should not call postService.getPosts() for new or updated plagiarism posts received over WebSocket" time="0.007">
    </testcase>
    <testcase classname="Metis Service Handle websocket related functionality should not call postService.getPosts() for new or updated plagiarism posts received over WebSocket" name="Metis Service Handle websocket related functionality should not call postService.getPosts() for new or updated plagiarism posts received over WebSocket" time="0.014">
    </testcase>
    <testcase classname="Metis Service Handle websocket related functionality should not call postService.getPosts() for new or updated plagiarism posts received over WebSocket" name="Metis Service Handle websocket related functionality should not call postService.getPosts() for new or updated plagiarism posts received over WebSocket" time="0.014">
    </testcase>
    <testcase classname="Metis Service Handle websocket related functionality should update messages received over WebSocket in private channels" name="Metis Service Handle websocket related functionality should update messages received over WebSocket in private channels" time="0.006">
    </testcase>
    <testcase classname="Metis Service Handle websocket related functionality should update plagiarism posts received over WebSocket" name="Metis Service Handle websocket related functionality should update plagiarism posts received over WebSocket" time="0.009">
    </testcase>
    <testcase classname="Metis Service Handle websocket related functionality should update displayed conversation messages if new message does not match search text" name="Metis Service Handle websocket related functionality should update displayed conversation messages if new message does not match search text" time="0.007">
    </testcase>
    <testcase classname="Metis Service Handle websocket related functionality should return current conversation" name="Metis Service Handle websocket related functionality should return current conversation" time="0.005">
    </testcase>
    <testcase classname="Metis Service should call ForwardedMessageService.getForwardedMessages with correct parameters when type is valid" name="Metis Service should call ForwardedMessageService.getForwardedMessages with correct parameters when type is valid" time="0.004">
    </testcase>
    <testcase classname="Metis Service should not call ForwardedMessageService.getForwardedMessages if IDs array is empty or undefined" name="Metis Service should not call ForwardedMessageService.getForwardedMessages if IDs array is empty or undefined" time="0.004">
    </testcase>
    <testcase classname="Metis Service should call PostService.getSourcePostsByIds with correct parameters" name="Metis Service should call PostService.getSourcePostsByIds with correct parameters" time="0.004">
    </testcase>
    <testcase classname="Metis Service should call AnswerPostService.getSourceAnswerPostsByIds with correct parameters" name="Metis Service should call AnswerPostService.getSourceAnswerPostsByIds with correct parameters" time="0.007">
    </testcase>
    <testcase classname="Metis Service should not call getSourcePostsByIds if postId list is undefined" name="Metis Service should not call getSourcePostsByIds if postId list is undefined" time="0.007">
    </testcase>
    <testcase classname="Metis Service should not call getSourceAnswerPostsByIds if answerPostIds is undefined" name="Metis Service should not call getSourceAnswerPostsByIds if answerPostIds is undefined" time="0.007">
    </testcase>
    <testcase classname="Metis Service should create forwarded messages and update cached posts" name="Metis Service should create forwarded messages and update cached posts" time="0.012">
    </testcase>
    <testcase classname="Metis Service should throw an error if course ID is not set before forwarding" name="Metis Service should throw an error if course ID is not set before forwarding" time="0.005">
    </testcase>
    <testcase classname="Metis Service should fail if any forwardedMessageService.createForwardedMessage fails" name="Metis Service should fail if any forwardedMessageService.createForwardedMessage fails" time="0.005">
    </testcase>
    <testcase classname="Metis Service should NOT update local cache if target conversation differs from currentConversation" name="Metis Service should NOT update local cache if target conversation differs from currentConversation" time="0.004">
    </testcase>
    <testcase classname="Metis Service should NOT add newly created post to cache if it already exists in cache" name="Metis Service should NOT add newly created post to cache if it already exists in cache" time="0.011">
    </testcase>
    <testcase classname="Metis Service should create forwarded messages with sourceType=ANSWER if isAnswer=true" name="Metis Service should create forwarded messages with sourceType=ANSWER if isAnswer=true" time="0.014">
    </testcase>
    <testcase classname="Metis Service Save post methods should save a post and update cached posts" name="Metis Service Save post methods should save a post and update cached posts" time="0.015">
    </testcase>
    <testcase classname="Metis Service Save post methods should remove a saved post and update cached posts" name="Metis Service Save post methods should remove a saved post and update cached posts" time="0.007">
    </testcase>
    <testcase classname="Metis Service Save post methods should change the saved post status and update cached posts" name="Metis Service Save post methods should change the saved post status and update cached posts" time="0.005">
    </testcase>
    <testcase classname="Metis Service Save post methods should reset cached posts and update total number of posts" name="Metis Service Save post methods should reset cached posts and update total number of posts" time="0.008">
    </testcase>
    <testcase classname="Metis Service Save post methods should remove pinned post from pinnedPosts$ when WebSocket DELETE action is received" name="Metis Service Save post methods should remove pinned post from pinnedPosts$ when WebSocket DELETE action is received" time="0.006">
    </testcase>
    <testcase classname="Metis Service Save post methods should remove a post from pinnedPosts$ if the given post ID exists in the pinned list" name="Metis Service Save post methods should remove a post from pinnedPosts$ if the given post ID exists in the pinned list" time="0.006">
    </testcase>
    <testcase classname="Metis Service Save post methods should not modify pinnedPosts$ if the given post ID is not in the pinned list" name="Metis Service Save post methods should not modify pinnedPosts$ if the given post ID is not in the pinned list" time="0.007">
    </testcase>
    <testcase classname="Metis Service Save post methods should update a pinned post when receiving a WebSocket update" name="Metis Service Save post methods should update a pinned post when receiving a WebSocket update" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="CodeEditorFileBrowserComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:03" time="6.091" tests="35">
    <testcase classname="CodeEditorFileBrowserComponent should create no treeviewItems if getRepositoryContent returns an empty result" name="CodeEditorFileBrowserComponent should create no treeviewItems if getRepositoryContent returns an empty result" time="0.487">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should create treeviewItems if getRepositoryContent returns files" name="CodeEditorFileBrowserComponent should create treeviewItems if getRepositoryContent returns files" time="0.182">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should create treeviewItems with nested folder structure" name="CodeEditorFileBrowserComponent should create treeviewItems with nested folder structure" time="0.265">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should toggle tree compression" name="CodeEditorFileBrowserComponent should toggle tree compression" time="0.119">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should create compressed treeviewItems with nested folder structure" name="CodeEditorFileBrowserComponent should create compressed treeviewItems with nested folder structure" time="0.228">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should filter forbidden files from getRepositoryContent response" name="CodeEditorFileBrowserComponent should filter forbidden files from getRepositoryContent response" time="0.123">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should show folders with dots in their names" name="CodeEditorFileBrowserComponent should show folders with dots in their names" time="0.073">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should not load files if commitState could not be retrieved (possibly corrupt repository or server error)" name="CodeEditorFileBrowserComponent should not load files if commitState could not be retrieved (possibly corrupt repository or server error)" time="0.107">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should set isLoading false and emit an error if loadFiles fails" name="CodeEditorFileBrowserComponent should set isLoading false and emit an error if loadFiles fails" time="0.074">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should select the correct file based on the user selection" name="CodeEditorFileBrowserComponent should select the correct file based on the user selection" time="0.052">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should set node to checked if its file gets selected and update ui" name="CodeEditorFileBrowserComponent should set node to checked if its file gets selected and update ui" time="0.114">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should add file to node tree if created" name="CodeEditorFileBrowserComponent should add file to node tree if created" time="0.177">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should add folder to node tree if created" name="CodeEditorFileBrowserComponent should add folder to node tree if created" time="0.16">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should not be able to create binary file" name="CodeEditorFileBrowserComponent should not be able to create binary file" time="0.115">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should be able to create a folder with a name that contains dots" name="CodeEditorFileBrowserComponent should be able to create a folder with a name that contains dots" time="0.09">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should not be able to create a hidden FILE" name="CodeEditorFileBrowserComponent should not be able to create a hidden FILE" time="0.103">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should not be able to create a hidden FOLDER" name="CodeEditorFileBrowserComponent should not be able to create a hidden FOLDER" time="0.092">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should not be able to create node that already exists" name="CodeEditorFileBrowserComponent should not be able to create node that already exists" time="0.097">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should manage the root file/folder it is currently creating" name="CodeEditorFileBrowserComponent should manage the root file/folder it is currently creating" time="0.121">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should manage the file/folder it is currently creating within another folder" name="CodeEditorFileBrowserComponent should manage the file/folder it is currently creating within another folder" time="0.084">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should update repository file entry on rename" name="CodeEditorFileBrowserComponent should update repository file entry on rename" time="0.262">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should rename all paths concerned if a folder is renamed" name="CodeEditorFileBrowserComponent should rename all paths concerned if a folder is renamed" time="0.268">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should not rename a file if its new fileName already exists in the repository" name="CodeEditorFileBrowserComponent should not rename a file if its new fileName already exists in the repository" time="0.139">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should not rename a file if its new fileName indicates a binary file" name="CodeEditorFileBrowserComponent should not rename a file if its new fileName indicates a binary file" time="0.116">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should be able to rename a folder with a new  name that contains dots" name="CodeEditorFileBrowserComponent should be able to rename a folder with a new  name that contains dots" time="0.069">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should not be able to rename a FILE so that is hidden" name="CodeEditorFileBrowserComponent should not be able to rename a FILE so that is hidden" time="0.07">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should not be able to rename a FOLDER so that is hidden" name="CodeEditorFileBrowserComponent should not be able to rename a FOLDER so that is hidden" time="0.08">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should leave rename state if renaming a file to the same file name" name="CodeEditorFileBrowserComponent should leave rename state if renaming a file to the same file name" time="0.107">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should manage the file it is currently renaming" name="CodeEditorFileBrowserComponent should manage the file it is currently renaming" time="0.039">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should disable action buttons if there is a git conflict" name="CodeEditorFileBrowserComponent should disable action buttons if there is a git conflict" time="0.068">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should load information about changed files" name="CodeEditorFileBrowserComponent should load information about changed files" time="0.056">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent should open a modal when trying to delete a file" name="CodeEditorFileBrowserComponent should open a modal when trying to delete a file" time="0.051">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent getFolderBadges should return an empty array if folder is not collapsed" name="CodeEditorFileBrowserComponent getFolderBadges should return an empty array if folder is not collapsed" time="0.064">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent getFolderBadges should work for single file badge for a collapsed folder" name="CodeEditorFileBrowserComponent getFolderBadges should work for single file badge for a collapsed folder" time="0.106">
    </testcase>
    <testcase classname="CodeEditorFileBrowserComponent getFolderBadges should aggregate file badges for a collapsed folder" name="CodeEditorFileBrowserComponent getFolderBadges should aggregate file badges for a collapsed folder" time="0.06">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseUpdateComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:12:16" time="56.214" tests="62">
    <testcase classname="ProgrammingExerciseUpdateComponent initializeEditMode should set isSimpleMode to true if localStorage has value &quot;true&quot;" name="ProgrammingExerciseUpdateComponent initializeEditMode should set isSimpleMode to true if localStorage has value &quot;true&quot;" time="1.687">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent initializeEditMode should set isSimpleMode to false if localStorage has value &quot;false&quot;" name="ProgrammingExerciseUpdateComponent initializeEditMode should set isSimpleMode to false if localStorage has value &quot;false&quot;" time="0.383">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent initializeEditMode should set isSimpleMode to true if not present in local storage" name="ProgrammingExerciseUpdateComponent initializeEditMode should set isSimpleMode to true if not present in local storage" time="0.247">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent switchEditMode should toggle isSimpleMode and update local storage" name="ProgrammingExerciseUpdateComponent switchEditMode should toggle isSimpleMode and update local storage" time="0.211">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent save should call update service on save for existing entity" name="ProgrammingExerciseUpdateComponent save should call update service on save for existing entity" time="0.037">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent save should call create service on save for new entity" name="ProgrammingExerciseUpdateComponent save should call create service on save for new entity" time="0.032">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent save should trim the exercise title before saving" name="ProgrammingExerciseUpdateComponent save should trim the exercise title before saving" time="0.025">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent save should fail on error" name="ProgrammingExerciseUpdateComponent save should fail on error" time="0.041">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent save should set project type in invalid default value is selected should set valid project type in simple mode if default project type (gradle) is not supported" name="ProgrammingExerciseUpdateComponent save should set project type in invalid default value is selected should set valid project type in simple mode if default project type (gradle) is not supported" time="0.389">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent save should set project type in invalid default value is selected should keep gradle if gradle is supported" name="ProgrammingExerciseUpdateComponent save should set project type in invalid default value is selected should keep gradle if gradle is supported" time="0.34">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent save should set project type in invalid default value is selected should keep gradle not in creation modal" name="ProgrammingExerciseUpdateComponent save should set project type in invalid default value is selected should keep gradle not in creation modal" time="0.317">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent exam mode should be in exam mode after onInit" name="ProgrammingExerciseUpdateComponent exam mode should be in exam mode after onInit" time="0.021">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent course mode should not be in exam mode after onInit" name="ProgrammingExerciseUpdateComponent course mode should not be in exam mode after onInit" time="0.032">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent default programming language should set default programming language" name="ProgrammingExerciseUpdateComponent default programming language should set default programming language" time="0.033">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent default programming language should set default programming language" name="ProgrammingExerciseUpdateComponent default programming language should set default programming language" time="0.02">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent programming language change and features should reset sca settings if new programming language does not support sca" name="ProgrammingExerciseUpdateComponent programming language change and features should reset sca settings if new programming language does not support sca" time="0.233">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent programming language change and features should activate SCA for Swift" name="ProgrammingExerciseUpdateComponent programming language change and features should activate SCA for Swift" time="0.265">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent programming language change and features should activate SCA for C" name="ProgrammingExerciseUpdateComponent programming language change and features should activate SCA for C" time="0.296">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent programming language change and features should activate SCA for Java" name="ProgrammingExerciseUpdateComponent programming language change and features should activate SCA for Java" time="0.256">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent programming language change and features should deactivate SCA for C (FACT)" name="ProgrammingExerciseUpdateComponent programming language change and features should deactivate SCA for C (FACT)" time="0.251">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent programming language change and features should clear custom build definition on programming language change" name="ProgrammingExerciseUpdateComponent programming language change and features should clear custom build definition on programming language change" time="0.257">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent import with static code analysis should correctly import into an exam exercise" name="ProgrammingExerciseUpdateComponent import with static code analysis should correctly import into an exam exercise" time="0.02">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent import with static code analysis should reset dates, id and project key" name="ProgrammingExerciseUpdateComponent import with static code analysis should reset dates, id and project key" time="0.299">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent import with static code analysis should activate recreate build plans and update template when sca changes" name="ProgrammingExerciseUpdateComponent import with static code analysis should activate recreate build plans and update template when sca changes" time="0.335">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent import with static code analysis should activate recreate build plans and update template when sca changes" name="ProgrammingExerciseUpdateComponent import with static code analysis should activate recreate build plans and update template when sca changes" time="0.277">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent import with static code analysis should load exercise categories on import" name="ProgrammingExerciseUpdateComponent import with static code analysis should load exercise categories on import" time="0.032">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent import from file should reset dates, id, project key and store zipFile" name="ProgrammingExerciseUpdateComponent import from file should reset dates, id, project key and store zipFile" time="1.782">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent import from file should call import-from-file from service on import for entity from file" name="ProgrammingExerciseUpdateComponent import from file should call import-from-file from service on import for entity from file" time="0.047">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation find validation errors for undefined input values" name="ProgrammingExerciseUpdateComponent input error validation find validation errors for undefined input values" time="0.038">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation find validation errors for empty input strings" name="ProgrammingExerciseUpdateComponent input error validation find validation errors for empty input strings" time="0.031">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation find validation errors for input values not matching the pattern" name="ProgrammingExerciseUpdateComponent input error validation find validation errors for input values not matching the pattern" time="0.026">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation find validation errors for package name not matching the pattern" name="ProgrammingExerciseUpdateComponent input error validation find validation errors for package name not matching the pattern" time="0.04">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation validateExerciseChannelName" name="ProgrammingExerciseUpdateComponent input error validation validateExerciseChannelName" time="0.031">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation validateExerciseShortName" name="ProgrammingExerciseUpdateComponent input error validation validateExerciseShortName" time="0.068">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation validateExercisePoints" name="ProgrammingExerciseUpdateComponent input error validation validateExercisePoints" time="0.026">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation validateExerciseBonusPoints" name="ProgrammingExerciseUpdateComponent input error validation validateExerciseBonusPoints" time="0.017">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation Check that no package name related validation error occurs for language C" name="ProgrammingExerciseUpdateComponent input error validation Check that no package name related validation error occurs for language C" time="0.021">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation Check that no package name related validation error occurs for language Empty" name="ProgrammingExerciseUpdateComponent input error validation Check that no package name related validation error occurs for language Empty" time="0.016">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation Check that no package name related validation error occurs for language Python" name="ProgrammingExerciseUpdateComponent input error validation Check that no package name related validation error occurs for language Python" time="0.016">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation Check that no package name related validation error occurs for language Assembler" name="ProgrammingExerciseUpdateComponent input error validation Check that no package name related validation error occurs for language Assembler" time="0.022">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation Check that no package name related validation error occurs for language OCAML" name="ProgrammingExerciseUpdateComponent input error validation Check that no package name related validation error occurs for language OCAML" time="0.042">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation Check that no package name related validation error occurs for language VHDL" name="ProgrammingExerciseUpdateComponent input error validation Check that no package name related validation error occurs for language VHDL" time="0.028">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation find validation errors for invalid auxiliary repositories" name="ProgrammingExerciseUpdateComponent input error validation find validation errors for invalid auxiliary repositories" time="0.018">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation find validation errors for invalid ide selection" name="ProgrammingExerciseUpdateComponent input error validation find validation errors for invalid ide selection" time="0.379">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation find validation errors for invalid ide selection without theia profile" name="ProgrammingExerciseUpdateComponent input error validation find validation errors for invalid ide selection without theia profile" time="0.408">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation find validation errors for invalid online IDE image" name="ProgrammingExerciseUpdateComponent input error validation find validation errors for invalid online IDE image" time="0.021">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation should update AuxiliaryRepository checkout directory" name="ProgrammingExerciseUpdateComponent input error validation should update AuxiliaryRepository checkout directory" time="0.05">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation should update AuxiliaryRepository name" name="ProgrammingExerciseUpdateComponent input error validation should update AuxiliaryRepository name" time="0.031">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation should find no validation errors for valid input" name="ProgrammingExerciseUpdateComponent input error validation should find no validation errors for valid input" time="0.042">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation should find validation errors for invalid submission limit value" name="ProgrammingExerciseUpdateComponent input error validation should find validation errors for invalid submission limit value" time="0.027">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation should find validation errors invalid submission exceeding penalty" name="ProgrammingExerciseUpdateComponent input error validation should find validation errors invalid submission exceeding penalty" time="0.017">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation should find no package name related validation error for languages that do not need a package name" name="ProgrammingExerciseUpdateComponent input error validation should find no package name related validation error for languages that do not need a package name" time="0.018">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation should find invalid timeout" name="ProgrammingExerciseUpdateComponent input error validation should find invalid timeout" time="0.02">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent input error validation should find invalid checkoutpaths" name="ProgrammingExerciseUpdateComponent input error validation should find invalid checkoutpaths" time="0.017">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent disable features based on selected language and project type should initialize isEdit variable based on url should be false if edit is in url" name="ProgrammingExerciseUpdateComponent disable features based on selected language and project type should initialize isEdit variable based on url should be false if edit is in url" time="0.382">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent disable features based on selected language and project type should initialize isEdit variable based on url should be true if edit is in url" name="ProgrammingExerciseUpdateComponent disable features based on selected language and project type should initialize isEdit variable based on url should be true if edit is in url" time="0.551">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent disable features based on selected language and project type should disable checkboxes for certain options of existing exercise" name="ProgrammingExerciseUpdateComponent disable features based on selected language and project type should disable checkboxes for certain options of existing exercise" time="0.428">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent disable features based on selected language and project type should disable options for java dejagnu project type and re-enable them after changing back to maven or gradle" name="ProgrammingExerciseUpdateComponent disable features based on selected language and project type should disable options for java dejagnu project type and re-enable them after changing back to maven or gradle" time="0.022">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent should return the exercise creation config" name="ProgrammingExerciseUpdateComponent should return the exercise creation config" time="0.216">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent stores withdependenices when changed" name="ProgrammingExerciseUpdateComponent stores withdependenices when changed" time="0.199">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent stores updated categories" name="ProgrammingExerciseUpdateComponent stores updated categories" time="0.228">
    </testcase>
    <testcase classname="ProgrammingExerciseUpdateComponent should validate form sections" name="ProgrammingExerciseUpdateComponent should validate form sections" time="0.06">
    </testcase>
  </testsuite>
  <testsuite name="Course Management Update Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:12:16" time="60.467" tests="51">
    <testcase classname="Course Management Update Component ngOnInit should get course, profile and fill the form" name="Course Management Update Component ngOnInit should get course, profile and fill the form" time="1.192">
    </testcase>
    <testcase classname="Course Management Update Component save should call update service on save for existing entity" name="Course Management Update Component save should call update service on save for existing entity" time="0.491">
    </testcase>
    <testcase classname="Course Management Update Component save should call create service on save for new entity" name="Course Management Update Component save should call create service on save for new entity" time="0.417">
    </testcase>
    <testcase classname="Course Management Update Component save should broadcast course modification on delete" name="Course Management Update Component save should broadcast course modification on delete" time="0.405">
    </testcase>
    <testcase classname="Course Management Update Component onSelectedColor should update form" name="Course Management Update Component onSelectedColor should update form" time="0.338">
    </testcase>
    <testcase classname="Course Management Update Component setCourseImage should change course image" name="Course Management Update Component setCourseImage should change course image" time="0.308">
    </testcase>
    <testcase classname="Course Management Update Component setCourseImage should trigger openCropper when a file is selected" name="Course Management Update Component setCourseImage should trigger openCropper when a file is selected" time="0.379">
    </testcase>
    <testcase classname="Course Management Update Component changeOnlineCourse should disable enrollment enabled if course becomes online" name="Course Management Update Component changeOnlineCourse should disable enrollment enabled if course becomes online" time="0.389">
    </testcase>
    <testcase classname="Course Management Update Component changeEnrollmentEnabled should disable online course if enrollment becomes enabled" name="Course Management Update Component changeEnrollmentEnabled should disable online course if enrollment becomes enabled" time="0.446">
    </testcase>
    <testcase classname="Course Management Update Component changeEnrollmentEnabled should call unenrollmentEnabled" name="Course Management Update Component changeEnrollmentEnabled should call unenrollmentEnabled" time="0.352">
    </testcase>
    <testcase classname="Course Management Update Component updateCourseInformationSharingMessagingCodeOfConduct should update course information sharing code of conduct" name="Course Management Update Component updateCourseInformationSharingMessagingCodeOfConduct should update course information sharing code of conduct" time="0.325">
    </testcase>
    <testcase classname="Course Management Update Component updateCourseInformationSharingMessagingCodeOfConduct should update course information sharing code of conduct when communication is enabled and messaging disabled" name="Course Management Update Component updateCourseInformationSharingMessagingCodeOfConduct should update course information sharing code of conduct when communication is enabled and messaging disabled" time="0.379">
    </testcase>
    <testcase classname="Course Management Update Component changeComplaintsEnabled should initialize values if enabled and reset if disabled" name="Course Management Update Component changeComplaintsEnabled should initialize values if enabled and reset if disabled" time="0.34">
    </testcase>
    <testcase classname="Course Management Update Component changeRequestMoreFeedbackEnabled should initialize value if enabled and reset if disabled" name="Course Management Update Component changeRequestMoreFeedbackEnabled should initialize value if enabled and reset if disabled" time="0.272">
    </testcase>
    <testcase classname="Course Management Update Component changeUnenrollmentEnabled should toggle unenrollment enabled" name="Course Management Update Component changeUnenrollmentEnabled should toggle unenrollment enabled" time="0.317">
    </testcase>
    <testcase classname="Course Management Update Component changeCustomizeGroupNames should initialize values if enabled and reset if disabled" name="Course Management Update Component changeCustomizeGroupNames should initialize values if enabled and reset if disabled" time="0.424">
    </testcase>
    <testcase classname="Course Management Update Component changeTestCourseEnabled should toggle test course" name="Course Management Update Component changeTestCourseEnabled should toggle test course" time="0.326">
    </testcase>
    <testcase classname="Course Management Update Component changeRestrictedAthenaModulesEnabled should toggle restricted athena modules access" name="Course Management Update Component changeRestrictedAthenaModulesEnabled should toggle restricted athena modules access" time="0.347">
    </testcase>
    <testcase classname="Course Management Update Component isValidDate should handle valid dates" name="Course Management Update Component isValidDate should handle valid dates" time="0.303">
    </testcase>
    <testcase classname="Course Management Update Component isValidDate should handle invalid dates" name="Course Management Update Component isValidDate should handle invalid dates" time="0.284">
    </testcase>
    <testcase classname="Course Management Update Component isValidEnrollmentPeriod should handle valid dates" name="Course Management Update Component isValidEnrollmentPeriod should handle valid dates" time="0.271">
    </testcase>
    <testcase classname="Course Management Update Component isValidEnrollmentPeriod should not be valid if course start and end date are not set" name="Course Management Update Component isValidEnrollmentPeriod should not be valid if course start and end date are not set" time="0.292">
    </testcase>
    <testcase classname="Course Management Update Component isValidEnrollmentPeriod should not be valid if course start date is not set" name="Course Management Update Component isValidEnrollmentPeriod should not be valid if course start date is not set" time="0.354">
    </testcase>
    <testcase classname="Course Management Update Component isValidEnrollmentPeriod should not be valid if course end date is not set" name="Course Management Update Component isValidEnrollmentPeriod should not be valid if course end date is not set" time="0.284">
    </testcase>
    <testcase classname="Course Management Update Component isValidEnrollmentPeriod should not be valid if course start and end date are not valid" name="Course Management Update Component isValidEnrollmentPeriod should not be valid if course start and end date are not valid" time="0.297">
    </testcase>
    <testcase classname="Course Management Update Component isValidEnrollmentPeriod should handle invalid enrollment end date before enrollment start date" name="Course Management Update Component isValidEnrollmentPeriod should handle invalid enrollment end date before enrollment start date" time="0.283">
    </testcase>
    <testcase classname="Course Management Update Component isValidEnrollmentPeriod should handle invalid enrollment start date after course start date" name="Course Management Update Component isValidEnrollmentPeriod should handle invalid enrollment start date after course start date" time="0.327">
    </testcase>
    <testcase classname="Course Management Update Component isValidEnrollmentPeriod should handle invalid enrollment end date after course end date" name="Course Management Update Component isValidEnrollmentPeriod should handle invalid enrollment end date after course end date" time="0.336">
    </testcase>
    <testcase classname="Course Management Update Component isValidUnenrollmentEndDate should handle valid dates" name="Course Management Update Component isValidUnenrollmentEndDate should handle valid dates" time="0.313">
    </testcase>
    <testcase classname="Course Management Update Component isValidUnenrollmentEndDate should not be valid if enrollment start and end date are not set" name="Course Management Update Component isValidUnenrollmentEndDate should not be valid if enrollment start and end date are not set" time="0.269">
    </testcase>
    <testcase classname="Course Management Update Component isValidUnenrollmentEndDate should not be valid if enrollment start date is not set" name="Course Management Update Component isValidUnenrollmentEndDate should not be valid if enrollment start date is not set" time="0.338">
    </testcase>
    <testcase classname="Course Management Update Component isValidUnenrollmentEndDate should not be valid if enrollment end date is not set" name="Course Management Update Component isValidUnenrollmentEndDate should not be valid if enrollment end date is not set" time="0.276">
    </testcase>
    <testcase classname="Course Management Update Component isValidUnenrollmentEndDate should not be valid if enrollemnt start and end date are not valid" name="Course Management Update Component isValidUnenrollmentEndDate should not be valid if enrollemnt start and end date are not valid" time="0.315">
    </testcase>
    <testcase classname="Course Management Update Component isValidUnenrollmentEndDate should handle invalid unenrollment end date before enrollment end date" name="Course Management Update Component isValidUnenrollmentEndDate should handle invalid unenrollment end date before enrollment end date" time="0.347">
    </testcase>
    <testcase classname="Course Management Update Component isValidUnenrollmentEndDate should handle invalid unenrollment end date after course end date" name="Course Management Update Component isValidUnenrollmentEndDate should handle invalid unenrollment end date after course end date" time="0.303">
    </testcase>
    <testcase classname="Course Management Update Component removeOrganizationFromCourse should remove organization from component" name="Course Management Update Component removeOrganizationFromCourse should remove organization from component" time="0.313">
    </testcase>
    <testcase classname="Course Management Update Component deleteIcon should create the delete button when croppedImage is present" name="Course Management Update Component deleteIcon should create the delete button when croppedImage is present" time="1.701">
    </testcase>
    <testcase classname="Course Management Update Component deleteIcon should remove icon image and delete icon button from component" name="Course Management Update Component deleteIcon should remove icon image and delete icon button from component" time="1.027">
    </testcase>
    <testcase classname="Course Management Update Component deleteIcon should not be able to delete icon if icon does not exist" name="Course Management Update Component deleteIcon should not be able to delete icon if icon does not exist" time="0.38">
    </testcase>
    <testcase classname="Course Management Update Component editIcon should create the edit button when croppedImage is present" name="Course Management Update Component editIcon should create the edit button when croppedImage is present" time="0.852">
    </testcase>
    <testcase classname="Course Management Update Component editIcon should not be able to edit icon if icon does not exist" name="Course Management Update Component editIcon should not be able to edit icon if icon does not exist" time="0.295">
    </testcase>
    <testcase classname="Course Management Update Component editIcon should trigger triggerFileInput when edit button is clicked" name="Course Management Update Component editIcon should trigger triggerFileInput when edit button is clicked" time="0.732">
    </testcase>
    <testcase classname="Course Management Update Component noImagePlaceholder should trigger file input when no-image div is clicked" name="Course Management Update Component noImagePlaceholder should trigger file input when no-image div is clicked" time="0.771">
    </testcase>
    <testcase classname="Course Management Update Component openImageCropper should open the image cropper modal and update the croppedImage on result" name="Course Management Update Component openImageCropper should open the image cropper modal and update the croppedImage on result" time="0.324">
    </testcase>
    <testcase classname="Course Management Update Component changeOrganizations should allow adding / removing organizations if admin" name="Course Management Update Component changeOrganizations should allow adding / removing organizations if admin" time="0.924">
    </testcase>
    <testcase classname="Course Management Update Component changeOrganizations should not allow adding / removing organizations if not admin" name="Course Management Update Component changeOrganizations should not allow adding / removing organizations if not admin" time="0.816">
    </testcase>
    <testcase classname="Course Management Update Component should open organizations modal" name="Course Management Update Component should open organizations modal" time="0.333">
    </testcase>
    <testcase classname="Course Management Student Course Analytics Dashboard Update should hide the form field for dashboard enable toggle when user is not an admin but the feature is toggled." name="Course Management Student Course Analytics Dashboard Update should hide the form field for dashboard enable toggle when user is not an admin but the feature is toggled." time="0.926">
    </testcase>
    <testcase classname="Course Management Student Course Analytics Dashboard Update should hide the form field for dashboard enable toggle when user is an admin but the feature is not toggled" name="Course Management Student Course Analytics Dashboard Update should hide the form field for dashboard enable toggle when user is an admin but the feature is not toggled" time="0.907">
    </testcase>
    <testcase classname="Course Management Student Course Analytics Dashboard Update should show the form field for dashboard enable toggle when user is an admin and the feature is toggled" name="Course Management Student Course Analytics Dashboard Update should show the form field for dashboard enable toggle when user is an admin and the feature is toggled" time="0.784">
    </testcase>
    <testcase classname="Course Management Update Component Create should get code of conduct template if a new course is created" name="Course Management Update Component Create should get code of conduct template if a new course is created" time="0.764">
    </testcase>
  </testsuite>
  <testsuite name="ExamScoresComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:09" time="8.896" tests="19">
    <testcase classname="ExamScoresComponent should not log error on sentry when correct participant score calculation" name="ExamScoresComponent should not log error on sentry when correct participant score calculation" time="0.764">
    </testcase>
    <testcase classname="ExamScoresComponent should log error on sentry when missing participant score calculation" name="ExamScoresComponent should log error on sentry when missing participant score calculation" time="0.235">
    </testcase>
    <testcase classname="ExamScoresComponent should log error on sentry when wrong points calculation" name="ExamScoresComponent should log error on sentry when wrong points calculation" time="0.203">
    </testcase>
    <testcase classname="ExamScoresComponent should log error on sentry when wrong score calculation" name="ExamScoresComponent should log error on sentry when wrong score calculation" time="0.187">
    </testcase>
    <testcase classname="ExamScoresComponent should make duplicated titles unique" name="ExamScoresComponent should make duplicated titles unique" time="0.03">
    </testcase>
    <testcase classname="ExamScoresComponent histogram should have correct entries" name="ExamScoresComponent histogram should have correct entries" time="0.302">
    </testcase>
    <testcase classname="ExamScoresComponent histogram should skip not submitted exams" name="ExamScoresComponent histogram should skip not submitted exams" time="0.334">
    </testcase>
    <testcase classname="ExamScoresComponent should generate csv correctly" name="ExamScoresComponent should generate csv correctly" time="0.195">
    </testcase>
    <testcase classname="ExamScoresComponent should initialize correctly with bonus grades and plagiarism" name="ExamScoresComponent should initialize correctly with bonus grades and plagiarism" time="0.423">
    </testcase>
    <testcase classname="ExamScoresComponent should initialize correctly with bonus points" name="ExamScoresComponent should initialize correctly with bonus points" time="0.253">
    </testcase>
    <testcase classname="ExamScoresComponent should generate csv correctly with bonus grades and plagiarism" name="ExamScoresComponent should generate csv correctly with bonus grades and plagiarism" time="0.262">
    </testcase>
    <testcase classname="ExamScoresComponent should export as csv" name="ExamScoresComponent should export as csv" time="0.186">
    </testcase>
    <testcase classname="ExamScoresComponent should set grading scale properties" name="ExamScoresComponent should set grading scale properties" time="0.186">
    </testcase>
    <testcase classname="ExamScoresComponent should filter non-empty submissions" name="ExamScoresComponent should filter non-empty submissions" time="0.027">
    </testcase>
    <testcase classname="ExamScoresComponent test table filtering should set table state correctly if non empty submissions filter is activated" name="ExamScoresComponent test table filtering should set table state correctly if non empty submissions filter is activated" time="0.157">
    </testcase>
    <testcase classname="ExamScoresComponent test table filtering should set table state correctly if only submitted exams filter is activated" name="ExamScoresComponent test table filtering should set table state correctly if only submitted exams filter is activated" time="0.163">
    </testcase>
    <testcase classname="ExamScoresComponent test table filtering should set table state correctly if both exams are activated" name="ExamScoresComponent test table filtering should set table state correctly if both exams are activated" time="0.196">
    </testcase>
    <testcase classname="ExamScoresComponent should toggle median correctly" name="ExamScoresComponent should toggle median correctly" time="0.189">
    </testcase>
    <testcase classname="ExamScoresComponent should return data label correctly if noOfExamsFiltered is 0" name="ExamScoresComponent should return data label correctly if noOfExamsFiltered is 0" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="ExamParticipationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:12:16" time="62.643" tests="69">
    <testcase classname="ExamParticipationComponent should initialize" name="ExamParticipationComponent should initialize" time="2.759">
    </testcase>
    <testcase classname="ExamParticipationComponent ExamParticipationSummaryComponent for TestRuns should initialize and display test run ribbon" name="ExamParticipationComponent ExamParticipationSummaryComponent for TestRuns should initialize and display test run ribbon" time="0.131">
    </testcase>
    <testcase classname="ExamParticipationComponent ExamParticipationSummaryComponent for TestRuns should initialize and not display test run ribbon" name="ExamParticipationComponent ExamParticipationSummaryComponent for TestRuns should initialize and not display test run ribbon" time="0.142">
    </testcase>
    <testcase classname="ExamParticipationComponent isProgrammingExercise should return true if active exercise is a programming exercise" name="ExamParticipationComponent isProgrammingExercise should return true if active exercise is a programming exercise" time="0.212">
    </testcase>
    <testcase classname="ExamParticipationComponent isProgrammingExercise should return false if active exercise is not a programming exercise" name="ExamParticipationComponent isProgrammingExercise should return false if active exercise is not a programming exercise" time="0.15">
    </testcase>
    <testcase classname="ExamParticipationComponent isProgrammingExerciseWithCodeEditor should return true if programming exercise is with code editor" name="ExamParticipationComponent isProgrammingExerciseWithCodeEditor should return true if programming exercise is with code editor" time="0.133">
    </testcase>
    <testcase classname="ExamParticipationComponent isProgrammingExerciseWithOfflineIDE should return true if active exercise is with offline ide" name="ExamParticipationComponent isProgrammingExerciseWithOfflineIDE should return true if active exercise is with offline ide" time="0.134">
    </testcase>
    <testcase classname="ExamParticipationComponent should load test run if test run id is defined" name="ExamParticipationComponent should load test run if test run id is defined" time="0.156">
    </testcase>
    <testcase classname="ExamParticipationComponent should load exam if test run id is not defined" name="ExamParticipationComponent should load exam if test run id is not defined" time="0.156">
    </testcase>
    <testcase classname="ExamParticipationComponent should redirect to exam summary after test run is over" name="ExamParticipationComponent should redirect to exam summary after test run is over" time="0.298">
    </testcase>
    <testcase classname="ExamParticipationComponent should load new testExam if studentExam id is start" name="ExamParticipationComponent should load new testExam if studentExam id is start" time="0.188">
    </testcase>
    <testcase classname="ExamParticipationComponent should load existing testExam if studentExam id is start" name="ExamParticipationComponent should load existing testExam if studentExam id is start" time="0.121">
    </testcase>
    <testcase classname="ExamParticipationComponent should load existing testExam for summary if studentExam id is defined" name="ExamParticipationComponent should load existing testExam for summary if studentExam id is defined" time="0.118">
    </testcase>
    <testcase classname="ExamParticipationComponent should load exam from local storage if needed" name="ExamParticipationComponent should load exam from local storage if needed" time="0.112">
    </testcase>
    <testcase classname="ExamParticipationComponent should determine tutor status if no exam was loaded" name="ExamParticipationComponent should determine tutor status if no exam was loaded" time="0.157">
    </testcase>
    <testcase classname="ExamParticipationComponent should determine tutor status if no exam was loaded and course was not cached" name="ExamParticipationComponent should determine tutor status if no exam was loaded and course was not cached" time="0.15">
    </testcase>
    <testcase classname="ExamParticipationComponent should initialize exercises when exam starts" name="ExamParticipationComponent should initialize exercises when exam starts" time="0.146">
    </testcase>
    <testcase classname="ExamParticipationComponent should initialize test exam" name="ExamParticipationComponent should initialize test exam" time="0.125">
    </testcase>
    <testcase classname="ExamParticipationComponent should initialize exercise without test run" name="ExamParticipationComponent should initialize exercise without test run" time="0.104">
    </testcase>
    <testcase classname="ExamParticipationComponent should create participation for given exercise" name="ExamParticipationComponent should create participation for given exercise" time="0.149">
    </testcase>
    <testcase classname="ExamParticipationComponent should generate participation state when participation creation fails" name="ExamParticipationComponent should generate participation state when participation creation fails" time="0.114">
    </testcase>
    <testcase classname="ExamParticipationComponent websocket working time subscription should correctly increase working time" name="ExamParticipationComponent websocket working time subscription should correctly increase working time" time="0.104">
    </testcase>
    <testcase classname="ExamParticipationComponent websocket working time subscription should correctly increase working time to next day" name="ExamParticipationComponent websocket working time subscription should correctly increase working time to next day" time="0.135">
    </testcase>
    <testcase classname="ExamParticipationComponent websocket working time subscription should correctly decrease working time" name="ExamParticipationComponent websocket working time subscription should correctly decrease working time" time="0.12">
    </testcase>
    <testcase classname="ExamParticipationComponent websocket problem statement update subscription should correctly update problem statement if exercise was not opened yet" name="ExamParticipationComponent websocket problem statement update subscription should correctly update problem statement if exercise was not opened yet" time="0.114">
    </testcase>
    <testcase classname="ExamParticipationComponent websocket problem statement update subscription should correctly update problem statement if exercise was previously opened" name="ExamParticipationComponent websocket problem statement update subscription should correctly update problem statement if exercise was previously opened" time="0.127">
    </testcase>
    <testcase classname="ExamParticipationComponent trigger save should sync text submissions" name="ExamParticipationComponent trigger save should sync text submissions" time="0.15">
    </testcase>
    <testcase classname="ExamParticipationComponent trigger save should sync modeling submissions" name="ExamParticipationComponent trigger save should sync modeling submissions" time="0.123">
    </testcase>
    <testcase classname="ExamParticipationComponent trigger save should sync quiz submissions" name="ExamParticipationComponent trigger save should sync quiz submissions" time="0.119">
    </testcase>
    <testcase classname="ExamParticipationComponent should submit exam when end confirmed" name="ExamParticipationComponent should submit exam when end confirmed" time="0.107">
    </testcase>
    <testcase classname="ExamParticipationComponent should show error when already submitted for test run and successfully loading student exam" name="ExamParticipationComponent should show error when already submitted for test run and successfully loading student exam" time="0.13">
    </testcase>
    <testcase classname="ExamParticipationComponent should show error when already submitted for test run and failed to load student exam" name="ExamParticipationComponent should show error when already submitted for test run and failed to load student exam" time="0.192">
    </testcase>
    <testcase classname="ExamParticipationComponent should show error when already submitted and successfully loading student exam" name="ExamParticipationComponent should show error when already submitted and successfully loading student exam" time="0.149">
    </testcase>
    <testcase classname="ExamParticipationComponent should show error when already submitted and failed to load student exam" name="ExamParticipationComponent should show error when already submitted and failed to load student exam" time="0.12">
    </testcase>
    <testcase classname="ExamParticipationComponent should show error when not submitted" name="ExamParticipationComponent should show error when not submitted" time="0.151">
    </testcase>
    <testcase classname="ExamParticipationComponent canDeactivate should return true if logout is true" name="ExamParticipationComponent canDeactivate should return true if logout is true" time="0.105">
    </testcase>
    <testcase classname="ExamParticipationComponent canDeactivate should call translateService" name="ExamParticipationComponent canDeactivate should call translateService" time="0.114">
    </testcase>
    <testcase classname="ExamParticipationComponent isOver should return true if exam has ended" name="ExamParticipationComponent isOver should return true if exam has ended" time="0.126">
    </testcase>
    <testcase classname="ExamParticipationComponent isOver should return true when handed in early" name="ExamParticipationComponent isOver should return true when handed in early" time="0.106">
    </testcase>
    <testcase classname="ExamParticipationComponent isOver should return true if student exam has been submitted" name="ExamParticipationComponent isOver should return true if student exam has been submitted" time="0.101">
    </testcase>
    <testcase classname="ExamParticipationComponent isOver should be over if individual end date is before server date" name="ExamParticipationComponent isOver should be over if individual end date is before server date" time="0.104">
    </testcase>
    <testcase classname="ExamParticipationComponent isOver should not be over if individual end date is after server date" name="ExamParticipationComponent isOver should not be over if individual end date is after server date" time="0.098">
    </testcase>
    <testcase classname="ExamParticipationComponent isVisible should be visible if test run" name="ExamParticipationComponent isVisible should be visible if test run" time="0.102">
    </testcase>
    <testcase classname="ExamParticipationComponent isVisible should be visible if visible date is before server date" name="ExamParticipationComponent isVisible should be visible if visible date is before server date" time="0.094">
    </testcase>
    <testcase classname="ExamParticipationComponent isVisible should not be visible if visible date is before server date" name="ExamParticipationComponent isVisible should not be visible if visible date is before server date" time="0.114">
    </testcase>
    <testcase classname="ExamParticipationComponent isActive should be active if test run" name="ExamParticipationComponent isActive should be active if test run" time="0.124">
    </testcase>
    <testcase classname="ExamParticipationComponent isActive should be active if start date is before server date" name="ExamParticipationComponent isActive should be active if start date is before server date" time="0.144">
    </testcase>
    <testcase classname="ExamParticipationComponent isActive should not be active if start date is before server date" name="ExamParticipationComponent isActive should not be active if start date is before server date" time="0.097">
    </testcase>
    <testcase classname="ExamParticipationComponent should clear autoSaveInterval when exam ended" name="ExamParticipationComponent should clear autoSaveInterval when exam ended" time="0.096">
    </testcase>
    <testcase classname="ExamParticipationComponent onPageChange should trigger save and initialize exercise when exercise changed" name="ExamParticipationComponent onPageChange should trigger save and initialize exercise when exercise changed" time="0.107">
    </testcase>
    <testcase classname="ExamParticipationComponent onPageChange should trigger save and initialize exercise when exercise changed and participation is valid" name="ExamParticipationComponent onPageChange should trigger save and initialize exercise when exercise changed and participation is valid" time="0.108">
    </testcase>
    <testcase classname="ExamParticipationComponent handleHandInEarly should reset pageComponentVisited after the hand-in-early window is closed" name="ExamParticipationComponent handleHandInEarly should reset pageComponentVisited after the hand-in-early window is closed" time="0.148">
    </testcase>
    <testcase classname="ExamParticipationComponent handleHandInEarly should trigger save" name="ExamParticipationComponent handleHandInEarly should trigger save" time="0.131">
    </testcase>
    <testcase classname="ExamParticipationComponent toggleHandInEarly should not fetch attendance check status if exam is a test exam" name="ExamParticipationComponent toggleHandInEarly should not fetch attendance check status if exam is a test exam" time="0.117">
    </testcase>
    <testcase classname="ExamParticipationComponent toggleHandInEarly should not fetch attendance check status if exam is not an exam with attendance check" name="ExamParticipationComponent toggleHandInEarly should not fetch attendance check status if exam is not an exam with attendance check" time="0.134">
    </testcase>
    <testcase classname="ExamParticipationComponent toggleHandInEarly should not fetch attendance check status if user clicks continue" name="ExamParticipationComponent toggleHandInEarly should not fetch attendance check status if user clicks continue" time="0.163">
    </testcase>
    <testcase classname="ExamParticipationComponent toggleHandInEarly should fetch attendance check status if exam is an exam with attendance check" name="ExamParticipationComponent toggleHandInEarly should fetch attendance check status if exam is an exam with attendance check" time="0.182">
    </testcase>
    <testcase classname="ExamParticipationComponent activePageIndex should return -1 if active page is overview page" name="ExamParticipationComponent activePageIndex should return -1 if active page is overview page" time="0.14">
    </testcase>
    <testcase classname="ExamParticipationComponent activePageIndex should return the index of the active page" name="ExamParticipationComponent activePageIndex should return the index of the active page" time="0.117">
    </testcase>
    <testcase classname="ExamParticipationComponent should return the index of the active page" name="ExamParticipationComponent should return the index of the active page" time="0.121">
    </testcase>
    <testcase classname="ExamParticipationComponent should set Exam Layout if the exam is started" name="ExamParticipationComponent should set Exam Layout if the exam is started" time="0.123">
    </testcase>
    <testcase classname="ExamParticipationComponent should reset Exam Layout if the summary is loaded and displayed" name="ExamParticipationComponent should reset Exam Layout if the summary is loaded and displayed" time="0.124">
    </testcase>
    <testcase classname="ExamParticipationComponent should not reset Exam Layout in loadAndDisplaySummary if it is a test exam" name="ExamParticipationComponent should not reset Exam Layout in loadAndDisplaySummary if it is a test exam" time="0.148">
    </testcase>
    <testcase classname="ExamParticipationComponent should reset Exam Layout in onExamEndConfirmed if it is a test exam" name="ExamParticipationComponent should reset Exam Layout in onExamEndConfirmed if it is a test exam" time="0.118">
    </testcase>
    <testcase classname="ExamParticipationComponent should display exam bar and timer during working time" name="ExamParticipationComponent should display exam bar and timer during working time" time="0.154">
    </testcase>
    <testcase classname="ExamParticipationComponent should not display exam bar and timer when exam was not submitted" name="ExamParticipationComponent should not display exam bar and timer when exam was not submitted" time="0.169">
    </testcase>
    <testcase classname="ExamParticipationComponent should get whether student failed to submit" name="ExamParticipationComponent should get whether student failed to submit" time="0.114">
    </testcase>
    <testcase classname="ExamParticipationComponent should get whether student failed to submit a TestExam" name="ExamParticipationComponent should get whether student failed to submit a TestExam" time="0.148">
    </testcase>
    <testcase classname="ExamParticipationComponent should initialize individualStudentEndDateWithGracePeriod" name="ExamParticipationComponent should initialize individualStudentEndDateWithGracePeriod" time="0.158">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingSubmissionService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:20" time="1.525" tests="18">
    <testcase classname="ProgrammingSubmissionService should return cached subject as Observable for provided participation if exists" name="ProgrammingSubmissionService should return cached subject as Observable for provided participation if exists" time="0.012">
    </testcase>
    <testcase classname="ProgrammingSubmissionService should query httpService endpoint and setup the websocket subscriptions if no subject is cached for the provided participation" name="ProgrammingSubmissionService should query httpService endpoint and setup the websocket subscriptions if no subject is cached for the provided participation" time="0.018">
    </testcase>
    <testcase classname="ProgrammingSubmissionService should query httpService endpoint and setup the websocket subscriptions if no subject is cached for the provided participation with localCI profile" name="ProgrammingSubmissionService should query httpService endpoint and setup the websocket subscriptions if no subject is cached for the provided participation with localCI profile" time="0.008">
    </testcase>
    <testcase classname="ProgrammingSubmissionService should emit undefined when a new result comes in for the given participation to signal that the building process is over" name="ProgrammingSubmissionService should emit undefined when a new result comes in for the given participation to signal that the building process is over" time="0.006">
    </testcase>
    <testcase classname="ProgrammingSubmissionService should NOT emit undefined when a new result comes that does not belong to the currentSubmission" name="ProgrammingSubmissionService should NOT emit undefined when a new result comes that does not belong to the currentSubmission" time="0.007">
    </testcase>
    <testcase classname="ProgrammingSubmissionService should emit the newest submission when it was received through the websocket connection" name="ProgrammingSubmissionService should emit the newest submission when it was received through the websocket connection" time="0.014">
    </testcase>
    <testcase classname="ProgrammingSubmissionService should emit the failed submission state when the result waiting timer runs out AND accept a late result" name="ProgrammingSubmissionService should emit the failed submission state when the result waiting timer runs out AND accept a late result" time="0.013">
    </testcase>
    <testcase classname="ProgrammingSubmissionService should emit has no pending submission if the fallback mechanism fetches the right result from the server" name="ProgrammingSubmissionService should emit has no pending submission if the fallback mechanism fetches the right result from the server" time="0.007">
    </testcase>
    <testcase classname="ProgrammingSubmissionService should fetch the latest pending submissions for all participations of an exercise if preloadLatestPendingSubmissionsForExercise is called" name="ProgrammingSubmissionService should fetch the latest pending submissions for all participations of an exercise if preloadLatestPendingSubmissionsForExercise is called" time="0.01">
    </testcase>
    <testcase classname="ProgrammingSubmissionService should not throw an error on getSubmissionStateOfExercise if state is an empty object" name="ProgrammingSubmissionService should not throw an error on getSubmissionStateOfExercise if state is an empty object" time="0.016">
    </testcase>
    <testcase classname="ProgrammingSubmissionService should correctly return the submission state based on the servers response" name="ProgrammingSubmissionService should correctly return the submission state based on the servers response" time="0.007">
    </testcase>
    <testcase classname="ProgrammingSubmissionService should recalculate the result eta based on the number of open submissions" name="ProgrammingSubmissionService should recalculate the result eta based on the number of open submissions" time="0.165">
    </testcase>
    <testcase classname="ProgrammingSubmissionService should only unsubscribe if no other participations use the topic" name="ProgrammingSubmissionService should only unsubscribe if no other participations use the topic" time="0.009">
    </testcase>
    <testcase classname="ProgrammingSubmissionService should only unsubscribe if no other participations use the topic with localci" name="ProgrammingSubmissionService should only unsubscribe if no other participations use the topic with localci" time="0.012">
    </testcase>
    <testcase classname="ProgrammingSubmissionService should emit the newest submission when it was received through the websocket connection with localci" name="ProgrammingSubmissionService should emit the newest submission when it was received through the websocket connection with localci" time="0.009">
    </testcase>
    <testcase classname="ProgrammingSubmissionService should handle when submission processing event before submission event" name="ProgrammingSubmissionService should handle when submission processing event before submission event" time="0.018">
    </testcase>
    <testcase classname="ProgrammingSubmissionService should not update to building if old submission" name="ProgrammingSubmissionService should not update to building if old submission" time="0.01">
    </testcase>
    <testcase classname="ProgrammingSubmissionService should change to building when queue timer ends" name="ProgrammingSubmissionService should change to building when queue timer ends" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="GuidedTourService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:13" time="8.454" tests="43">
    <testcase classname="GuidedTourService Service method should call the correct update URL and return the right JSON object" name="GuidedTourService Service method should call the correct update URL and return the right JSON object" time="0.045">
    </testcase>
    <testcase classname="GuidedTourService Service method should call the correct delete URL" name="GuidedTourService Service method should call the correct delete URL" time="0.008">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods Tours without user interaction should start and finish the course overview guided tour" name="GuidedTourService Guided tour methods Tours without user interaction should start and finish the course overview guided tour" time="0.427">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods Tours without user interaction should start and skip the tour" name="GuidedTourService Guided tour methods Tours without user interaction should start and skip the tour" time="0.148">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods Tours without user interaction backdrop should prevent from advancing" name="GuidedTourService Guided tour methods Tours without user interaction backdrop should prevent from advancing" time="0.152">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods Tours with user interaction should disable the next button" name="GuidedTourService Guided tour methods Tours with user interaction should disable the next button" time="0.147">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods Tour for a certain course and exercise should start the tour for the matching course title" name="GuidedTourService Guided tour methods Tour for a certain course and exercise should start the tour for the matching course title" time="0.112">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods Tour for a certain course and exercise should disable the tour for not matching course title" name="GuidedTourService Guided tour methods Tour for a certain course and exercise should disable the tour for not matching course title" time="0.113">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods Tour for a certain course and exercise should start the tour for the matching exercise short name" name="GuidedTourService Guided tour methods Tour for a certain course and exercise should start the tour for the matching exercise short name" time="0.136">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods Tour for a certain course and exercise should start the tour for the matching course / exercise short name" name="GuidedTourService Guided tour methods Tour for a certain course and exercise should start the tour for the matching course / exercise short name" time="0.105">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods Tour for a certain course and exercise Tour with student participation should find and delete the student participation for exercise" name="GuidedTourService Guided tour methods Tour for a certain course and exercise Tour with student participation should find and delete the student participation for exercise" time="0.13">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods Modeling check should enable the next step if the results are correct" name="GuidedTourService Guided tour methods Modeling check should enable the next step if the results are correct" time="0.106">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods isCurrentStep should return true if it is the current Step" name="GuidedTourService Guided tour methods isCurrentStep should return true if it is the current Step" time="0.114">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods isCurrentStep should return false if it is not the current Step" name="GuidedTourService Guided tour methods isCurrentStep should return false if it is not the current Step" time="0.092">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods isCurrentStep should return false if current Tour is undefined" name="GuidedTourService Guided tour methods isCurrentStep should return false if current Tour is undefined" time="0.099">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods isCurrentTour should return true if it is the current Tour" name="GuidedTourService Guided tour methods isCurrentTour should return true if it is the current Tour" time="0.079">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods isCurrentTour should return false if it is not the current Tour" name="GuidedTourService Guided tour methods isCurrentTour should return false if it is not the current Tour" time="0.142">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods isCurrentTour should return false if the current Tour is undefined" name="GuidedTourService Guided tour methods isCurrentTour should return false if the current Tour is undefined" time="0.094">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods getCurrentStepString should return nothing if currentTour is undefined" name="GuidedTourService Guided tour methods getCurrentStepString should return nothing if currentTour is undefined" time="0.099">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods getCurrentStepString should return correct string if currentTour is defined" name="GuidedTourService Guided tour methods getCurrentStepString should return correct string if currentTour is defined" time="0.097">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods backStep, nextStep backStep should just return if currentTour is not defined" name="GuidedTourService Guided tour methods backStep, nextStep backStep should just return if currentTour is not defined" time="0.105">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods backStep, nextStep backStep should reset tour if currentTour is defined" name="GuidedTourService Guided tour methods backStep, nextStep backStep should reset tour if currentTour is defined" time="0.084">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods backStep, nextStep nextStep should just return if currentTour is not defined" name="GuidedTourService Guided tour methods backStep, nextStep nextStep should just return if currentTour is not defined" time="0.082">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods backStep, nextStep nextStep should reset return if currentTour is defined" name="GuidedTourService Guided tour methods backStep, nextStep nextStep should reset return if currentTour is defined" time="0.078">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods backStep, nextStep nextStep and backStep should return to initial step" name="GuidedTourService Guided tour methods backStep, nextStep nextStep and backStep should return to initial step" time="0.086">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods finishGuidedTour should just return if currentTour is not defined" name="GuidedTourService Guided tour methods finishGuidedTour should just return if currentTour is not defined" time="0.085">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods skipTour should just return if currentTour is not defined" name="GuidedTourService Guided tour methods skipTour should just return if currentTour is not defined" time="0.093">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods enableUserInteraction should enableUserInteraction with UserInteractionEvent.WAIT_FOR_SELECTOR" name="GuidedTourService Guided tour methods enableUserInteraction should enableUserInteraction with UserInteractionEvent.WAIT_FOR_SELECTOR" time="0.132">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods enableUserInteraction should enableUserInteraction with UserInteractionEvent.CLICK" name="GuidedTourService Guided tour methods enableUserInteraction should enableUserInteraction with UserInteractionEvent.CLICK" time="0.122">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods enableUserInteraction should enableUserInteraction with UserInteractionEvent.MONACO_EDITOR" name="GuidedTourService Guided tour methods enableUserInteraction should enableUserInteraction with UserInteractionEvent.MONACO_EDITOR" time="0.119">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods enableUserInteraction should enableUserInteraction with UserInteractionEvent.MODELING" name="GuidedTourService Guided tour methods enableUserInteraction should enableUserInteraction with UserInteractionEvent.MODELING" time="0.102">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods enableUserInteraction should enableUserInteraction with UserInteractionEvent.ASSESS_SUBMISSION" name="GuidedTourService Guided tour methods enableUserInteraction should enableUserInteraction with UserInteractionEvent.ASSESS_SUBMISSION" time="0.116">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods enableTourForExercise return undefined if parameters are undefined should return undefined if exercise.course is undefined" name="GuidedTourService Guided tour methods enableTourForExercise return undefined if parameters are undefined should return undefined if exercise.course is undefined" time="0.145">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods enableTourForExercise return undefined if parameters are undefined should return undefined if guidedTour mapping is undefined" name="GuidedTourService Guided tour methods enableTourForExercise return undefined if parameters are undefined should return undefined if guidedTour mapping is undefined" time="0.145">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods enableTourForExercise should enableTourForExercise for text exercise" name="GuidedTourService Guided tour methods enableTourForExercise should enableTourForExercise for text exercise" time="0.135">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods enableTourForExercise should enableTourForExercise for programming exercise" name="GuidedTourService Guided tour methods enableTourForExercise should enableTourForExercise for programming exercise" time="0.108">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods enableTourForExercise should enableTourForExercise for text exercise with init set to false" name="GuidedTourService Guided tour methods enableTourForExercise should enableTourForExercise for text exercise with init set to false" time="0.065">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods updateAssessmentResult should updateAssessmentResult and enableNextStepClick" name="GuidedTourService Guided tour methods updateAssessmentResult should updateAssessmentResult and enableNextStepClick" time="0.093">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods updateAssessmentResult should updateAssessmentResult and not enableNextStepClick as number of assessments is not correct" name="GuidedTourService Guided tour methods updateAssessmentResult should updateAssessmentResult and not enableNextStepClick as number of assessments is not correct" time="0.111">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods updateAssessmentResult should updateAssessmentResult and not enableNextStepClick as score not correct" name="GuidedTourService Guided tour methods updateAssessmentResult should updateAssessmentResult and not enableNextStepClick as score not correct" time="0.113">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods updateAssessmentResult should not updateAssessmentResult as there is no assessmentTask" name="GuidedTourService Guided tour methods updateAssessmentResult should not updateAssessmentResult as there is no assessmentTask" time="0.077">
    </testcase>
    <testcase classname="GuidedTourService Guided tour methods updateAssessmentResult should not updateAssessmentResult as the totalScore is 0" name="GuidedTourService Guided tour methods updateAssessmentResult should not updateAssessmentResult as the totalScore is 0" time="0.084">
    </testcase>
    <testcase classname="GuidedTourService GuidedTourService init should initialize" name="GuidedTourService GuidedTourService init should initialize" time="0.149">
    </testcase>
  </testsuite>
  <testsuite name="PostingContentComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:18" time="4.191" tests="36">
    <testcase classname="PostingContentComponent should set course and posts for course on initialization" name="PostingContentComponent should set course and posts for course on initialization" time="0.237">
    </testcase>
    <testcase classname="PostingContentComponent should calculate correct pattern matches for content without reference" name="PostingContentComponent should calculate correct pattern matches for content without reference" time="0.083">
    </testcase>
    <testcase classname="PostingContentComponent should calculate correct pattern matches for content with one post reference" name="PostingContentComponent should calculate correct pattern matches for content with one post reference" time="0.07">
    </testcase>
    <testcase classname="PostingContentComponent should calculate correct pattern matches for content with post references" name="PostingContentComponent should calculate correct pattern matches for content with post references" time="0.084">
    </testcase>
    <testcase classname="PostingContentComponent should calculate correct pattern matches for content with one file upload exercise reference" name="PostingContentComponent should calculate correct pattern matches for content with one file upload exercise reference" time="0.048">
    </testcase>
    <testcase classname="PostingContentComponent should calculate correct pattern matches for content with one modeling exercise reference" name="PostingContentComponent should calculate correct pattern matches for content with one modeling exercise reference" time="0.044">
    </testcase>
    <testcase classname="PostingContentComponent should calculate correct pattern matches for content with one quiz exercise reference" name="PostingContentComponent should calculate correct pattern matches for content with one quiz exercise reference" time="0.041">
    </testcase>
    <testcase classname="PostingContentComponent should calculate correct pattern matches for content with one programming exercise reference" name="PostingContentComponent should calculate correct pattern matches for content with one programming exercise reference" time="0.04">
    </testcase>
    <testcase classname="PostingContentComponent should calculate correct pattern matches for content with one text exercise reference" name="PostingContentComponent should calculate correct pattern matches for content with one text exercise reference" time="0.059">
    </testcase>
    <testcase classname="PostingContentComponent should calculate correct pattern matches for content with one lecture reference" name="PostingContentComponent should calculate correct pattern matches for content with one lecture reference" time="0.074">
    </testcase>
    <testcase classname="PostingContentComponent should calculate correct pattern matches for content with one attachment reference" name="PostingContentComponent should calculate correct pattern matches for content with one attachment reference" time="0.068">
    </testcase>
    <testcase classname="PostingContentComponent should calculate correct pattern matches for content with one user reference" name="PostingContentComponent should calculate correct pattern matches for content with one user reference" time="0.037">
    </testcase>
    <testcase classname="PostingContentComponent should calculate correct pattern matches for content with one channel reference" name="PostingContentComponent should calculate correct pattern matches for content with one channel reference" time="0.049">
    </testcase>
    <testcase classname="PostingContentComponent should display undo delete prompt when isDeleted is set to true" name="PostingContentComponent should display undo delete prompt when isDeleted is set to true" time="0.036">
    </testcase>
    <testcase classname="PostingContentComponent should calculate correct pattern matches for content with post, multiple exercise, lecture and attachment references" name="PostingContentComponent should calculate correct pattern matches for content with post, multiple exercise, lecture and attachment references" time="0.049">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should only include content before reference for empty patternMatches" name="PostingContentComponent Computing posting content parts should only include content before reference for empty patternMatches" time="0.054">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should include content before and reference as well as a linked reference within an exercise context" name="PostingContentComponent Computing posting content parts should include content before and reference as well as a linked reference within an exercise context" time="0.041">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should include content before and reference as well as a linked reference within a lecture context" name="PostingContentComponent Computing posting content parts should include content before and reference as well as a linked reference within a lecture context" time="0.045">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should include content before and reference as well as a linked reference within the course discussion overview" name="PostingContentComponent Computing posting content parts should include content before and reference as well as a linked reference within the course discussion overview" time="0.045">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should compute parts when referencing a post from a lecture context while being at the course discussion overview." name="PostingContentComponent Computing posting content parts should compute parts when referencing a post from a lecture context while being at the course discussion overview." time="0.084">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should compute parts when referencing a post from an exercise context while being at the course discussion overview" name="PostingContentComponent Computing posting content parts should compute parts when referencing a post from an exercise context while being at the course discussion overview" time="0.034">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should compute parts when referencing a post with course-wide context while being at a lecture page" name="PostingContentComponent Computing posting content parts should compute parts when referencing a post with course-wide context while being at a lecture page" time="0.083">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should compute parts when referencing a post with lecture context while being at a lecture page" name="PostingContentComponent Computing posting content parts should compute parts when referencing a post with lecture context while being at a lecture page" time="0.046">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should compute parts when referencing a file upload exercise" name="PostingContentComponent Computing posting content parts should compute parts when referencing a file upload exercise" time="0.026">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should compute parts when referencing a modeling exercise" name="PostingContentComponent Computing posting content parts should compute parts when referencing a modeling exercise" time="0.057">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should compute parts when referencing a quiz exercise" name="PostingContentComponent Computing posting content parts should compute parts when referencing a quiz exercise" time="0.03">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should compute parts when referencing a programming exercise" name="PostingContentComponent Computing posting content parts should compute parts when referencing a programming exercise" time="0.037">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should compute parts when referencing a text exercise" name="PostingContentComponent Computing posting content parts should compute parts when referencing a text exercise" time="0.05">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should compute parts when referencing a lecture" name="PostingContentComponent Computing posting content parts should compute parts when referencing a lecture" time="0.028">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should compute parts when referencing an attachment" name="PostingContentComponent Computing posting content parts should compute parts when referencing an attachment" time="0.048">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should compute parts when referencing an lecture unit" name="PostingContentComponent Computing posting content parts should compute parts when referencing an lecture unit" time="0.029">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should compute parts when referencing a single slide" name="PostingContentComponent Computing posting content parts should compute parts when referencing a single slide" time="0.057">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should compute parts when referencing a user" name="PostingContentComponent Computing posting content parts should compute parts when referencing a user" time="0.07">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should compute parts when referencing a faq" name="PostingContentComponent Computing posting content parts should compute parts when referencing a faq" time="0.038">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should compute parts when referencing a channel" name="PostingContentComponent Computing posting content parts should compute parts when referencing a channel" time="0.035">
    </testcase>
    <testcase classname="PostingContentComponent Computing posting content parts should set channelID undefined if referenced a channel id is not a number" name="PostingContentComponent Computing posting content parts should set channelID undefined if referenced a channel id is not a number" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="CodeEditorTutorAssessmentContainerComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:22" time="10.252" tests="38">
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should highlight lines that were changed" name="CodeEditorTutorAssessmentContainerComponent should highlight lines that were changed" time="2.67">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should use jhi-assessment-layout" name="CodeEditorTutorAssessmentContainerComponent should use jhi-assessment-layout" time="0.061">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should load the grading criteria on initialisation" name="CodeEditorTutorAssessmentContainerComponent should load the grading criteria on initialisation" time="0.031">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should update assessor correctly if the manual assessment is overridden" name="CodeEditorTutorAssessmentContainerComponent should update assessor correctly if the manual assessment is overridden" time="0.074">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should be able to override directly after submitting" name="CodeEditorTutorAssessmentContainerComponent should be able to override directly after submitting" time="0.09">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should show unreferenced feedback suggestions" name="CodeEditorTutorAssessmentContainerComponent should show unreferenced feedback suggestions" time="0.048">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should not show feedback suggestions where there are already existing manual feedbacks" name="CodeEditorTutorAssessmentContainerComponent should not show feedback suggestions where there are already existing manual feedbacks" time="0.06">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should show complaint for result with complaint and check assessor" name="CodeEditorTutorAssessmentContainerComponent should show complaint for result with complaint and check assessor" time="0.065">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should lock a new submission" name="CodeEditorTutorAssessmentContainerComponent should lock a new submission" time="0.066">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should not show complaint when participation contains no complaint" name="CodeEditorTutorAssessmentContainerComponent should not show complaint when participation contains no complaint" time="0.073">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should calculate score correctly for IncludedCompletelyWithBonusPointsExercise" name="CodeEditorTutorAssessmentContainerComponent should calculate score correctly for IncludedCompletelyWithBonusPointsExercise" time="0.051">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should calculate score correctly for IncludedCompletelyWithoutBonusPointsExercise" name="CodeEditorTutorAssessmentContainerComponent should calculate score correctly for IncludedCompletelyWithoutBonusPointsExercise" time="0.044">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should calculate score correctly for IncludedAsBonusExercise" name="CodeEditorTutorAssessmentContainerComponent should calculate score correctly for IncludedAsBonusExercise" time="0.068">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should calculate score correctly for NotIncludedExercise" name="CodeEditorTutorAssessmentContainerComponent should calculate score correctly for NotIncludedExercise" time="0.054">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should calculate score for result of submission" name="CodeEditorTutorAssessmentContainerComponent should calculate score for result of submission" time="0.039">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should save and submit manual result" name="CodeEditorTutorAssessmentContainerComponent should save and submit manual result" time="0.032">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should cancel the assessment and navigate back" name="CodeEditorTutorAssessmentContainerComponent should cancel the assessment and navigate back" time="0.056">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should go to next submission" name="CodeEditorTutorAssessmentContainerComponent should go to next submission" time="0.049">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should show a message if no more unassessed submissions are present" name="CodeEditorTutorAssessmentContainerComponent should show a message if no more unassessed submissions are present" time="0.033">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should update assessment after complaint, errorKeyFromServer=undefined" name="CodeEditorTutorAssessmentContainerComponent should update assessment after complaint, errorKeyFromServer=undefined" time="0.055">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should update assessment after complaint, errorKeyFromServer=genericErrorKey" name="CodeEditorTutorAssessmentContainerComponent should update assessment after complaint, errorKeyFromServer=genericErrorKey" time="0.067">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should update assessment after complaint, errorKeyFromServer=complaintLock" name="CodeEditorTutorAssessmentContainerComponent should update assessment after complaint, errorKeyFromServer=complaintLock" time="0.032">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should validate assessments after submission is received during component init" name="CodeEditorTutorAssessmentContainerComponent should validate assessments after submission is received during component init" time="0.044">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should not invalidate assessment after saving" name="CodeEditorTutorAssessmentContainerComponent should not invalidate assessment after saving" time="0.027">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should display error when complaint resolved but assessment invalid" name="CodeEditorTutorAssessmentContainerComponent should display error when complaint resolved but assessment invalid" time="0.043">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should get confirmation if complaint is accepted without higher score" name="CodeEditorTutorAssessmentContainerComponent should get confirmation if complaint is accepted without higher score" time="0.045">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should get confirmation if complaint is accepted without higher score" name="CodeEditorTutorAssessmentContainerComponent should get confirmation if complaint is accepted without higher score" time="0.025">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should get confirmation if complaint is accepted without higher score" name="CodeEditorTutorAssessmentContainerComponent should get confirmation if complaint is accepted without higher score" time="0.052">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should get confirmation if complaint is accepted without higher score" name="CodeEditorTutorAssessmentContainerComponent should get confirmation if complaint is accepted without higher score" time="0.026">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should get confirmation if complaint is accepted without higher score" name="CodeEditorTutorAssessmentContainerComponent should get confirmation if complaint is accepted without higher score" time="0.047">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should get confirmation if complaint is accepted without higher score" name="CodeEditorTutorAssessmentContainerComponent should get confirmation if complaint is accepted without higher score" time="0.032">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should get confirmation if complaint is accepted without higher score" name="CodeEditorTutorAssessmentContainerComponent should get confirmation if complaint is accepted without higher score" time="0.04">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should get confirmation if complaint is accepted without higher score" name="CodeEditorTutorAssessmentContainerComponent should get confirmation if complaint is accepted without higher score" time="0.032">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should update and validate referenced feedback" name="CodeEditorTutorAssessmentContainerComponent should update and validate referenced feedback" time="0.035">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should correctly remove feedback suggestions" name="CodeEditorTutorAssessmentContainerComponent should correctly remove feedback suggestions" time="0.037">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should show a confirmation dialog if there are pending feedback suggestions" name="CodeEditorTutorAssessmentContainerComponent should show a confirmation dialog if there are pending feedback suggestions" time="0.029">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should keep feedback suggestions if the confirmation dialog is cancelled" name="CodeEditorTutorAssessmentContainerComponent should keep feedback suggestions if the confirmation dialog is cancelled" time="0.04">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentContainerComponent should not show a confirmation dialog if there are no feedback suggestions left" name="CodeEditorTutorAssessmentContainerComponent should not show a confirmation dialog if there are no feedback suggestions left" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="ModelingSubmissionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:22" time="9.757" tests="29">
    <testcase classname="ModelingSubmissionComponent should initialize without submissionId (Standard Mode)" name="ModelingSubmissionComponent should initialize without submissionId (Standard Mode)" time="0.958">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should initialize with submissionId (Feedback View Mode)" name="ModelingSubmissionComponent should initialize with submissionId (Feedback View Mode)" time="0.225">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should allow to submit when exercise due date not set" name="ModelingSubmissionComponent should allow to submit when exercise due date not set" time="0.219">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should not allow to submit after the due date if the initialization date is before the due date" name="ModelingSubmissionComponent should not allow to submit after the due date if the initialization date is before the due date" time="0.176">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should allow to submit after the due date if the initialization date is after the due date and not submitted" name="ModelingSubmissionComponent should allow to submit after the due date if the initialization date is after the due date and not submitted" time="0.136">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should not allow to submit if there is a result and no due date" name="ModelingSubmissionComponent should not allow to submit if there is a result and no due date" time="0.154">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should get inactive as soon as the due date passes the current date" name="ModelingSubmissionComponent should get inactive as soon as the due date passes the current date" time="0.143">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should catch error on 403 error status" name="ModelingSubmissionComponent should catch error on 403 error status" time="0.165">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should set correct properties on modeling exercise update when saving" name="ModelingSubmissionComponent should set correct properties on modeling exercise update when saving" time="0.15">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should set correct properties on modeling exercise create when saving" name="ModelingSubmissionComponent should set correct properties on modeling exercise create when saving" time="0.225">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should set correct properties on modeling exercise create when submitting" name="ModelingSubmissionComponent should set correct properties on modeling exercise create when submitting" time="0.125">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should catch error on submit" name="ModelingSubmissionComponent should catch error on submit" time="0.116">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should handle failed Athena assessment appropriately" name="ModelingSubmissionComponent should handle failed Athena assessment appropriately" time="0.15">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should handle Athena assessment results separately from manual assessments" name="ModelingSubmissionComponent should handle Athena assessment results separately from manual assessments" time="0.162">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should set result when new result comes in from websocket" name="ModelingSubmissionComponent should set result when new result comes in from websocket" time="0.142">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should update submission when new submission comes in from websocket" name="ModelingSubmissionComponent should update submission when new submission comes in from websocket" time="0.108">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should not process results without completionDate except for failed Athena results" name="ModelingSubmissionComponent should not process results without completionDate except for failed Athena results" time="0.179">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should set correct properties on modeling exercise update when submitting" name="ModelingSubmissionComponent should set correct properties on modeling exercise update when submitting" time="0.207">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should calculate number of elements from model" name="ModelingSubmissionComponent should calculate number of elements from model" time="0.125">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should update selected entities with given elements" name="ModelingSubmissionComponent should update selected entities with given elements" time="0.096">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should shouldBeDisplayed return true if no selectedEntities and selectedRelationships" name="ModelingSubmissionComponent should shouldBeDisplayed return true if no selectedEntities and selectedRelationships" time="0.097">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should shouldBeDisplayed return true if feedback reference is in selectedEntities or selectedRelationships" name="ModelingSubmissionComponent should shouldBeDisplayed return true if feedback reference is in selectedEntities or selectedRelationships" time="0.106">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should update submission with current values" name="ModelingSubmissionComponent should update submission with current values" time="0.084">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should display the feedback text properly" name="ModelingSubmissionComponent should display the feedback text properly" time="0.091">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should deactivate return true when there are unsaved changes" name="ModelingSubmissionComponent should deactivate return true when there are unsaved changes" time="0.123">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should set isChanged property to false after saving" name="ModelingSubmissionComponent should set isChanged property to false after saving" time="0.157">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should mark the subsequent feedback" name="ModelingSubmissionComponent should mark the subsequent feedback" time="0.105">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should be set up with input values if present instead of loading new values from server" name="ModelingSubmissionComponent should be set up with input values if present instead of loading new values from server" time="0.121">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should fetch and sort submission history correctly" name="ModelingSubmissionComponent should fetch and sort submission history correctly" time="0.102">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseAssessmentDashboardComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:17" time="17.511" tests="33">
    <testcase classname="ExerciseAssessmentDashboardComponent should initialize" name="ExerciseAssessmentDashboardComponent should initialize" time="1.626">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent should initialize with tutor leaderboard entry" name="ExerciseAssessmentDashboardComponent should initialize with tutor leaderboard entry" time="0.515">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent should set unassessedSubmission if lock limit is not reached" name="ExerciseAssessmentDashboardComponent should set unassessedSubmission if lock limit is not reached" time="0.311">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent should not set unassessedSubmission if lock limit is reached" name="ExerciseAssessmentDashboardComponent should not set unassessedSubmission if lock limit is reached" time="0.353">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent should handle if no more submissions are assessable" name="ExerciseAssessmentDashboardComponent should handle if no more submissions are assessable" time="0.381">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent should handle generic error" name="ExerciseAssessmentDashboardComponent should handle generic error" time="0.27">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent should have correct percentages calculated" name="ExerciseAssessmentDashboardComponent should have correct percentages calculated" time="0.346">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent should  set assessed Submission and latest result" name="ExerciseAssessmentDashboardComponent should  set assessed Submission and latest result" time="0.385">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent should set exam and stats properties" name="ExerciseAssessmentDashboardComponent should set exam and stats properties" time="0.402">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent should calculateStatus DRAFT" name="ExerciseAssessmentDashboardComponent should calculateStatus DRAFT" time="0.325">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent should call hasBeenCompletedByTutor" name="ExerciseAssessmentDashboardComponent should call hasBeenCompletedByTutor" time="0.268">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent should call readInstruction" name="ExerciseAssessmentDashboardComponent should call readInstruction" time="0.227">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent test calls for all exercise types fileuploadSubmission" name="ExerciseAssessmentDashboardComponent test calls for all exercise types fileuploadSubmission" time="0.3">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent test calls for all exercise types textSubmission" name="ExerciseAssessmentDashboardComponent test calls for all exercise types textSubmission" time="0.262">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent test calls for all exercise types programmingSubmission" name="ExerciseAssessmentDashboardComponent test calls for all exercise types programmingSubmission" time="0.228">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent test calls for all exercise types programmingSubmission with automatic assessment" name="ExerciseAssessmentDashboardComponent test calls for all exercise types programmingSubmission with automatic assessment" time="0.31">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent getAssessmentLink Expect new submission to delegate correct link" name="ExerciseAssessmentDashboardComponent getAssessmentLink Expect new submission to delegate correct link" time="0.41">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent getAssessmentLink Expect existing submission without participation to delegate correct link" name="ExerciseAssessmentDashboardComponent getAssessmentLink Expect existing submission without participation to delegate correct link" time="0.223">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent getAssessmentLink Expect existing submission with participation to delegate correct link" name="ExerciseAssessmentDashboardComponent getAssessmentLink Expect existing submission with participation to delegate correct link" time="0.267">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent getComplaintQueryParams Expect more feedback request to delegate the correct query" name="ExerciseAssessmentDashboardComponent getComplaintQueryParams Expect more feedback request to delegate the correct query" time="0.312">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent getComplaintQueryParams Expect complaint with not present submission to resolve undefined" name="ExerciseAssessmentDashboardComponent getComplaintQueryParams Expect complaint with not present submission to resolve undefined" time="0.335">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent getComplaintQueryParams Expect present complaint to delegate the correct query" name="ExerciseAssessmentDashboardComponent getComplaintQueryParams Expect present complaint to delegate the correct query" time="0.264">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent getSubmissionToViewFromComplaintSubmission Expect not present submission to resolve undefined" name="ExerciseAssessmentDashboardComponent getSubmissionToViewFromComplaintSubmission Expect not present submission to resolve undefined" time="0.23">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent getSubmissionToViewFromComplaintSubmission Expect submission without results to gain an empty list" name="ExerciseAssessmentDashboardComponent getSubmissionToViewFromComplaintSubmission Expect submission without results to gain an empty list" time="0.199">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent getSubmissionToViewFromComplaintSubmission Expect only non automatic results to be returned" name="ExerciseAssessmentDashboardComponent getSubmissionToViewFromComplaintSubmission Expect only non automatic results to be returned" time="0.281">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent openExampleSubmission should not openExampleSubmission" name="ExerciseAssessmentDashboardComponent openExampleSubmission should not openExampleSubmission" time="0.272">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent openExampleSubmission should openExampleSubmission" name="ExerciseAssessmentDashboardComponent openExampleSubmission should openExampleSubmission" time="0.246">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent generate exercise detail link" name="ExerciseAssessmentDashboardComponent generate exercise detail link" time="0.243">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent should toggle second correction" name="ExerciseAssessmentDashboardComponent should toggle second correction" time="0.229">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent should check if complaint locked" name="ExerciseAssessmentDashboardComponent should check if complaint locked" time="0.309">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent should get submissions with more feedback requests for tutor" name="ExerciseAssessmentDashboardComponent should get submissions with more feedback requests for tutor" time="0.365">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent should sort more feedback rows" name="ExerciseAssessmentDashboardComponent should sort more feedback rows" time="0.218">
    </testcase>
    <testcase classname="ExerciseAssessmentDashboardComponent should return submission language" name="ExerciseAssessmentDashboardComponent should return submission language" time="0.312">
    </testcase>
  </testsuite>
  <testsuite name="Detailed Grading System Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:32" time="3.589" tests="54">
    <testcase classname="Detailed Grading System Component should handle find response for exam" name="Detailed Grading System Component should handle find response for exam" time="0.294">
    </testcase>
    <testcase classname="Detailed Grading System Component should handle find response for exam and not find a grading scale" name="Detailed Grading System Component should handle find response for exam and not find a grading scale" time="0.096">
    </testcase>
    <testcase classname="Detailed Grading System Component should generate default grading scale" name="Detailed Grading System Component should generate default grading scale" time="0.076">
    </testcase>
    <testcase classname="Detailed Grading System Component should delete grade step" name="Detailed Grading System Component should delete grade step" time="0.036">
    </testcase>
    <testcase classname="Detailed Grading System Component should create grade step" name="Detailed Grading System Component should create grade step" time="0.045">
    </testcase>
    <testcase classname="Detailed Grading System Component should delete grade names correctly" name="Detailed Grading System Component should delete grade names correctly" time="0.031">
    </testcase>
    <testcase classname="Detailed Grading System Component should filter grade steps with empty names correctly" name="Detailed Grading System Component should filter grade steps with empty names correctly" time="0.023">
    </testcase>
    <testcase classname="Detailed Grading System Component should set passing Grades correctly" name="Detailed Grading System Component should set passing Grades correctly" time="0.021">
    </testcase>
    <testcase classname="Detailed Grading System Component should determine first passing grade correctly" name="Detailed Grading System Component should determine first passing grade correctly" time="0.031">
    </testcase>
    <testcase classname="Detailed Grading System Component should set inclusivity correctly" name="Detailed Grading System Component should set inclusivity correctly" time="0.028">
    </testcase>
    <testcase classname="Detailed Grading System Component should set inclusivity correctly for grade step where lowerBound=upperBound" name="Detailed Grading System Component should set inclusivity correctly for grade step where lowerBound=upperBound" time="0.024">
    </testcase>
    <testcase classname="Detailed Grading System Component should determine lower bound inclusivity correctly" name="Detailed Grading System Component should determine lower bound inclusivity correctly" time="0.015">
    </testcase>
    <testcase classname="Detailed Grading System Component should determine lower bound inclusivity correctly when using a step above 100%" name="Detailed Grading System Component should determine lower bound inclusivity correctly when using a step above 100%" time="0.02">
    </testcase>
    <testcase classname="Detailed Grading System Component should not delete non-existing grading scale" name="Detailed Grading System Component should not delete non-existing grading scale" time="0.035">
    </testcase>
    <testcase classname="Detailed Grading System Component should delete grading scale for course" name="Detailed Grading System Component should delete grading scale for course" time="0.034">
    </testcase>
    <testcase classname="Detailed Grading System Component should delete grading scale for exam" name="Detailed Grading System Component should delete grading scale for exam" time="0.016">
    </testcase>
    <testcase classname="Detailed Grading System Component should not update grading scale" name="Detailed Grading System Component should not update grading scale" time="0.031">
    </testcase>
    <testcase classname="Detailed Grading System Component should create grading scale correctly for course" name="Detailed Grading System Component should create grading scale correctly for course" time="0.031">
    </testcase>
    <testcase classname="Detailed Grading System Component should create grading scale correctly for exam" name="Detailed Grading System Component should create grading scale correctly for exam" time="0.031">
    </testcase>
    <testcase classname="Detailed Grading System Component should update grading scale correctly for course" name="Detailed Grading System Component should update grading scale correctly for course" time="0.031">
    </testcase>
    <testcase classname="Detailed Grading System Component should update grading scale correctly for exam" name="Detailed Grading System Component should update grading scale correctly for exam" time="0.018">
    </testcase>
    <testcase classname="Detailed Grading System Component should handle find response correctly" name="Detailed Grading System Component should handle find response correctly" time="0.015">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate valid grading scale correctly" name="Detailed Grading System Component should validate valid grading scale correctly" time="0.044">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate invalid grading scale with empty grade steps correctly" name="Detailed Grading System Component should validate invalid grading scale with empty grade steps correctly" time="0.032">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate invalid grading scale with negative max points" name="Detailed Grading System Component should validate invalid grading scale with negative max points" time="0.013">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate invalid grading scale with empty grade step fields correctly" name="Detailed Grading System Component should validate invalid grading scale with empty grade step fields correctly" time="0.018">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate invalid grading scale with empty grade step point fields correctly" name="Detailed Grading System Component should validate invalid grading scale with empty grade step point fields correctly" time="0.013">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate invalid grading scale with invalid percentages" name="Detailed Grading System Component should validate invalid grading scale with invalid percentages" time="0.017">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate invalid grading scale with invalid points" name="Detailed Grading System Component should validate invalid grading scale with invalid points" time="0.02">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate invalid grading scale with set points when all should be undefined" name="Detailed Grading System Component should validate invalid grading scale with set points when all should be undefined" time="0.016">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate invalid grading scale with non-unique grade names" name="Detailed Grading System Component should validate invalid grading scale with non-unique grade names" time="0.024">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate invalid grading scale with unset first passing grade" name="Detailed Grading System Component should validate invalid grading scale with unset first passing grade" time="0.022">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate invalid grading scale with invalid bonus points" name="Detailed Grading System Component should validate invalid grading scale with invalid bonus points" time="0.018">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate invalid grading scale without strictly ascending bonus points" name="Detailed Grading System Component should validate invalid grading scale without strictly ascending bonus points" time="0.025">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate invalid grading scale with invalid adjacency" name="Detailed Grading System Component should validate invalid grading scale with invalid adjacency" time="0.036">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate invalid grading scale with invalid first grade step" name="Detailed Grading System Component should validate invalid grading scale with invalid first grade step" time="0.028">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate grading scale with basic presentations and invalid presentationScore" name="Detailed Grading System Component should validate grading scale with basic presentations and invalid presentationScore" time="0.027">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate grading scale with graded presentations and invalid presentationsWeight" name="Detailed Grading System Component should validate grading scale with graded presentations and invalid presentationsWeight" time="0.018">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate grading scale with graded presentations and invalid presentationsNumber" name="Detailed Grading System Component should validate grading scale with graded presentations and invalid presentationsNumber" time="0.016">
    </testcase>
    <testcase classname="Detailed Grading System Component should validate grading scale with graded presentations and invalid presentationScore" name="Detailed Grading System Component should validate grading scale with graded presentations and invalid presentationScore" time="0.014">
    </testcase>
    <testcase classname="Detailed Grading System Component should detect that max points are valid" name="Detailed Grading System Component should detect that max points are valid" time="0.04">
    </testcase>
    <testcase classname="Detailed Grading System Component should set points correctly" name="Detailed Grading System Component should set points correctly" time="0.03">
    </testcase>
    <testcase classname="Detailed Grading System Component should set percentages correctly" name="Detailed Grading System Component should set percentages correctly" time="0.055">
    </testcase>
    <testcase classname="Detailed Grading System Component should set all grade step points correctly" name="Detailed Grading System Component should set all grade step points correctly" time="0.04">
    </testcase>
    <testcase classname="Detailed Grading System Component should read no grade steps from csv file without data" name="Detailed Grading System Component should read no grade steps from csv file without data" time="0.044">
    </testcase>
    <testcase classname="Detailed Grading System Component should have validation error for csv with duplicated header keys" name="Detailed Grading System Component should have validation error for csv with duplicated header keys" time="0.023">
    </testcase>
    <testcase classname="Detailed Grading System Component should import csv with &quot;grade&quot; as grade type correctly" name="Detailed Grading System Component should import csv with &quot;grade&quot; as grade type correctly" time="0.03">
    </testcase>
    <testcase classname="Detailed Grading System Component should import csv with &quot;bonus&quot; as grade type correctly" name="Detailed Grading System Component should import csv with &quot;bonus&quot; as grade type correctly" time="0.02">
    </testcase>
    <testcase classname="Detailed Grading System Component should generate csv correctly" name="Detailed Grading System Component should generate csv correctly" time="0.022">
    </testcase>
    <testcase classname="Detailed Grading System Component should apply maxPoints of 100 to all grade steps after csv importing" name="Detailed Grading System Component should apply maxPoints of 100 to all grade steps after csv importing" time="0.015">
    </testcase>
    <testcase classname="Detailed Grading System Component should export as csv" name="Detailed Grading System Component should export as csv" time="0.019">
    </testcase>
    <testcase classname="Detailed Grading System Component should not show grading steps above max points warning" name="Detailed Grading System Component should not show grading steps above max points warning" time="0.022">
    </testcase>
    <testcase classname="Detailed Grading System Component should show grading steps above max points warning for inclusive bound" name="Detailed Grading System Component should show grading steps above max points warning for inclusive bound" time="0.022">
    </testcase>
    <testcase classname="Detailed Grading System Component should show grading steps above max points warning for exclusive bound" name="Detailed Grading System Component should show grading steps above max points warning for exclusive bound" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="FileUploadAssessmentComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:36" time="8.051" tests="35">
    <testcase classname="FileUploadAssessmentComponent ngOnInit AssessNextButton should be visible" name="FileUploadAssessmentComponent ngOnInit AssessNextButton should be visible" time="1.029">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent ngOnInit should get correctionRound" name="FileUploadAssessmentComponent ngOnInit should get correctionRound" time="0.093">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent ngOnInit should validate assessments on component init" name="FileUploadAssessmentComponent ngOnInit should validate assessments on component init" time="0.094">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent loadSubmission should load submission" name="FileUploadAssessmentComponent loadSubmission should load submission" time="0.128">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent loadSubmission should load optimal submission" name="FileUploadAssessmentComponent loadSubmission should load optimal submission" time="0.117">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent loadSubmission should get null submission when loading optimal submission" name="FileUploadAssessmentComponent loadSubmission should get null submission when loading optimal submission" time="0.09">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent loadSubmission should get lock limit reached error when loading optimal submission" name="FileUploadAssessmentComponent loadSubmission should get lock limit reached error when loading optimal submission" time="0.115">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent loadSubmission should fail to load optimal submission" name="FileUploadAssessmentComponent loadSubmission should fail to load optimal submission" time="0.103">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent should load correct feedbacks and update general feedback" name="FileUploadAssessmentComponent should load correct feedbacks and update general feedback" time="0.121">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent should add a feedback" name="FileUploadAssessmentComponent should add a feedback" time="0.098">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent should delete a feedback" name="FileUploadAssessmentComponent should delete a feedback" time="0.07">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent should update assessment correctly" name="FileUploadAssessmentComponent should update assessment correctly" time="0.069">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent onSaveAssessment should save the assessment" name="FileUploadAssessmentComponent onSaveAssessment should save the assessment" time="0.088">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent onSaveAssessment should not save the assessment if error" name="FileUploadAssessmentComponent onSaveAssessment should not save the assessment if error" time="0.086">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent onSaveAssessment should not invalidate assessment after saving" name="FileUploadAssessmentComponent onSaveAssessment should not invalidate assessment after saving" time="0.055">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent should update the assessment after submit" name="FileUploadAssessmentComponent should update the assessment after submit" time="0.088">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent onUpdateAssessmentAfterComplaint should update assessment after complaint" name="FileUploadAssessmentComponent onUpdateAssessmentAfterComplaint should update assessment after complaint" time="0.095">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent onUpdateAssessmentAfterComplaint should not update assessment after complaint if already locked" name="FileUploadAssessmentComponent onUpdateAssessmentAfterComplaint should not update assessment after complaint if already locked" time="0.084">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent onUpdateAssessmentAfterComplaint should not update assessment after complaint" name="FileUploadAssessmentComponent onUpdateAssessmentAfterComplaint should not update assessment after complaint" time="0.121">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent onUpdateAssessmentAfterComplaint should not update assessment after complaint if assessments are invalid" name="FileUploadAssessmentComponent onUpdateAssessmentAfterComplaint should not update assessment after complaint if assessments are invalid" time="0.079">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent attachmentExtension should get file extension" name="FileUploadAssessmentComponent attachmentExtension should get file extension" time="0.067">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent attachmentExtension should get N/A if filepath is empty" name="FileUploadAssessmentComponent attachmentExtension should get N/A if filepath is empty" time="0.079">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent assessNext should assess next result if there is one" name="FileUploadAssessmentComponent assessNext should assess next result if there is one" time="0.064">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent assessNext should not alert when no next result is found" name="FileUploadAssessmentComponent assessNext should not alert when no next result is found" time="0.078">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent assessNext should handle if no next result is found" name="FileUploadAssessmentComponent assessNext should handle if no next result is found" time="0.049">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent assessNext should alert when assess next is forbidden" name="FileUploadAssessmentComponent assessNext should alert when assess next is forbidden" time="0.069">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent canOverride should not be able to override if tutor is assessor and result has a complaint" name="FileUploadAssessmentComponent canOverride should not be able to override if tutor is assessor and result has a complaint" time="0.06">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent canOverride should not be able to override if tutor is assessor and assessmentDueDate has passed" name="FileUploadAssessmentComponent canOverride should not be able to override if tutor is assessor and assessmentDueDate has passed" time="0.057">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent canOverride should not be able to override if exercise is undefined" name="FileUploadAssessmentComponent canOverride should not be able to override if exercise is undefined" time="0.061">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent canOverride should be able to override directly after submitting" name="FileUploadAssessmentComponent canOverride should be able to override directly after submitting" time="0.059">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent getComplaint should get Complaint" name="FileUploadAssessmentComponent getComplaint should get Complaint" time="0.07">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent getComplaint should get empty Complaint" name="FileUploadAssessmentComponent getComplaint should get empty Complaint" time="0.094">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent getComplaint should get error" name="FileUploadAssessmentComponent getComplaint should get error" time="0.075">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent should cancel the current assessment" name="FileUploadAssessmentComponent should cancel the current assessment" time="0.066">
    </testcase>
    <testcase classname="FileUploadAssessmentComponent should navigate back" name="FileUploadAssessmentComponent should navigate back" time="0.055">
    </testcase>
  </testsuite>
  <testsuite name="NavbarComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:32" time="12.004" tests="47">
    <testcase classname="NavbarComponent should initialize component" name="NavbarComponent should initialize component" time="0.789">
    </testcase>
    <testcase classname="NavbarComponent should make api call when logged in user changes language" name="NavbarComponent should make api call when logged in user changes language" time="0.233">
    </testcase>
    <testcase classname="NavbarComponent should not make api call when anonymous user changes language" name="NavbarComponent should not make api call when anonymous user changes language" time="0.207">
    </testcase>
    <testcase classname="NavbarComponent should not build breadcrumbs for students" name="NavbarComponent should not build breadcrumbs for students" time="0.196">
    </testcase>
    <testcase classname="NavbarComponent should build breadcrumbs for course management" name="NavbarComponent should build breadcrumbs for course management" time="0.213">
    </testcase>
    <testcase classname="NavbarComponent should ignore query parameters" name="NavbarComponent should ignore query parameters" time="0.225">
    </testcase>
    <testcase classname="NavbarComponent should build breadcrumbs for system notification management" name="NavbarComponent should build breadcrumbs for system notification management" time="0.186">
    </testcase>
    <testcase classname="NavbarComponent should build breadcrumbs for user management" name="NavbarComponent should build breadcrumbs for user management" time="0.208">
    </testcase>
    <testcase classname="NavbarComponent should build breadcrumbs for organization management" name="NavbarComponent should build breadcrumbs for organization management" time="0.224">
    </testcase>
    <testcase classname="NavbarComponent should not error without translation" name="NavbarComponent should not error without translation" time="0.218">
    </testcase>
    <testcase classname="NavbarComponent should hide breadcrumb when exam is started" name="NavbarComponent should hide breadcrumb when exam is started" time="0.216">
    </testcase>
    <testcase classname="NavbarComponent should have correct git info" name="NavbarComponent should have correct git info" time="0.209">
    </testcase>
    <testcase classname="NavbarComponent should set the exam active state correctly" name="NavbarComponent should set the exam active state correctly" time="0.226">
    </testcase>
    <testcase classname="NavbarComponent Special Cases for Breadcrumbs programming exercise import" name="NavbarComponent Special Cases for Breadcrumbs programming exercise import" time="0.224">
    </testcase>
    <testcase classname="NavbarComponent Special Cases for Breadcrumbs programming exercise grading" name="NavbarComponent Special Cases for Breadcrumbs programming exercise grading" time="0.239">
    </testcase>
    <testcase classname="NavbarComponent Special Cases for Breadcrumbs programming exercise new assessment" name="NavbarComponent Special Cases for Breadcrumbs programming exercise new assessment" time="0.36">
    </testcase>
    <testcase classname="NavbarComponent Special Cases for Breadcrumbs exercise assessment dashboard" name="NavbarComponent Special Cases for Breadcrumbs exercise assessment dashboard" time="0.238">
    </testcase>
    <testcase classname="NavbarComponent Special Cases for Breadcrumbs modeling exercise example submission" name="NavbarComponent Special Cases for Breadcrumbs modeling exercise example submission" time="0.176">
    </testcase>
    <testcase classname="NavbarComponent Special Cases for Breadcrumbs existing modeling exercise example submission" name="NavbarComponent Special Cases for Breadcrumbs existing modeling exercise example submission" time="0.361">
    </testcase>
    <testcase classname="NavbarComponent Special Cases for Breadcrumbs lecture units" name="NavbarComponent Special Cases for Breadcrumbs lecture units" time="0.315">
    </testcase>
    <testcase classname="NavbarComponent Special Cases for Breadcrumbs apollon diagrams" name="NavbarComponent Special Cases for Breadcrumbs apollon diagrams" time="0.238">
    </testcase>
    <testcase classname="NavbarComponent Special Cases for Breadcrumbs exam exercise groups" name="NavbarComponent Special Cases for Breadcrumbs exam exercise groups" time="0.203">
    </testcase>
    <testcase classname="NavbarComponent Special Cases for Breadcrumbs exam exercise plagiarism" name="NavbarComponent Special Cases for Breadcrumbs exam exercise plagiarism" time="0.239">
    </testcase>
    <testcase classname="NavbarComponent Special repository route breadcrumb cases should calculated correct repository  breadcrumbs" name="NavbarComponent Special repository route breadcrumb cases should calculated correct repository  breadcrumbs" time="0.23">
    </testcase>
    <testcase classname="NavbarComponent Special repository route breadcrumb cases should calculated correct repository  breadcrumbs" name="NavbarComponent Special repository route breadcrumb cases should calculated correct repository  breadcrumbs" time="0.305">
    </testcase>
    <testcase classname="NavbarComponent Special repository route breadcrumb cases should calculated correct repository  breadcrumbs" name="NavbarComponent Special repository route breadcrumb cases should calculated correct repository  breadcrumbs" time="0.289">
    </testcase>
    <testcase classname="NavbarComponent Special repository route breadcrumb cases should calculated correct repository  breadcrumbs" name="NavbarComponent Special repository route breadcrumb cases should calculated correct repository  breadcrumbs" time="0.209">
    </testcase>
    <testcase classname="NavbarComponent Special repository route breadcrumb cases should calculated correct repository  breadcrumbs" name="NavbarComponent Special repository route breadcrumb cases should calculated correct repository  breadcrumbs" time="0.171">
    </testcase>
    <testcase classname="NavbarComponent Special student route breadcrumb cases should not show exercise types in URI on backlinking breadcrumbs" name="NavbarComponent Special student route breadcrumb cases should not show exercise types in URI on backlinking breadcrumbs" time="0.21">
    </testcase>
    <testcase classname="NavbarComponent Special student route breadcrumb cases should not show exercise types in URI on backlinking breadcrumbs" name="NavbarComponent Special student route breadcrumb cases should not show exercise types in URI on backlinking breadcrumbs" time="0.187">
    </testcase>
    <testcase classname="NavbarComponent Special student route breadcrumb cases should not show exercise types in URI on backlinking breadcrumbs" name="NavbarComponent Special student route breadcrumb cases should not show exercise types in URI on backlinking breadcrumbs" time="0.218">
    </testcase>
    <testcase classname="NavbarComponent should calculate correct breakpoints" name="NavbarComponent should calculate correct breakpoints" time="0.12">
    </testcase>
    <testcase classname="NavbarComponent should calculate correct breakpoints" name="NavbarComponent should calculate correct breakpoints" time="0.133">
    </testcase>
    <testcase classname="NavbarComponent should calculate correct breakpoints" name="NavbarComponent should calculate correct breakpoints" time="0.166">
    </testcase>
    <testcase classname="NavbarComponent should calculate correct breakpoints" name="NavbarComponent should calculate correct breakpoints" time="0.127">
    </testcase>
    <testcase classname="NavbarComponent should calculate correct breakpoints" name="NavbarComponent should calculate correct breakpoints" time="0.142">
    </testcase>
    <testcase classname="NavbarComponent should calculate correct breakpoints" name="NavbarComponent should calculate correct breakpoints" time="0.133">
    </testcase>
    <testcase classname="NavbarComponent should calculate correct breakpoints" name="NavbarComponent should calculate correct breakpoints" time="0.159">
    </testcase>
    <testcase classname="NavbarComponent should calculate correct breakpoints" name="NavbarComponent should calculate correct breakpoints" time="0.184">
    </testcase>
    <testcase classname="NavbarComponent should calculate correct breakpoints" name="NavbarComponent should calculate correct breakpoints" time="0.129">
    </testcase>
    <testcase classname="NavbarComponent should calculate correct breakpoints" name="NavbarComponent should calculate correct breakpoints" time="0.147">
    </testcase>
    <testcase classname="NavbarComponent should calculate correct breakpoints" name="NavbarComponent should calculate correct breakpoints" time="0.131">
    </testcase>
    <testcase classname="NavbarComponent should calculate correct breakpoints" name="NavbarComponent should calculate correct breakpoints" time="0.166">
    </testcase>
    <testcase classname="NavbarComponent should calculate correct breakpoints" name="NavbarComponent should calculate correct breakpoints" time="0.148">
    </testcase>
    <testcase classname="NavbarComponent should calculate correct breakpoints" name="NavbarComponent should calculate correct breakpoints" time="0.131">
    </testcase>
    <testcase classname="NavbarComponent should calculate correct breakpoints" name="NavbarComponent should calculate correct breakpoints" time="0.138">
    </testcase>
    <testcase classname="NavbarComponent should calculate correct breakpoints" name="NavbarComponent should calculate correct breakpoints" time="0.162">
    </testcase>
  </testsuite>
  <testsuite name="TeamsImportDialogComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:45" time="4.517" tests="74">
    <testcase classname="TeamsImportDialogComponent onInit should compute potential conflicts based on existing teams" name="TeamsImportDialogComponent onInit should compute potential conflicts based on existing teams" time="0.298">
    </testcase>
    <testcase classname="TeamsImportDialogComponent loadSourceTeams should load teams of given exercise if find was successful" name="TeamsImportDialogComponent loadSourceTeams should load teams of given exercise if find was successful" time="0.021">
    </testcase>
    <testcase classname="TeamsImportDialogComponent loadSourceTeams should not load teams of given exercise if find failed" name="TeamsImportDialogComponent loadSourceTeams should not load teams of given exercise if find failed" time="0.041">
    </testcase>
    <testcase classname="TeamsImportDialogComponent loadSourceStub and initImportStrategy should load selected exercise" name="TeamsImportDialogComponent loadSourceStub and initImportStrategy should load selected exercise" time="0.019">
    </testcase>
    <testcase classname="TeamsImportDialogComponent initImportStrategy should set import strategy to default if there no teams" name="TeamsImportDialogComponent initImportStrategy should set import strategy to default if there no teams" time="0.023">
    </testcase>
    <testcase classname="TeamsImportDialogComponent initImportStrategy should set import strategy to undefined if there are teams" name="TeamsImportDialogComponent initImportStrategy should set import strategy to undefined if there are teams" time="0.025">
    </testcase>
    <testcase classname="TeamsImportDialogComponent computePotentialConflictsBasedOnExistingTeams should fill existing arrays current team values" name="TeamsImportDialogComponent computePotentialConflictsBasedOnExistingTeams should fill existing arrays current team values" time="0.026">
    </testcase>
    <testcase classname="TeamsImportDialogComponent computeSourceTeamsFreeOfConflicts should filter source teams according to conflict" name="TeamsImportDialogComponent computeSourceTeamsFreeOfConflicts should filter source teams according to conflict" time="0.02">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts returns false if short name is in already existing short names" name="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts returns false if short name is in already existing short names" time="0.036">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts returns true if short name is not in already existing short names" name="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts returns true if short name is not in already existing short names" time="0.019">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from exercise: returns false if one of the students login is in already existing students" name="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from exercise: returns false if one of the students login is in already existing students" time="0.019">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from exercise: returns true if none of the students login is in already existing students" name="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from exercise: returns true if none of the students login is in already existing students" time="0.019">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from file: returns false if one of the students login is in already existing students" name="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from file: returns false if one of the students login is in already existing students" time="0.041">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from exercise: returns true if one of the students registration number is in already existing students" name="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from exercise: returns true if one of the students registration number is in already existing students" time="0.025">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from file: returns false if one of the students registration number is in already existing students" name="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from file: returns false if one of the students registration number is in already existing students" time="0.015">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from exercise: returns true if one of the students registration number is in already other source teams" name="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from exercise: returns true if one of the students registration number is in already other source teams" time="0.011">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from file: returns false if one of the students registration number is in already other source teams" name="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from file: returns false if one of the students registration number is in already other source teams" time="0.016">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from file: returns false if one of the students login is in already other source teams" name="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from file: returns false if one of the students login is in already other source teams" time="0.011">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from file: returns true if no student is in multiple teams" name="TeamsImportDialogComponent isSourceTeamFreeOfAnyConflicts Import from file: returns true if no student is in multiple teams" time="0.021">
    </testcase>
    <testcase classname="TeamsImportDialogComponent numberOfConflictFreeSourceTeams should return length of source teams free of conflict" name="TeamsImportDialogComponent numberOfConflictFreeSourceTeams should return length of source teams free of conflict" time="0.011">
    </testcase>
    <testcase classname="TeamsImportDialogComponent numberOfTeamsToBeDeleted should return 0 if import strategy is CREATE_ONLY" name="TeamsImportDialogComponent numberOfTeamsToBeDeleted should return 0 if import strategy is CREATE_ONLY" time="0.014">
    </testcase>
    <testcase classname="TeamsImportDialogComponent numberOfTeamsToBeDeleted should return length of teams if import strategy is PURGE_EXISTING" name="TeamsImportDialogComponent numberOfTeamsToBeDeleted should return length of teams if import strategy is PURGE_EXISTING" time="0.016">
    </testcase>
    <testcase classname="TeamsImportDialogComponent numberOfTeamsToBeImported should return conflict free teams number if import strategy is CREATE_ONLY" name="TeamsImportDialogComponent numberOfTeamsToBeImported should return conflict free teams number if import strategy is CREATE_ONLY" time="0.012">
    </testcase>
    <testcase classname="TeamsImportDialogComponent numberOfTeamsToBeImported should return length of source teams if import strategy is PURGE_EXISTING" name="TeamsImportDialogComponent numberOfTeamsToBeImported should return length of source teams if import strategy is PURGE_EXISTING" time="0.018">
    </testcase>
    <testcase classname="TeamsImportDialogComponent numberOfTeamsAfterImport should return current teams + conflict free teams number if import strategy is CREATE_ONLY" name="TeamsImportDialogComponent numberOfTeamsAfterImport should return current teams + conflict free teams number if import strategy is CREATE_ONLY" time="0.021">
    </testcase>
    <testcase classname="TeamsImportDialogComponent numberOfTeamsAfterImport should return length of source teams if import strategy is PURGE_EXISTING" name="TeamsImportDialogComponent numberOfTeamsAfterImport should return length of source teams if import strategy is PURGE_EXISTING" time="0.014">
    </testcase>
    <testcase classname="TeamsImportDialogComponent showImportStrategyChoices Import from exercise: should return false if there is no sourceExercise" name="TeamsImportDialogComponent showImportStrategyChoices Import from exercise: should return false if there is no sourceExercise" time="0.021">
    </testcase>
    <testcase classname="TeamsImportDialogComponent showImportStrategyChoices Import from exercise: should return true if there is a sourceExercise and source team" name="TeamsImportDialogComponent showImportStrategyChoices Import from exercise: should return true if there is a sourceExercise and source team" time="0.02">
    </testcase>
    <testcase classname="TeamsImportDialogComponent showImportStrategyChoices should return false if there is no source team" name="TeamsImportDialogComponent showImportStrategyChoices should return false if there is no source team" time="0.019">
    </testcase>
    <testcase classname="TeamsImportDialogComponent showImportStrategyChoices should return false if there is no existing team" name="TeamsImportDialogComponent showImportStrategyChoices should return false if there is no existing team" time="0.02">
    </testcase>
    <testcase classname="TeamsImportDialogComponent showImportStrategyChoices Import from file: should return false if source teams undefined" name="TeamsImportDialogComponent showImportStrategyChoices Import from file: should return false if source teams undefined" time="0.02">
    </testcase>
    <testcase classname="TeamsImportDialogComponent showImportStrategyChoices Import from file: should return true if source exercise undefined" name="TeamsImportDialogComponent showImportStrategyChoices Import from file: should return true if source exercise undefined" time="0.019">
    </testcase>
    <testcase classname="TeamsImportDialogComponent updateImportStrategy should set import strategy to given import strategy" name="TeamsImportDialogComponent updateImportStrategy should set import strategy to given import strategy" time="0.012">
    </testcase>
    <testcase classname="TeamsImportDialogComponent showImportPreviewNumbers import from exercise Import from exercise: should return false if there is no sourceExercise" name="TeamsImportDialogComponent showImportPreviewNumbers import from exercise Import from exercise: should return false if there is no sourceExercise" time="0.017">
    </testcase>
    <testcase classname="TeamsImportDialogComponent showImportPreviewNumbers import from exercise Import from exercise: should return true if there is a sourceExercise and source team" name="TeamsImportDialogComponent showImportPreviewNumbers import from exercise Import from exercise: should return true if there is a sourceExercise and source team" time="0.02">
    </testcase>
    <testcase classname="TeamsImportDialogComponent showImportPreviewNumbers import from exercise should return false if there is no source team" name="TeamsImportDialogComponent showImportPreviewNumbers import from exercise should return false if there is no source team" time="0.015">
    </testcase>
    <testcase classname="TeamsImportDialogComponent showImportPreviewNumbers import from exercise Import from exercise: should return false if there is no import strategy" name="TeamsImportDialogComponent showImportPreviewNumbers import from exercise Import from exercise: should return false if there is no import strategy" time="0.012">
    </testcase>
    <testcase classname="TeamsImportDialogComponent showImportPreviewNumbers import from exercise without showing Import from file: should return false if there is no import strategy" name="TeamsImportDialogComponent showImportPreviewNumbers import from exercise without showing Import from file: should return false if there is no import strategy" time="0.011">
    </testcase>
    <testcase classname="TeamsImportDialogComponent showImportPreviewNumbers import from exercise without showing Import from file: should return false if no students in multiple teams and no import strategy" name="TeamsImportDialogComponent showImportPreviewNumbers import from exercise without showing Import from file: should return false if no students in multiple teams and no import strategy" time="0.013">
    </testcase>
    <testcase classname="TeamsImportDialogComponent showImportPreviewNumbers import from exercise without showing Import from file: should return true if there are students appear in multiple teams and conflicting registration numbers" name="TeamsImportDialogComponent showImportPreviewNumbers import from exercise without showing Import from file: should return true if there are students appear in multiple teams and conflicting registration numbers" time="0.015">
    </testcase>
    <testcase classname="TeamsImportDialogComponent showImportPreviewNumbers import from exercise without showing Import from file: should return true if there are students appear in multiple teams and conflicting logins" name="TeamsImportDialogComponent showImportPreviewNumbers import from exercise without showing Import from file: should return true if there are students appear in multiple teams and conflicting logins" time="0.013">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSubmitDisabled should return false" name="TeamsImportDialogComponent isSubmitDisabled should return false" time="0.013">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSubmitDisabled Import from exercise: should return true if importing" name="TeamsImportDialogComponent isSubmitDisabled Import from exercise: should return true if importing" time="0.012">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSubmitDisabled Import from exercise: should return true if it has source exercise" name="TeamsImportDialogComponent isSubmitDisabled Import from exercise: should return true if it has source exercise" time="0.023">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSubmitDisabled Import from exercise: should return true if it has source teams" name="TeamsImportDialogComponent isSubmitDisabled Import from exercise: should return true if it has source teams" time="0.023">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSubmitDisabled Import from exercise: should return true if it has import strategy" name="TeamsImportDialogComponent isSubmitDisabled Import from exercise: should return true if it has import strategy" time="0.017">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSubmitDisabled Import from file: should return false if importing" name="TeamsImportDialogComponent isSubmitDisabled Import from file: should return false if importing" time="0.022">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSubmitDisabled Import from file: should return false if it has no source exercise" name="TeamsImportDialogComponent isSubmitDisabled Import from file: should return false if it has no source exercise" time="0.014">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSubmitDisabled Import from file: should return true if it has source teams" name="TeamsImportDialogComponent isSubmitDisabled Import from file: should return true if it has source teams" time="0.012">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSubmitDisabled Import from file: should return true if it has import strategy" name="TeamsImportDialogComponent isSubmitDisabled Import from file: should return true if it has import strategy" time="0.011">
    </testcase>
    <testcase classname="TeamsImportDialogComponent isSubmitDisabled Import from file: should return true if there same registration number is in two teams" name="TeamsImportDialogComponent isSubmitDisabled Import from file: should return true if there same registration number is in two teams" time="0.017">
    </testcase>
    <testcase classname="TeamsImportDialogComponent clear should return false" name="TeamsImportDialogComponent clear should return false" time="0.021">
    </testcase>
    <testcase classname="TeamsImportDialogComponent purgeAndImportTeams should return false" name="TeamsImportDialogComponent purgeAndImportTeams should return false" time="0.019">
    </testcase>
    <testcase classname="TeamsImportDialogComponent importTeams should not call team service if submit disabled" name="TeamsImportDialogComponent importTeams should not call team service if submit disabled" time="0.013">
    </testcase>
    <testcase classname="TeamsImportDialogComponent importTeams should call importTeamsFromSourceExercise if show import from exercise and call save success" name="TeamsImportDialogComponent importTeams should call importTeamsFromSourceExercise if show import from exercise and call save success" time="0.012">
    </testcase>
    <testcase classname="TeamsImportDialogComponent importTeams should call importTeamsFromSourceExercise if show import from exercise and call save error on Error" name="TeamsImportDialogComponent importTeams should call importTeamsFromSourceExercise if show import from exercise and call save error on Error" time="0.017">
    </testcase>
    <testcase classname="TeamsImportDialogComponent importTeams should call importTeamsFromFile if not show import from exercise and call save success" name="TeamsImportDialogComponent importTeams should call importTeamsFromFile if not show import from exercise and call save success" time="0.02">
    </testcase>
    <testcase classname="TeamsImportDialogComponent importTeams should call importTeamsFromFile if not show import from exercise and call save error on Error" name="TeamsImportDialogComponent importTeams should call importTeamsFromFile if not show import from exercise and call save error on Error" time="0.019">
    </testcase>
    <testcase classname="TeamsImportDialogComponent onTeamsChanged change component files and convert file teams to normal teams" name="TeamsImportDialogComponent onTeamsChanged change component files and convert file teams to normal teams" time="0.028">
    </testcase>
    <testcase classname="TeamsImportDialogComponent onTeamsChanged adds registration number if a student is in two or more teams" name="TeamsImportDialogComponent onTeamsChanged adds registration number if a student is in two or more teams" time="0.014">
    </testcase>
    <testcase classname="TeamsImportDialogComponent onTeamsChanged adds login if a student is in two or more teams" name="TeamsImportDialogComponent onTeamsChanged adds login if a student is in two or more teams" time="0.021">
    </testcase>
    <testcase classname="TeamsImportDialogComponent onSaveSuccess change component files and convert file teams to normal teams" name="TeamsImportDialogComponent onSaveSuccess change component files and convert file teams to normal teams" time="0.027">
    </testcase>
    <testcase classname="TeamsImportDialogComponent onSaveError call alert service" name="TeamsImportDialogComponent onSaveError call alert service" time="0.026">
    </testcase>
    <testcase classname="TeamsImportDialogComponent onSaveError call alert service if students not found" name="TeamsImportDialogComponent onSaveError call alert service if students not found" time="0.019">
    </testcase>
    <testcase classname="TeamsImportDialogComponent onSaveError call alert service if students appear multiple times" name="TeamsImportDialogComponent onSaveError call alert service if students appear multiple times" time="0.013">
    </testcase>
    <testcase classname="TeamsImportDialogComponent setShowImportFromExercise should set show import from exercise to true" name="TeamsImportDialogComponent setShowImportFromExercise should set show import from exercise to true" time="0.018">
    </testcase>
    <testcase classname="TeamsImportDialogComponent setShowImportFromExercise should set show import from exercise to false" name="TeamsImportDialogComponent setShowImportFromExercise should set show import from exercise to false" time="0.019">
    </testcase>
    <testcase classname="TeamsImportDialogComponent sampleTeamForLegend should return a sample team" name="TeamsImportDialogComponent sampleTeamForLegend should return a sample team" time="0.022">
    </testcase>
    <testcase classname="TeamsImportDialogComponent sampleErrorStudentLoginsForLegend should return a logins of sample team" name="TeamsImportDialogComponent sampleErrorStudentLoginsForLegend should return a logins of sample team" time="0.011">
    </testcase>
    <testcase classname="TeamsImportDialogComponent showLegend should return false no source teams" name="TeamsImportDialogComponent showLegend should return false no source teams" time="0.013">
    </testcase>
    <testcase classname="TeamsImportDialogComponent showLegend should return false source teams length is equal to conflict free teams length" name="TeamsImportDialogComponent showLegend should return false source teams length is equal to conflict free teams length" time="0.014">
    </testcase>
    <testcase classname="TeamsImportDialogComponent showLegend should return true source teams length not equal to conflict free teams length" name="TeamsImportDialogComponent showLegend should return true source teams length not equal to conflict free teams length" time="0.012">
    </testcase>
    <testcase classname="TeamsImportDialogComponent problematicRegistrationNumbers should return union of registration number arrays" name="TeamsImportDialogComponent problematicRegistrationNumbers should return union of registration number arrays" time="0.012">
    </testcase>
    <testcase classname="TeamsImportDialogComponent problematicLogins should return array of conflicting logins set" name="TeamsImportDialogComponent problematicLogins should return array of conflicting logins set" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="PostingReactionsBarComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:45" time="5.753" tests="46">
    <testcase classname="PostingReactionsBarComponent should initialize user authority and reactions correctly" name="PostingReactionsBarComponent should initialize user authority and reactions correctly" time="0.647">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should display edit and delete options to the author when not in read-only or preview mode" name="PostingReactionsBarComponent should display edit and delete options to the author when not in read-only or preview mode" time="0.058">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should display the delete option to user with channel moderation rights when not the author" name="PostingReactionsBarComponent should display the delete option to user with channel moderation rights when not the author" time="0.077">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should not display the edit option to user (even instructor) if s/he is not the author of posting" name="PostingReactionsBarComponent should not display the edit option to user (even instructor) if s/he is not the author of posting" time="0.067">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should display the edit option to user if s/he is the author of posting" name="PostingReactionsBarComponent should display the edit option to user if s/he is the author of posting" time="0.079">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should display the delete option to tutor if posting is in course-wide channel from a student" name="PostingReactionsBarComponent should display the delete option to tutor if posting is in course-wide channel from a student" time="0.056">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should display edit and delete options to post author" name="PostingReactionsBarComponent should display edit and delete options to post author" time="0.053">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should not display the edit option to user (even instructor) if s/he is not the author of posting" name="PostingReactionsBarComponent should not display the edit option to user (even instructor) if s/he is not the author of posting" time="0.035">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should not display edit and delete options when user is not the author and lacks permissions" name="PostingReactionsBarComponent should not display edit and delete options when user is not the author and lacks permissions" time="0.039">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should not display edit option but should display delete option to tutor if posting is in course-wide channel" name="PostingReactionsBarComponent should not display edit option but should display delete option to tutor if posting is in course-wide channel" time="0.087">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should not display edit and delete options to tutor if posting is announcement" name="PostingReactionsBarComponent should not display edit and delete options to tutor if posting is announcement" time="0.035">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should display edit and delete options to instructor if his posting is announcement" name="PostingReactionsBarComponent should display edit and delete options to instructor if his posting is announcement" time="0.06">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should display the delete option to instructor if posting is in course-wide channel from a student" name="PostingReactionsBarComponent should display the delete option to instructor if posting is in course-wide channel from a student" time="0.077">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should initialize user authority and reactions correctly with same user" name="PostingReactionsBarComponent should initialize user authority and reactions correctly with same user" time="0.058">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should initialize user authority and reactions correctly with same user" name="PostingReactionsBarComponent should initialize user authority and reactions correctly with same user" time="0.065">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should initialize user authority and reactions correctly with same user" name="PostingReactionsBarComponent should initialize user authority and reactions correctly with same user" time="0.052">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should remove unavailable reactions from the emoji selector" name="PostingReactionsBarComponent should remove unavailable reactions from the emoji selector" time="0.018">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should remove unavailable reactions from the emoji selector" name="PostingReactionsBarComponent should remove unavailable reactions from the emoji selector" time="0.045">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should remove unavailable reactions from the emoji selector" name="PostingReactionsBarComponent should remove unavailable reactions from the emoji selector" time="0.024">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should remove unavailable reactions from the emoji selector" name="PostingReactionsBarComponent should remove unavailable reactions from the emoji selector" time="0.038">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should invoke metis service method with correctly built reaction to create it" name="PostingReactionsBarComponent should invoke metis service method with correctly built reaction to create it" time="0.042">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should invoke metis service method with own reaction to delete it" name="PostingReactionsBarComponent should invoke metis service method with own reaction to delete it" time="0.056">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should invoke metis service method with own reaction to remove it" name="PostingReactionsBarComponent should invoke metis service method with own reaction to remove it" time="0.018">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should invoke metis service method when pin icon is toggled" name="PostingReactionsBarComponent should invoke metis service method when pin icon is toggled" time="0.053">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should show non-clickable pin emoji with correct tooltip for student when post is pinned" name="PostingReactionsBarComponent should show non-clickable pin emoji with correct tooltip for student when post is pinned" time="0.072">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should display button to show single answer" name="PostingReactionsBarComponent should display button to show single answer" time="0.04">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should display button to show multiple answers" name="PostingReactionsBarComponent should display button to show multiple answers" time="0.04">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should display button to collapse answers" name="PostingReactionsBarComponent should display button to collapse answers" time="0.073">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should emit showAnswersChange and openPostingCreateEditModal when openAnswerView is called" name="PostingReactionsBarComponent should emit showAnswersChange and openPostingCreateEditModal when openAnswerView is called" time="0.023">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should emit showAnswersChange and closePostingCreateEditModal when closeAnswerView is called" name="PostingReactionsBarComponent should emit showAnswersChange and closePostingCreateEditModal when closeAnswerView is called" time="0.032">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should not display edit and delete options to users that are neither author or tutor" name="PostingReactionsBarComponent should not display edit and delete options to users that are neither author or tutor" time="0.066">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should emit event to create embedded view when edit icon is clicked" name="PostingReactionsBarComponent should emit event to create embedded view when edit icon is clicked" time="0.049">
    </testcase>
    <testcase classname="PostingReactionsBarComponent answer now button should be invisible if answer is not the last one" name="PostingReactionsBarComponent answer now button should be invisible if answer is not the last one" time="0.038">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should invoke metis service when toggle resolve is clicked" name="PostingReactionsBarComponent should invoke metis service when toggle resolve is clicked" time="0.054">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should create a Reaction with answerPost when posting type is answerPost" name="PostingReactionsBarComponent should create a Reaction with answerPost when posting type is answerPost" time="0.019">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should create a Reaction with post when posting type is post" name="PostingReactionsBarComponent should create a Reaction with post when posting type is post" time="0.018">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should not toggle pin when user has no permission" name="PostingReactionsBarComponent should not toggle pin when user has no permission" time="0.07">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should emit isDeleteEvent when deletePosting is called" name="PostingReactionsBarComponent should emit isDeleteEvent when deletePosting is called" time="0.018">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should toggle pin and update displayPriority when user has permission" name="PostingReactionsBarComponent should toggle pin and update displayPriority when user has permission" time="0.026">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should display forward button and invoke forwardMessage function when clicked" name="PostingReactionsBarComponent should display forward button and invoke forwardMessage function when clicked" time="0.04">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should call openForwardMessageView with originalPostDetails when posting content is empty" name="PostingReactionsBarComponent should call openForwardMessageView with originalPostDetails when posting content is empty" time="0.025">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should call openForwardMessageView with posting when posting content is not empty" name="PostingReactionsBarComponent should call openForwardMessageView with posting when posting content is not empty" time="0.023">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should not call openForwardMessageView when course id is not set" name="PostingReactionsBarComponent should not call openForwardMessageView when course id is not set" time="0.043">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should call createForwardedMessages with the correct arguments" name="PostingReactionsBarComponent should call createForwardedMessages with the correct arguments" time="0.022">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should handle empty content without logging errors" name="PostingReactionsBarComponent should handle empty content without logging errors" time="0.022">
    </testcase>
    <testcase classname="PostingReactionsBarComponent should call createForwardedMessages with isAnswer set to false" name="PostingReactionsBarComponent should call createForwardedMessages with isAnswer set to false" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="CourseConversationComponent with no active conversation" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:23" time="29.816" tests="208">
    <testcase classname="CourseConversationComponent with no active conversation should have service set up" name="CourseConversationComponent with no active conversation should have service set up" time="1.413">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation Dialog Opening should open the group chat creation dialog" name="CourseConversationComponent with no active conversation Dialog Opening should open the group chat creation dialog" time="0.122">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation Dialog Opening should open the one-to-one chat creation dialog" name="CourseConversationComponent with no active conversation Dialog Opening should open the one-to-one chat creation dialog" time="0.1">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation Dialog Opening should open the channel overview dialog" name="CourseConversationComponent with no active conversation Dialog Opening should open the channel overview dialog" time="0.133">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation Dialog Opening should open the create channel dialog when onCreateChannelPressed is called" name="CourseConversationComponent with no active conversation Dialog Opening should open the create channel dialog when onCreateChannelPressed is called" time="0.113">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation should update thread in post" name="CourseConversationComponent with no active conversation should update thread in post" time="0.111">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation should set active conversation depending on the query param" name="CourseConversationComponent with no active conversation should set active conversation depending on the query param" time="0.148">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation should call sidebar collapse if conversation changes" name="CourseConversationComponent with no active conversation should call sidebar collapse if conversation changes" time="0.156">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation should call sidebar collapse if thread opens" name="CourseConversationComponent with no active conversation should call sidebar collapse if thread opens" time="0.128">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation should set the query params when an active conversation is selected" name="CourseConversationComponent with no active conversation should set the query params when an active conversation is selected" time="0.087">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation should accept code of conduct" name="CourseConversationComponent with no active conversation should accept code of conduct" time="0.097">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation should initialize the course-wide search text correctly" name="CourseConversationComponent with no active conversation should initialize the course-wide search text correctly" time="0.121">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation should update the course-wide search text correctly given an input" name="CourseConversationComponent with no active conversation should update the course-wide search text correctly given an input" time="0.109">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation should set search text in the courseWideSearchConfig correctly" name="CourseConversationComponent with no active conversation should set search text in the courseWideSearchConfig correctly" time="0.088">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation should toggle isNavbarCollapsed when toggleCollapseState is called" name="CourseConversationComponent with no active conversation should toggle isNavbarCollapsed when toggleCollapseState is called" time="0.08">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation should toggle isCollapsed when service emits corresponding event" name="CourseConversationComponent with no active conversation should toggle isCollapsed when service emits corresponding event" time="0.092">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation should switch to mobile if breakpoint returns true and open sidebar" name="CourseConversationComponent with no active conversation should switch to mobile if breakpoint returns true and open sidebar" time="0.082">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation should call close sidebar if coversation is selected" name="CourseConversationComponent with no active conversation should call close sidebar if coversation is selected" time="0.081">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation should call close sidebar and search term is set and open sidebar otherwise if on mobile" name="CourseConversationComponent with no active conversation should call close sidebar and search term is set and open sidebar otherwise if on mobile" time="0.121">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation should display sidebar when conversation is provided" name="CourseConversationComponent with no active conversation should display sidebar when conversation is provided" time="0.116">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation should toggle sidebar visibility based on isCollapsed property" name="CourseConversationComponent with no active conversation should toggle sidebar visibility based on isCollapsed property" time="0.086">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation onConversationSelected should change active conversation" name="CourseConversationComponent with no active conversation onConversationSelected should change active conversation" time="0.086">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation performChannelAction should call createChannelFn with the provided channel" name="CourseConversationComponent with no active conversation performChannelAction should call createChannelFn with the provided channel" time="0.099">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation performChannelAction should call prepareSidebarData on successful completion" name="CourseConversationComponent with no active conversation performChannelAction should call prepareSidebarData on successful completion" time="0.073">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation performChannelAction should log an error if createChannelFn throws an error" name="CourseConversationComponent with no active conversation performChannelAction should log an error if createChannelFn throws an error" time="0.077">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation performChannelAction should not call createChannelFn or prepareSidebarData if createChannelFn is undefined" name="CourseConversationComponent with no active conversation performChannelAction should not call createChannelFn or prepareSidebarData if createChannelFn is undefined" time="0.075">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation performChannelAction should correctly populate the recents group in accordionConversationGroups using existing mocks" name="CourseConversationComponent with no active conversation performChannelAction should correctly populate the recents group in accordionConversationGroups using existing mocks" time="0.068">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation query parameter handling should handle SavedPostStatus in conversationId" name="CourseConversationComponent with no active conversation query parameter handling should handle SavedPostStatus in conversationId" time="0.065">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation query parameter handling should handle numeric conversationId" name="CourseConversationComponent with no active conversation query parameter handling should handle numeric conversationId" time="0.085">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation query parameter handling should handle focusPostId parameter" name="CourseConversationComponent with no active conversation query parameter handling should handle focusPostId parameter" time="0.091">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation query parameter handling should handle openThreadOnFocus parameter" name="CourseConversationComponent with no active conversation query parameter handling should handle openThreadOnFocus parameter" time="0.075">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation query parameter handling should handle messageId parameter" name="CourseConversationComponent with no active conversation query parameter handling should handle messageId parameter" time="0.14">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation query parameter handling should clear postInThread when no messageId is present" name="CourseConversationComponent with no active conversation query parameter handling should clear postInThread when no messageId is present" time="0.09">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation query parameter handling should handle multiple query parameters together" name="CourseConversationComponent with no active conversation query parameter handling should handle multiple query parameters together" time="0.085">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation navigate to post functionality should handle answer post navigation correctly" name="CourseConversationComponent with no active conversation navigate to post functionality should handle answer post navigation correctly" time="0.091">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation navigate to post functionality should handle question post navigation correctly" name="CourseConversationComponent with no active conversation navigate to post functionality should handle question post navigation correctly" time="0.152">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation navigate to post functionality should not process navigation when referencePostId is undefined" name="CourseConversationComponent with no active conversation navigate to post functionality should not process navigation when referencePostId is undefined" time="0.076">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation navigate to post functionality should not process navigation when conversation id is undefined" name="CourseConversationComponent with no active conversation navigate to post functionality should not process navigation when conversation id is undefined" time="0.093">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation should mark all channels as read" name="CourseConversationComponent with no active conversation should mark all channels as read" time="0.083">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation conversation selection should handle numeric conversationId" name="CourseConversationComponent with no active conversation conversation selection should handle numeric conversationId" time="0.08">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation conversation selection should handle valid string conversationId as SavedPostStatus" name="CourseConversationComponent with no active conversation conversation selection should handle valid string conversationId as SavedPostStatus" time="0.118">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation conversation selection should ignore invalid string conversationId" name="CourseConversationComponent with no active conversation conversation selection should ignore invalid string conversationId" time="0.113">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation conversation selection should toggle the value of showOnlyPinned" name="CourseConversationComponent with no active conversation conversation selection should toggle the value of showOnlyPinned" time="0.155">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation conversation selection should update pinnedCount when onPinnedCountChanged is called" name="CourseConversationComponent with no active conversation conversation selection should update pinnedCount when onPinnedCountChanged is called" time="0.123">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation conversation selection should set showOnlyPinned to false if pinnedCount becomes 0" name="CourseConversationComponent with no active conversation conversation selection should set showOnlyPinned to false if pinnedCount becomes 0" time="0.118">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation conversation selection should not change showOnlyPinned if pinnedCount changes but is not 0" name="CourseConversationComponent with no active conversation conversation selection should not change showOnlyPinned if pinnedCount changes but is not 0" time="0.068">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation CourseConversationsComponent onTriggerNavigateToPost Tests should do nothing if post.id is undefined" name="CourseConversationComponent with no active conversation CourseConversationsComponent onTriggerNavigateToPost Tests should do nothing if post.id is undefined" time="0.075">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation CourseConversationsComponent onTriggerNavigateToPost Tests should set openThreadOnFocus = true if postingType is ANSWER" name="CourseConversationComponent with no active conversation CourseConversationsComponent onTriggerNavigateToPost Tests should set openThreadOnFocus = true if postingType is ANSWER" time="0.082">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation CourseConversationsComponent onTriggerNavigateToPost Tests should set openThreadOnFocus = false if postingType is POST (question post)" name="CourseConversationComponent with no active conversation CourseConversationsComponent onTriggerNavigateToPost Tests should set openThreadOnFocus = false if postingType is POST (question post)" time="0.164">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation CourseConversationsComponent onTriggerNavigateToPost Tests should call setActiveConversation if conversation.id is defined" name="CourseConversationComponent with no active conversation CourseConversationsComponent onTriggerNavigateToPost Tests should call setActiveConversation if conversation.id is defined" time="0.168">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation CourseConversationsComponent onTriggerNavigateToPost Tests should NOT call setActiveConversation if post.id is undefined" name="CourseConversationComponent with no active conversation CourseConversationsComponent onTriggerNavigateToPost Tests should NOT call setActiveConversation if post.id is undefined" time="0.115">
    </testcase>
    <testcase classname="CourseConversationComponent with no active conversation CourseConversationsComponent onTriggerNavigateToPost Tests should combine logic: set focusPostId and only set conversation if ID is present" name="CourseConversationComponent with no active conversation CourseConversationsComponent onTriggerNavigateToPost Tests should combine logic: set focusPostId and only set conversation if ID is present" time="0.098">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should have service set up" name="CourseConversationComponent with oneToOneChat should have service set up" time="0.135">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat Dialog Opening should open the group chat creation dialog" name="CourseConversationComponent with oneToOneChat Dialog Opening should open the group chat creation dialog" time="0.11">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat Dialog Opening should open the one-to-one chat creation dialog" name="CourseConversationComponent with oneToOneChat Dialog Opening should open the one-to-one chat creation dialog" time="0.108">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat Dialog Opening should open the channel overview dialog" name="CourseConversationComponent with oneToOneChat Dialog Opening should open the channel overview dialog" time="0.069">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat Dialog Opening should open the create channel dialog when onCreateChannelPressed is called" name="CourseConversationComponent with oneToOneChat Dialog Opening should open the create channel dialog when onCreateChannelPressed is called" time="0.071">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should update thread in post" name="CourseConversationComponent with oneToOneChat should update thread in post" time="0.083">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should set active conversation depending on the query param" name="CourseConversationComponent with oneToOneChat should set active conversation depending on the query param" time="0.098">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should call sidebar collapse if conversation changes" name="CourseConversationComponent with oneToOneChat should call sidebar collapse if conversation changes" time="0.098">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should call sidebar collapse if thread opens" name="CourseConversationComponent with oneToOneChat should call sidebar collapse if thread opens" time="0.078">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should set the query params when an active conversation is selected" name="CourseConversationComponent with oneToOneChat should set the query params when an active conversation is selected" time="0.098">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should accept code of conduct" name="CourseConversationComponent with oneToOneChat should accept code of conduct" time="0.098">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should initialize the course-wide search text correctly" name="CourseConversationComponent with oneToOneChat should initialize the course-wide search text correctly" time="0.091">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should update the course-wide search text correctly given an input" name="CourseConversationComponent with oneToOneChat should update the course-wide search text correctly given an input" time="0.103">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should set search text in the courseWideSearchConfig correctly" name="CourseConversationComponent with oneToOneChat should set search text in the courseWideSearchConfig correctly" time="0.106">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should toggle isNavbarCollapsed when toggleCollapseState is called" name="CourseConversationComponent with oneToOneChat should toggle isNavbarCollapsed when toggleCollapseState is called" time="0.076">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should toggle isCollapsed when service emits corresponding event" name="CourseConversationComponent with oneToOneChat should toggle isCollapsed when service emits corresponding event" time="0.129">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should switch to mobile if breakpoint returns true and open sidebar" name="CourseConversationComponent with oneToOneChat should switch to mobile if breakpoint returns true and open sidebar" time="0.09">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should call close sidebar if coversation is selected" name="CourseConversationComponent with oneToOneChat should call close sidebar if coversation is selected" time="0.066">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should call close sidebar and search term is set and open sidebar otherwise if on mobile" name="CourseConversationComponent with oneToOneChat should call close sidebar and search term is set and open sidebar otherwise if on mobile" time="0.06">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should display sidebar when conversation is provided" name="CourseConversationComponent with oneToOneChat should display sidebar when conversation is provided" time="0.083">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should toggle sidebar visibility based on isCollapsed property" name="CourseConversationComponent with oneToOneChat should toggle sidebar visibility based on isCollapsed property" time="0.085">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat onConversationSelected should change active conversation" name="CourseConversationComponent with oneToOneChat onConversationSelected should change active conversation" time="0.071">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat performChannelAction should call createChannelFn with the provided channel" name="CourseConversationComponent with oneToOneChat performChannelAction should call createChannelFn with the provided channel" time="0.087">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat performChannelAction should call prepareSidebarData on successful completion" name="CourseConversationComponent with oneToOneChat performChannelAction should call prepareSidebarData on successful completion" time="0.073">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat performChannelAction should log an error if createChannelFn throws an error" name="CourseConversationComponent with oneToOneChat performChannelAction should log an error if createChannelFn throws an error" time="0.06">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat performChannelAction should not call createChannelFn or prepareSidebarData if createChannelFn is undefined" name="CourseConversationComponent with oneToOneChat performChannelAction should not call createChannelFn or prepareSidebarData if createChannelFn is undefined" time="0.064">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat performChannelAction should correctly populate the recents group in accordionConversationGroups using existing mocks" name="CourseConversationComponent with oneToOneChat performChannelAction should correctly populate the recents group in accordionConversationGroups using existing mocks" time="0.068">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat query parameter handling should handle SavedPostStatus in conversationId" name="CourseConversationComponent with oneToOneChat query parameter handling should handle SavedPostStatus in conversationId" time="0.093">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat query parameter handling should handle numeric conversationId" name="CourseConversationComponent with oneToOneChat query parameter handling should handle numeric conversationId" time="0.105">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat query parameter handling should handle focusPostId parameter" name="CourseConversationComponent with oneToOneChat query parameter handling should handle focusPostId parameter" time="0.087">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat query parameter handling should handle openThreadOnFocus parameter" name="CourseConversationComponent with oneToOneChat query parameter handling should handle openThreadOnFocus parameter" time="0.07">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat query parameter handling should handle messageId parameter" name="CourseConversationComponent with oneToOneChat query parameter handling should handle messageId parameter" time="0.074">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat query parameter handling should clear postInThread when no messageId is present" name="CourseConversationComponent with oneToOneChat query parameter handling should clear postInThread when no messageId is present" time="0.083">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat query parameter handling should handle multiple query parameters together" name="CourseConversationComponent with oneToOneChat query parameter handling should handle multiple query parameters together" time="0.092">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat navigate to post functionality should handle answer post navigation correctly" name="CourseConversationComponent with oneToOneChat navigate to post functionality should handle answer post navigation correctly" time="0.076">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat navigate to post functionality should handle question post navigation correctly" name="CourseConversationComponent with oneToOneChat navigate to post functionality should handle question post navigation correctly" time="0.09">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat navigate to post functionality should not process navigation when referencePostId is undefined" name="CourseConversationComponent with oneToOneChat navigate to post functionality should not process navigation when referencePostId is undefined" time="0.076">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat navigate to post functionality should not process navigation when conversation id is undefined" name="CourseConversationComponent with oneToOneChat navigate to post functionality should not process navigation when conversation id is undefined" time="0.068">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat should mark all channels as read" name="CourseConversationComponent with oneToOneChat should mark all channels as read" time="0.071">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat conversation selection should handle numeric conversationId" name="CourseConversationComponent with oneToOneChat conversation selection should handle numeric conversationId" time="0.066">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat conversation selection should handle valid string conversationId as SavedPostStatus" name="CourseConversationComponent with oneToOneChat conversation selection should handle valid string conversationId as SavedPostStatus" time="0.08">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat conversation selection should ignore invalid string conversationId" name="CourseConversationComponent with oneToOneChat conversation selection should ignore invalid string conversationId" time="0.066">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat conversation selection should toggle the value of showOnlyPinned" name="CourseConversationComponent with oneToOneChat conversation selection should toggle the value of showOnlyPinned" time="0.117">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat conversation selection should update pinnedCount when onPinnedCountChanged is called" name="CourseConversationComponent with oneToOneChat conversation selection should update pinnedCount when onPinnedCountChanged is called" time="0.108">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat conversation selection should set showOnlyPinned to false if pinnedCount becomes 0" name="CourseConversationComponent with oneToOneChat conversation selection should set showOnlyPinned to false if pinnedCount becomes 0" time="0.079">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat conversation selection should not change showOnlyPinned if pinnedCount changes but is not 0" name="CourseConversationComponent with oneToOneChat conversation selection should not change showOnlyPinned if pinnedCount changes but is not 0" time="0.078">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat CourseConversationsComponent onTriggerNavigateToPost Tests should do nothing if post.id is undefined" name="CourseConversationComponent with oneToOneChat CourseConversationsComponent onTriggerNavigateToPost Tests should do nothing if post.id is undefined" time="0.075">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat CourseConversationsComponent onTriggerNavigateToPost Tests should set openThreadOnFocus = true if postingType is ANSWER" name="CourseConversationComponent with oneToOneChat CourseConversationsComponent onTriggerNavigateToPost Tests should set openThreadOnFocus = true if postingType is ANSWER" time="0.076">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat CourseConversationsComponent onTriggerNavigateToPost Tests should set openThreadOnFocus = false if postingType is POST (question post)" name="CourseConversationComponent with oneToOneChat CourseConversationsComponent onTriggerNavigateToPost Tests should set openThreadOnFocus = false if postingType is POST (question post)" time="0.076">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat CourseConversationsComponent onTriggerNavigateToPost Tests should call setActiveConversation if conversation.id is defined" name="CourseConversationComponent with oneToOneChat CourseConversationsComponent onTriggerNavigateToPost Tests should call setActiveConversation if conversation.id is defined" time="0.089">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat CourseConversationsComponent onTriggerNavigateToPost Tests should NOT call setActiveConversation if post.id is undefined" name="CourseConversationComponent with oneToOneChat CourseConversationsComponent onTriggerNavigateToPost Tests should NOT call setActiveConversation if post.id is undefined" time="0.113">
    </testcase>
    <testcase classname="CourseConversationComponent with oneToOneChat CourseConversationsComponent onTriggerNavigateToPost Tests should combine logic: set focusPostId and only set conversation if ID is present" name="CourseConversationComponent with oneToOneChat CourseConversationsComponent onTriggerNavigateToPost Tests should combine logic: set focusPostId and only set conversation if ID is present" time="0.088">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should have service set up" name="CourseConversationComponent with groupChat should have service set up" time="0.077">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat Dialog Opening should open the group chat creation dialog" name="CourseConversationComponent with groupChat Dialog Opening should open the group chat creation dialog" time="0.086">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat Dialog Opening should open the one-to-one chat creation dialog" name="CourseConversationComponent with groupChat Dialog Opening should open the one-to-one chat creation dialog" time="0.078">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat Dialog Opening should open the channel overview dialog" name="CourseConversationComponent with groupChat Dialog Opening should open the channel overview dialog" time="0.069">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat Dialog Opening should open the create channel dialog when onCreateChannelPressed is called" name="CourseConversationComponent with groupChat Dialog Opening should open the create channel dialog when onCreateChannelPressed is called" time="0.061">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should update thread in post" name="CourseConversationComponent with groupChat should update thread in post" time="0.105">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should set active conversation depending on the query param" name="CourseConversationComponent with groupChat should set active conversation depending on the query param" time="0.07">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should call sidebar collapse if conversation changes" name="CourseConversationComponent with groupChat should call sidebar collapse if conversation changes" time="0.08">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should call sidebar collapse if thread opens" name="CourseConversationComponent with groupChat should call sidebar collapse if thread opens" time="0.069">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should set the query params when an active conversation is selected" name="CourseConversationComponent with groupChat should set the query params when an active conversation is selected" time="0.083">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should accept code of conduct" name="CourseConversationComponent with groupChat should accept code of conduct" time="0.098">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should initialize the course-wide search text correctly" name="CourseConversationComponent with groupChat should initialize the course-wide search text correctly" time="0.103">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should update the course-wide search text correctly given an input" name="CourseConversationComponent with groupChat should update the course-wide search text correctly given an input" time="0.097">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should set search text in the courseWideSearchConfig correctly" name="CourseConversationComponent with groupChat should set search text in the courseWideSearchConfig correctly" time="0.085">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should toggle isNavbarCollapsed when toggleCollapseState is called" name="CourseConversationComponent with groupChat should toggle isNavbarCollapsed when toggleCollapseState is called" time="0.068">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should toggle isCollapsed when service emits corresponding event" name="CourseConversationComponent with groupChat should toggle isCollapsed when service emits corresponding event" time="0.082">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should switch to mobile if breakpoint returns true and open sidebar" name="CourseConversationComponent with groupChat should switch to mobile if breakpoint returns true and open sidebar" time="0.208">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should call close sidebar if coversation is selected" name="CourseConversationComponent with groupChat should call close sidebar if coversation is selected" time="0.138">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should call close sidebar and search term is set and open sidebar otherwise if on mobile" name="CourseConversationComponent with groupChat should call close sidebar and search term is set and open sidebar otherwise if on mobile" time="0.125">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should display sidebar when conversation is provided" name="CourseConversationComponent with groupChat should display sidebar when conversation is provided" time="0.093">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should toggle sidebar visibility based on isCollapsed property" name="CourseConversationComponent with groupChat should toggle sidebar visibility based on isCollapsed property" time="0.093">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat onConversationSelected should change active conversation" name="CourseConversationComponent with groupChat onConversationSelected should change active conversation" time="0.068">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat performChannelAction should call createChannelFn with the provided channel" name="CourseConversationComponent with groupChat performChannelAction should call createChannelFn with the provided channel" time="0.059">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat performChannelAction should call prepareSidebarData on successful completion" name="CourseConversationComponent with groupChat performChannelAction should call prepareSidebarData on successful completion" time="0.063">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat performChannelAction should log an error if createChannelFn throws an error" name="CourseConversationComponent with groupChat performChannelAction should log an error if createChannelFn throws an error" time="0.081">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat performChannelAction should not call createChannelFn or prepareSidebarData if createChannelFn is undefined" name="CourseConversationComponent with groupChat performChannelAction should not call createChannelFn or prepareSidebarData if createChannelFn is undefined" time="0.111">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat performChannelAction should correctly populate the recents group in accordionConversationGroups using existing mocks" name="CourseConversationComponent with groupChat performChannelAction should correctly populate the recents group in accordionConversationGroups using existing mocks" time="0.174">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat query parameter handling should handle SavedPostStatus in conversationId" name="CourseConversationComponent with groupChat query parameter handling should handle SavedPostStatus in conversationId" time="0.161">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat query parameter handling should handle numeric conversationId" name="CourseConversationComponent with groupChat query parameter handling should handle numeric conversationId" time="0.084">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat query parameter handling should handle focusPostId parameter" name="CourseConversationComponent with groupChat query parameter handling should handle focusPostId parameter" time="0.143">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat query parameter handling should handle openThreadOnFocus parameter" name="CourseConversationComponent with groupChat query parameter handling should handle openThreadOnFocus parameter" time="0.108">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat query parameter handling should handle messageId parameter" name="CourseConversationComponent with groupChat query parameter handling should handle messageId parameter" time="0.063">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat query parameter handling should clear postInThread when no messageId is present" name="CourseConversationComponent with groupChat query parameter handling should clear postInThread when no messageId is present" time="0.065">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat query parameter handling should handle multiple query parameters together" name="CourseConversationComponent with groupChat query parameter handling should handle multiple query parameters together" time="0.078">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat navigate to post functionality should handle answer post navigation correctly" name="CourseConversationComponent with groupChat navigate to post functionality should handle answer post navigation correctly" time="0.063">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat navigate to post functionality should handle question post navigation correctly" name="CourseConversationComponent with groupChat navigate to post functionality should handle question post navigation correctly" time="0.06">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat navigate to post functionality should not process navigation when referencePostId is undefined" name="CourseConversationComponent with groupChat navigate to post functionality should not process navigation when referencePostId is undefined" time="0.073">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat navigate to post functionality should not process navigation when conversation id is undefined" name="CourseConversationComponent with groupChat navigate to post functionality should not process navigation when conversation id is undefined" time="0.063">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat should mark all channels as read" name="CourseConversationComponent with groupChat should mark all channels as read" time="0.067">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat conversation selection should handle numeric conversationId" name="CourseConversationComponent with groupChat conversation selection should handle numeric conversationId" time="0.073">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat conversation selection should handle valid string conversationId as SavedPostStatus" name="CourseConversationComponent with groupChat conversation selection should handle valid string conversationId as SavedPostStatus" time="0.072">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat conversation selection should ignore invalid string conversationId" name="CourseConversationComponent with groupChat conversation selection should ignore invalid string conversationId" time="0.069">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat conversation selection should toggle the value of showOnlyPinned" name="CourseConversationComponent with groupChat conversation selection should toggle the value of showOnlyPinned" time="0.083">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat conversation selection should update pinnedCount when onPinnedCountChanged is called" name="CourseConversationComponent with groupChat conversation selection should update pinnedCount when onPinnedCountChanged is called" time="0.074">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat conversation selection should set showOnlyPinned to false if pinnedCount becomes 0" name="CourseConversationComponent with groupChat conversation selection should set showOnlyPinned to false if pinnedCount becomes 0" time="0.105">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat conversation selection should not change showOnlyPinned if pinnedCount changes but is not 0" name="CourseConversationComponent with groupChat conversation selection should not change showOnlyPinned if pinnedCount changes but is not 0" time="0.115">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat CourseConversationsComponent onTriggerNavigateToPost Tests should do nothing if post.id is undefined" name="CourseConversationComponent with groupChat CourseConversationsComponent onTriggerNavigateToPost Tests should do nothing if post.id is undefined" time="0.107">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat CourseConversationsComponent onTriggerNavigateToPost Tests should set openThreadOnFocus = true if postingType is ANSWER" name="CourseConversationComponent with groupChat CourseConversationsComponent onTriggerNavigateToPost Tests should set openThreadOnFocus = true if postingType is ANSWER" time="0.068">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat CourseConversationsComponent onTriggerNavigateToPost Tests should set openThreadOnFocus = false if postingType is POST (question post)" name="CourseConversationComponent with groupChat CourseConversationsComponent onTriggerNavigateToPost Tests should set openThreadOnFocus = false if postingType is POST (question post)" time="0.075">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat CourseConversationsComponent onTriggerNavigateToPost Tests should call setActiveConversation if conversation.id is defined" name="CourseConversationComponent with groupChat CourseConversationsComponent onTriggerNavigateToPost Tests should call setActiveConversation if conversation.id is defined" time="0.067">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat CourseConversationsComponent onTriggerNavigateToPost Tests should NOT call setActiveConversation if post.id is undefined" name="CourseConversationComponent with groupChat CourseConversationsComponent onTriggerNavigateToPost Tests should NOT call setActiveConversation if post.id is undefined" time="0.069">
    </testcase>
    <testcase classname="CourseConversationComponent with groupChat CourseConversationsComponent onTriggerNavigateToPost Tests should combine logic: set focusPostId and only set conversation if ID is present" name="CourseConversationComponent with groupChat CourseConversationsComponent onTriggerNavigateToPost Tests should combine logic: set focusPostId and only set conversation if ID is present" time="0.073">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should have service set up" name="CourseConversationComponent with channel should have service set up" time="0.067">
    </testcase>
    <testcase classname="CourseConversationComponent with channel Dialog Opening should open the group chat creation dialog" name="CourseConversationComponent with channel Dialog Opening should open the group chat creation dialog" time="0.068">
    </testcase>
    <testcase classname="CourseConversationComponent with channel Dialog Opening should open the one-to-one chat creation dialog" name="CourseConversationComponent with channel Dialog Opening should open the one-to-one chat creation dialog" time="0.083">
    </testcase>
    <testcase classname="CourseConversationComponent with channel Dialog Opening should open the channel overview dialog" name="CourseConversationComponent with channel Dialog Opening should open the channel overview dialog" time="0.064">
    </testcase>
    <testcase classname="CourseConversationComponent with channel Dialog Opening should open the create channel dialog when onCreateChannelPressed is called" name="CourseConversationComponent with channel Dialog Opening should open the create channel dialog when onCreateChannelPressed is called" time="0.09">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should update thread in post" name="CourseConversationComponent with channel should update thread in post" time="0.073">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should set active conversation depending on the query param" name="CourseConversationComponent with channel should set active conversation depending on the query param" time="0.074">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should call sidebar collapse if conversation changes" name="CourseConversationComponent with channel should call sidebar collapse if conversation changes" time="0.135">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should call sidebar collapse if thread opens" name="CourseConversationComponent with channel should call sidebar collapse if thread opens" time="0.086">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should set the query params when an active conversation is selected" name="CourseConversationComponent with channel should set the query params when an active conversation is selected" time="0.095">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should accept code of conduct" name="CourseConversationComponent with channel should accept code of conduct" time="0.095">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should initialize the course-wide search text correctly" name="CourseConversationComponent with channel should initialize the course-wide search text correctly" time="0.078">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should update the course-wide search text correctly given an input" name="CourseConversationComponent with channel should update the course-wide search text correctly given an input" time="0.075">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should set search text in the courseWideSearchConfig correctly" name="CourseConversationComponent with channel should set search text in the courseWideSearchConfig correctly" time="0.082">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should toggle isNavbarCollapsed when toggleCollapseState is called" name="CourseConversationComponent with channel should toggle isNavbarCollapsed when toggleCollapseState is called" time="0.06">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should toggle isCollapsed when service emits corresponding event" name="CourseConversationComponent with channel should toggle isCollapsed when service emits corresponding event" time="0.09">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should switch to mobile if breakpoint returns true and open sidebar" name="CourseConversationComponent with channel should switch to mobile if breakpoint returns true and open sidebar" time="0.066">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should call close sidebar if coversation is selected" name="CourseConversationComponent with channel should call close sidebar if coversation is selected" time="0.088">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should call close sidebar and search term is set and open sidebar otherwise if on mobile" name="CourseConversationComponent with channel should call close sidebar and search term is set and open sidebar otherwise if on mobile" time="0.117">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should display sidebar when conversation is provided" name="CourseConversationComponent with channel should display sidebar when conversation is provided" time="0.086">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should toggle sidebar visibility based on isCollapsed property" name="CourseConversationComponent with channel should toggle sidebar visibility based on isCollapsed property" time="0.114">
    </testcase>
    <testcase classname="CourseConversationComponent with channel onConversationSelected should change active conversation" name="CourseConversationComponent with channel onConversationSelected should change active conversation" time="0.106">
    </testcase>
    <testcase classname="CourseConversationComponent with channel performChannelAction should call createChannelFn with the provided channel" name="CourseConversationComponent with channel performChannelAction should call createChannelFn with the provided channel" time="0.07">
    </testcase>
    <testcase classname="CourseConversationComponent with channel performChannelAction should call prepareSidebarData on successful completion" name="CourseConversationComponent with channel performChannelAction should call prepareSidebarData on successful completion" time="0.078">
    </testcase>
    <testcase classname="CourseConversationComponent with channel performChannelAction should log an error if createChannelFn throws an error" name="CourseConversationComponent with channel performChannelAction should log an error if createChannelFn throws an error" time="0.07">
    </testcase>
    <testcase classname="CourseConversationComponent with channel performChannelAction should not call createChannelFn or prepareSidebarData if createChannelFn is undefined" name="CourseConversationComponent with channel performChannelAction should not call createChannelFn or prepareSidebarData if createChannelFn is undefined" time="0.071">
    </testcase>
    <testcase classname="CourseConversationComponent with channel performChannelAction should correctly populate the recents group in accordionConversationGroups using existing mocks" name="CourseConversationComponent with channel performChannelAction should correctly populate the recents group in accordionConversationGroups using existing mocks" time="0.065">
    </testcase>
    <testcase classname="CourseConversationComponent with channel query parameter handling should handle SavedPostStatus in conversationId" name="CourseConversationComponent with channel query parameter handling should handle SavedPostStatus in conversationId" time="0.069">
    </testcase>
    <testcase classname="CourseConversationComponent with channel query parameter handling should handle numeric conversationId" name="CourseConversationComponent with channel query parameter handling should handle numeric conversationId" time="0.064">
    </testcase>
    <testcase classname="CourseConversationComponent with channel query parameter handling should handle focusPostId parameter" name="CourseConversationComponent with channel query parameter handling should handle focusPostId parameter" time="0.055">
    </testcase>
    <testcase classname="CourseConversationComponent with channel query parameter handling should handle openThreadOnFocus parameter" name="CourseConversationComponent with channel query parameter handling should handle openThreadOnFocus parameter" time="0.063">
    </testcase>
    <testcase classname="CourseConversationComponent with channel query parameter handling should handle messageId parameter" name="CourseConversationComponent with channel query parameter handling should handle messageId parameter" time="0.059">
    </testcase>
    <testcase classname="CourseConversationComponent with channel query parameter handling should clear postInThread when no messageId is present" name="CourseConversationComponent with channel query parameter handling should clear postInThread when no messageId is present" time="0.063">
    </testcase>
    <testcase classname="CourseConversationComponent with channel query parameter handling should handle multiple query parameters together" name="CourseConversationComponent with channel query parameter handling should handle multiple query parameters together" time="0.061">
    </testcase>
    <testcase classname="CourseConversationComponent with channel navigate to post functionality should handle answer post navigation correctly" name="CourseConversationComponent with channel navigate to post functionality should handle answer post navigation correctly" time="0.065">
    </testcase>
    <testcase classname="CourseConversationComponent with channel navigate to post functionality should handle question post navigation correctly" name="CourseConversationComponent with channel navigate to post functionality should handle question post navigation correctly" time="0.083">
    </testcase>
    <testcase classname="CourseConversationComponent with channel navigate to post functionality should not process navigation when referencePostId is undefined" name="CourseConversationComponent with channel navigate to post functionality should not process navigation when referencePostId is undefined" time="0.071">
    </testcase>
    <testcase classname="CourseConversationComponent with channel navigate to post functionality should not process navigation when conversation id is undefined" name="CourseConversationComponent with channel navigate to post functionality should not process navigation when conversation id is undefined" time="0.071">
    </testcase>
    <testcase classname="CourseConversationComponent with channel should mark all channels as read" name="CourseConversationComponent with channel should mark all channels as read" time="0.073">
    </testcase>
    <testcase classname="CourseConversationComponent with channel conversation selection should handle numeric conversationId" name="CourseConversationComponent with channel conversation selection should handle numeric conversationId" time="0.057">
    </testcase>
    <testcase classname="CourseConversationComponent with channel conversation selection should handle valid string conversationId as SavedPostStatus" name="CourseConversationComponent with channel conversation selection should handle valid string conversationId as SavedPostStatus" time="0.06">
    </testcase>
    <testcase classname="CourseConversationComponent with channel conversation selection should ignore invalid string conversationId" name="CourseConversationComponent with channel conversation selection should ignore invalid string conversationId" time="0.065">
    </testcase>
    <testcase classname="CourseConversationComponent with channel conversation selection should toggle the value of showOnlyPinned" name="CourseConversationComponent with channel conversation selection should toggle the value of showOnlyPinned" time="0.096">
    </testcase>
    <testcase classname="CourseConversationComponent with channel conversation selection should update pinnedCount when onPinnedCountChanged is called" name="CourseConversationComponent with channel conversation selection should update pinnedCount when onPinnedCountChanged is called" time="0.093">
    </testcase>
    <testcase classname="CourseConversationComponent with channel conversation selection should set showOnlyPinned to false if pinnedCount becomes 0" name="CourseConversationComponent with channel conversation selection should set showOnlyPinned to false if pinnedCount becomes 0" time="0.091">
    </testcase>
    <testcase classname="CourseConversationComponent with channel conversation selection should not change showOnlyPinned if pinnedCount changes but is not 0" name="CourseConversationComponent with channel conversation selection should not change showOnlyPinned if pinnedCount changes but is not 0" time="0.062">
    </testcase>
    <testcase classname="CourseConversationComponent with channel CourseConversationsComponent onTriggerNavigateToPost Tests should do nothing if post.id is undefined" name="CourseConversationComponent with channel CourseConversationsComponent onTriggerNavigateToPost Tests should do nothing if post.id is undefined" time="0.071">
    </testcase>
    <testcase classname="CourseConversationComponent with channel CourseConversationsComponent onTriggerNavigateToPost Tests should set openThreadOnFocus = true if postingType is ANSWER" name="CourseConversationComponent with channel CourseConversationsComponent onTriggerNavigateToPost Tests should set openThreadOnFocus = true if postingType is ANSWER" time="0.075">
    </testcase>
    <testcase classname="CourseConversationComponent with channel CourseConversationsComponent onTriggerNavigateToPost Tests should set openThreadOnFocus = false if postingType is POST (question post)" name="CourseConversationComponent with channel CourseConversationsComponent onTriggerNavigateToPost Tests should set openThreadOnFocus = false if postingType is POST (question post)" time="0.093">
    </testcase>
    <testcase classname="CourseConversationComponent with channel CourseConversationsComponent onTriggerNavigateToPost Tests should call setActiveConversation if conversation.id is defined" name="CourseConversationComponent with channel CourseConversationsComponent onTriggerNavigateToPost Tests should call setActiveConversation if conversation.id is defined" time="0.095">
    </testcase>
    <testcase classname="CourseConversationComponent with channel CourseConversationsComponent onTriggerNavigateToPost Tests should NOT call setActiveConversation if post.id is undefined" name="CourseConversationComponent with channel CourseConversationsComponent onTriggerNavigateToPost Tests should NOT call setActiveConversation if post.id is undefined" time="0.097">
    </testcase>
    <testcase classname="CourseConversationComponent with channel CourseConversationsComponent onTriggerNavigateToPost Tests should combine logic: set focusPostId and only set conversation if ID is present" name="CourseConversationComponent with channel CourseConversationsComponent onTriggerNavigateToPost Tests should combine logic: set focusPostId and only set conversation if ID is present" time="0.083">
    </testcase>
  </testsuite>
  <testsuite name="LectureUpdateUnitsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:50" time="8.901" tests="28">
    <testcase classname="LectureUpdateUnitsComponent should initialize" name="LectureUpdateUnitsComponent should initialize" time="1.191">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should open video form when clicked" name="LectureUpdateUnitsComponent should open video form when clicked" time="0.09">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should open online form when clicked" name="LectureUpdateUnitsComponent should open online form when clicked" time="0.04">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should open attachment form when clicked" name="LectureUpdateUnitsComponent should open attachment form when clicked" time="0.057">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should open text form when clicked" name="LectureUpdateUnitsComponent should open text form when clicked" time="0.07">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should open exercise form when clicked" name="LectureUpdateUnitsComponent should open exercise form when clicked" time="0.057">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should close all forms when clicked" name="LectureUpdateUnitsComponent should close all forms when clicked" time="0.063">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should send POST request upon video form submission and update units" name="LectureUpdateUnitsComponent should send POST request upon video form submission and update units" time="0.083">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should not send POST request upon empty video form submission" name="LectureUpdateUnitsComponent should not send POST request upon empty video form submission" time="0.053">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should send POST request upon text form submission and update units" name="LectureUpdateUnitsComponent should send POST request upon text form submission and update units" time="0.096">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should not send POST request upon empty text form submission" name="LectureUpdateUnitsComponent should not send POST request upon empty text form submission" time="0.044">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should show alert upon unsuccessful text form submission" name="LectureUpdateUnitsComponent should show alert upon unsuccessful text form submission" time="0.068">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should show alert upon unsuccessful video form submission" name="LectureUpdateUnitsComponent should show alert upon unsuccessful video form submission" time="0.059">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should show alert upon unsuccessful online form submission" name="LectureUpdateUnitsComponent should show alert upon unsuccessful online form submission" time="0.083">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should send POST request upon online form submission and update units" name="LectureUpdateUnitsComponent should send POST request upon online form submission and update units" time="0.05">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should not send POST request upon empty online form submission" name="LectureUpdateUnitsComponent should not send POST request upon empty online form submission" time="0.069">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should send POST request upon attachment form submission and update units" name="LectureUpdateUnitsComponent should send POST request upon attachment form submission and update units" time="0.065">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should send POST request upon attachment form submission and update units when editing lecture" name="LectureUpdateUnitsComponent should send POST request upon attachment form submission and update units when editing lecture" time="0.107">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should show alert upon unsuccessful attachment form submission" name="LectureUpdateUnitsComponent should show alert upon unsuccessful attachment form submission" time="0.087">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should show alert upon unsuccessful attachment form submission with error information" name="LectureUpdateUnitsComponent should show alert upon unsuccessful attachment form submission with error information" time="0.114">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should not send POST request upon empty attachment form submission" name="LectureUpdateUnitsComponent should not send POST request upon empty attachment form submission" time="0.088">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should update units upon exercise unit creation" name="LectureUpdateUnitsComponent should update units upon exercise unit creation" time="0.07">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should be in edit mode when clicked" name="LectureUpdateUnitsComponent should be in edit mode when clicked" time="0.066">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should open edit video form when clicked" name="LectureUpdateUnitsComponent should open edit video form when clicked" time="0.052">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should open edit online form when clicked" name="LectureUpdateUnitsComponent should open edit online form when clicked" time="0.071">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should open edit attachment form when clicked" name="LectureUpdateUnitsComponent should open edit attachment form when clicked" time="0.044">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should open edit text form when clicked" name="LectureUpdateUnitsComponent should open edit text form when clicked" time="0.068">
    </testcase>
    <testcase classname="LectureUpdateUnitsComponent should open exercise form upon init when requested" name="LectureUpdateUnitsComponent should open exercise form upon init when requested" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="QuizParticipationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:51" time="9.588" tests="29">
    <testcase classname="QuizParticipationComponent live mode should initialize" name="QuizParticipationComponent live mode should initialize" time="1.122">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should fetch exercise and create a new submission" name="QuizParticipationComponent live mode should fetch exercise and create a new submission" time="0.325">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should update in intervals of individual quiz" name="QuizParticipationComponent live mode should update in intervals of individual quiz" time="0.301">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should update in intervals of not individual quiz" name="QuizParticipationComponent live mode should update in intervals of not individual quiz" time="0.268">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should check quiz end in intervals" name="QuizParticipationComponent live mode should check quiz end in intervals" time="0.323">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should trigger a save on quiz end if the answers were not submitted" name="QuizParticipationComponent live mode should trigger a save on quiz end if the answers were not submitted" time="0.273">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should refresh quiz" name="QuizParticipationComponent live mode should refresh quiz" time="0.284">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should join BATCHED batches that have started false" name="QuizParticipationComponent live mode should join BATCHED batches that have started false" time="0.326">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should join BATCHED batches that have started true" name="QuizParticipationComponent live mode should join BATCHED batches that have started true" time="0.357">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should join INDIVIDUAL batches that have started false" name="QuizParticipationComponent live mode should join INDIVIDUAL batches that have started false" time="0.248">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should join INDIVIDUAL batches that have started true" name="QuizParticipationComponent live mode should join INDIVIDUAL batches that have started true" time="0.178">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should submit quiz" name="QuizParticipationComponent live mode should submit quiz" time="0.238">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should return true if student didnt interact with any question" name="QuizParticipationComponent live mode should return true if student didnt interact with any question" time="0.192">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should show warning on submit" name="QuizParticipationComponent live mode should show warning on submit" time="0.267">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should show results after ending" name="QuizParticipationComponent live mode should show results after ending" time="0.207">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should mark changes as unsaved when an answer changes" name="QuizParticipationComponent live mode should mark changes as unsaved when an answer changes" time="0.268">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should react to errors" name="QuizParticipationComponent live mode should react to errors" time="0.209">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should express timespan in humanized text" name="QuizParticipationComponent live mode should express timespan in humanized text" time="0.158">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should adjust release date of the quiz if it didnt start" name="QuizParticipationComponent live mode should adjust release date of the quiz if it didnt start" time="0.181">
    </testcase>
    <testcase classname="QuizParticipationComponent live mode should apply participation" name="QuizParticipationComponent live mode should apply participation" time="0.173">
    </testcase>
    <testcase classname="QuizParticipationComponent preview mode should initialize" name="QuizParticipationComponent preview mode should initialize" time="0.215">
    </testcase>
    <testcase classname="QuizParticipationComponent preview mode should initialize and start" name="QuizParticipationComponent preview mode should initialize and start" time="0.172">
    </testcase>
    <testcase classname="QuizParticipationComponent preview mode should submit quiz" name="QuizParticipationComponent preview mode should submit quiz" time="0.175">
    </testcase>
    <testcase classname="QuizParticipationComponent practice mode should initialize" name="QuizParticipationComponent practice mode should initialize" time="0.199">
    </testcase>
    <testcase classname="QuizParticipationComponent practice mode should initialize and start" name="QuizParticipationComponent practice mode should initialize and start" time="0.165">
    </testcase>
    <testcase classname="QuizParticipationComponent practice mode should submit quiz" name="QuizParticipationComponent practice mode should submit quiz" time="0.183">
    </testcase>
    <testcase classname="QuizParticipationComponent solution mode should initialize" name="QuizParticipationComponent solution mode should initialize" time="0.197">
    </testcase>
    <testcase classname="QuizParticipationComponent solution mode should initialize and show solution" name="QuizParticipationComponent solution mode should initialize and show solution" time="0.143">
    </testcase>
    <testcase classname="QuizParticipationComponent solution mode should update time" name="QuizParticipationComponent solution mode should update time" time="0.161">
    </testcase>
  </testsuite>
  <testsuite name="CourseScoresComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:54" time="7.431" tests="16">
    <testcase classname="CourseScoresComponent should initialize" name="CourseScoresComponent should initialize" time="0.383">
    </testcase>
    <testcase classname="CourseScoresComponent should not log error on sentry when correct participant score calculation" name="CourseScoresComponent should not log error on sentry when correct participant score calculation" time="0.163">
    </testcase>
    <testcase classname="CourseScoresComponent should log error on sentry when missing participant score calculation" name="CourseScoresComponent should log error on sentry when missing participant score calculation" time="0.228">
    </testcase>
    <testcase classname="CourseScoresComponent should log error on sentry when wrong points score calculation" name="CourseScoresComponent should log error on sentry when wrong points score calculation" time="0.181">
    </testcase>
    <testcase classname="CourseScoresComponent should log error on sentry when wrong score calculation" name="CourseScoresComponent should log error on sentry when wrong score calculation" time="0.184">
    </testcase>
    <testcase classname="CourseScoresComponent should filter and sort exercises" name="CourseScoresComponent should filter and sort exercises" time="0.142">
    </testcase>
    <testcase classname="CourseScoresComponent should make duplicated titles unique" name="CourseScoresComponent should make duplicated titles unique" time="0.102">
    </testcase>
    <testcase classname="CourseScoresComponent should group exercises and calculate exercise max score" name="CourseScoresComponent should group exercises and calculate exercise max score" time="0.158">
    </testcase>
    <testcase classname="CourseScoresComponent should calculate per student score" name="CourseScoresComponent should calculate per student score" time="0.234">
    </testcase>
    <testcase classname="CourseScoresComponent should omit student statistics with no participations" name="CourseScoresComponent should omit student statistics with no participations" time="0.171">
    </testcase>
    <testcase classname="CourseScoresComponent should assign plagiarism grade if there is a PLAGIARISM verdict" name="CourseScoresComponent should assign plagiarism grade if there is a PLAGIARISM verdict" time="0.172">
    </testcase>
    <testcase classname="CourseScoresComponent should generate excel row correctly" name="CourseScoresComponent should generate excel row correctly" time="0.217">
    </testcase>
    <testcase classname="CourseScoresComponent should generate csv correctly" name="CourseScoresComponent should generate csv correctly" time="0.2">
    </testcase>
    <testcase classname="CourseScoresComponent should set grading scale properties correctly" name="CourseScoresComponent should set grading scale properties correctly" time="0.123">
    </testcase>
    <testcase classname="CourseScoresComponent should set highlighting to default if current highlighting is deselected" name="CourseScoresComponent should set highlighting to default if current highlighting is deselected" time="0.087">
    </testcase>
    <testcase classname="CourseScoresComponent should highlight the median correctly" name="CourseScoresComponent should highlight the median correctly" time="0.131">
    </testcase>
  </testsuite>
  <testsuite name="ExamUpdateComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:35" time="26.463" tests="31">
    <testcase classname="ExamUpdateComponent create and edit exams should initialize" name="ExamUpdateComponent create and edit exams should initialize" time="2.229">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams should validate the dates correctly" name="ExamUpdateComponent create and edit exams should validate the dates correctly" time="0.837">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams should show channel name input for test exams" name="ExamUpdateComponent create and edit exams should show channel name input for test exams" time="0.054">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams should validate the example solution publication date correctly" name="ExamUpdateComponent create and edit exams should validate the example solution publication date correctly" time="0.095">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams should update" name="ExamUpdateComponent create and edit exams should update" time="0.703">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams should calculate the working time for real exams correctly" name="ExamUpdateComponent create and edit exams should calculate the working time for real exams correctly" time="0.583">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams should not calculate the working time for test exams" name="ExamUpdateComponent create and edit exams should not calculate the working time for test exams" time="0.631">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams validates the working time for test exams correctly" name="ExamUpdateComponent create and edit exams validates the working time for test exams correctly" time="0.622">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams validates the working time for real exams correctly" name="ExamUpdateComponent create and edit exams validates the working time for real exams correctly" time="0.747">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams validates the visible from for real exams correctly" name="ExamUpdateComponent create and edit exams validates the visible from for real exams correctly" time="0.791">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams validates the start of working time for real exams correctly" name="ExamUpdateComponent create and edit exams validates the start of working time for real exams correctly" time="0.703">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams validates the end of working time for real exams correctly" name="ExamUpdateComponent create and edit exams validates the end of working time for real exams correctly" time="0.736">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams validates the visible from value for real exams correctly" name="ExamUpdateComponent create and edit exams validates the visible from value for real exams correctly" time="0.685">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams validates the start of working time value for real exams correctly" name="ExamUpdateComponent create and edit exams validates the start of working time value for real exams correctly" time="0.621">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams validates the end of working time value for real exams correctly" name="ExamUpdateComponent create and edit exams validates the end of working time value for real exams correctly" time="0.649">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams exam visibility check returns false if the dates are not set" name="ExamUpdateComponent create and edit exams exam visibility check returns false if the dates are not set" time="0.593">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams exam visibility check returns true if the difference between dates are more than 4 hours" name="ExamUpdateComponent create and edit exams exam visibility check returns true if the difference between dates are more than 4 hours" time="0.735">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams should correctly catch HTTPError when updating the examWithoutExercises" name="ExamUpdateComponent create and edit exams should correctly catch HTTPError when updating the examWithoutExercises" time="0.59">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams should create" name="ExamUpdateComponent create and edit exams should create" time="0.648">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams should correctly catch HTTPError when creating the examWithoutExercises" name="ExamUpdateComponent create and edit exams should correctly catch HTTPError when creating the examWithoutExercises" time="0.786">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams should call the back method on the nav util service on previousState" name="ExamUpdateComponent create and edit exams should call the back method on the nav util service on previousState" time="0.052">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams should correctly validate the number of correction rounds in a test Exams" name="ExamUpdateComponent create and edit exams should correctly validate the number of correction rounds in a test Exams" time="0.765">
    </testcase>
    <testcase classname="ExamUpdateComponent create and edit exams should correctly validate the number of correction rounds in a realExam" name="ExamUpdateComponent create and edit exams should correctly validate the number of correction rounds in a realExam" time="0.822">
    </testcase>
    <testcase classname="ExamUpdateComponent import exams should initialize without id and dates set" name="ExamUpdateComponent import exams should initialize without id and dates set" time="0.882">
    </testcase>
    <testcase classname="ExamUpdateComponent import exams should perform import of an examWithoutExercises with exercises successfully" name="ExamUpdateComponent import exams should perform import of an examWithoutExercises with exercises successfully" time="0.736">
    </testcase>
    <testcase classname="ExamUpdateComponent import exams should perform import of an exam with only selected exercises successfully" name="ExamUpdateComponent import exams should perform import of an exam with only selected exercises successfully" time="0.802">
    </testcase>
    <testcase classname="ExamUpdateComponent import exams should trigger an alarm for a wrong user input in the examWithoutExercises exercises" name="ExamUpdateComponent import exams should trigger an alarm for a wrong user input in the examWithoutExercises exercises" time="0.688">
    </testcase>
    <testcase classname="ExamUpdateComponent import exams should perform import of examWithoutExercises AND correctly process conflict exception from server" name="ExamUpdateComponent import exams should perform import of examWithoutExercises AND correctly process conflict exception from server" time="0.764">
    </testcase>
    <testcase classname="ExamUpdateComponent import exams should perform import of examWithoutExercises AND correctly process conflict exception from server" name="ExamUpdateComponent import exams should perform import of examWithoutExercises AND correctly process conflict exception from server" time="0.689">
    </testcase>
    <testcase classname="ExamUpdateComponent import exams should perform import of examWithoutExercises AND correctly process conflict exception from server" name="ExamUpdateComponent import exams should perform import of examWithoutExercises AND correctly process conflict exception from server" time="0.711">
    </testcase>
    <testcase classname="ExamUpdateComponent import exams should perform input of exercise groups AND correctly process arbitrary exception from server" name="ExamUpdateComponent import exams should perform input of exercise groups AND correctly process arbitrary exception from server" time="0.876">
    </testcase>
  </testsuite>
  <testsuite name="PostingsMarkdownEditor" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:01" time="5.349" tests="37">
    <testcase classname="PostingsMarkdownEditor should have set the correct default commands on init if messaging or communication is enabled" name="PostingsMarkdownEditor should have set the correct default commands on init if messaging or communication is enabled" time="0.455">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should have set the correct default commands on init if communication is disabled" name="PostingsMarkdownEditor should have set the correct default commands on init if communication is disabled" time="0.05">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should have set the correct default commands on init if faq is enabled" name="PostingsMarkdownEditor should have set the correct default commands on init if faq is enabled" time="0.04">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should have set the correct default commands on init if faq is disabled" name="PostingsMarkdownEditor should have set the correct default commands on init if faq is disabled" time="0.039">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should show the correct amount of characters below the markdown input" name="PostingsMarkdownEditor should show the correct amount of characters below the markdown input" time="0.05">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should show the correct amount of characters in red if max length exceeded" name="PostingsMarkdownEditor should show the correct amount of characters in red if max length exceeded" time="0.047">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should initialize markdown correctly with post content" name="PostingsMarkdownEditor should initialize markdown correctly with post content" time="0.05">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should update value if markdown change is emitted" name="PostingsMarkdownEditor should update value if markdown change is emitted" time="0.05">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should write value of form group in content variable" name="PostingsMarkdownEditor should write value of form group in content variable" time="0.058">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should write an empty string into content for undefined values" name="PostingsMarkdownEditor should write an empty string into content for undefined values" time="0.049">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should register onChange" name="PostingsMarkdownEditor should register onChange" time="0.032">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should call preventDefault when the user presses enter" name="PostingsMarkdownEditor should call preventDefault when the user presses enter" time="0.072">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should not call preventDefault when the user presses shift+enter" name="PostingsMarkdownEditor should not call preventDefault when the user presses shift+enter" time="0.053">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should not suppress newlines on enter if disabled" name="PostingsMarkdownEditor should not suppress newlines on enter if disabled" time="0.033">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should not create emoji picker if position is not set" name="PostingsMarkdownEditor should not create emoji picker if position is not set" time="0.072">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should attach EmojiPickerComponent to overlay when EmojiAction.run is called" name="PostingsMarkdownEditor should attach EmojiPickerComponent to overlay when EmojiAction.run is called" time="0.041">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should create overlay with correct position when EmojiAction.run is called" name="PostingsMarkdownEditor should create overlay with correct position when EmojiAction.run is called" time="0.028">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should detach overlay and close EmojiPickerComponent on backdrop click" name="PostingsMarkdownEditor should detach overlay and close EmojiPickerComponent on backdrop click" time="0.066">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should destroy emoji picker if it is already open" name="PostingsMarkdownEditor should destroy emoji picker if it is already open" time="0.031">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should clean up overlay reference on destroy" name="PostingsMarkdownEditor should clean up overlay reference on destroy" time="0.03">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should handle Shift+Enter correctly by inserting a single line break with prefix" name="PostingsMarkdownEditor should handle Shift+Enter correctly by inserting a single line break with prefix" time="0.051">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should handle Cmd+Enter correctly without inserting double line breaks" name="PostingsMarkdownEditor should handle Cmd+Enter correctly without inserting double line breaks" time="0.028">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should add bulleted list prefixes correctly" name="PostingsMarkdownEditor should add bulleted list prefixes correctly" time="0.049">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should remove bulleted list prefixes correctly when toggled" name="PostingsMarkdownEditor should remove bulleted list prefixes correctly when toggled" time="0.035">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should add ordered list prefixes correctly starting from 1" name="PostingsMarkdownEditor should add ordered list prefixes correctly starting from 1" time="0.054">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should remove ordered list prefixes correctly when toggled" name="PostingsMarkdownEditor should remove ordered list prefixes correctly when toggled" time="0.069">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should switch from bulleted list to ordered list correctly" name="PostingsMarkdownEditor should switch from bulleted list to ordered list correctly" time="0.032">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should switch from ordered list to bulleted list correctly" name="PostingsMarkdownEditor should switch from ordered list to bulleted list correctly" time="0.039">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should start ordered list numbering from 1 regardless of an inline list" name="PostingsMarkdownEditor should start ordered list numbering from 1 regardless of an inline list" time="0.068">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should update prefixes correctly when switching list types" name="PostingsMarkdownEditor should update prefixes correctly when switching list types" time="0.035">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should toggle list prefixes correctly when pressing the same list button twice" name="PostingsMarkdownEditor should toggle list prefixes correctly when pressing the same list button twice" time="0.088">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should handle pressing different list buttons correctly" name="PostingsMarkdownEditor should handle pressing different list buttons correctly" time="0.054">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should handle key down event and invoke the correct action" name="PostingsMarkdownEditor should handle key down event and invoke the correct action" time="0.03">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should handle invalid line content gracefully" name="PostingsMarkdownEditor should handle invalid line content gracefully" time="0.075">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should keep the cursor position intact when editing text in a list item" name="PostingsMarkdownEditor should keep the cursor position intact when editing text in a list item" time="0.028">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should insert emoji at the cursor position" name="PostingsMarkdownEditor should insert emoji at the cursor position" time="0.048">
    </testcase>
    <testcase classname="PostingsMarkdownEditor should close the emoji picker and insert emoji on selection event" name="PostingsMarkdownEditor should close the emoji picker and insert emoji on selection event" time="0.065">
    </testcase>
  </testsuite>
  <testsuite name="CodeEditorContainerIntegration" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:01" time="6.168" tests="12">
    <testcase classname="CodeEditorContainerIntegration should initialize all components correctly if all server calls are successful" name="CodeEditorContainerIntegration should initialize all components correctly if all server calls are successful" time="1.457">
    </testcase>
    <testcase classname="CodeEditorContainerIntegration should not load files and render other components correctly if the repository status cannot be retrieved" name="CodeEditorContainerIntegration should not load files and render other components correctly if the repository status cannot be retrieved" time="0.196">
    </testcase>
    <testcase classname="CodeEditorContainerIntegration should update the file browser and monaco editor on file selection" name="CodeEditorContainerIntegration should update the file browser and monaco editor on file selection" time="0.543">
    </testcase>
    <testcase classname="CodeEditorContainerIntegration should mark file to have unsaved changes in file tree if the file was changed in editor" name="CodeEditorContainerIntegration should mark file to have unsaved changes in file tree if the file was changed in editor" time="0.357">
    </testcase>
    <testcase classname="CodeEditorContainerIntegration should save files and remove unsaved status of saved files afterwards" name="CodeEditorContainerIntegration should save files and remove unsaved status of saved files afterwards" time="0.38">
    </testcase>
    <testcase classname="CodeEditorContainerIntegration should remove the unsaved changes flag in all components if the unsaved file is deleted" name="CodeEditorContainerIntegration should remove the unsaved changes flag in all components if the unsaved file is deleted" time="0.237">
    </testcase>
    <testcase classname="CodeEditorContainerIntegration should wait for build result after submission if no unsaved changes exist" name="CodeEditorContainerIntegration should wait for build result after submission if no unsaved changes exist" time="0.208">
    </testcase>
    <testcase classname="CodeEditorContainerIntegration should first save unsaved files before triggering commit" name="CodeEditorContainerIntegration should first save unsaved files before triggering commit" time="0.268">
    </testcase>
    <testcase classname="CodeEditorContainerIntegration should enter conflict mode if a git conflict between local and remote arises" name="CodeEditorContainerIntegration should enter conflict mode if a git conflict between local and remote arises" time="0.25">
    </testcase>
    <testcase classname="CodeEditorContainerIntegration onError should handle disconnectedInternet" name="CodeEditorContainerIntegration onError should handle disconnectedInternet" time="0.143">
    </testcase>
    <testcase classname="CodeEditorContainerIntegration onError should handle disconnectedInternet" name="CodeEditorContainerIntegration onError should handle disconnectedInternet" time="0.086">
    </testcase>
    <testcase classname="CodeEditorContainerIntegration should create file badges for feedback suggestions" name="CodeEditorContainerIntegration should create file badges for feedback suggestions" time="0.136">
    </testcase>
  </testsuite>
  <testsuite name="Notification Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:06" time="1.836" tests="33">
    <testcase classname="Notification Service Service methods should call correct URL to fetch all notifications filtered by current notification settings" name="Notification Service Service methods should call correct URL to fetch all notifications filtered by current notification settings" time="0.027">
    </testcase>
    <testcase classname="Notification Service Service methods should navigate to notification target" name="Notification Service Service methods should navigate to notification target" time="0.008">
    </testcase>
    <testcase classname="Notification Service Service methods should navigate to new group chat notification target" name="Notification Service Service methods should navigate to new group chat notification target" time="0.006">
    </testcase>
    <testcase classname="Notification Service Service methods should navigate to new message reply notification target" name="Notification Service Service methods should navigate to new message reply notification target" time="0.007">
    </testcase>
    <testcase classname="Notification Service Service methods should navigate to data export success notification target" name="Notification Service Service methods should navigate to data export success notification target" time="0.007">
    </testcase>
    <testcase classname="Notification Service Service methods should navigate to data export creation failure notification target" name="Notification Service Service methods should navigate to data export creation failure notification target" time="0.008">
    </testcase>
    <testcase classname="Notification Service Service methods should convert date array from server" name="Notification Service Service methods should convert date array from server" time="0.015">
    </testcase>
    <testcase classname="Notification Service Service methods should subscribe to single user notification updates and receive new single user notification" name="Notification Service Service methods should subscribe to single user notification updates and receive new single user notification" time="0.027">
    </testcase>
    <testcase classname="Notification Service Service methods should subscribe to tutorial group notification updates and receive new tutorial group notifications" name="Notification Service Service methods should subscribe to tutorial group notification updates and receive new tutorial group notifications" time="0.019">
    </testcase>
    <testcase classname="Notification Service Service methods should subscribe to conversation notification updates and receive new message notifications" name="Notification Service Service methods should subscribe to conversation notification updates and receive new message notifications" time="0.007">
    </testcase>
    <testcase classname="Notification Service Service methods should subscribe to group notification updates and receive new group notification" name="Notification Service Service methods should subscribe to group notification updates and receive new group notification" time="0.026">
    </testcase>
    <testcase classname="Notification Service Service methods should subscribe to quiz notification updates and receive a new quiz exercise and create a new quiz notification from it" name="Notification Service Service methods should subscribe to quiz notification updates and receive a new quiz exercise and create a new quiz notification from it" time="0.017">
    </testcase>
    <testcase classname="Notification Service Service methods should handle new message notification if user is mentioned" name="Notification Service Service methods should handle new message notification if user is mentioned" time="0.01">
    </testcase>
    <testcase classname="Notification Service Service methods should not show notification for muted conversation" name="Notification Service Service methods should not show notification for muted conversation" time="0.022">
    </testcase>
    <testcase classname="Notification Service Service methods should mute conversation" name="Notification Service Service methods should mute conversation" time="0.012">
    </testcase>
    <testcase classname="Notification Service Service methods should unmute conversation" name="Notification Service Service methods should unmute conversation" time="0.011">
    </testcase>
    <testcase classname="Notification Service Service methods should handle textIsPlaceholder being true and return translated text" name="Notification Service Service methods should handle textIsPlaceholder being true and return translated text" time="0.006">
    </testcase>
    <testcase classname="Notification Service Service methods should truncate long translations" name="Notification Service Service methods should truncate long translations" time="0.012">
    </testcase>
    <testcase classname="Notification Service Service methods should return original text if translation not found" name="Notification Service Service methods should return original text if translation not found" time="0.011">
    </testcase>
    <testcase classname="Notification Service Service methods should return default message if translation not found and original text is undefined" name="Notification Service Service methods should return default message if translation not found and original text is undefined" time="0.008">
    </testcase>
    <testcase classname="Notification Service Service methods should replace specific text patterns in the translation" name="Notification Service Service methods should replace specific text patterns in the translation" time="0.016">
    </testcase>
    <testcase classname="Notification Service Service methods should replace multiple occurences of specific text patterns in the translation" name="Notification Service Service methods should replace multiple occurences of specific text patterns in the translation" time="0.012">
    </testcase>
    <testcase classname="Notification Service Service methods should recognize wrong specific text patterns and not translate it" name="Notification Service Service methods should recognize wrong specific text patterns and not translate it" time="0.007">
    </testcase>
    <testcase classname="Notification Service Service methods should subscribe to course-wide channel topic on NavigationEnd to /courses URL" name="Notification Service Service methods should subscribe to course-wide channel topic on NavigationEnd to /courses URL" time="0.006">
    </testcase>
    <testcase classname="Notification Service Service methods should clear course-wide channel subscription on NavigationEnd to a non-course URL" name="Notification Service Service methods should clear course-wide channel subscription on NavigationEnd to a non-course URL" time="0.005">
    </testcase>
    <testcase classname="Notification Service Service methods should switch course-wide channel subscriptions on NavigationEnd" name="Notification Service Service methods should switch course-wide channel subscriptions on NavigationEnd" time="0.012">
    </testcase>
    <testcase classname="Notification Service Service methods should not subscribe to same course-wide channel topic twice" name="Notification Service Service methods should not subscribe to same course-wide channel topic twice" time="0.013">
    </testcase>
    <testcase classname="Notification Service Service methods should add notification if it is from another user and allowed by settings" name="Notification Service Service methods should add notification if it is from another user and allowed by settings" time="0.007">
    </testcase>
    <testcase classname="Notification Service Service methods should add notification about reply if current user is involved" name="Notification Service Service methods should add notification about reply if current user is involved" time="0.013">
    </testcase>
    <testcase classname="Notification Service Service methods should not add notification if it is from the current user" name="Notification Service Service methods should not add notification if it is from the current user" time="0.012">
    </testcase>
    <testcase classname="Notification Service Service methods should add notification if it is from another author" name="Notification Service Service methods should add notification if it is from another author" time="0.01">
    </testcase>
    <testcase classname="Notification Service Service methods should change notification title if the current user is mentioned in message" name="Notification Service Service methods should change notification title if the current user is mentioned in message" time="0.01">
    </testcase>
    <testcase classname="Notification Service Service methods should change notification title if the current user is mentioned in reply" name="Notification Service Service methods should change notification title if the current user is mentioned in reply" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="CourseOverviewComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:13:59" time="11.191" tests="30">
    <testcase classname="CourseOverviewComponent should call all methods on init" name="CourseOverviewComponent should call all methods on init" time="0.537">
    </testcase>
    <testcase classname="CourseOverviewComponent should create sidebar item for student course analytics dashboard if the feature is active" name="CourseOverviewComponent should create sidebar item for student course analytics dashboard if the feature is active" time="0.177">
    </testcase>
    <testcase classname="CourseOverviewComponent should create sidebar items with default items" name="CourseOverviewComponent should create sidebar items with default items" time="0.151">
    </testcase>
    <testcase classname="CourseOverviewComponent loads conversations when switching to message tab once" name="CourseOverviewComponent loads conversations when switching to message tab once" time="0.202">
    </testcase>
    <testcase classname="CourseOverviewComponent should determine once if there are unread messages" name="CourseOverviewComponent should determine once if there are unread messages" time="0.129">
    </testcase>
    <testcase classname="CourseOverviewComponent should determine once if there are unread messages" name="CourseOverviewComponent should determine once if there are unread messages" time="0.18">
    </testcase>
    <testcase classname="CourseOverviewComponent should not try to load message related data when not activated for course" name="CourseOverviewComponent should not try to load message related data when not activated for course" time="0.12">
    </testcase>
    <testcase classname="CourseOverviewComponent should redirect to the registration page if the API endpoint returned a 403, but the user can register" name="CourseOverviewComponent should redirect to the registration page if the API endpoint returned a 403, but the user can register" time="0.206">
    </testcase>
    <testcase classname="CourseOverviewComponent should call load Course methods on init" name="CourseOverviewComponent should call load Course methods on init" time="0.108">
    </testcase>
    <testcase classname="CourseOverviewComponent should show an alert when loading the course fails" name="CourseOverviewComponent should show an alert when loading the course fails" time="0.116">
    </testcase>
    <testcase classname="CourseOverviewComponent should return false for canRegisterForCourse if the server returns 403" name="CourseOverviewComponent should return false for canRegisterForCourse if the server returns 403" time="0.141">
    </testcase>
    <testcase classname="CourseOverviewComponent should throw for unexpected registration responses from the server" name="CourseOverviewComponent should throw for unexpected registration responses from the server" time="0.12">
    </testcase>
    <testcase classname="CourseOverviewComponent should load the course, even when just calling loadCourse by itself (for refreshing)" name="CourseOverviewComponent should load the course, even when just calling loadCourse by itself (for refreshing)" time="0.167">
    </testcase>
    <testcase classname="CourseOverviewComponent should have visible exams" name="CourseOverviewComponent should have visible exams" time="0.088">
    </testcase>
    <testcase classname="CourseOverviewComponent should not have visible exams" name="CourseOverviewComponent should not have visible exams" time="0.152">
    </testcase>
    <testcase classname="CourseOverviewComponent should have competencies and tutorial groups" name="CourseOverviewComponent should have competencies and tutorial groups" time="0.126">
    </testcase>
    <testcase classname="CourseOverviewComponent should subscribeToTeamAssignmentUpdates" name="CourseOverviewComponent should subscribeToTeamAssignmentUpdates" time="0.111">
    </testcase>
    <testcase classname="CourseOverviewComponent should subscribeForQuizChanges" name="CourseOverviewComponent should subscribeForQuizChanges" time="0.099">
    </testcase>
    <testcase classname="CourseOverviewComponent should do ngOnDestroy" name="CourseOverviewComponent should do ngOnDestroy" time="0.123">
    </testcase>
    <testcase classname="CourseOverviewComponent should render controls if child has configuration" name="CourseOverviewComponent should render controls if child has configuration" time="0.186">
    </testcase>
    <testcase classname="CourseOverviewComponent should toggle sidebar based on isNavbarCollapsed" name="CourseOverviewComponent should toggle sidebar based on isNavbarCollapsed" time="0.169">
    </testcase>
    <testcase classname="CourseOverviewComponent should toggle isNavbarCollapsed when toggleCollapseState is called" name="CourseOverviewComponent should toggle isNavbarCollapsed when toggleCollapseState is called" time="0.096">
    </testcase>
    <testcase classname="CourseOverviewComponent should apply exam-wrapper and exam-is-active if exam is started" name="CourseOverviewComponent should apply exam-wrapper and exam-is-active if exam is started" time="0.215">
    </testcase>
    <testcase classname="CourseOverviewComponent should display/hide sidebar if exam is started/over" name="CourseOverviewComponent should display/hide sidebar if exam is started/over" time="0.142">
    </testcase>
    <testcase classname="CourseOverviewComponent should display/hide course title bar if exam is started/over" name="CourseOverviewComponent should display/hide course title bar if exam is started/over" time="0.14">
    </testcase>
    <testcase classname="CourseOverviewComponent should initialize courses attribute when page is loaded" name="CourseOverviewComponent should initialize courses attribute when page is loaded" time="0.122">
    </testcase>
    <testcase classname="CourseOverviewComponent should not initialize courses attribute when page has error while loading" name="CourseOverviewComponent should not initialize courses attribute when page has error while loading" time="0.104">
    </testcase>
    <testcase classname="CourseOverviewComponent should not display current course in dropdown" name="CourseOverviewComponent should not display current course in dropdown" time="0.094">
    </testcase>
    <testcase classname="CourseOverviewComponent should unsubscribe from dashboardSubscription on ngOnDestroy" name="CourseOverviewComponent should unsubscribe from dashboardSubscription on ngOnDestroy" time="0.124">
    </testcase>
    <testcase classname="CourseOverviewComponent should toggle isCollapsed when service emits corresponding event" name="CourseOverviewComponent should toggle isCollapsed when service emits corresponding event" time="0.127">
    </testcase>
  </testsuite>
  <testsuite name="CodeEditorInstructorIntegration" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:02" time="9.766" tests="15">
    <testcase classname="CodeEditorInstructorIntegration should load the exercise and select the template participation if no participation id is provided" name="CodeEditorInstructorIntegration should load the exercise and select the template participation if no participation id is provided" time="1.641">
    </testcase>
    <testcase classname="CodeEditorInstructorIntegration should go into error state when loading the exercise failed" name="CodeEditorInstructorIntegration should go into error state when loading the exercise failed" time="0.268">
    </testcase>
    <testcase classname="CodeEditorInstructorIntegration should load test repository if specified in url" name="CodeEditorInstructorIntegration should load test repository if specified in url" time="0.255">
    </testcase>
    <testcase classname="CodeEditorInstructorIntegration should be able to switch between the repos and update the child components accordingly" name="CodeEditorInstructorIntegration should be able to switch between the repos and update the child components accordingly" time="0.364">
    </testcase>
    <testcase classname="CodeEditorInstructorIntegration should not be able to select a repository without repositoryUri" name="CodeEditorInstructorIntegration should not be able to select a repository without repositoryUri" time="0.353">
    </testcase>
    <testcase classname="CodeEditorInstructorIntegration Repository Navigation should navigate to template participation repository from auxiliary repository" name="CodeEditorInstructorIntegration Repository Navigation should navigate to template participation repository from auxiliary repository" time="0.17">
    </testcase>
    <testcase classname="CodeEditorInstructorIntegration Repository Navigation should navigate to template participation repository from test repository" name="CodeEditorInstructorIntegration Repository Navigation should navigate to template participation repository from test repository" time="0.167">
    </testcase>
    <testcase classname="CodeEditorInstructorIntegration Repository Navigation should navigate to solution participation repository from auxiliary repository" name="CodeEditorInstructorIntegration Repository Navigation should navigate to solution participation repository from auxiliary repository" time="0.153">
    </testcase>
    <testcase classname="CodeEditorInstructorIntegration Repository Navigation should navigate to solution participation repository from test repository" name="CodeEditorInstructorIntegration Repository Navigation should navigate to solution participation repository from test repository" time="0.165">
    </testcase>
    <testcase classname="CodeEditorInstructorIntegration Repository Navigation should navigate to assignment participation repository from auxiliary repository" name="CodeEditorInstructorIntegration Repository Navigation should navigate to assignment participation repository from auxiliary repository" time="0.192">
    </testcase>
    <testcase classname="CodeEditorInstructorIntegration Repository Navigation should navigate to assignment participation repository from test repository" name="CodeEditorInstructorIntegration Repository Navigation should navigate to assignment participation repository from test repository" time="0.227">
    </testcase>
    <testcase classname="CodeEditorInstructorIntegration Repository Navigation should navigate to test repository from auxiliary repository" name="CodeEditorInstructorIntegration Repository Navigation should navigate to test repository from auxiliary repository" time="0.316">
    </testcase>
    <testcase classname="CodeEditorInstructorIntegration Repository Navigation should navigate to test repository from test repository" name="CodeEditorInstructorIntegration Repository Navigation should navigate to test repository from test repository" time="0.227">
    </testcase>
    <testcase classname="CodeEditorInstructorIntegration Repository Navigation should navigate to auxiliary repository with provided repositoryId" name="CodeEditorInstructorIntegration Repository Navigation should navigate to auxiliary repository with provided repositoryId" time="0.239">
    </testcase>
    <testcase classname="CodeEditorInstructorIntegration Repository Navigation should navigate to auxiliary repository from test repository" name="CodeEditorInstructorIntegration Repository Navigation should navigate to auxiliary repository from test repository" time="0.181">
    </testcase>
  </testsuite>
  <testsuite name="ModelingAssessmentEditorComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:08" time="8.186" tests="23">
    <testcase classname="ModelingAssessmentEditorComponent ngOnInit tests ngOnInit" name="ModelingAssessmentEditorComponent ngOnInit tests ngOnInit" time="0.832">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent ngOnInit tests wrongly call ngOnInit and throw exception" name="ModelingAssessmentEditorComponent ngOnInit tests wrongly call ngOnInit and throw exception" time="0.107">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent ngOnInit tests call ngOnInit with submissionId set to new" name="ModelingAssessmentEditorComponent ngOnInit tests call ngOnInit with submissionId set to new" time="0.107">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent should test the overwrite access rights and return true tests the method with instructor rights" name="ModelingAssessmentEditorComponent should test the overwrite access rights and return true tests the method with instructor rights" time="0.084">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent should test the overwrite access rights and return true tests the method with tutor rights and as assessor" name="ModelingAssessmentEditorComponent should test the overwrite access rights and return true tests the method with tutor rights and as assessor" time="0.114">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent save and submit should save assessment" name="ModelingAssessmentEditorComponent save and submit should save assessment" time="0.097">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent save and submit should try to submit assessment" name="ModelingAssessmentEditorComponent save and submit should try to submit assessment" time="0.139">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent save and submit should allow overriding directly after submitting" name="ModelingAssessmentEditorComponent save and submit should allow overriding directly after submitting" time="0.113">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent save and submit should not invalidate assessment after saving" name="ModelingAssessmentEditorComponent save and submit should not invalidate assessment after saving" time="0.089">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent save and submit should submit the assessment" name="ModelingAssessmentEditorComponent save and submit should submit the assessment" time="0.068">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent should update assessment after complaint, errorKeyFromServer=undefined" name="ModelingAssessmentEditorComponent should update assessment after complaint, errorKeyFromServer=undefined" time="0.093">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent should update assessment after complaint, errorKeyFromServer=genericErrorKey" name="ModelingAssessmentEditorComponent should update assessment after complaint, errorKeyFromServer=genericErrorKey" time="0.125">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent should update assessment after complaint, errorKeyFromServer=complaintLock" name="ModelingAssessmentEditorComponent should update assessment after complaint, errorKeyFromServer=complaintLock" time="0.117">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent should cancel the current assessment" name="ModelingAssessmentEditorComponent should cancel the current assessment" time="0.101">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent should handle changed feedback" name="ModelingAssessmentEditorComponent should handle changed feedback" time="0.149">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent test assessNext should navigate to the next submission" name="ModelingAssessmentEditorComponent test assessNext should navigate to the next submission" time="0.255">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent test assessNext no submission left" name="ModelingAssessmentEditorComponent test assessNext no submission left" time="0.126">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent test assessNext throw error while assessNext" name="ModelingAssessmentEditorComponent test assessNext throw error while assessNext" time="0.126">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent should invoke import example submission" name="ModelingAssessmentEditorComponent should invoke import example submission" time="0.09">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent should display error when complaint resolved but assessment invalid" name="ModelingAssessmentEditorComponent should display error when complaint resolved but assessment invalid" time="0.09">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent should report feedback suggestions not enabled" name="ModelingAssessmentEditorComponent should report feedback suggestions not enabled" time="0.083">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent should report feedback suggestions enabled" name="ModelingAssessmentEditorComponent should report feedback suggestions enabled" time="0.074">
    </testcase>
    <testcase classname="ModelingAssessmentEditorComponent should return unreferenced feedback only" name="ModelingAssessmentEditorComponent should return unreferenced feedback only" time="0.091">
    </testcase>
  </testsuite>
  <testsuite name="Notification Sidebar Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:13" time="4.815" tests="33">
    <testcase classname="Notification Sidebar Component Initialization should set the correct last notification read" name="Notification Sidebar Component Initialization should set the correct last notification read" time="0.212">
    </testcase>
    <testcase classname="Notification Sidebar Component Initialization should set the correct last notification read" name="Notification Sidebar Component Initialization should set the correct last notification read" time="0.114">
    </testcase>
    <testcase classname="Notification Sidebar Component Initialization should set the correct last notification read" name="Notification Sidebar Component Initialization should set the correct last notification read" time="0.076">
    </testcase>
    <testcase classname="Notification Sidebar Component Initialization should set the correct last notification read" name="Notification Sidebar Component Initialization should set the correct last notification read" time="0.064">
    </testcase>
    <testcase classname="Notification Sidebar Component Initialization should clear the session storage last notification read date if the user logs out" name="Notification Sidebar Component Initialization should clear the session storage last notification read date if the user logs out" time="0.058">
    </testcase>
    <testcase classname="Notification Sidebar Component Initialization should subscribe to notification updates for user" name="Notification Sidebar Component Initialization should subscribe to notification updates for user" time="0.084">
    </testcase>
    <testcase classname="Notification Sidebar Component Initialization should exist with the id &quot;notification-sidebar&quot;" name="Notification Sidebar Component Initialization should exist with the id &quot;notification-sidebar&quot;" time="0.092">
    </testcase>
    <testcase classname="Notification Sidebar Component Notification Translations should get the notification title translation" name="Notification Sidebar Component Notification Translations should get the notification title translation" time="0.085">
    </testcase>
    <testcase classname="Notification Sidebar Component Notification Translations should be undefined if no title" name="Notification Sidebar Component Notification Translations should be undefined if no title" time="0.082">
    </testcase>
    <testcase classname="Notification Sidebar Component Notification Translations should get the notification text translation" name="Notification Sidebar Component Notification Translations should get the notification text translation" time="0.147">
    </testcase>
    <testcase classname="Notification Sidebar Component Notification Translations should be undefined if no text" name="Notification Sidebar Component Notification Translations should be undefined if no text" time="0.125">
    </testcase>
    <testcase classname="Notification Sidebar Component Notification Texts should display the correct text for a notification with text" name="Notification Sidebar Component Notification Texts should display the correct text for a notification with text" time="0.06">
    </testcase>
    <testcase classname="Notification Sidebar Component Notification Texts should display No text found for a notification without text" name="Notification Sidebar Component Notification Texts should display No text found for a notification without text" time="0.125">
    </testcase>
    <testcase classname="Notification Sidebar Component Sidebar visibility should open sidebar when user clicks on notification bell" name="Notification Sidebar Component Sidebar visibility should open sidebar when user clicks on notification bell" time="0.081">
    </testcase>
    <testcase classname="Notification Sidebar Component Sidebar visibility should close sidebar when user clicks on notification overlay" name="Notification Sidebar Component Sidebar visibility should close sidebar when user clicks on notification overlay" time="0.062">
    </testcase>
    <testcase classname="Notification Sidebar Component Sidebar visibility should close sidebar when user clicks on close button" name="Notification Sidebar Component Sidebar visibility should close sidebar when user clicks on close button" time="0.065">
    </testcase>
    <testcase classname="Notification Sidebar Component Sidebar visibility should close sidebar when user clicks on a notification" name="Notification Sidebar Component Sidebar visibility should close sidebar when user clicks on a notification" time="0.115">
    </testcase>
    <testcase classname="Notification Sidebar Component Notification click should interpret notification target when user clicks notification" name="Notification Sidebar Component Notification click should interpret notification target when user clicks notification" time="0.077">
    </testcase>
    <testcase classname="Notification Sidebar Component Last notification read should update users last notification read when user opens sidebar" name="Notification Sidebar Component Last notification read should update users last notification read when user opens sidebar" time="0.107">
    </testcase>
    <testcase classname="Notification Sidebar Component Last notification read should update components last notification read two seconds after the user opened the sidebar" name="Notification Sidebar Component Last notification read should update components last notification read two seconds after the user opened the sidebar" time="0.074">
    </testcase>
    <testcase classname="Notification Sidebar Component Load notifications should not add already existing notifications" name="Notification Sidebar Component Load notifications should not add already existing notifications" time="0.114">
    </testcase>
    <testcase classname="Notification Sidebar Component Load notifications should update sorted notifications array after new notifications were loaded" name="Notification Sidebar Component Load notifications should update sorted notifications array after new notifications were loaded" time="0.079">
    </testcase>
    <testcase classname="Notification Sidebar Component Load notifications should set total notification count to received X-Total-Count header" name="Notification Sidebar Component Load notifications should set total notification count to received X-Total-Count header" time="0.098">
    </testcase>
    <testcase classname="Notification Sidebar Component Load notifications should not add already existing notification received via websocket" name="Notification Sidebar Component Load notifications should not add already existing notification received via websocket" time="0.123">
    </testcase>
    <testcase classname="Notification Sidebar Component Load notifications should load more notifications only if not all are already loaded" name="Notification Sidebar Component Load notifications should load more notifications only if not all are already loaded" time="0.047">
    </testcase>
    <testcase classname="Notification Sidebar Component Recent notifications should evaluate recent notifications correctly" name="Notification Sidebar Component Recent notifications should evaluate recent notifications correctly" time="0.073">
    </testcase>
    <testcase classname="Notification Sidebar Component Recent notifications should show plus sign in recent notification count badge if all loaded notifications are recent notifications" name="Notification Sidebar Component Recent notifications should show plus sign in recent notification count badge if all loaded notifications are recent notifications" time="0.076">
    </testcase>
    <testcase classname="Notification Sidebar Component UI should show no notifications message" name="Notification Sidebar Component UI should show no notifications message" time="0.046">
    </testcase>
    <testcase classname="Notification Sidebar Component UI should show loading spinner when more notifications are loaded" name="Notification Sidebar Component UI should show loading spinner when more notifications are loaded" time="0.069">
    </testcase>
    <testcase classname="Notification Sidebar Component UI should show all notifications loaded message when all notifications are loaded" name="Notification Sidebar Component UI should show all notifications loaded message when all notifications are loaded" time="0.075">
    </testcase>
    <testcase classname="Notification Sidebar Component UI should show error message when loading of notifications failed" name="Notification Sidebar Component UI should show error message when loading of notifications failed" time="0.059">
    </testcase>
    <testcase classname="Notification Sidebar Component UI should toggle which notifications are displayed (hide until property) when user clicks on archive button" name="Notification Sidebar Component UI should toggle which notifications are displayed (hide until property) when user clicks on archive button" time="0.088">
    </testcase>
    <testcase classname="Notification Sidebar Component Reset Sidebar should listen and catch notification settings change and reset side bar" name="Notification Sidebar Component Reset Sidebar should listen and catch notification settings change and reset side bar" time="0.064">
    </testcase>
  </testsuite>
  <testsuite name="Exam Management Service Tests" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:18" time="2.482" tests="36">
    <testcase classname="Exam Management Service Tests should create an exam" name="Exam Management Service Tests should create an exam" time="0.024">
    </testcase>
    <testcase classname="Exam Management Service Tests should update an exam" name="Exam Management Service Tests should update an exam" time="0.039">
    </testcase>
    <testcase classname="Exam Management Service Tests should import an exam" name="Exam Management Service Tests should import an exam" time="0.006">
    </testcase>
    <testcase classname="Exam Management Service Tests should import an exercise group" name="Exam Management Service Tests should import an exercise group" time="0.006">
    </testcase>
    <testcase classname="Exam Management Service Tests should find an exam with exercises and without course id" name="Exam Management Service Tests should find an exam with exercises and without course id" time="0.004">
    </testcase>
    <testcase classname="Exam Management Service Tests should find an exam with no students and no exercise groups" name="Exam Management Service Tests should find an exam with no students and no exercise groups" time="0.009">
    </testcase>
    <testcase classname="Exam Management Service Tests should get exam scores" name="Exam Management Service Tests should get exam scores" time="0.004">
    </testcase>
    <testcase classname="Exam Management Service Tests should get stats for exam assessment dashboard" name="Exam Management Service Tests should get stats for exam assessment dashboard" time="0.004">
    </testcase>
    <testcase classname="Exam Management Service Tests should find all exams for course" name="Exam Management Service Tests should find all exams for course" time="0.01">
    </testcase>
    <testcase classname="Exam Management Service Tests find all exams for which the instructors have access" name="Exam Management Service Tests find all exams for which the instructors have access" time="0.006">
    </testcase>
    <testcase classname="Exam Management Service Tests should find all current and upcoming exams" name="Exam Management Service Tests should find all current and upcoming exams" time="0.004">
    </testcase>
    <testcase classname="Exam Management Service Tests should getExamWithInterestingExercisesForAssessmentDashboard with isTestRun=false" name="Exam Management Service Tests should getExamWithInterestingExercisesForAssessmentDashboard with isTestRun=false" time="0.01">
    </testcase>
    <testcase classname="Exam Management Service Tests should getExamWithInterestingExercisesForAssessmentDashboard with isTestRun=true" name="Exam Management Service Tests should getExamWithInterestingExercisesForAssessmentDashboard with isTestRun=true" time="0.014">
    </testcase>
    <testcase classname="Exam Management Service Tests should get latest individual end date of exam" name="Exam Management Service Tests should get latest individual end date of exam" time="0.01">
    </testcase>
    <testcase classname="Exam Management Service Tests should delete an exam" name="Exam Management Service Tests should delete an exam" time="0.005">
    </testcase>
    <testcase classname="Exam Management Service Tests should add student to exam" name="Exam Management Service Tests should add student to exam" time="0.005">
    </testcase>
    <testcase classname="Exam Management Service Tests should add students to exam" name="Exam Management Service Tests should add students to exam" time="0.007">
    </testcase>
    <testcase classname="Exam Management Service Tests should remove student from exam with no participations and submission" name="Exam Management Service Tests should remove student from exam with no participations and submission" time="0.007">
    </testcase>
    <testcase classname="Exam Management Service Tests should remove student from exam with participations and submission" name="Exam Management Service Tests should remove student from exam with participations and submission" time="0.018">
    </testcase>
    <testcase classname="Exam Management Service Tests remove all students from an exam" name="Exam Management Service Tests remove all students from an exam" time="0.004">
    </testcase>
    <testcase classname="Exam Management Service Tests should generate student exams" name="Exam Management Service Tests should generate student exams" time="0.004">
    </testcase>
    <testcase classname="Exam Management Service Tests should create test run" name="Exam Management Service Tests should create test run" time="0.003">
    </testcase>
    <testcase classname="Exam Management Service Tests should delete test run" name="Exam Management Service Tests should delete test run" time="0.004">
    </testcase>
    <testcase classname="Exam Management Service Tests should find all test runs for exam" name="Exam Management Service Tests should find all test runs for exam" time="0.003">
    </testcase>
    <testcase classname="Exam Management Service Tests should generate missing student for exam" name="Exam Management Service Tests should generate missing student for exam" time="0.004">
    </testcase>
    <testcase classname="Exam Management Service Tests should start exercises" name="Exam Management Service Tests should start exercises" time="0.003">
    </testcase>
    <testcase classname="Exam Management Service Tests should evaluate quiz exercises" name="Exam Management Service Tests should evaluate quiz exercises" time="0.004">
    </testcase>
    <testcase classname="Exam Management Service Tests should assess unsubmitted exam modelling and text participations" name="Exam Management Service Tests should assess unsubmitted exam modelling and text participations" time="0.003">
    </testcase>
    <testcase classname="Exam Management Service Tests should update order" name="Exam Management Service Tests should update order" time="0.004">
    </testcase>
    <testcase classname="Exam Management Service Tests should enroll all registered students to exam" name="Exam Management Service Tests should enroll all registered students to exam" time="0.003">
    </testcase>
    <testcase classname="Exam Management Service Tests should find all locked submissions from exam" name="Exam Management Service Tests should find all locked submissions from exam" time="0.004">
    </testcase>
    <testcase classname="Exam Management Service Tests should download the exam from archive" name="Exam Management Service Tests should download the exam from archive" time="0.003">
    </testcase>
    <testcase classname="Exam Management Service Tests should archive the exam" name="Exam Management Service Tests should archive the exam" time="0.003">
    </testcase>
    <testcase classname="Exam Management Service Tests should reset an exam" name="Exam Management Service Tests should reset an exam" time="0.005">
    </testcase>
    <testcase classname="Exam Management Service Tests should make GET request to retrieve exam exercises that potentially have plagiarism cases" name="Exam Management Service Tests should make GET request to retrieve exam exercises that potentially have plagiarism cases" time="0.002">
    </testcase>
    <testcase classname="Exam Management Service Tests should verify user attendance" name="Exam Management Service Tests should verify user attendance" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseConfigureGradingComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:09" time="12.46" tests="14">
    <testcase classname="ProgrammingExerciseConfigureGradingComponent should show the updatedTests badge when the exercise is released and has student results" name="ProgrammingExerciseConfigureGradingComponent should show the updatedTests badge when the exercise is released and has student results" time="1.121">
    </testcase>
    <testcase classname="ProgrammingExerciseConfigureGradingComponent should not show the updatedTests badge when the exercise is released and has no student results" name="ProgrammingExerciseConfigureGradingComponent should not show the updatedTests badge when the exercise is released and has no student results" time="0.257">
    </testcase>
    <testcase classname="ProgrammingExerciseConfigureGradingComponent should not show the updatedTests badge when the exercise is not released and has student results (edge case)" name="ProgrammingExerciseConfigureGradingComponent should not show the updatedTests badge when the exercise is not released and has student results (edge case)" time="0.227">
    </testcase>
    <testcase classname="ProgrammingExerciseConfigureGradingComponent should show that there are updated test cases if the testCasesChanged flat is set" name="ProgrammingExerciseConfigureGradingComponent should show that there are updated test cases if the testCasesChanged flat is set" time="0.277">
    </testcase>
    <testcase classname="ProgrammingExerciseConfigureGradingComponent should reset all categories when the reset button is clicked" name="ProgrammingExerciseConfigureGradingComponent should reset all categories when the reset button is clicked" time="0.601">
    </testcase>
    <testcase classname="ProgrammingExerciseConfigureGradingComponent should import a configuration from a different exercise" name="ProgrammingExerciseConfigureGradingComponent should import a configuration from a different exercise" time="0.476">
    </testcase>
    <testcase classname="ProgrammingExerciseConfigureGradingComponent should import categories and update the component" name="ProgrammingExerciseConfigureGradingComponent should import categories and update the component" time="0.281">
    </testcase>
    <testcase classname="ProgrammingExerciseConfigureGradingComponent should update sca category when an input field is updated" name="ProgrammingExerciseConfigureGradingComponent should update sca category when an input field is updated" time="0.557">
    </testcase>
    <testcase classname="ProgrammingExerciseConfigureGradingComponent should load the grading statistics correctly" name="ProgrammingExerciseConfigureGradingComponent should load the grading statistics correctly" time="0.533">
    </testcase>
    <testcase classname="ProgrammingExerciseConfigureGradingComponent should sort code-analysis table" name="ProgrammingExerciseConfigureGradingComponent should sort code-analysis table" time="0.676">
    </testcase>
    <testcase classname="ProgrammingExerciseConfigureGradingComponent should not require confirmation if there are no unsaved changes" name="ProgrammingExerciseConfigureGradingComponent should not require confirmation if there are no unsaved changes" time="0.142">
    </testcase>
    <testcase classname="ProgrammingExerciseConfigureGradingComponent should require confirmation if there are unsaved changes" name="ProgrammingExerciseConfigureGradingComponent should require confirmation if there are unsaved changes" time="0.163">
    </testcase>
    <testcase classname="ProgrammingExerciseConfigureGradingComponent test chart interaction should filter sca table correctly" name="ProgrammingExerciseConfigureGradingComponent test chart interaction should filter sca table correctly" time="0.311">
    </testcase>
    <testcase classname="ProgrammingExerciseConfigureGradingComponent test chart interaction should update category accordingly if modified while chart filtering" name="ProgrammingExerciseConfigureGradingComponent test chart interaction should update category accordingly if modified while chart filtering" time="0.421">
    </testcase>
  </testsuite>
  <testsuite name="TextSubmissionAssessmentComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:12" time="11.015" tests="37">
    <testcase classname="TextSubmissionAssessmentComponent should create and set parameters correctly" name="TextSubmissionAssessmentComponent should create and set parameters correctly" time="0.937">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should show jhi-text-assessment-area" name="TextSubmissionAssessmentComponent should show jhi-text-assessment-area" time="0.135">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should use jhi-assessment-layout" name="TextSubmissionAssessmentComponent should use jhi-assessment-layout" time="0.105">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should update score" name="TextSubmissionAssessmentComponent should update score" time="0.109">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should save the assessment with correct parameters" name="TextSubmissionAssessmentComponent should save the assessment with correct parameters" time="0.193">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should display error when submitting but assessment invalid" name="TextSubmissionAssessmentComponent should display error when submitting but assessment invalid" time="0.204">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should display error when complaint resolved but assessment invalid" name="TextSubmissionAssessmentComponent should display error when complaint resolved but assessment invalid" time="0.235">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should send update when complaint resolved and assessments are valid, serverReturnsError=true" name="TextSubmissionAssessmentComponent should send update when complaint resolved and assessments are valid, serverReturnsError=true" time="0.203">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should send update when complaint resolved and assessments are valid, serverReturnsError=false" name="TextSubmissionAssessmentComponent should send update when complaint resolved and assessments are valid, serverReturnsError=false" time="0.198">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should submit the assessment with correct parameters" name="TextSubmissionAssessmentComponent should submit the assessment with correct parameters" time="0.133">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should not submit if result was not saved" name="TextSubmissionAssessmentComponent should not submit if result was not saved" time="0.119">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should handle error if saving fails" name="TextSubmissionAssessmentComponent should handle error if saving fails" time="0.16">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should invoke import example submission" name="TextSubmissionAssessmentComponent should invoke import example submission" time="0.103">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should cancel assessment" name="TextSubmissionAssessmentComponent should cancel assessment" time="0.107">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should go to next submission" name="TextSubmissionAssessmentComponent should go to next submission" time="0.084">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should always let instructors override" name="TextSubmissionAssessmentComponent should always let instructors override" time="0.1">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should not allow tutors to override after the assessment due date" name="TextSubmissionAssessmentComponent should not allow tutors to override after the assessment due date" time="0.111">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should recalculate text block refs correctly" name="TextSubmissionAssessmentComponent should recalculate text block refs correctly" time="0.093">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should handle overlapping manual text blocks correctly" name="TextSubmissionAssessmentComponent should handle overlapping manual text blocks correctly" time="0.12">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should load feedback suggestions" name="TextSubmissionAssessmentComponent should load feedback suggestions" time="0.073">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" name="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" time="0.074">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" name="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" time="0.099">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" name="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" time="0.064">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" name="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" time="0.074">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" name="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" time="0.066">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" name="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" time="0.069">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" name="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" time="0.076">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" name="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" time="0.116">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" name="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" time="0.135">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" name="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" time="0.149">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" name="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" time="0.17">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" name="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" time="0.14">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" name="TextSubmissionAssessmentComponent should never create overlapping blocks even with overlapping feedback suggestions" time="0.176">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should not load feedback suggestions if there already are assessments" name="TextSubmissionAssessmentComponent should not load feedback suggestions if there already are assessments" time="0.097">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should validate assessments on component init" name="TextSubmissionAssessmentComponent should validate assessments on component init" time="0.067">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should allow overriding directly after submitting" name="TextSubmissionAssessmentComponent should allow overriding directly after submitting" time="0.075">
    </testcase>
    <testcase classname="TextSubmissionAssessmentComponent should not invalidate assessment after saving" name="TextSubmissionAssessmentComponent should not invalidate assessment after saving" time="0.09">
    </testcase>
  </testsuite>
  <testsuite name="CourseOverviewService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:21" time="2.295" tests="76">
    <testcase classname="CourseOverviewService should return true if sidebar collapse state is stored as true in localStorage" name="CourseOverviewService should return true if sidebar collapse state is stored as true in localStorage" time="0.017">
    </testcase>
    <testcase classname="CourseOverviewService should return false if there is no stored sidebar collapse state in localStorage" name="CourseOverviewService should return false if there is no stored sidebar collapse state in localStorage" time="0.006">
    </testcase>
    <testcase classname="CourseOverviewService should sort lectures by startDate and by title if startDates are equal or undefined" name="CourseOverviewService should sort lectures by startDate and by title if startDates are equal or undefined" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should sort exercises by dueDate and by title if dueDate are equal or undefined" name="CourseOverviewService should sort exercises by dueDate and by title if dueDate are equal or undefined" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group lectures by start date and map to sidebar card elements" name="CourseOverviewService should group lectures by start date and map to sidebar card elements" time="0.006">
    </testcase>
    <testcase classname="CourseOverviewService should return undefined if lectures array is undefined" name="CourseOverviewService should return undefined if lectures array is undefined" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should return undefined if lectures array is empty" name="CourseOverviewService should return undefined if lectures array is empty" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should handle all past lectures" name="CourseOverviewService should handle all past lectures" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should correctly identify the lecture furthest in the future" name="CourseOverviewService should correctly identify the lecture furthest in the future" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises by start date and map to sidebar card elements" name="CourseOverviewService should group exercises by start date and map to sidebar card elements" time="0.007">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: noDate) should group them according to start or release date (release: undefined, start: undefined, end: undefined)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: noDate) should group them according to start or release date (release: undefined, start: undefined, end: undefined)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: noDate) should group them according to start or release date (release: undefined, start: undefined, end: undefined)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: noDate) should group them according to start or release date (release: undefined, start: undefined, end: undefined)" time="0.019">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: noDate) should group them according to start or release date (release: undefined, start: undefined, end: undefined)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: noDate) should group them according to start or release date (release: undefined, start: undefined, end: undefined)" time="0.005">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: noDate) should group them according to start or release date (release: undefined, start: undefined, end: undefined)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: noDate) should group them according to start or release date (release: undefined, start: undefined, end: undefined)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: past) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-03-31T10:14:23.741Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: past) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-03-31T10:14:23.741Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: past) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-03-31T10:14:23.741Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: past) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-03-31T10:14:23.741Z&quot;)" time="0.005">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: past) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-03-31T10:14:23.741Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: past) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-03-31T10:14:23.741Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: past) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-03-31T10:14:23.741Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: past) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-03-31T10:14:23.741Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: dueSoon) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-04-02T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: dueSoon) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-04-02T11:14:23.747Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: dueSoon) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-04-02T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: dueSoon) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-04-02T11:14:23.747Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: dueSoon) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-04-02T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: dueSoon) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-04-02T11:14:23.747Z&quot;)" time="0.003">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: dueSoon) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-04-02T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: dueSoon) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-04-02T11:14:23.747Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: current) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-04-04T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: current) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-04-04T11:14:23.747Z&quot;)" time="0.014">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: current) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-04-04T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: current) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-04-04T11:14:23.747Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: current) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-04-04T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: current) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-04-04T11:14:23.747Z&quot;)" time="0.007">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: current) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-04-04T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: current) should group them according to start or release date (release: undefined, start: undefined, end: &quot;2025-04-04T11:14:23.747Z&quot;)" time="0.005">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: noDate) should group them according to start or release date (release: undefined, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: undefined)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: noDate) should group them according to start or release date (release: undefined, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: undefined)" time="0.003">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: noDate) should group them according to start or release date (release: &quot;2025-03-24T11:14:23.747Z&quot;, start: undefined, end: undefined)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: noDate) should group them according to start or release date (release: &quot;2025-03-24T11:14:23.747Z&quot;, start: undefined, end: undefined)" time="0.003">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: noDate) should group them according to start or release date (release: &quot;2025-03-24T11:14:23.747Z&quot;, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: undefined)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: noDate) should group them according to start or release date (release: &quot;2025-03-24T11:14:23.747Z&quot;, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: undefined)" time="0.005">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: noDate) should group them according to start or release date (release: &quot;2025-03-24T10:14:23.747Z&quot;, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: undefined)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: noDate) should group them according to start or release date (release: &quot;2025-03-24T10:14:23.747Z&quot;, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: undefined)" time="0.007">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: past) should group them according to start or release date (release: undefined, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-03-31T10:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: past) should group them according to start or release date (release: undefined, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-03-31T10:14:23.747Z&quot;)" time="0.013">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: past) should group them according to start or release date (release: &quot;2025-03-24T11:14:23.747Z&quot;, start: undefined, end: &quot;2025-03-31T10:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: past) should group them according to start or release date (release: &quot;2025-03-24T11:14:23.747Z&quot;, start: undefined, end: &quot;2025-03-31T10:14:23.747Z&quot;)" time="0.008">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: past) should group them according to start or release date (release: &quot;2025-03-24T11:14:23.747Z&quot;, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-03-31T10:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: past) should group them according to start or release date (release: &quot;2025-03-24T11:14:23.747Z&quot;, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-03-31T10:14:23.747Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: past) should group them according to start or release date (release: &quot;2025-03-24T10:14:23.747Z&quot;, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-03-31T10:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: past) should group them according to start or release date (release: &quot;2025-03-24T10:14:23.747Z&quot;, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-03-31T10:14:23.747Z&quot;)" time="0.011">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: dueSoon) should group them according to start or release date (release: undefined, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-04-02T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: dueSoon) should group them according to start or release date (release: undefined, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-04-02T11:14:23.747Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: dueSoon) should group them according to start or release date (release: &quot;2025-03-24T11:14:23.747Z&quot;, start: undefined, end: &quot;2025-04-02T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: dueSoon) should group them according to start or release date (release: &quot;2025-03-24T11:14:23.747Z&quot;, start: undefined, end: &quot;2025-04-02T11:14:23.747Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: dueSoon) should group them according to start or release date (release: &quot;2025-03-24T11:14:23.747Z&quot;, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-04-02T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: dueSoon) should group them according to start or release date (release: &quot;2025-03-24T11:14:23.747Z&quot;, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-04-02T11:14:23.747Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: dueSoon) should group them according to start or release date (release: &quot;2025-03-24T10:14:23.747Z&quot;, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-04-02T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: dueSoon) should group them according to start or release date (release: &quot;2025-03-24T10:14:23.747Z&quot;, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-04-02T11:14:23.747Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: current) should group them according to start or release date (release: undefined, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-04-04T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: current) should group them according to start or release date (release: undefined, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-04-04T11:14:23.747Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: current) should group them according to start or release date (release: &quot;2025-03-24T11:14:23.747Z&quot;, start: undefined, end: &quot;2025-04-04T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: current) should group them according to start or release date (release: &quot;2025-03-24T11:14:23.747Z&quot;, start: undefined, end: &quot;2025-04-04T11:14:23.747Z&quot;)" time="0.006">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: current) should group them according to start or release date (release: &quot;2025-03-24T11:14:23.747Z&quot;, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-04-04T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: current) should group them according to start or release date (release: &quot;2025-03-24T11:14:23.747Z&quot;, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-04-04T11:14:23.747Z&quot;)" time="0.006">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: current) should group them according to start or release date (release: &quot;2025-03-24T10:14:23.747Z&quot;, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-04-04T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: current) should group them according to start or release date (release: &quot;2025-03-24T10:14:23.747Z&quot;, start: &quot;2025-03-24T11:14:23.747Z&quot;, end: &quot;2025-04-04T11:14:23.747Z&quot;)" time="0.007">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: undefined, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: undefined)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: undefined, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: undefined)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T11:19:23.747Z&quot;, start: undefined, end: undefined)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T11:19:23.747Z&quot;, start: undefined, end: undefined)" time="0.003">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T11:19:23.747Z&quot;, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: undefined)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T11:19:23.747Z&quot;, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: undefined)" time="0.022">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T10:19:23.747Z&quot;, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: undefined)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T10:19:23.747Z&quot;, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: undefined)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: undefined, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: &quot;2025-03-31T10:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: undefined, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: &quot;2025-03-31T10:14:23.747Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T11:19:23.747Z&quot;, start: undefined, end: &quot;2025-03-31T10:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T11:19:23.747Z&quot;, start: undefined, end: &quot;2025-03-31T10:14:23.747Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T11:19:23.747Z&quot;, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: &quot;2025-03-31T10:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T11:19:23.747Z&quot;, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: &quot;2025-03-31T10:14:23.747Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T10:19:23.747Z&quot;, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: &quot;2025-03-31T10:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T10:19:23.747Z&quot;, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: &quot;2025-03-31T10:14:23.747Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: undefined, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: &quot;2025-04-02T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: undefined, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: &quot;2025-04-02T11:14:23.747Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T11:19:23.747Z&quot;, start: undefined, end: &quot;2025-04-02T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T11:19:23.747Z&quot;, start: undefined, end: &quot;2025-04-02T11:14:23.747Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T11:19:23.747Z&quot;, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: &quot;2025-04-02T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T11:19:23.747Z&quot;, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: &quot;2025-04-02T11:14:23.747Z&quot;)" time="0.008">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T10:19:23.747Z&quot;, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: &quot;2025-04-02T11:14:23.747Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T10:19:23.747Z&quot;, start: &quot;2025-03-31T11:19:23.747Z&quot;, end: &quot;2025-04-02T11:14:23.747Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: undefined, start: &quot;2025-03-31T11:19:23.748Z&quot;, end: &quot;2025-04-04T11:14:23.748Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: undefined, start: &quot;2025-03-31T11:19:23.748Z&quot;, end: &quot;2025-04-04T11:14:23.748Z&quot;)" time="0.003">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T11:19:23.748Z&quot;, start: undefined, end: &quot;2025-04-04T11:14:23.748Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T11:19:23.748Z&quot;, start: undefined, end: &quot;2025-04-04T11:14:23.748Z&quot;)" time="0.011">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T11:19:23.748Z&quot;, start: &quot;2025-03-31T11:19:23.748Z&quot;, end: &quot;2025-04-04T11:14:23.748Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T11:19:23.748Z&quot;, start: &quot;2025-03-31T11:19:23.748Z&quot;, end: &quot;2025-04-04T11:14:23.748Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T10:19:23.748Z&quot;, start: &quot;2025-03-31T11:19:23.748Z&quot;, end: &quot;2025-04-04T11:14:23.748Z&quot;)" name="CourseOverviewService should group exercises into the correct groups based on start and end dates (expected group: future) should group them according to start or release date (release: &quot;2025-03-31T10:19:23.748Z&quot;, start: &quot;2025-03-31T11:19:23.748Z&quot;, end: &quot;2025-04-04T11:14:23.748Z&quot;)" time="0.004">
    </testcase>
    <testcase classname="CourseOverviewService should group an exercise with no release date or due date, but start date in future as future" name="CourseOverviewService should group an exercise with no release date or due date, but start date in future as future" time="0.003">
    </testcase>
    <testcase classname="CourseOverviewService should group all exercises as past when all exercises have past due dates" name="CourseOverviewService should group all exercises as past when all exercises have past due dates" time="0.005">
    </testcase>
    <testcase classname="CourseOverviewService should return undefined if exercises array is undefined" name="CourseOverviewService should return undefined if exercises array is undefined" time="0.003">
    </testcase>
    <testcase classname="CourseOverviewService should return undefined if exercises array is empty" name="CourseOverviewService should return undefined if exercises array is empty" time="0.006">
    </testcase>
    <testcase classname="CourseOverviewService should handle all past exercises" name="CourseOverviewService should handle all past exercises" time="0.003">
    </testcase>
    <testcase classname="CourseOverviewService should handle all past exams" name="CourseOverviewService should handle all past exams" time="0.003">
    </testcase>
    <testcase classname="CourseOverviewService should correctly identify the exercises furthest in the future" name="CourseOverviewService should correctly identify the exercises furthest in the future" time="0.003">
    </testcase>
    <testcase classname="CourseOverviewService should correctly identify the exams furthest in the future" name="CourseOverviewService should correctly identify the exams furthest in the future" time="0.006">
    </testcase>
    <testcase classname="CourseOverviewService should return undefined if exams array is undefined" name="CourseOverviewService should return undefined if exams array is undefined" time="0.006">
    </testcase>
    <testcase classname="CourseOverviewService should return undefined if exams array is empty" name="CourseOverviewService should return undefined if exams array is empty" time="0.005">
    </testcase>
    <testcase classname="CourseOverviewService should group conversations by conversation types and map to sidebar card elements" name="CourseOverviewService should group conversations by conversation types and map to sidebar card elements" time="0.013">
    </testcase>
    <testcase classname="CourseOverviewService should group conversations together when having the same type" name="CourseOverviewService should group conversations together when having the same type" time="0.006">
    </testcase>
    <testcase classname="CourseOverviewService should group favorite and archived conversations correctly" name="CourseOverviewService should group favorite and archived conversations correctly" time="0.009">
    </testcase>
    <testcase classname="CourseOverviewService should not remove favorite conversations from their original section but keep them at the top of the related section" name="CourseOverviewService should not remove favorite conversations from their original section but keep them at the top of the related section" time="0.011">
    </testcase>
    <testcase classname="CourseOverviewService should correctly set isCurrent based on the date range in mapConversationToSidebarCardElement" name="CourseOverviewService should correctly set isCurrent based on the date range in mapConversationToSidebarCardElement" time="0.006">
    </testcase>
    <testcase classname="CourseOverviewService should return faBullhorn for announcement channels" name="CourseOverviewService should return faBullhorn for announcement channels" time="0.003">
    </testcase>
    <testcase classname="CourseOverviewService should return faHashtag for public channels" name="CourseOverviewService should return faHashtag for public channels" time="0.002">
    </testcase>
    <testcase classname="CourseOverviewService should return faLock for private channels" name="CourseOverviewService should return faLock for private channels" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="IrisBaseChatbotComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:17" time="8.32" tests="35">
    <testcase classname="IrisBaseChatbotComponent should create" name="IrisBaseChatbotComponent should create" time="0.703">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should set userAccepted to false if user has not accepted the external LLM usage policy" name="IrisBaseChatbotComponent should set userAccepted to false if user has not accepted the external LLM usage policy" time="0.202">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should set userAccepted to true if user has accepted the external LLM usage policy" name="IrisBaseChatbotComponent should set userAccepted to true if user has accepted the external LLM usage policy" time="0.152">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should call API when user accept the policy" name="IrisBaseChatbotComponent should call API when user accept the policy" time="0.171">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should add user message on send" name="IrisBaseChatbotComponent should add user message on send" time="0.301">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should resend message" name="IrisBaseChatbotComponent should resend message" time="0.305">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should rate message" name="IrisBaseChatbotComponent should rate message" time="0.297">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should clear newMessage on send" name="IrisBaseChatbotComponent should clear newMessage on send" time="0.275">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should not send a message if newMessageTextContent is empty" name="IrisBaseChatbotComponent should not send a message if newMessageTextContent is empty" time="0.135">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should set the appropriate message styles based on the sender" name="IrisBaseChatbotComponent should set the appropriate message styles based on the sender" time="0.183">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should not scroll to bottom when there is no new unread messages" name="IrisBaseChatbotComponent should not scroll to bottom when there is no new unread messages" time="0.149">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should scroll to bottom when there is new unread messages" name="IrisBaseChatbotComponent should scroll to bottom when there is new unread messages" time="0.112">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should disable enter key if isLoading and active" name="IrisBaseChatbotComponent should disable enter key if isLoading and active" time="0.192">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should call onSend if Enter key is pressed without Shift key" name="IrisBaseChatbotComponent should call onSend if Enter key is pressed without Shift key" time="0.166">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should remove selected text and move cursor position if Enter key is pressed with Shift key" name="IrisBaseChatbotComponent should remove selected text and move cursor position if Enter key is pressed with Shift key" time="0.165">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should adjust textarea rows and call adjustChatBodyHeight" name="IrisBaseChatbotComponent should adjust textarea rows and call adjustChatBodyHeight" time="0.138">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should disable submit button if isLoading is true" name="IrisBaseChatbotComponent should disable submit button if isLoading is true" time="0.165">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should not render submit button if hasUserAcceptedExternalLLMUsage is false" name="IrisBaseChatbotComponent should not render submit button if hasUserAcceptedExternalLLMUsage is false" time="0.117">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should not disable submit button if isLoading is false and no error exists" name="IrisBaseChatbotComponent should not disable submit button if isLoading is false and no error exists" time="0.118">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should not disable submit button if isLoading is false and error is not fatal" name="IrisBaseChatbotComponent should not disable submit button if isLoading is false and error is not fatal" time="0.1">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should set suggestions correctly" name="IrisBaseChatbotComponent should set suggestions correctly" time="0.144">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should handle suggestion click correctly" name="IrisBaseChatbotComponent should handle suggestion click correctly" time="0.15">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should clear suggestions after clicking on a suggestion" name="IrisBaseChatbotComponent should clear suggestions after clicking on a suggestion" time="0.103">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should render suggestions when suggestions array is not empty" name="IrisBaseChatbotComponent should render suggestions when suggestions array is not empty" time="0.124">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should not render suggestions when suggestions array is empty" name="IrisBaseChatbotComponent should not render suggestions when suggestions array is empty" time="0.156">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should not render suggestions if isLoading is true" name="IrisBaseChatbotComponent should not render suggestions if isLoading is true" time="0.168">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should not render suggestions if hasUserAcceptedExternalLLMUsage is false" name="IrisBaseChatbotComponent should not render suggestions if hasUserAcceptedExternalLLMUsage is false" time="0.17">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should not render suggestions if the rate limit is exceeded" name="IrisBaseChatbotComponent should not render suggestions if the rate limit is exceeded" time="0.21">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should not render suggestions if the user is not active" name="IrisBaseChatbotComponent should not render suggestions if the user is not active" time="0.125">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should not render suggestions if hasActiveStage is true" name="IrisBaseChatbotComponent should not render suggestions if hasActiveStage is true" time="0.136">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent clear chat session should open confirm modal when click on the clear button" name="IrisBaseChatbotComponent clear chat session should open confirm modal when click on the clear button" time="0.143">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent clear chat session should clear chat session when confirm modal is confirmed" name="IrisBaseChatbotComponent clear chat session should clear chat session when confirm modal is confirmed" time="0.124">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent clear chat session should not render clear chat button if the history is empty" name="IrisBaseChatbotComponent clear chat session should not render clear chat button if the history is empty" time="0.137">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should set irisQuestion onInit when provided in the queryParams" name="IrisBaseChatbotComponent should set irisQuestion onInit when provided in the queryParams" time="0.104">
    </testcase>
    <testcase classname="IrisBaseChatbotComponent should leave irisQuestion empty onInit when no question provided in the queryParams" name="IrisBaseChatbotComponent should leave irisQuestion empty onInit when no question provided in the queryParams" time="0.119">
    </testcase>
  </testsuite>
  <testsuite name="CodeEditorMonacoComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:21" time="5.315" tests="33">
    <testcase classname="CodeEditorMonacoComponent should hide the editor if no file is selected" name="CodeEditorMonacoComponent should hide the editor if no file is selected" time="0.999">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should not try to load a file if none is selected" name="CodeEditorMonacoComponent should not try to load a file if none is selected" time="0.082">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should hide the editor if a file is being loaded" name="CodeEditorMonacoComponent should hide the editor if a file is being loaded" time="0.141">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should display the usable editor when a file is selected" name="CodeEditorMonacoComponent should display the usable editor when a file is selected" time="0.066">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should correctly lock the editor on changes" name="CodeEditorMonacoComponent should correctly lock the editor on changes" time="0.092">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should correctly lock the editor on changes" name="CodeEditorMonacoComponent should correctly lock the editor on changes" time="0.096">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should correctly lock the editor on changes" name="CodeEditorMonacoComponent should correctly lock the editor on changes" time="0.087">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should correctly lock the editor on changes" name="CodeEditorMonacoComponent should correctly lock the editor on changes" time="0.103">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should correctly lock the editor on changes" name="CodeEditorMonacoComponent should correctly lock the editor on changes" time="0.093">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should correctly lock the editor on changes" name="CodeEditorMonacoComponent should correctly lock the editor on changes" time="0.089">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should update the file session and notify when the file content changes" name="CodeEditorMonacoComponent should update the file session and notify when the file content changes" time="0.097">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should load a selected file if it is not present yet" name="CodeEditorMonacoComponent should load a selected file if it is not present yet" time="0.07">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should load a selected file after a loading error" name="CodeEditorMonacoComponent should load a selected file after a loading error" time="0.068">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should not load binaries into the editor" name="CodeEditorMonacoComponent should not load binaries into the editor" time="0.086">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should emit the correct error and update the file session when loading a file fails" name="CodeEditorMonacoComponent should emit the correct error and update the file session when loading a file fails" time="0.11">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should emit the correct error and update the file session when loading a file fails" name="CodeEditorMonacoComponent should emit the correct error and update the file session when loading a file fails" time="0.081">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should discard local changes when the editor is refreshed" name="CodeEditorMonacoComponent should discard local changes when the editor is refreshed" time="0.137">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should only load the currently selected file" name="CodeEditorMonacoComponent should only load the currently selected file" time="0.071">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should use the code and cursor position of the selected file" name="CodeEditorMonacoComponent should use the code and cursor position of the selected file" time="0.07">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should display build annotations for the current file" name="CodeEditorMonacoComponent should display build annotations for the current file" time="0.076">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should display feedback when viewing a tutor assessment" name="CodeEditorMonacoComponent should display feedback when viewing a tutor assessment" time="0.106">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should add a new feedback widget" name="CodeEditorMonacoComponent should add a new feedback widget" time="0.06">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should delete feedbacks and notify" name="CodeEditorMonacoComponent should delete feedbacks and notify" time="0.081">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should delete unsaved feedback" name="CodeEditorMonacoComponent should delete unsaved feedback" time="0.07">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should update existing feedback and notify" name="CodeEditorMonacoComponent should update existing feedback and notify" time="0.052">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should save new feedback and notify" name="CodeEditorMonacoComponent should save new feedback and notify" time="0.086">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should correctly accept a feedback suggestion and notify" name="CodeEditorMonacoComponent should correctly accept a feedback suggestion and notify" time="0.075">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should correctly discard a suggestion and notify" name="CodeEditorMonacoComponent should correctly discard a suggestion and notify" time="0.061">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should update file session when a file is renamed" name="CodeEditorMonacoComponent should update file session when a file is renamed" time="0.07">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should update file session when a file is deleted" name="CodeEditorMonacoComponent should update file session when a file is deleted" time="0.068">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should update file session when a file is created" name="CodeEditorMonacoComponent should update file session when a file is created" time="0.086">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should use the correct class to highlight lines" name="CodeEditorMonacoComponent should use the correct class to highlight lines" time="0.074">
    </testcase>
    <testcase classname="CodeEditorMonacoComponent should remember scroll position" name="CodeEditorMonacoComponent should remember scroll position" time="0.086">
    </testcase>
  </testsuite>
  <testsuite name="Course Management Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:26" time="1.733" tests="36">
    <testcase classname="Course Management Service should update course" name="Course Management Service should update course" time="0.044">
    </testcase>
    <testcase classname="Course Management Service should update online course configuration" name="Course Management Service should update online course configuration" time="0.015">
    </testcase>
    <testcase classname="Course Management Service should fetch online courses for given registration ID" name="Course Management Service should fetch online courses for given registration ID" time="0.008">
    </testcase>
    <testcase classname="Course Management Service should find the course" name="Course Management Service should find the course" time="0.008">
    </testcase>
    <testcase classname="Course Management Service should set accessRights with by using the AccountService" name="Course Management Service should set accessRights with by using the AccountService" time="0.01">
    </testcase>
    <testcase classname="Course Management Service should find course with exercises" name="Course Management Service should find course with exercises" time="0.014">
    </testcase>
    <testcase classname="Course Management Service should find course with organizations" name="Course Management Service should find course with organizations" time="0.012">
    </testcase>
    <testcase classname="Course Management Service should find all courses for dashboard" name="Course Management Service should find all courses for dashboard" time="0.021">
    </testcase>
    <testcase classname="Course Management Service should pass on an empty response body when fetching all courses for dashboard and there is no response body sent from the server" name="Course Management Service should pass on an empty response body when fetching all courses for dashboard and there is no response body sent from the server" time="0.005">
    </testcase>
    <testcase classname="Course Management Service should find one course for dashboard" name="Course Management Service should find one course for dashboard" time="0.013">
    </testcase>
    <testcase classname="Course Management Service should pass on an empty response body when fetching one course for dashboard and there is no response body sent from the server" name="Course Management Service should pass on an empty response body when fetching one course for dashboard and there is no response body sent from the server" time="0.014">
    </testcase>
    <testcase classname="Course Management Service should set the totalScores, the scoresPerExerciseType, and the participantScores in the scoresStorageService" name="Course Management Service should set the totalScores, the scoresPerExerciseType, and the participantScores in the scoresStorageService" time="0.008">
    </testcase>
    <testcase classname="Course Management Service should find participations for the course" name="Course Management Service should find participations for the course" time="0.01">
    </testcase>
    <testcase classname="Course Management Service should find results for the course" name="Course Management Service should find results for the course" time="0.005">
    </testcase>
    <testcase classname="Course Management Service should find all courses to register" name="Course Management Service should find all courses to register" time="0.015">
    </testcase>
    <testcase classname="Course Management Service should find course with interesting exercises" name="Course Management Service should find course with interesting exercises" time="0.013">
    </testcase>
    <testcase classname="Course Management Service should get stats of course" name="Course Management Service should get stats of course" time="0.012">
    </testcase>
    <testcase classname="Course Management Service should getStatisticsData" name="Course Management Service should getStatisticsData" time="0.008">
    </testcase>
    <testcase classname="Course Management Service should register for the course" name="Course Management Service should register for the course" time="0.008">
    </testcase>
    <testcase classname="Course Management Service should unenroll from the course" name="Course Management Service should unenroll from the course" time="0.004">
    </testcase>
    <testcase classname="Course Management Service should get all courses with quiz exercises" name="Course Management Service should get all courses with quiz exercises" time="0.015">
    </testcase>
    <testcase classname="Course Management Service should get all courses together with user stats" name="Course Management Service should get all courses together with user stats" time="0.029">
    </testcase>
    <testcase classname="Course Management Service should get all courses for overview" name="Course Management Service should get all courses for overview" time="0.009">
    </testcase>
    <testcase classname="Course Management Service should get all exercise details" name="Course Management Service should get all exercise details" time="0.005">
    </testcase>
    <testcase classname="Course Management Service should get all stats for overview" name="Course Management Service should get all stats for overview" time="0.008">
    </testcase>
    <testcase classname="Course Management Service should find all categories of course" name="Course Management Service should find all categories of course" time="0.013">
    </testcase>
    <testcase classname="Course Management Service should find all users of course group" name="Course Management Service should find all users of course group" time="0.005">
    </testcase>
    <testcase classname="Course Management Service should download course archive" name="Course Management Service should download course archive" time="0.007">
    </testcase>
    <testcase classname="Course Management Service should archive the course" name="Course Management Service should archive the course" time="0.014">
    </testcase>
    <testcase classname="Course Management Service should clean up the course" name="Course Management Service should clean up the course" time="0.005">
    </testcase>
    <testcase classname="Course Management Service should find all locked submissions of course" name="Course Management Service should find all locked submissions of course" time="0.007">
    </testcase>
    <testcase classname="Course Management Service should add user to course group" name="Course Management Service should add user to course group" time="0.013">
    </testcase>
    <testcase classname="Course Management Service should remove user from course group" name="Course Management Service should remove user from course group" time="0.004">
    </testcase>
    <testcase classname="Course Management Service should return lifetime overview data" name="Course Management Service should return lifetime overview data" time="0.004">
    </testcase>
    <testcase classname="Course Management Service should search other users within course" name="Course Management Service should search other users within course" time="0.004">
    </testcase>
    <testcase classname="Course Management Service getNumberOfAllowedComplaintsInCourse" name="Course Management Service getNumberOfAllowedComplaintsInCourse" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="StandardizedCompetencyManagementComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:24" time="5.743" tests="20">
    <testcase classname="StandardizedCompetencyManagementComponent should initialize" name="StandardizedCompetencyManagementComponent should initialize" time="0.643">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should load data on init" name="StandardizedCompetencyManagementComponent should load data on init" time="0.098">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should open cancel modal" name="StandardizedCompetencyManagementComponent should open cancel modal" time="0.041">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should open new competency" name="StandardizedCompetencyManagementComponent should open new competency" time="0.057">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should select competency" name="StandardizedCompetencyManagementComponent should select competency" time="0.038">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should close competency" name="StandardizedCompetencyManagementComponent should close competency" time="0.028">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should delete competency" name="StandardizedCompetencyManagementComponent should delete competency" time="0.156">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should create competency" name="StandardizedCompetencyManagementComponent should create competency" time="0.2">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should update competency" name="StandardizedCompetencyManagementComponent should update competency" time="0.155">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should move competency on update" name="StandardizedCompetencyManagementComponent should move competency on update" time="0.178">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should open new knowledgeArea" name="StandardizedCompetencyManagementComponent should open new knowledgeArea" time="0.028">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should select knowledgeArea" name="StandardizedCompetencyManagementComponent should select knowledgeArea" time="0.036">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should close knowledgeArea" name="StandardizedCompetencyManagementComponent should close knowledgeArea" time="0.049">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should delete knowledgeArea" name="StandardizedCompetencyManagementComponent should delete knowledgeArea" time="0.164">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should delete knowledgeArea and descendants" name="StandardizedCompetencyManagementComponent should delete knowledgeArea and descendants" time="0.154">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should create knowledgeArea" name="StandardizedCompetencyManagementComponent should create knowledgeArea" time="0.141">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should hide created knowledgeArea if it is not in the filter" name="StandardizedCompetencyManagementComponent should hide created knowledgeArea if it is not in the filter" time="0.107">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should update knowledgeArea" name="StandardizedCompetencyManagementComponent should update knowledgeArea" time="0.153">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should move knowledgeArea on update" name="StandardizedCompetencyManagementComponent should move knowledgeArea on update" time="0.262">
    </testcase>
    <testcase classname="StandardizedCompetencyManagementComponent should not deactivate with pending changes" name="StandardizedCompetencyManagementComponent should not deactivate with pending changes" time="0.057">
    </testcase>
  </testsuite>
  <testsuite name="ModelingSubmissionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:23" time="8.277" tests="26">
    <testcase classname="ModelingSubmissionComponent should call load getDataForModelingEditor on init" name="ModelingSubmissionComponent should call load getDataForModelingEditor on init" time="0.874">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should subscribe to modeling editor patches." name="ModelingSubmissionComponent should subscribe to modeling editor patches." time="0.178">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should update the submission when a patch is received." name="ModelingSubmissionComponent should update the submission when a patch is received." time="0.142">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should allow to submit when exercise due date not set" name="ModelingSubmissionComponent should allow to submit when exercise due date not set" time="0.171">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should not allow to submit after the due date if the initialization date is before the due date" name="ModelingSubmissionComponent should not allow to submit after the due date if the initialization date is before the due date" time="0.15">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should allow to submit after the due date if the initialization date is after the due date and not submitted" name="ModelingSubmissionComponent should allow to submit after the due date if the initialization date is after the due date and not submitted" time="0.17">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should not allow to submit if there is a result and no due date" name="ModelingSubmissionComponent should not allow to submit if there is a result and no due date" time="0.111">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should get inactive as soon as the due date passes the current date" name="ModelingSubmissionComponent should get inactive as soon as the due date passes the current date" time="0.212">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should catch error on 403 error status" name="ModelingSubmissionComponent should catch error on 403 error status" time="0.188">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should set correct properties on modeling exercise update when saving" name="ModelingSubmissionComponent should set correct properties on modeling exercise update when saving" time="0.319">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should set correct properties on modeling exercise create when saving" name="ModelingSubmissionComponent should set correct properties on modeling exercise create when saving" time="0.237">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should set correct properties on modeling exercise create when submitting" name="ModelingSubmissionComponent should set correct properties on modeling exercise create when submitting" time="0.232">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should catch error on submit" name="ModelingSubmissionComponent should catch error on submit" time="0.099">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should set result when new result comes in from websocket" name="ModelingSubmissionComponent should set result when new result comes in from websocket" time="0.179">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should update submission when new submission comes in from websocket" name="ModelingSubmissionComponent should update submission when new submission comes in from websocket" time="0.109">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should set correct properties on modeling exercise update when submitting" name="ModelingSubmissionComponent should set correct properties on modeling exercise update when submitting" time="0.14">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should calculate number of elements from model" name="ModelingSubmissionComponent should calculate number of elements from model" time="0.13">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should update selected entities with given elements" name="ModelingSubmissionComponent should update selected entities with given elements" time="0.134">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should shouldBeDisplayed return true if no selectedEntities and selectedRelationships" name="ModelingSubmissionComponent should shouldBeDisplayed return true if no selectedEntities and selectedRelationships" time="0.095">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should shouldBeDisplayed return true if feedback reference is in selectedEntities or selectedRelationships" name="ModelingSubmissionComponent should shouldBeDisplayed return true if feedback reference is in selectedEntities or selectedRelationships" time="0.1">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should update submission with current values" name="ModelingSubmissionComponent should update submission with current values" time="0.105">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should display the feedback text properly" name="ModelingSubmissionComponent should display the feedback text properly" time="0.11">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should deactivate return true when there are unsaved changes" name="ModelingSubmissionComponent should deactivate return true when there are unsaved changes" time="0.097">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should set isChanged property to false after saving" name="ModelingSubmissionComponent should set isChanged property to false after saving" time="0.153">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should mark the subsequent feedback" name="ModelingSubmissionComponent should mark the subsequent feedback" time="0.093">
    </testcase>
    <testcase classname="ModelingSubmissionComponent should be set up with input values if present instead of loading new values from server" name="ModelingSubmissionComponent should be set up with input values if present instead of loading new values from server" time="0.119">
    </testcase>
  </testsuite>
  <testsuite name="BuildQueueService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:30" time="2.261" tests="28">
    <testcase classname="BuildQueueService should return build job for course" name="BuildQueueService should return build job for course" time="0.009">
    </testcase>
    <testcase classname="BuildQueueService should return running build jobs for a specific course" name="BuildQueueService should return running build jobs for a specific course" time="0.005">
    </testcase>
    <testcase classname="BuildQueueService should return all queued build jobs" name="BuildQueueService should return all queued build jobs" time="0.005">
    </testcase>
    <testcase classname="BuildQueueService should return all running build jobs" name="BuildQueueService should return all running build jobs" time="0.003">
    </testcase>
    <testcase classname="BuildQueueService should cancel a specific build job in a course" name="BuildQueueService should cancel a specific build job in a course" time="0.004">
    </testcase>
    <testcase classname="BuildQueueService should cancel a specific build job" name="BuildQueueService should cancel a specific build job" time="0.005">
    </testcase>
    <testcase classname="BuildQueueService should cancel all running build jobs" name="BuildQueueService should cancel all running build jobs" time="0.007">
    </testcase>
    <testcase classname="BuildQueueService should cancel all running build jobs in a course" name="BuildQueueService should cancel all running build jobs in a course" time="0.022">
    </testcase>
    <testcase classname="BuildQueueService should cancel all queued build jobs" name="BuildQueueService should cancel all queued build jobs" time="0.004">
    </testcase>
    <testcase classname="BuildQueueService should cancel all queued build jobs in a course" name="BuildQueueService should cancel all queued build jobs in a course" time="0.004">
    </testcase>
    <testcase classname="BuildQueueService should cancel all running build jobs for a specific agent" name="BuildQueueService should cancel all running build jobs for a specific agent" time="0.004">
    </testcase>
    <testcase classname="BuildQueueService should handle errors when cancelling a specific build job" name="BuildQueueService should handle errors when cancelling a specific build job" time="0.004">
    </testcase>
    <testcase classname="BuildQueueService should handle errors when cancelling a specific build job in a course" name="BuildQueueService should handle errors when cancelling a specific build job in a course" time="0.007">
    </testcase>
    <testcase classname="BuildQueueService should handle errors when cancelling all running build jobs" name="BuildQueueService should handle errors when cancelling all running build jobs" time="0.007">
    </testcase>
    <testcase classname="BuildQueueService should handle errors when cancelling all running build jobs in a course" name="BuildQueueService should handle errors when cancelling all running build jobs in a course" time="0.01">
    </testcase>
    <testcase classname="BuildQueueService should handle errors when cancelling all queued build jobs" name="BuildQueueService should handle errors when cancelling all queued build jobs" time="0.004">
    </testcase>
    <testcase classname="BuildQueueService should handle errors when cancelling all queued build jobs in a course" name="BuildQueueService should handle errors when cancelling all queued build jobs in a course" time="0.005">
    </testcase>
    <testcase classname="BuildQueueService should handle errors when cancelling all running build jobs for a specific agent" name="BuildQueueService should handle errors when cancelling all running build jobs for a specific agent" time="0.004">
    </testcase>
    <testcase classname="BuildQueueService should return all finished build jobs" name="BuildQueueService should return all finished build jobs" time="0.006">
    </testcase>
    <testcase classname="BuildQueueService should return filtered finished build jobs" name="BuildQueueService should return filtered finished build jobs" time="0.006">
    </testcase>
    <testcase classname="BuildQueueService should handle errors when getting all finished build jobs" name="BuildQueueService should handle errors when getting all finished build jobs" time="0.004">
    </testcase>
    <testcase classname="BuildQueueService should return all finished build jobs for a specific course" name="BuildQueueService should return all finished build jobs for a specific course" time="0.017">
    </testcase>
    <testcase classname="BuildQueueService should return filtered finished build jobs for a specific course" name="BuildQueueService should return filtered finished build jobs for a specific course" time="0.007">
    </testcase>
    <testcase classname="BuildQueueService should return build job statistics" name="BuildQueueService should return build job statistics" time="0.003">
    </testcase>
    <testcase classname="BuildQueueService should handle errors when getting build job statistics" name="BuildQueueService should handle errors when getting build job statistics" time="0.004">
    </testcase>
    <testcase classname="BuildQueueService should handle errors when getting all finished build jobs for a specific course" name="BuildQueueService should handle errors when getting all finished build jobs for a specific course" time="0.004">
    </testcase>
    <testcase classname="BuildQueueService should return build log entries for a specific build job" name="BuildQueueService should return build log entries for a specific build job" time="0.007">
    </testcase>
    <testcase classname="BuildQueueService should handle errors when getting build log entries for a specific build job" name="BuildQueueService should handle errors when getting build log entries for a specific build job" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="QuizQuestionListEditExistingComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:32" time="5.503" tests="21">
    <testcase classname="QuizQuestionListEditExistingComponent ngOnChanges should load exams when show is true" name="QuizQuestionListEditExistingComponent ngOnChanges should load exams when show is true" time="0.311">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent ngOnChanges should not load exams when show is false" name="QuizQuestionListEditExistingComponent ngOnChanges should not load exams when show is false" time="0.112">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent should set current state" name="QuizQuestionListEditExistingComponent should set current state" time="0.096">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent onCourseSelect should not set all existing questions when course is not selected" name="QuizQuestionListEditExistingComponent onCourseSelect should not set all existing questions when course is not selected" time="0.127">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent onCourseSelect should set all existing questions when course is selected" name="QuizQuestionListEditExistingComponent onCourseSelect should set all existing questions when course is selected" time="0.093">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent onExamSelect should not set all existing questions when exam is not selected" name="QuizQuestionListEditExistingComponent onExamSelect should not set all existing questions when exam is not selected" time="0.092">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent onExamSelect should set all existing questions when exam is selected" name="QuizQuestionListEditExistingComponent onExamSelect should set all existing questions when exam is selected" time="0.113">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent applyFilter should put mc question when mc filter selected" name="QuizQuestionListEditExistingComponent applyFilter should put mc question when mc filter selected" time="0.071">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent applyFilter should put mc question when dnd filter selected" name="QuizQuestionListEditExistingComponent applyFilter should put mc question when dnd filter selected" time="0.135">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent applyFilter should put mc question when sa filter selected" name="QuizQuestionListEditExistingComponent applyFilter should put mc question when sa filter selected" time="0.066">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent applyFilter should put all if all selected" name="QuizQuestionListEditExistingComponent applyFilter should put all if all selected" time="0.12">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent import questions should set import file correctly" name="QuizQuestionListEditExistingComponent import questions should set import file correctly" time="0.086">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent importing quiz should call verify and import questions with right json" name="QuizQuestionListEditExistingComponent importing quiz should call verify and import questions with right json" time="0.142">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent importing quiz should not call any functions without import file" name="QuizQuestionListEditExistingComponent importing quiz should not call any functions without import file" time="0.081">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent importing quiz should alert user when onload throws error" name="QuizQuestionListEditExistingComponent importing quiz should alert user when onload throws error" time="0.1">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent generating file reader should return file reader when called" name="QuizQuestionListEditExistingComponent generating file reader should return file reader when called" time="0.113">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent add existing questions should call addQuestions" name="QuizQuestionListEditExistingComponent add existing questions should call addQuestions" time="0.134">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent add questions should open modal" name="QuizQuestionListEditExistingComponent add questions should open modal" time="0.087">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent add questions should emit onQuestionsAdded" name="QuizQuestionListEditExistingComponent add questions should emit onQuestionsAdded" time="0.139">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent add questions should correctly differentiate between JSON and ZIP files" name="QuizQuestionListEditExistingComponent add questions should correctly differentiate between JSON and ZIP files" time="0.162">
    </testcase>
    <testcase classname="QuizQuestionListEditExistingComponent add questions should correctly extract images from a ZIP file" name="QuizQuestionListEditExistingComponent add questions should correctly extract images from a ZIP file" time="0.106">
    </testcase>
  </testsuite>
  <testsuite name="CodeButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:38" time="2.751" tests="28">
    <testcase classname="CodeButtonComponent should initialize" name="CodeButtonComponent should initialize" time="0.215">
    </testcase>
    <testcase classname="CodeButtonComponent should not load participation vcsAccessToken when it already exists in participation" name="CodeButtonComponent should not load participation vcsAccessToken when it already exists in participation" time="0.025">
    </testcase>
    <testcase classname="CodeButtonComponent should load participation vcsAccessToken if it exists on the server" name="CodeButtonComponent should load participation vcsAccessToken if it exists on the server" time="0.022">
    </testcase>
    <testcase classname="CodeButtonComponent should only display available authentication mechanisms" name="CodeButtonComponent should only display available authentication mechanisms" time="0.03">
    </testcase>
    <testcase classname="CodeButtonComponent should create new vcsAccessToken when it does not exist" name="CodeButtonComponent should create new vcsAccessToken when it does not exist" time="0.014">
    </testcase>
    <testcase classname="CodeButtonComponent should get ssh url (same url for team and individual participation)" name="CodeButtonComponent should get ssh url (same url for team and individual participation)" time="0.03">
    </testcase>
    <testcase classname="CodeButtonComponent should get copy the repository uri" name="CodeButtonComponent should get copy the repository uri" time="0.027">
    </testcase>
    <testcase classname="CodeButtonComponent should insert the correct token in the repository uri" name="CodeButtonComponent should insert the correct token in the repository uri" time="0.097">
    </testcase>
    <testcase classname="CodeButtonComponent should add the user login and token to the URL" name="CodeButtonComponent should add the user login and token to the URL" time="0.034">
    </testcase>
    <testcase classname="CodeButtonComponent should handle multiple participations" name="CodeButtonComponent should handle multiple participations" time="0.039">
    </testcase>
    <testcase classname="CodeButtonComponent should handle no participation" name="CodeButtonComponent should handle no participation" time="0.031">
    </testcase>
    <testcase classname="CodeButtonComponent should set wasCopied to true and back to false after 3 seconds on successful copy" name="CodeButtonComponent should set wasCopied to true and back to false after 3 seconds on successful copy" time="0.019">
    </testcase>
    <testcase classname="CodeButtonComponent should not change wasCopied if copy is unsuccessful" name="CodeButtonComponent should not change wasCopied if copy is unsuccessful" time="0.022">
    </testcase>
    <testcase classname="CodeButtonComponent should fetch and store ssh preference" name="CodeButtonComponent should fetch and store ssh preference" time="0.183">
    </testcase>
    <testcase classname="CodeButtonComponent should correctly choose active participation" name="CodeButtonComponent should correctly choose active participation" time="0.02">
    </testcase>
    <testcase classname="CodeButtonComponent should correctly choose active participation" name="CodeButtonComponent should correctly choose active participation" time="0.014">
    </testcase>
    <testcase classname="CodeButtonComponent should correctly choose active participation" name="CodeButtonComponent should correctly choose active participation" time="0.022">
    </testcase>
    <testcase classname="CodeButtonComponent should correctly choose active participation" name="CodeButtonComponent should correctly choose active participation" time="0.011">
    </testcase>
    <testcase classname="CodeButtonComponent should correctly choose active participation" name="CodeButtonComponent should correctly choose active participation" time="0.014">
    </testcase>
    <testcase classname="CodeButtonComponent should correctly choose active participation" name="CodeButtonComponent should correctly choose active participation" time="0.026">
    </testcase>
    <testcase classname="CodeButtonComponent should correctly choose active participation" name="CodeButtonComponent should correctly choose active participation" time="0.025">
    </testcase>
    <testcase classname="CodeButtonComponent should correctly choose active participation" name="CodeButtonComponent should correctly choose active participation" time="0.018">
    </testcase>
    <testcase classname="CodeButtonComponent start theia button should be visible when profile is active and theia is configured" name="CodeButtonComponent start theia button should be visible when profile is active and theia is configured" time="0.035">
    </testcase>
    <testcase classname="CodeButtonComponent start theia button should not be visible when profile is active but theia is ill-configured" name="CodeButtonComponent start theia button should not be visible when profile is active but theia is ill-configured" time="0.038">
    </testcase>
    <testcase classname="CodeButtonComponent start theia button should not be visible when profile is active but onlineIde is not activated" name="CodeButtonComponent start theia button should not be visible when profile is active but onlineIde is not activated" time="0.011">
    </testcase>
    <testcase classname="CodeButtonComponent start theia button should not be visible when profile is active but url is not set" name="CodeButtonComponent start theia button should not be visible when profile is active but url is not set" time="0.014">
    </testcase>
    <testcase classname="CodeButtonComponent start theia button should not be visible when profile is not active but url is set" name="CodeButtonComponent start theia button should not be visible when profile is not active but url is set" time="0.021">
    </testcase>
    <testcase classname="CodeButtonComponent should include the correct data in the form submission when startOnlineIDE is called" name="CodeButtonComponent should include the correct data in the form submission when startOnlineIDE is called" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="DragAndDropQuestionEditComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:26" time="16.087" tests="28">
    <testcase classname="DragAndDropQuestionEditComponent should initialize" name="DragAndDropQuestionEditComponent should initialize" time="2.136">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should detect changes and update component" name="DragAndDropQuestionEditComponent should detect changes and update component" time="0.425">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should edit question in different ways" name="DragAndDropQuestionEditComponent should edit question in different ways" time="0.435">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should set background file" name="DragAndDropQuestionEditComponent should set background file" time="0.456">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should move the mouse in different situations" name="DragAndDropQuestionEditComponent should move the mouse in different situations" time="0.435">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should move mouse up" name="DragAndDropQuestionEditComponent should move mouse up" time="0.449">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should move background mouse down" name="DragAndDropQuestionEditComponent should move background mouse down" time="0.433">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should drop location on mouse down" name="DragAndDropQuestionEditComponent should drop location on mouse down" time="0.752">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should open, drag, drop" name="DragAndDropQuestionEditComponent should open, drag, drop" time="0.496">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should duplicate drop location" name="DragAndDropQuestionEditComponent should duplicate drop location" time="0.452">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should resize mouse down" name="DragAndDropQuestionEditComponent should resize mouse down" time="0.388">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should add text item" name="DragAndDropQuestionEditComponent should add text item" time="0.372">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should create image item" name="DragAndDropQuestionEditComponent should create image item" time="0.43">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should delete drag item" name="DragAndDropQuestionEditComponent should delete drag item" time="0.399">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should delete mapping" name="DragAndDropQuestionEditComponent should delete mapping" time="0.404">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should drop a drag item on a drop location" name="DragAndDropQuestionEditComponent should drop a drag item on a drop location" time="0.398">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should get mapping index for mapping" name="DragAndDropQuestionEditComponent should get mapping index for mapping" time="0.367">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should get mappings for drop location" name="DragAndDropQuestionEditComponent should get mappings for drop location" time="0.428">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should get mappings for drag item" name="DragAndDropQuestionEditComponent should get mappings for drag item" time="0.313">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should change picture drag item to text drag item" name="DragAndDropQuestionEditComponent should change picture drag item to text drag item" time="0.364">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should change text drag item to picture drag item" name="DragAndDropQuestionEditComponent should change text drag item to picture drag item" time="0.35">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should change question title" name="DragAndDropQuestionEditComponent should change question title" time="0.355">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should reset question" name="DragAndDropQuestionEditComponent should reset question" time="0.389">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should reset drag item" name="DragAndDropQuestionEditComponent should reset drag item" time="0.395">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should reset drop location" name="DragAndDropQuestionEditComponent should reset drop location" time="0.37">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should toggle preview" name="DragAndDropQuestionEditComponent should toggle preview" time="0.411">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should detect changes in markdown and edit accordingly" name="DragAndDropQuestionEditComponent should detect changes in markdown and edit accordingly" time="0.377">
    </testcase>
    <testcase classname="DragAndDropQuestionEditComponent should detect domain actions" name="DragAndDropQuestionEditComponent should detect domain actions" time="0.347">
    </testcase>
  </testsuite>
  <testsuite name="AccountService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:41" time="1.785" tests="97">
    <testcase classname="AccountService should fetch the user on identity if the userIdentity is not defined yet" name="AccountService should fetch the user on identity if the userIdentity is not defined yet" time="0.019">
    </testcase>
    <testcase classname="AccountService should handle user SSH public key correctly" name="AccountService should handle user SSH public key correctly" time="0.007">
    </testcase>
    <testcase classname="AccountService should fetch the user on identity if the userIdentity is defined yet (force=true)" name="AccountService should fetch the user on identity if the userIdentity is defined yet (force=true)" time="0.028">
    </testcase>
    <testcase classname="AccountService should NOT fetch the user on identity if the userIdentity is defined (force=false)" name="AccountService should NOT fetch the user on identity if the userIdentity is defined (force=false)" time="0.013">
    </testcase>
    <testcase classname="AccountService should authenticate a user" name="AccountService should authenticate a user" time="0.02">
    </testcase>
    <testcase classname="AccountService should sync user groups" name="AccountService should sync user groups" time="0.013">
    </testcase>
    <testcase classname="AccountService test authority check should return false if not authenticated, no user id and no authorities are set" name="AccountService test authority check should return false if not authenticated, no user id and no authorities are set" time="0.008">
    </testcase>
    <testcase classname="AccountService test authority check should return false if not authenticated, no user id and no authorities are set" name="AccountService test authority check should return false if not authenticated, no user id and no authorities are set" time="0.008">
    </testcase>
    <testcase classname="AccountService test authority check should return false if not authenticated, no user id and no authorities are set" name="AccountService test authority check should return false if not authenticated, no user id and no authorities are set" time="0.008">
    </testcase>
    <testcase classname="AccountService test authority check should return false if not authenticated, no user id and no authorities are set" name="AccountService test authority check should return false if not authenticated, no user id and no authorities are set" time="0.008">
    </testcase>
    <testcase classname="AccountService test authority check should return false if not authenticated, no user id and no authorities are set" name="AccountService test authority check should return false if not authenticated, no user id and no authorities are set" time="0.01">
    </testcase>
    <testcase classname="AccountService test authority check should return false if authenticated, user id but no authorities are set" name="AccountService test authority check should return false if authenticated, user id but no authorities are set" time="0.011">
    </testcase>
    <testcase classname="AccountService test authority check should return false if authenticated, user id but no authorities are set" name="AccountService test authority check should return false if authenticated, user id but no authorities are set" time="0.014">
    </testcase>
    <testcase classname="AccountService test authority check should return false if authenticated, user id but no authorities are set" name="AccountService test authority check should return false if authenticated, user id but no authorities are set" time="0.016">
    </testcase>
    <testcase classname="AccountService test authority check should return false if authenticated, user id but no authorities are set" name="AccountService test authority check should return false if authenticated, user id but no authorities are set" time="0.008">
    </testcase>
    <testcase classname="AccountService test authority check should return false if authenticated, user id but no authorities are set" name="AccountService test authority check should return false if authenticated, user id but no authorities are set" time="0.019">
    </testcase>
    <testcase classname="AccountService test authority check should return true if user is required" name="AccountService test authority check should return true if user is required" time="0.007">
    </testcase>
    <testcase classname="AccountService test authority check should return true if user is required" name="AccountService test authority check should return true if user is required" time="0.005">
    </testcase>
    <testcase classname="AccountService test authority check should return true if user is required" name="AccountService test authority check should return true if user is required" time="0.006">
    </testcase>
    <testcase classname="AccountService test authority check should return true if user is required" name="AccountService test authority check should return true if user is required" time="0.011">
    </testcase>
    <testcase classname="AccountService test authority check should return true if user is required" name="AccountService test authority check should return true if user is required" time="0.018">
    </testcase>
    <testcase classname="AccountService test authority check should return true if authority matches exactly" name="AccountService test authority check should return true if authority matches exactly" time="0.007">
    </testcase>
    <testcase classname="AccountService test authority check should return true if authority matches exactly" name="AccountService test authority check should return true if authority matches exactly" time="0.005">
    </testcase>
    <testcase classname="AccountService test authority check should return true if authority matches exactly" name="AccountService test authority check should return true if authority matches exactly" time="0.004">
    </testcase>
    <testcase classname="AccountService test authority check should return true if authority matches exactly" name="AccountService test authority check should return true if authority matches exactly" time="0.006">
    </testcase>
    <testcase classname="AccountService test authority check should return true if authority matches exactly" name="AccountService test authority check should return true if authority matches exactly" time="0.005">
    </testcase>
    <testcase classname="AccountService test authority check should return false if authority does not match" name="AccountService test authority check should return false if authority does not match" time="0.005">
    </testcase>
    <testcase classname="AccountService test authority check should return false if authority does not match" name="AccountService test authority check should return false if authority does not match" time="0.007">
    </testcase>
    <testcase classname="AccountService test authority check should return false if authority does not match" name="AccountService test authority check should return false if authority does not match" time="0.004">
    </testcase>
    <testcase classname="AccountService test authority check should return false if authority does not match" name="AccountService test authority check should return false if authority does not match" time="0.01">
    </testcase>
    <testcase classname="AccountService test authority check should return false if authority does not match" name="AccountService test authority check should return false if authority does not match" time="0.013">
    </testcase>
    <testcase classname="AccountService test authority check should return false if not authenticated" name="AccountService test authority check should return false if not authenticated" time="0.009">
    </testcase>
    <testcase classname="AccountService test authority check should return false if not authenticated" name="AccountService test authority check should return false if not authenticated" time="0.037">
    </testcase>
    <testcase classname="AccountService test authority check should return false if not authenticated" name="AccountService test authority check should return false if not authenticated" time="0.008">
    </testcase>
    <testcase classname="AccountService test authority check should return false if not authenticated" name="AccountService test authority check should return false if not authenticated" time="0.004">
    </testcase>
    <testcase classname="AccountService test authority check should return false if not authenticated" name="AccountService test authority check should return false if not authenticated" time="0.004">
    </testcase>
    <testcase classname="AccountService test hasGroup should return false if not authenticated" name="AccountService test hasGroup should return false if not authenticated" time="0.005">
    </testcase>
    <testcase classname="AccountService test hasGroup should return false if not authenticated" name="AccountService test hasGroup should return false if not authenticated" time="0.004">
    </testcase>
    <testcase classname="AccountService test hasGroup should return false if not authenticated" name="AccountService test hasGroup should return false if not authenticated" time="0.005">
    </testcase>
    <testcase classname="AccountService test hasGroup should return false if no authorities are set" name="AccountService test hasGroup should return false if no authorities are set" time="0.004">
    </testcase>
    <testcase classname="AccountService test hasGroup should return false if no authorities are set" name="AccountService test hasGroup should return false if no authorities are set" time="0.009">
    </testcase>
    <testcase classname="AccountService test hasGroup should return false if no authorities are set" name="AccountService test hasGroup should return false if no authorities are set" time="0.007">
    </testcase>
    <testcase classname="AccountService test hasGroup should return false if no groups are set" name="AccountService test hasGroup should return false if no groups are set" time="0.015">
    </testcase>
    <testcase classname="AccountService test hasGroup should return false if no groups are set" name="AccountService test hasGroup should return false if no groups are set" time="0.007">
    </testcase>
    <testcase classname="AccountService test hasGroup should return false if no groups are set" name="AccountService test hasGroup should return false if no groups are set" time="0.004">
    </testcase>
    <testcase classname="AccountService test hasGroup should return false if group does not match" name="AccountService test hasGroup should return false if group does not match" time="0.004">
    </testcase>
    <testcase classname="AccountService test hasGroup should return false if group does not match" name="AccountService test hasGroup should return false if group does not match" time="0.004">
    </testcase>
    <testcase classname="AccountService test hasGroup should return false if group does not match" name="AccountService test hasGroup should return false if group does not match" time="0.004">
    </testcase>
    <testcase classname="AccountService test hasGroup should return true if group matchs" name="AccountService test hasGroup should return true if group matchs" time="0.013">
    </testcase>
    <testcase classname="AccountService test hasGroup should return true if group matchs" name="AccountService test hasGroup should return true if group matchs" time="0.004">
    </testcase>
    <testcase classname="AccountService test hasGroup should return true if group matchs" name="AccountService test hasGroup should return true if group matchs" time="0.004">
    </testcase>
    <testcase classname="AccountService test isAtLeastTutorInCourse should return false if user is not tutor" name="AccountService test isAtLeastTutorInCourse should return false if user is not tutor" time="0.004">
    </testcase>
    <testcase classname="AccountService test isAtLeastTutorInCourse should return true if user is tutor, editor or instructor" name="AccountService test isAtLeastTutorInCourse should return true if user is tutor, editor or instructor" time="0.004">
    </testcase>
    <testcase classname="AccountService test isAtLeastTutorInCourse should return true if user is tutor, editor or instructor" name="AccountService test isAtLeastTutorInCourse should return true if user is tutor, editor or instructor" time="0.007">
    </testcase>
    <testcase classname="AccountService test isAtLeastTutorInCourse should return true if user is tutor, editor or instructor" name="AccountService test isAtLeastTutorInCourse should return true if user is tutor, editor or instructor" time="0.004">
    </testcase>
    <testcase classname="AccountService test isAtLeastTutorInCourse should return true if user is system admin" name="AccountService test isAtLeastTutorInCourse should return true if user is system admin" time="0.004">
    </testcase>
    <testcase classname="AccountService test isAtLeastEditorInCourse should return false if user is not editor" name="AccountService test isAtLeastEditorInCourse should return false if user is not editor" time="0.004">
    </testcase>
    <testcase classname="AccountService test isAtLeastEditorInCourse should return true if user is editor or instructor" name="AccountService test isAtLeastEditorInCourse should return true if user is editor or instructor" time="0.006">
    </testcase>
    <testcase classname="AccountService test isAtLeastEditorInCourse should return true if user is editor or instructor" name="AccountService test isAtLeastEditorInCourse should return true if user is editor or instructor" time="0.004">
    </testcase>
    <testcase classname="AccountService test isAtLeastEditorInCourse should return true if user is system admin" name="AccountService test isAtLeastEditorInCourse should return true if user is system admin" time="0.007">
    </testcase>
    <testcase classname="AccountService test isAtLeastInstructorInCourse should return false if user is not editor" name="AccountService test isAtLeastInstructorInCourse should return false if user is not editor" time="0.005">
    </testcase>
    <testcase classname="AccountService test isAtLeastInstructorInCourse should return true if user is instructor" name="AccountService test isAtLeastInstructorInCourse should return true if user is instructor" time="0.004">
    </testcase>
    <testcase classname="AccountService test isAtLeastInstructorInCourse should return true if user is system admin" name="AccountService test isAtLeastInstructorInCourse should return true if user is system admin" time="0.004">
    </testcase>
    <testcase classname="AccountService test isAtLeastTutorForExercise should return false if user is not tutor" name="AccountService test isAtLeastTutorForExercise should return false if user is not tutor" time="0.006">
    </testcase>
    <testcase classname="AccountService test isAtLeastTutorForExercise should return true if user is tutor, editor or instructor" name="AccountService test isAtLeastTutorForExercise should return true if user is tutor, editor or instructor" time="0.007">
    </testcase>
    <testcase classname="AccountService test isAtLeastTutorForExercise should return true if user is tutor, editor or instructor" name="AccountService test isAtLeastTutorForExercise should return true if user is tutor, editor or instructor" time="0.011">
    </testcase>
    <testcase classname="AccountService test isAtLeastTutorForExercise should return true if user is tutor, editor or instructor" name="AccountService test isAtLeastTutorForExercise should return true if user is tutor, editor or instructor" time="0.004">
    </testcase>
    <testcase classname="AccountService test isAtLeastTutorForExercise should return true if user is system admin" name="AccountService test isAtLeastTutorForExercise should return true if user is system admin" time="0.008">
    </testcase>
    <testcase classname="AccountService test isAtLeastEditorForExercise should return false if user is not tutor" name="AccountService test isAtLeastEditorForExercise should return false if user is not tutor" time="0.005">
    </testcase>
    <testcase classname="AccountService test isAtLeastEditorForExercise should return true if user is editor or instructor" name="AccountService test isAtLeastEditorForExercise should return true if user is editor or instructor" time="0.008">
    </testcase>
    <testcase classname="AccountService test isAtLeastEditorForExercise should return true if user is editor or instructor" name="AccountService test isAtLeastEditorForExercise should return true if user is editor or instructor" time="0.015">
    </testcase>
    <testcase classname="AccountService test isAtLeastEditorForExercise should return true if user is system admin" name="AccountService test isAtLeastEditorForExercise should return true if user is system admin" time="0.008">
    </testcase>
    <testcase classname="AccountService test isAtLeastInstructorForExercise should return false if user is not tutor" name="AccountService test isAtLeastInstructorForExercise should return false if user is not tutor" time="0.004">
    </testcase>
    <testcase classname="AccountService test isAtLeastInstructorForExercise should return true if user is editor or instructor" name="AccountService test isAtLeastInstructorForExercise should return true if user is editor or instructor" time="0.004">
    </testcase>
    <testcase classname="AccountService test isAtLeastInstructorForExercise should return true if user is system admin" name="AccountService test isAtLeastInstructorForExercise should return true if user is system admin" time="0.004">
    </testcase>
    <testcase classname="AccountService test isAdmin should return false if user is not admin" name="AccountService test isAdmin should return false if user is not admin" time="0.004">
    </testcase>
    <testcase classname="AccountService test isAdmin should return true if user is system admin" name="AccountService test isAdmin should return true if user is system admin" time="0.004">
    </testcase>
    <testcase classname="AccountService should set access rights for referenced course" name="AccountService should set access rights for referenced course" time="0.005">
    </testcase>
    <testcase classname="AccountService should set access rights for referenced course in exam mode" name="AccountService should set access rights for referenced course in exam mode" time="0.011">
    </testcase>
    <testcase classname="AccountService should set access rights for referenced exercise" name="AccountService should set access rights for referenced exercise" time="0.015">
    </testcase>
    <testcase classname="AccountService test isOwnerOfParticipation should return false if student is not owner" name="AccountService test isOwnerOfParticipation should return false if student is not owner" time="0.004">
    </testcase>
    <testcase classname="AccountService test isOwnerOfParticipation should return true if student is owner" name="AccountService test isOwnerOfParticipation should return true if student is owner" time="0.004">
    </testcase>
    <testcase classname="AccountService test isOwnerOfParticipation should return false if student is not part of the team" name="AccountService test isOwnerOfParticipation should return false if student is not part of the team" time="0.004">
    </testcase>
    <testcase classname="AccountService test isOwnerOfParticipation should return true if student is part of the team" name="AccountService test isOwnerOfParticipation should return true if student is part of the team" time="0.004">
    </testcase>
    <testcase classname="AccountService test getImageUrl should return undefined if not authenticated" name="AccountService test getImageUrl should return undefined if not authenticated" time="0.003">
    </testcase>
    <testcase classname="AccountService test getImageUrl should return image url if authenticated" name="AccountService test getImageUrl should return image url if authenticated" time="0.004">
    </testcase>
    <testcase classname="AccountService should call update language url with language key" name="AccountService should call update language url with language key" time="0.005">
    </testcase>
    <testcase classname="AccountService test prefilled username should set prefilled username" name="AccountService test prefilled username should set prefilled username" time="0.004">
    </testcase>
    <testcase classname="AccountService test prefilled username should clear prefilledusername after get" name="AccountService test prefilled username should clear prefilledusername after get" time="0.003">
    </testcase>
    <testcase classname="AccountService test token related user retrieval logic should not retrieve user if vcs token is missing but not required" name="AccountService test token related user retrieval logic should not retrieve user if vcs token is missing but not required" time="0.006">
    </testcase>
    <testcase classname="AccountService test token related user retrieval logic should not retrieve user if vcs token is present" name="AccountService test token related user retrieval logic should not retrieve user if vcs token is present" time="0.006">
    </testcase>
    <testcase classname="AccountService test vcs token related logic should delete user VCS access token" name="AccountService test vcs token related logic should delete user VCS access token" time="0.004">
    </testcase>
    <testcase classname="AccountService test vcs token related logic should add a new VCS access token" name="AccountService test vcs token related logic should add a new VCS access token" time="0.004">
    </testcase>
    <testcase classname="AccountService test vcs token related logic should get VCS access token for a participation" name="AccountService test vcs token related logic should get VCS access token for a participation" time="0.009">
    </testcase>
    <testcase classname="AccountService test vcs token related logic should create VCS access token for a participation" name="AccountService test vcs token related logic should create VCS access token for a participation" time="0.009">
    </testcase>
    <testcase classname="AccountService test external LLM usage acceptance should set externalLLMUsageAccepted when user identity exists" name="AccountService test external LLM usage acceptance should set externalLLMUsageAccepted when user identity exists" time="0.011">
    </testcase>
    <testcase classname="AccountService test external LLM usage acceptance should not throw error when user identity is undefined" name="AccountService test external LLM usage acceptance should not throw error when user identity is undefined" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="CourseExerciseDetailsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:32" time="11.151" tests="18">
    <testcase classname="CourseExerciseDetailsComponent should initialize" name="CourseExerciseDetailsComponent should initialize" time="1.783">
    </testcase>
    <testcase classname="CourseExerciseDetailsComponent should have student participations" name="CourseExerciseDetailsComponent should have student participations" time="0.162">
    </testcase>
    <testcase classname="CourseExerciseDetailsComponent should not be a quiz exercise" name="CourseExerciseDetailsComponent should not be a quiz exercise" time="0.146">
    </testcase>
    <testcase classname="CourseExerciseDetailsComponent should configure example solution for exercise" name="CourseExerciseDetailsComponent should configure example solution for exercise" time="0.149">
    </testcase>
    <testcase classname="CourseExerciseDetailsComponent should collapse example solution for tutors" name="CourseExerciseDetailsComponent should collapse example solution for tutors" time="0.106">
    </testcase>
    <testcase classname="CourseExerciseDetailsComponent should collapse/expand example solution when clicked" name="CourseExerciseDetailsComponent should collapse/expand example solution when clicked" time="0.105">
    </testcase>
    <testcase classname="CourseExerciseDetailsComponent should sort results by completion date in ascending order" name="CourseExerciseDetailsComponent should sort results by completion date in ascending order" time="0.162">
    </testcase>
    <testcase classname="CourseExerciseDetailsComponent should handle results with undefined completion dates" name="CourseExerciseDetailsComponent should handle results with undefined completion dates" time="0.101">
    </testcase>
    <testcase classname="CourseExerciseDetailsComponent should handle empty results array" name="CourseExerciseDetailsComponent should handle empty results array" time="0.139">
    </testcase>
    <testcase classname="CourseExerciseDetailsComponent should handle results with same completion dates" name="CourseExerciseDetailsComponent should handle results with same completion dates" time="0.125">
    </testcase>
    <testcase classname="CourseExerciseDetailsComponent should handle new programming exercise" name="CourseExerciseDetailsComponent should handle new programming exercise" time="0.117">
    </testcase>
    <testcase classname="CourseExerciseDetailsComponent should handle error when getting latest rated result" name="CourseExerciseDetailsComponent should handle error when getting latest rated result" time="0.101">
    </testcase>
    <testcase classname="CourseExerciseDetailsComponent should handle participation update" name="CourseExerciseDetailsComponent should handle participation update" time="0.173">
    </testcase>
    <testcase classname="CourseExerciseDetailsComponent should load iris settings only if profile iris is active" name="CourseExerciseDetailsComponent should load iris settings only if profile iris is active" time="0.169">
    </testcase>
    <testcase classname="CourseExerciseDetailsComponent should load iris settings only if profile iris is active" name="CourseExerciseDetailsComponent should load iris settings only if profile iris is active" time="0.148">
    </testcase>
    <testcase classname="CourseExerciseDetailsComponent should log event on init" name="CourseExerciseDetailsComponent should log event on init" time="0.198">
    </testcase>
    <testcase classname="CourseExerciseDetailsComponent should not show discussion section when communication is disabled" name="CourseExerciseDetailsComponent should not show discussion section when communication is disabled" time="0.151">
    </testcase>
    <testcase classname="CourseExerciseDetailsComponent should show discussion section when communication is enabled" name="CourseExerciseDetailsComponent should show discussion section when communication is enabled" time="0.138">
    </testcase>
  </testsuite>
  <testsuite name="ConversationMessagesComponent with oneToOneChat" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:28" time="16.386" tests="104">
    <testcase classname="ConversationMessagesComponent with oneToOneChat should create" name="ConversationMessagesComponent with oneToOneChat should create" time="1.202">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should set initial values correctly" name="ConversationMessagesComponent with oneToOneChat should set initial values correctly" time="0.297">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should fetch posts on search input and clear search again on clear button press" name="ConversationMessagesComponent with oneToOneChat should fetch posts on search input and clear search again on clear button press" time="0.213">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should fetch posts on next page fetch" name="ConversationMessagesComponent with oneToOneChat should fetch posts on next page fetch" time="0.157">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should save the scroll position in sessionStorage" name="ConversationMessagesComponent with oneToOneChat should save the scroll position in sessionStorage" time="0.185">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should scroll to the last selected element or fetch next page if not found" name="ConversationMessagesComponent with oneToOneChat should scroll to the last selected element or fetch next page if not found" time="0.141">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should find visible elements at the scroll position and save scroll position" name="ConversationMessagesComponent with oneToOneChat should find visible elements at the scroll position and save scroll position" time="0.173">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should not save scroll position if no elements are visible" name="ConversationMessagesComponent with oneToOneChat should not save scroll position if no elements are visible" time="0.13">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should scroll to the bottom when a new message is created" name="ConversationMessagesComponent with oneToOneChat should scroll to the bottom when a new message is created" time="0.148">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should create empty post with the correct conversation type" name="ConversationMessagesComponent with oneToOneChat should create empty post with the correct conversation type" time="0.131">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should set posts and group them correctly" name="ConversationMessagesComponent with oneToOneChat should set posts and group them correctly" time="0.132">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should not group posts that are exactly 5 minutes apart" name="ConversationMessagesComponent with oneToOneChat should not group posts that are exactly 5 minutes apart" time="0.12">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should fetch forwarded messages correctly" name="ConversationMessagesComponent with oneToOneChat should fetch forwarded messages correctly" time="0.143">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should display the inline input when the conversation is not an announcement channel" name="ConversationMessagesComponent with oneToOneChat should display the inline input when the conversation is not an announcement channel" time="0.106">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should scroll to bottom and set canStartSaving to true when lastScrollPosition is falsy" name="ConversationMessagesComponent with oneToOneChat should scroll to bottom and set canStartSaving to true when lastScrollPosition is falsy" time="0.111">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should handle posts without forwarded messages gracefully" name="ConversationMessagesComponent with oneToOneChat should handle posts without forwarded messages gracefully" time="0.153">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should handle forwarded messages with missing source gracefully" name="ConversationMessagesComponent with oneToOneChat should handle forwarded messages with missing source gracefully" time="0.138">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should not fetch source posts or answers for empty forwarded messages" name="ConversationMessagesComponent with oneToOneChat should not fetch source posts or answers for empty forwarded messages" time="0.165">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should correctly assign forwarded posts and answers" name="ConversationMessagesComponent with oneToOneChat should correctly assign forwarded posts and answers" time="0.101">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should filter posts to show only pinned posts when showOnlyPinned is true" name="ConversationMessagesComponent with oneToOneChat should filter posts to show only pinned posts when showOnlyPinned is true" time="0.147">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should show all posts when showOnlyPinned is false" name="ConversationMessagesComponent with oneToOneChat should show all posts when showOnlyPinned is false" time="0.14">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should call setPosts when showOnlyPinned input changes and it is not the first change" name="ConversationMessagesComponent with oneToOneChat should call setPosts when showOnlyPinned input changes and it is not the first change" time="0.125">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should not call setPosts when showOnlyPinned input changes for the first time" name="ConversationMessagesComponent with oneToOneChat should not call setPosts when showOnlyPinned input changes for the first time" time="0.126">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should not call setPosts when showOnlyPinned input does not change" name="ConversationMessagesComponent with oneToOneChat should not call setPosts when showOnlyPinned input does not change" time="0.138">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should subscribe to pinned posts on init and emit pinnedCount" name="ConversationMessagesComponent with oneToOneChat should subscribe to pinned posts on init and emit pinnedCount" time="0.115">
    </testcase>
    <testcase classname="ConversationMessagesComponent with oneToOneChat should fetch pinned posts in onActiveConversationChange and emit pinnedCount" name="ConversationMessagesComponent with oneToOneChat should fetch pinned posts in onActiveConversationChange and emit pinnedCount" time="0.089">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should create" name="ConversationMessagesComponent with groupChat should create" time="0.094">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should set initial values correctly" name="ConversationMessagesComponent with groupChat should set initial values correctly" time="0.126">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should fetch posts on search input and clear search again on clear button press" name="ConversationMessagesComponent with groupChat should fetch posts on search input and clear search again on clear button press" time="0.122">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should fetch posts on next page fetch" name="ConversationMessagesComponent with groupChat should fetch posts on next page fetch" time="0.096">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should save the scroll position in sessionStorage" name="ConversationMessagesComponent with groupChat should save the scroll position in sessionStorage" time="0.1">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should scroll to the last selected element or fetch next page if not found" name="ConversationMessagesComponent with groupChat should scroll to the last selected element or fetch next page if not found" time="0.121">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should find visible elements at the scroll position and save scroll position" name="ConversationMessagesComponent with groupChat should find visible elements at the scroll position and save scroll position" time="0.131">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should not save scroll position if no elements are visible" name="ConversationMessagesComponent with groupChat should not save scroll position if no elements are visible" time="0.07">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should scroll to the bottom when a new message is created" name="ConversationMessagesComponent with groupChat should scroll to the bottom when a new message is created" time="0.107">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should create empty post with the correct conversation type" name="ConversationMessagesComponent with groupChat should create empty post with the correct conversation type" time="0.079">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should set posts and group them correctly" name="ConversationMessagesComponent with groupChat should set posts and group them correctly" time="0.07">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should not group posts that are exactly 5 minutes apart" name="ConversationMessagesComponent with groupChat should not group posts that are exactly 5 minutes apart" time="0.097">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should fetch forwarded messages correctly" name="ConversationMessagesComponent with groupChat should fetch forwarded messages correctly" time="0.093">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should display the inline input when the conversation is not an announcement channel" name="ConversationMessagesComponent with groupChat should display the inline input when the conversation is not an announcement channel" time="0.104">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should scroll to bottom and set canStartSaving to true when lastScrollPosition is falsy" name="ConversationMessagesComponent with groupChat should scroll to bottom and set canStartSaving to true when lastScrollPosition is falsy" time="0.089">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should handle posts without forwarded messages gracefully" name="ConversationMessagesComponent with groupChat should handle posts without forwarded messages gracefully" time="0.088">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should handle forwarded messages with missing source gracefully" name="ConversationMessagesComponent with groupChat should handle forwarded messages with missing source gracefully" time="0.109">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should not fetch source posts or answers for empty forwarded messages" name="ConversationMessagesComponent with groupChat should not fetch source posts or answers for empty forwarded messages" time="0.084">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should correctly assign forwarded posts and answers" name="ConversationMessagesComponent with groupChat should correctly assign forwarded posts and answers" time="0.114">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should filter posts to show only pinned posts when showOnlyPinned is true" name="ConversationMessagesComponent with groupChat should filter posts to show only pinned posts when showOnlyPinned is true" time="0.079">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should show all posts when showOnlyPinned is false" name="ConversationMessagesComponent with groupChat should show all posts when showOnlyPinned is false" time="0.099">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should call setPosts when showOnlyPinned input changes and it is not the first change" name="ConversationMessagesComponent with groupChat should call setPosts when showOnlyPinned input changes and it is not the first change" time="0.087">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should not call setPosts when showOnlyPinned input changes for the first time" name="ConversationMessagesComponent with groupChat should not call setPosts when showOnlyPinned input changes for the first time" time="0.107">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should not call setPosts when showOnlyPinned input does not change" name="ConversationMessagesComponent with groupChat should not call setPosts when showOnlyPinned input does not change" time="0.071">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should subscribe to pinned posts on init and emit pinnedCount" name="ConversationMessagesComponent with groupChat should subscribe to pinned posts on init and emit pinnedCount" time="0.081">
    </testcase>
    <testcase classname="ConversationMessagesComponent with groupChat should fetch pinned posts in onActiveConversationChange and emit pinnedCount" name="ConversationMessagesComponent with groupChat should fetch pinned posts in onActiveConversationChange and emit pinnedCount" time="0.082">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should create" name="ConversationMessagesComponent with channel should create" time="0.113">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should set initial values correctly" name="ConversationMessagesComponent with channel should set initial values correctly" time="0.119">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should fetch posts on search input and clear search again on clear button press" name="ConversationMessagesComponent with channel should fetch posts on search input and clear search again on clear button press" time="0.113">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should fetch posts on next page fetch" name="ConversationMessagesComponent with channel should fetch posts on next page fetch" time="0.079">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should save the scroll position in sessionStorage" name="ConversationMessagesComponent with channel should save the scroll position in sessionStorage" time="0.08">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should scroll to the last selected element or fetch next page if not found" name="ConversationMessagesComponent with channel should scroll to the last selected element or fetch next page if not found" time="0.103">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should find visible elements at the scroll position and save scroll position" name="ConversationMessagesComponent with channel should find visible elements at the scroll position and save scroll position" time="0.089">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should not save scroll position if no elements are visible" name="ConversationMessagesComponent with channel should not save scroll position if no elements are visible" time="0.103">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should scroll to the bottom when a new message is created" name="ConversationMessagesComponent with channel should scroll to the bottom when a new message is created" time="0.114">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should create empty post with the correct conversation type" name="ConversationMessagesComponent with channel should create empty post with the correct conversation type" time="0.092">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should set posts and group them correctly" name="ConversationMessagesComponent with channel should set posts and group them correctly" time="0.12">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should not group posts that are exactly 5 minutes apart" name="ConversationMessagesComponent with channel should not group posts that are exactly 5 minutes apart" time="0.083">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should fetch forwarded messages correctly" name="ConversationMessagesComponent with channel should fetch forwarded messages correctly" time="0.1">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should display the inline input when the conversation is not an announcement channel" name="ConversationMessagesComponent with channel should display the inline input when the conversation is not an announcement channel" time="0.078">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should scroll to bottom and set canStartSaving to true when lastScrollPosition is falsy" name="ConversationMessagesComponent with channel should scroll to bottom and set canStartSaving to true when lastScrollPosition is falsy" time="0.07">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should handle posts without forwarded messages gracefully" name="ConversationMessagesComponent with channel should handle posts without forwarded messages gracefully" time="0.105">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should handle forwarded messages with missing source gracefully" name="ConversationMessagesComponent with channel should handle forwarded messages with missing source gracefully" time="0.108">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should not fetch source posts or answers for empty forwarded messages" name="ConversationMessagesComponent with channel should not fetch source posts or answers for empty forwarded messages" time="0.07">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should correctly assign forwarded posts and answers" name="ConversationMessagesComponent with channel should correctly assign forwarded posts and answers" time="0.104">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should filter posts to show only pinned posts when showOnlyPinned is true" name="ConversationMessagesComponent with channel should filter posts to show only pinned posts when showOnlyPinned is true" time="0.071">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should show all posts when showOnlyPinned is false" name="ConversationMessagesComponent with channel should show all posts when showOnlyPinned is false" time="0.086">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should call setPosts when showOnlyPinned input changes and it is not the first change" name="ConversationMessagesComponent with channel should call setPosts when showOnlyPinned input changes and it is not the first change" time="0.092">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should not call setPosts when showOnlyPinned input changes for the first time" name="ConversationMessagesComponent with channel should not call setPosts when showOnlyPinned input changes for the first time" time="0.097">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should not call setPosts when showOnlyPinned input does not change" name="ConversationMessagesComponent with channel should not call setPosts when showOnlyPinned input does not change" time="0.084">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should subscribe to pinned posts on init and emit pinnedCount" name="ConversationMessagesComponent with channel should subscribe to pinned posts on init and emit pinnedCount" time="0.087">
    </testcase>
    <testcase classname="ConversationMessagesComponent with channel should fetch pinned posts in onActiveConversationChange and emit pinnedCount" name="ConversationMessagesComponent with channel should fetch pinned posts in onActiveConversationChange and emit pinnedCount" time="0.083">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should create" name="ConversationMessagesComponent with announcement channel should create" time="0.101">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should set initial values correctly" name="ConversationMessagesComponent with announcement channel should set initial values correctly" time="0.08">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should fetch posts on search input and clear search again on clear button press" name="ConversationMessagesComponent with announcement channel should fetch posts on search input and clear search again on clear button press" time="0.084">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should fetch posts on next page fetch" name="ConversationMessagesComponent with announcement channel should fetch posts on next page fetch" time="0.084">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should save the scroll position in sessionStorage" name="ConversationMessagesComponent with announcement channel should save the scroll position in sessionStorage" time="0.082">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should scroll to the last selected element or fetch next page if not found" name="ConversationMessagesComponent with announcement channel should scroll to the last selected element or fetch next page if not found" time="0.092">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should find visible elements at the scroll position and save scroll position" name="ConversationMessagesComponent with announcement channel should find visible elements at the scroll position and save scroll position" time="0.097">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should not save scroll position if no elements are visible" name="ConversationMessagesComponent with announcement channel should not save scroll position if no elements are visible" time="0.087">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should scroll to the bottom when a new message is created" name="ConversationMessagesComponent with announcement channel should scroll to the bottom when a new message is created" time="0.123">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should create empty post with the correct conversation type" name="ConversationMessagesComponent with announcement channel should create empty post with the correct conversation type" time="0.183">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should set posts and group them correctly" name="ConversationMessagesComponent with announcement channel should set posts and group them correctly" time="0.199">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should not group posts that are exactly 5 minutes apart" name="ConversationMessagesComponent with announcement channel should not group posts that are exactly 5 minutes apart" time="0.133">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should fetch forwarded messages correctly" name="ConversationMessagesComponent with announcement channel should fetch forwarded messages correctly" time="0.07">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should display the &quot;new announcement&quot; button when the conversation is an announcement channel" name="ConversationMessagesComponent with announcement channel should display the &quot;new announcement&quot; button when the conversation is an announcement channel" time="0.092">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should scroll to bottom and set canStartSaving to true when lastScrollPosition is falsy" name="ConversationMessagesComponent with announcement channel should scroll to bottom and set canStartSaving to true when lastScrollPosition is falsy" time="0.073">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should handle posts without forwarded messages gracefully" name="ConversationMessagesComponent with announcement channel should handle posts without forwarded messages gracefully" time="0.129">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should handle forwarded messages with missing source gracefully" name="ConversationMessagesComponent with announcement channel should handle forwarded messages with missing source gracefully" time="0.105">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should not fetch source posts or answers for empty forwarded messages" name="ConversationMessagesComponent with announcement channel should not fetch source posts or answers for empty forwarded messages" time="0.096">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should correctly assign forwarded posts and answers" name="ConversationMessagesComponent with announcement channel should correctly assign forwarded posts and answers" time="0.078">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should filter posts to show only pinned posts when showOnlyPinned is true" name="ConversationMessagesComponent with announcement channel should filter posts to show only pinned posts when showOnlyPinned is true" time="0.098">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should show all posts when showOnlyPinned is false" name="ConversationMessagesComponent with announcement channel should show all posts when showOnlyPinned is false" time="0.076">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should call setPosts when showOnlyPinned input changes and it is not the first change" name="ConversationMessagesComponent with announcement channel should call setPosts when showOnlyPinned input changes and it is not the first change" time="0.073">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should not call setPosts when showOnlyPinned input changes for the first time" name="ConversationMessagesComponent with announcement channel should not call setPosts when showOnlyPinned input changes for the first time" time="0.074">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should not call setPosts when showOnlyPinned input does not change" name="ConversationMessagesComponent with announcement channel should not call setPosts when showOnlyPinned input does not change" time="0.066">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should subscribe to pinned posts on init and emit pinnedCount" name="ConversationMessagesComponent with announcement channel should subscribe to pinned posts on init and emit pinnedCount" time="0.082">
    </testcase>
    <testcase classname="ConversationMessagesComponent with announcement channel should fetch pinned posts in onActiveConversationChange and emit pinnedCount" name="ConversationMessagesComponent with announcement channel should fetch pinned posts in onActiveConversationChange and emit pinnedCount" time="0.066">
    </testcase>
  </testsuite>
  <testsuite name="Exam Exercise Import Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:44" time="2.806" tests="20">
    <testcase classname="Exam Exercise Import Component should initialize ngOnInit without titleAndShortNameOfProgrammingExercises" name="Exam Exercise Import Component should initialize ngOnInit without titleAndShortNameOfProgrammingExercises" time="0.254">
    </testcase>
    <testcase classname="Exam Exercise Import Component should initialize ngOnInit with titleAndShortNameOfProgrammingExercises" name="Exam Exercise Import Component should initialize ngOnInit with titleAndShortNameOfProgrammingExercises" time="0.065">
    </testcase>
    <testcase classname="Exam Exercise Import Component should initialize maps when updateMapsAfterRejectedImport is called" name="Exam Exercise Import Component should initialize maps when updateMapsAfterRejectedImport is called" time="0.06">
    </testcase>
    <testcase classname="Exam Exercise Import Component should correctly process the selection of a modellingExercise" name="Exam Exercise Import Component should correctly process the selection of a modellingExercise" time="0.051">
    </testcase>
    <testcase classname="Exam Exercise Import Component should correctly process the selection of a programmingExercise" name="Exam Exercise Import Component should correctly process the selection of a programmingExercise" time="0.049">
    </testcase>
    <testcase classname="Exam Exercise Import Component should correctly return an empty string when titleAndShortNameOfProgrammingExercises do not contain exercise" name="Exam Exercise Import Component should correctly return an empty string when titleAndShortNameOfProgrammingExercises do not contain exercise" time="0.049">
    </testcase>
    <testcase classname="Exam Exercise Import Component should correctly map selected Exercises To Exercise Groups" name="Exam Exercise Import Component should correctly map selected Exercises To Exercise Groups" time="0.048">
    </testcase>
    <testcase classname="Exam Exercise Import Component should correctly validate the user input" name="Exam Exercise Import Component should correctly validate the user input" time="0.052">
    </testcase>
    <testcase classname="Exam Exercise Import Component should correctly return the Exercise Icon" name="Exam Exercise Import Component should correctly return the Exercise Icon" time="0.032">
    </testcase>
    <testcase classname="Exam Exercise Import Component Programming exercise import validation should remove duplicated titles when importing" name="Exam Exercise Import Component Programming exercise import validation should remove duplicated titles when importing" time="0.034">
    </testcase>
    <testcase classname="Exam Exercise Import Component Programming exercise import validation should check for programming exercise duplicated titles and short names when entering input" name="Exam Exercise Import Component Programming exercise import validation should check for programming exercise duplicated titles and short names when entering input" time="0.038">
    </testcase>
    <testcase classname="Exam Exercise Import Component Programming exercise import validation should check for programming exercise duplicated titles and short names when entering input" name="Exam Exercise Import Component Programming exercise import validation should check for programming exercise duplicated titles and short names when entering input" time="0.044">
    </testcase>
    <testcase classname="Exam Exercise Import Component Programming exercise import validation should remove exercise from duplicates when title / short name is changed" name="Exam Exercise Import Component Programming exercise import validation should remove exercise from duplicates when title / short name is changed" time="0.045">
    </testcase>
    <testcase classname="Exam Exercise Import Component Programming exercise import validation should remove exercise from duplicates when title / short name is changed" name="Exam Exercise Import Component Programming exercise import validation should remove exercise from duplicates when title / short name is changed" time="0.043">
    </testcase>
    <testcase classname="Exam Exercise Import Component Programming exercise import validation should remove exercise from duplicates when title / short name is changed" name="Exam Exercise Import Component Programming exercise import validation should remove exercise from duplicates when title / short name is changed" time="0.056">
    </testcase>
    <testcase classname="Exam Exercise Import Component Programming exercise import validation should remove exercise from duplicates when title / short name is changed" name="Exam Exercise Import Component Programming exercise import validation should remove exercise from duplicates when title / short name is changed" time="0.043">
    </testcase>
    <testcase classname="Exam Exercise Import Component Programming exercise import validation should check for programming exercise duplicated titles and short names when unselecting exercises" name="Exam Exercise Import Component Programming exercise import validation should check for programming exercise duplicated titles and short names when unselecting exercises" time="0.048">
    </testcase>
    <testcase classname="Exam Exercise Import Component Programming exercise import validation should check for programming exercise duplicated titles and short names when unselecting exercises" name="Exam Exercise Import Component Programming exercise import validation should check for programming exercise duplicated titles and short names when unselecting exercises" time="0.041">
    </testcase>
    <testcase classname="Exam Exercise Import Component Programming exercise import validation should ignore unselected exercises" name="Exam Exercise Import Component Programming exercise import validation should ignore unselected exercises" time="0.026">
    </testcase>
    <testcase classname="Exam Exercise Import Component Programming exercise import validation should ignore unselected exercises" name="Exam Exercise Import Component Programming exercise import validation should ignore unselected exercises" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="ParticipationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:43" time="4.289" tests="23">
    <testcase classname="ParticipationComponent should initialize with exerciseId from route" name="ParticipationComponent should initialize with exerciseId from route" time="0.576">
    </testcase>
    <testcase classname="ParticipationComponent should initialize for non programming exercise" name="ParticipationComponent should initialize for non programming exercise" time="0.029">
    </testcase>
    <testcase classname="ParticipationComponent should initialize for programming exercise" name="ParticipationComponent should initialize for programming exercise" time="0.027">
    </testcase>
    <testcase classname="ParticipationComponent should format student login or team name from participation" name="ParticipationComponent should format student login or team name from participation" time="0.016">
    </testcase>
    <testcase classname="ParticipationComponent should return student login, team short name, or empty from participation" name="ParticipationComponent should return student login, team short name, or empty from participation" time="0.029">
    </testcase>
    <testcase classname="ParticipationComponent should filter participation by prop" name="ParticipationComponent should filter participation by prop" time="0.022">
    </testcase>
    <testcase classname="ParticipationComponent should add participations with updated due dates to the changed map" name="ParticipationComponent should add participations with updated due dates to the changed map" time="0.05">
    </testcase>
    <testcase classname="ParticipationComponent should add participations to the changed map when removing their due date" name="ParticipationComponent should add participations to the changed map when removing their due date" time="0.025">
    </testcase>
    <testcase classname="ParticipationComponent should send all changed participations to the server when updating their due dates" name="ParticipationComponent should send all changed participations to the server when updating their due dates" time="0.052">
    </testcase>
    <testcase classname="ParticipationComponent should error on save changedDueDate" name="ParticipationComponent should error on save changedDueDate" time="0.042">
    </testcase>
    <testcase classname="ParticipationComponent should remove a participation from the change map when it has been deleted" name="ParticipationComponent should remove a participation from the change map when it has been deleted" time="0.029">
    </testcase>
    <testcase classname="ParticipationComponent should update participation filter" name="ParticipationComponent should update participation filter" time="0.031">
    </testcase>
    <testcase classname="ParticipationComponent Presentation Score should add a presentation score if basic presentations is enabled" name="ParticipationComponent Presentation Score should add a presentation score if basic presentations is enabled" time="0.032">
    </testcase>
    <testcase classname="ParticipationComponent Presentation Score should add a presentation score if graded presentations is enabled" name="ParticipationComponent Presentation Score should add a presentation score if graded presentations is enabled" time="0.04">
    </testcase>
    <testcase classname="ParticipationComponent Presentation Score should not add an invalid presentation score if graded presentations is enabled" name="ParticipationComponent Presentation Score should not add an invalid presentation score if graded presentations is enabled" time="0.034">
    </testcase>
    <testcase classname="ParticipationComponent Presentation Score should not add a presentation score if presentations is disabled" name="ParticipationComponent Presentation Score should not add a presentation score if presentations is disabled" time="0.023">
    </testcase>
    <testcase classname="ParticipationComponent Presentation Score should remove a presentation score if basic presentations is enabled" name="ParticipationComponent Presentation Score should remove a presentation score if basic presentations is enabled" time="0.017">
    </testcase>
    <testcase classname="ParticipationComponent Presentation Score should remove a presentation score if graded presentations is enabled" name="ParticipationComponent Presentation Score should remove a presentation score if graded presentations is enabled" time="0.017">
    </testcase>
    <testcase classname="ParticipationComponent Presentation Score should do nothing on removal of a presentation score if presentations is disabled" name="ParticipationComponent Presentation Score should do nothing on removal of a presentation score if presentations is disabled" time="0.02">
    </testcase>
    <testcase classname="ParticipationComponent Presentation Score should check if the presentation score actions should be displayed" name="ParticipationComponent Presentation Score should check if the presentation score actions should be displayed" time="0.027">
    </testcase>
    <testcase classname="ParticipationComponent Presentation Score should not add a presentation score if student gave max number of presentations" name="ParticipationComponent Presentation Score should not add a presentation score if student gave max number of presentations" time="0.033">
    </testcase>
    <testcase classname="ParticipationComponent getScoresRoute should return the correct route for an exercise without an exam" name="ParticipationComponent getScoresRoute should return the correct route for an exercise without an exam" time="0.014">
    </testcase>
    <testcase classname="ParticipationComponent getScoresRoute should return the correct route for an exercise within an exam" name="ParticipationComponent getScoresRoute should return the correct route for an exercise within an exam" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="MonacoEditorCommunicationActionIntegration" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:42" time="5.776" tests="38">
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for channel-reference.action should suggest no values for the wrong model" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for channel-reference.action should suggest no values for the wrong model" time="0.73">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for channel-reference.action should suggest no values if the user is not typing a reference" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for channel-reference.action should suggest no values if the user is not typing a reference" time="0.081">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for channel-reference.action should insert the correct default text when executed" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for channel-reference.action should insert the correct default text when executed" time="0.147">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for channel-reference.action should suggest the correct values if the user is typing a reference (suffix &quot;&quot;)" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for channel-reference.action should suggest the correct values if the user is typing a reference (suffix &quot;&quot;)" time="0.122">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for channel-reference.action should suggest the correct values if the user is typing a reference (suffix &quot;ex&quot;)" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for channel-reference.action should suggest the correct values if the user is typing a reference (suffix &quot;ex&quot;)" time="0.099">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for user-mention.action should suggest no values for the wrong model" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for user-mention.action should suggest no values for the wrong model" time="0.067">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for user-mention.action should suggest no values if the user is not typing a reference" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for user-mention.action should suggest no values if the user is not typing a reference" time="0.076">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for user-mention.action should insert the correct default text when executed" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for user-mention.action should insert the correct default text when executed" time="0.108">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for user-mention.action should suggest the correct values if the user is typing a reference (suffix &quot;&quot;)" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for user-mention.action should suggest the correct values if the user is typing a reference (suffix &quot;&quot;)" time="0.072">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for user-mention.action should suggest the correct values if the user is typing a reference (suffix &quot;ex&quot;)" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for user-mention.action should suggest the correct values if the user is typing a reference (suffix &quot;ex&quot;)" time="0.118">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for exercise-reference.action should suggest no values for the wrong model" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for exercise-reference.action should suggest no values for the wrong model" time="0.063">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for exercise-reference.action should suggest no values if the user is not typing a reference" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for exercise-reference.action should suggest no values if the user is not typing a reference" time="0.08">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for exercise-reference.action should insert the correct default text when executed" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for exercise-reference.action should insert the correct default text when executed" time="0.076">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for exercise-reference.action should suggest the correct values if the user is typing a reference (suffix &quot;&quot;)" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for exercise-reference.action should suggest the correct values if the user is typing a reference (suffix &quot;&quot;)" time="0.065">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for exercise-reference.action should suggest the correct values if the user is typing a reference (suffix &quot;ex&quot;)" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for exercise-reference.action should suggest the correct values if the user is typing a reference (suffix &quot;ex&quot;)" time="0.072">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for faq-reference.action should suggest no values for the wrong model" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for faq-reference.action should suggest no values for the wrong model" time="0.074">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for faq-reference.action should suggest no values if the user is not typing a reference" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for faq-reference.action should suggest no values if the user is not typing a reference" time="0.087">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for faq-reference.action should insert the correct default text when executed" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for faq-reference.action should insert the correct default text when executed" time="0.103">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for faq-reference.action should suggest the correct values if the user is typing a reference (suffix &quot;&quot;)" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for faq-reference.action should suggest the correct values if the user is typing a reference (suffix &quot;&quot;)" time="0.085">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for faq-reference.action should suggest the correct values if the user is typing a reference (suffix &quot;ex&quot;)" name="MonacoEditorCommunicationActionIntegration Suggestions and default behavior for faq-reference.action should suggest the correct values if the user is typing a reference (suffix &quot;ex&quot;)" time="0.07">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration ChannelReferenceAction should use cached channels if available" name="MonacoEditorCommunicationActionIntegration ChannelReferenceAction should use cached channels if available" time="0.06">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration ChannelReferenceAction should load and cache channels if none are cached" name="MonacoEditorCommunicationActionIntegration ChannelReferenceAction should load and cache channels if none are cached" time="0.059">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration ChannelReferenceAction should insert # for channel references" name="MonacoEditorCommunicationActionIntegration ChannelReferenceAction should insert # for channel references" time="0.144">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration ExerciseReferenceAction (edge cases) should initialize with empty values if exercises are not available" name="MonacoEditorCommunicationActionIntegration ExerciseReferenceAction (edge cases) should initialize with empty values if exercises are not available" time="0.058">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration ExerciseReferenceAction (edge cases) should insert / for faq references" name="MonacoEditorCommunicationActionIntegration ExerciseReferenceAction (edge cases) should insert / for faq references" time="0.145">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration FaqReferenceAction should initialize with empty values if faqs are not available" name="MonacoEditorCommunicationActionIntegration FaqReferenceAction should initialize with empty values if faqs are not available" time="0.056">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should correctly initialize lecturesWithDetails" name="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should correctly initialize lecturesWithDetails" time="0.078">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should error on unsupported reference type" name="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should error on unsupported reference type" time="0.039">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should reference a lecture" name="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should reference a lecture" time="0.072">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should reference an attachment without brackets" name="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should reference an attachment without brackets" time="0.057">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should reference a lecture without brackets" name="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should reference a lecture without brackets" time="0.037">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should reference an attachment unit without brackets" name="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should reference an attachment unit without brackets" time="0.059">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should reference an attachment" name="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should reference an attachment" time="0.04">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should error when trying to reference a nonexistent attachment" name="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should error when trying to reference a nonexistent attachment" time="0.112">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should reference an attachment unit" name="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should reference an attachment unit" time="0.068">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should error when trying to reference a nonexistent attachment unit" name="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should error when trying to reference a nonexistent attachment unit" time="0.098">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should reference a slide" name="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should reference a slide" time="0.058">
    </testcase>
    <testcase classname="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should error when incorrectly referencing a slide" name="MonacoEditorCommunicationActionIntegration LectureAttachmentReferenceAction should error when incorrectly referencing a slide" time="0.073">
    </testcase>
  </testsuite>
  <testsuite name="Exercise Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:48" time="1.484" tests="26">
    <testcase classname="Exercise Service should validate equal dates" name="Exercise Service should validate equal dates" time="0.033">
    </testcase>
    <testcase classname="Exercise Service should validate dates" name="Exercise Service should validate dates" time="0.012">
    </testcase>
    <testcase classname="Exercise Service should set errors on invalid due and assessment due dates" name="Exercise Service should set errors on invalid due and assessment due dates" time="0.012">
    </testcase>
    <testcase classname="Exercise Service should validate empty example solution publication date with assessment due date" name="Exercise Service should validate empty example solution publication date with assessment due date" time="0.008">
    </testcase>
    <testcase classname="Exercise Service should validate empty example solution publication date" name="Exercise Service should validate empty example solution publication date" time="0.006">
    </testcase>
    <testcase classname="Exercise Service should set error when due date is before release date" name="Exercise Service should set error when due date is before release date" time="0.005">
    </testcase>
    <testcase classname="Exercise Service should set error when example solution publication date is before release date" name="Exercise Service should set error when example solution publication date is before release date" time="0.013">
    </testcase>
    <testcase classname="Exercise Service should set error when example solution publication date is before due date" name="Exercise Service should set error when example solution publication date is before due date" time="0.032">
    </testcase>
    <testcase classname="Exercise Service should allow example solution publication date is before due date with a warning" name="Exercise Service should allow example solution publication date is before due date with a warning" time="0.012">
    </testcase>
    <testcase classname="Exercise Service should fill &amp; empty example modeling solution" name="Exercise Service should fill &amp; empty example modeling solution" time="0.007">
    </testcase>
    <testcase classname="Exercise Service should fill &amp; empty example text solution" name="Exercise Service should fill &amp; empty example text solution" time="0.006">
    </testcase>
    <testcase classname="Exercise Service should fill &amp; empty example file upload solution" name="Exercise Service should fill &amp; empty example file upload solution" time="0.011">
    </testcase>
    <testcase classname="Exercise Service should fill &amp; empty example programming exercise solution" name="Exercise Service should fill &amp; empty example programming exercise solution" time="0.021">
    </testcase>
    <testcase classname="Exercise Service should determine is included in score string" name="Exercise Service should determine is included in score string" time="0.031">
    </testcase>
    <testcase classname="Exercise Service should determine correctly if quiz is active" name="Exercise Service should determine correctly if quiz is active" time="0.013">
    </testcase>
    <testcase classname="Exercise Service should determine correctly if quiz is active" name="Exercise Service should determine correctly if quiz is active" time="0.005">
    </testcase>
    <testcase classname="Exercise Service should determine correctly if quiz is active" name="Exercise Service should determine correctly if quiz is active" time="0.005">
    </testcase>
    <testcase classname="Exercise Service should determine correctly if quiz is active" name="Exercise Service should determine correctly if quiz is active" time="0.005">
    </testcase>
    <testcase classname="Exercise Service should determine correctly if quiz is active" name="Exercise Service should determine correctly if quiz is active" time="0.008">
    </testcase>
    <testcase classname="Exercise Service should process exercise entity response" name="Exercise Service should process exercise entity response" time="0.025">
    </testcase>
    <testcase classname="Exercise Service should send create request for the exercise" name="Exercise Service should send create request for the exercise" time="0.011">
    </testcase>
    <testcase classname="Exercise Service should send update request for the exercise" name="Exercise Service should send update request for the exercise" time="0.009">
    </testcase>
    <testcase classname="Exercise Service should get exercise details" name="Exercise Service should get exercise details" time="0.008">
    </testcase>
    <testcase classname="Exercise Service should get exercise for example solution" name="Exercise Service should get exercise for example solution" time="0.006">
    </testcase>
    <testcase classname="Exercise Service should send a reset request" name="Exercise Service should send a reset request" time="0.028">
    </testcase>
    <testcase classname="Exercise Service should toggle second correction" name="Exercise Service should toggle second correction" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="BuildQueueComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:45" time="5.764" tests="18">
    <testcase classname="BuildQueueComponent should initialize" name="BuildQueueComponent should initialize" time="0.748">
    </testcase>
    <testcase classname="BuildQueueComponent should create" name="BuildQueueComponent should create" time="0.053">
    </testcase>
    <testcase classname="BuildQueueComponent should initialize all build job data" name="BuildQueueComponent should initialize all build job data" time="0.043">
    </testcase>
    <testcase classname="BuildQueueComponent should initialize with course data" name="BuildQueueComponent should initialize with course data" time="0.071">
    </testcase>
    <testcase classname="BuildQueueComponent should refresh data" name="BuildQueueComponent should refresh data" time="0.058">
    </testcase>
    <testcase classname="BuildQueueComponent should update build job duration in running build jobs" name="BuildQueueComponent should update build job duration in running build jobs" time="0.048">
    </testcase>
    <testcase classname="BuildQueueComponent should cancel a build job in a course" name="BuildQueueComponent should cancel a build job in a course" time="0.062">
    </testcase>
    <testcase classname="BuildQueueComponent should cancel a build job without a course ID" name="BuildQueueComponent should cancel a build job without a course ID" time="0.057">
    </testcase>
    <testcase classname="BuildQueueComponent should cancel all queued build jobs in a course" name="BuildQueueComponent should cancel all queued build jobs in a course" time="0.07">
    </testcase>
    <testcase classname="BuildQueueComponent should cancel all running build jobs in a course" name="BuildQueueComponent should cancel all running build jobs in a course" time="0.068">
    </testcase>
    <testcase classname="BuildQueueComponent should cancel all queued build jobs" name="BuildQueueComponent should cancel all queued build jobs" time="0.049">
    </testcase>
    <testcase classname="BuildQueueComponent should cancel all running build jobs" name="BuildQueueComponent should cancel all running build jobs" time="0.035">
    </testcase>
    <testcase classname="BuildQueueComponent should load finished build jobs on initialization" name="BuildQueueComponent should load finished build jobs on initialization" time="0.068">
    </testcase>
    <testcase classname="BuildQueueComponent should load finished build jobs for a specific course on initialization" name="BuildQueueComponent should load finished build jobs for a specific course on initialization" time="0.033">
    </testcase>
    <testcase classname="BuildQueueComponent should trigger refresh on search term change" name="BuildQueueComponent should trigger refresh on search term change" time="0.18">
    </testcase>
    <testcase classname="BuildQueueComponent should set build job duration" name="BuildQueueComponent should set build job duration" time="0.065">
    </testcase>
    <testcase classname="BuildQueueComponent should correctly set filterModal values" name="BuildQueueComponent should correctly set filterModal values" time="0.046">
    </testcase>
    <testcase classname="BuildQueueComponent should download build logs" name="BuildQueueComponent should download build logs" time="0.07">
    </testcase>
  </testsuite>
  <testsuite name="CourseNotificationService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:50" time="1.12" tests="36">
    <testcase classname="CourseNotificationService should be created" name="CourseNotificationService should be created" time="0.011">
    </testcase>
    <testcase classname="CourseNotificationService getNextNotificationPage should return false if final page was already reached" name="CourseNotificationService getNextNotificationPage should return false if final page was already reached" time="0.005">
    </testcase>
    <testcase classname="CourseNotificationService getNextNotificationPage should initialize the notifications array if it does not exist" name="CourseNotificationService getNextNotificationPage should initialize the notifications array if it does not exist" time="0.014">
    </testcase>
    <testcase classname="CourseNotificationService getNextNotificationPage should fetch notification page and handle response with content" name="CourseNotificationService getNextNotificationPage should fetch notification page and handle response with content" time="0.006">
    </testcase>
    <testcase classname="CourseNotificationService getNextNotificationPage should handle empty response" name="CourseNotificationService getNextNotificationPage should handle empty response" time="0.003">
    </testcase>
    <testcase classname="CourseNotificationService setNotificationStatus should make PUT request to set notification status" name="CourseNotificationService setNotificationStatus should make PUT request to set notification status" time="0.009">
    </testcase>
    <testcase classname="CourseNotificationService archiveAll should make PUT request to archive all notifications" name="CourseNotificationService archiveAll should make PUT request to archive all notifications" time="0.007">
    </testcase>
    <testcase classname="CourseNotificationService archiveAllInMap should clear notifications in map and update count" name="CourseNotificationService archiveAllInMap should clear notifications in map and update count" time="0.004">
    </testcase>
    <testcase classname="CourseNotificationService setNotificationStatusInMap should update notification status in the map" name="CourseNotificationService setNotificationStatusInMap should update notification status in the map" time="0.006">
    </testcase>
    <testcase classname="CourseNotificationService addNotification should initialize the notifications array if it does not exist" name="CourseNotificationService addNotification should initialize the notifications array if it does not exist" time="0.007">
    </testcase>
    <testcase classname="CourseNotificationService removeNotificationFromMap should do nothing if notifications array does not exist" name="CourseNotificationService removeNotificationFromMap should do nothing if notifications array does not exist" time="0.003">
    </testcase>
    <testcase classname="CourseNotificationService removeNotificationFromMap should remove notification if it exists in map" name="CourseNotificationService removeNotificationFromMap should remove notification if it exists in map" time="0.004">
    </testcase>
    <testcase classname="CourseNotificationService removeNotificationFromMap should not modify map if notification does not exist" name="CourseNotificationService removeNotificationFromMap should not modify map if notification does not exist" time="0.004">
    </testcase>
    <testcase classname="CourseNotificationService updateNotificationCountMap should update count and notify subscribers if count changes" name="CourseNotificationService updateNotificationCountMap should update count and notify subscribers if count changes" time="0.008">
    </testcase>
    <testcase classname="CourseNotificationService updateNotificationCountMap should not notify subscribers if count does not change" name="CourseNotificationService updateNotificationCountMap should not notify subscribers if count does not change" time="0.007">
    </testcase>
    <testcase classname="CourseNotificationService incrementNotificationCount should initialize count to 0 if undefined and increment" name="CourseNotificationService incrementNotificationCount should initialize count to 0 if undefined and increment" time="0.018">
    </testcase>
    <testcase classname="CourseNotificationService incrementNotificationCount should increment existing count" name="CourseNotificationService incrementNotificationCount should increment existing count" time="0.005">
    </testcase>
    <testcase classname="CourseNotificationService decreaseNotificationCountBy should do nothing if count is undefined" name="CourseNotificationService decreaseNotificationCountBy should do nothing if count is undefined" time="0.01">
    </testcase>
    <testcase classname="CourseNotificationService decreaseNotificationCountBy should decrease count and notify subscribers" name="CourseNotificationService decreaseNotificationCountBy should decrease count and notify subscribers" time="0.006">
    </testcase>
    <testcase classname="CourseNotificationService getNotificationCountForCourse$ should return observable with notification count for course" name="CourseNotificationService getNotificationCountForCourse$ should return observable with notification count for course" time="0.004">
    </testcase>
    <testcase classname="CourseNotificationService getNotificationCountForCourse$ should return 0 if no count exists for course" name="CourseNotificationService getNotificationCountForCourse$ should return 0 if no count exists for course" time="0.009">
    </testcase>
    <testcase classname="CourseNotificationService getNotificationsForCourse$ should return observable with notifications for course" name="CourseNotificationService getNotificationsForCourse$ should return observable with notifications for course" time="0.01">
    </testcase>
    <testcase classname="CourseNotificationService getIconFromType should return icon for known notification type" name="CourseNotificationService getIconFromType should return icon for known notification type" time="0.007">
    </testcase>
    <testcase classname="CourseNotificationService getIconFromType should return default icon for undefined type" name="CourseNotificationService getIconFromType should return default icon for undefined type" time="0.003">
    </testcase>
    <testcase classname="CourseNotificationService getIconFromType should return default icon for unknown type" name="CourseNotificationService getIconFromType should return default icon for unknown type" time="0.003">
    </testcase>
    <testcase classname="CourseNotificationService getDateTranslationKey should return &quot;now&quot; for notifications created within last 5 minutes" name="CourseNotificationService getDateTranslationKey should return &quot;now&quot; for notifications created within last 5 minutes" time="0.005">
    </testcase>
    <testcase classname="CourseNotificationService getDateTranslationKey should return &quot;oneHourAgo&quot; for notifications created between 5 minutes and 2 hours ago" name="CourseNotificationService getDateTranslationKey should return &quot;oneHourAgo&quot; for notifications created between 5 minutes and 2 hours ago" time="0.004">
    </testcase>
    <testcase classname="CourseNotificationService getDateTranslationKey should return &quot;hoursAgo&quot; for notifications created between 2 and 9 hours ago" name="CourseNotificationService getDateTranslationKey should return &quot;hoursAgo&quot; for notifications created between 2 and 9 hours ago" time="0.004">
    </testcase>
    <testcase classname="CourseNotificationService getDateTranslationKey should return &quot;today&quot; for notifications created today but more than 9 hours ago" name="CourseNotificationService getDateTranslationKey should return &quot;today&quot; for notifications created today but more than 9 hours ago" time="0.004">
    </testcase>
    <testcase classname="CourseNotificationService getDateTranslationKey should return &quot;yesterday&quot; for notifications created yesterday" name="CourseNotificationService getDateTranslationKey should return &quot;yesterday&quot; for notifications created yesterday" time="0.01">
    </testcase>
    <testcase classname="CourseNotificationService getDateTranslationKey should return &quot;date&quot; for notifications created before this week" name="CourseNotificationService getDateTranslationKey should return &quot;date&quot; for notifications created before this week" time="0.021">
    </testcase>
    <testcase classname="CourseNotificationService getDateTranslationParams should return formatted translation parameters" name="CourseNotificationService getDateTranslationParams should return formatted translation parameters" time="0.006">
    </testcase>
    <testcase classname="CourseNotificationService addNotificationIfNotDuplicate should prepend notification if not a duplicate" name="CourseNotificationService addNotificationIfNotDuplicate should prepend notification if not a duplicate" time="0.003">
    </testcase>
    <testcase classname="CourseNotificationService addNotificationIfNotDuplicate should append notification if not a duplicate" name="CourseNotificationService addNotificationIfNotDuplicate should append notification if not a duplicate" time="0.003">
    </testcase>
    <testcase classname="CourseNotificationService addNotificationIfNotDuplicate should not add notification if it is a duplicate" name="CourseNotificationService addNotificationIfNotDuplicate should not add notification if it is a duplicate" time="0.003">
    </testcase>
    <testcase classname="CourseNotificationService convertResponseFromServer should convert dates and enums in response" name="CourseNotificationService convertResponseFromServer should convert dates and enums in response" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="CourseStatisticsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:47" time="5.998" tests="9">
    <testcase classname="CourseStatisticsComponent should group all exercises" name="CourseStatisticsComponent should group all exercises" time="1.172">
    </testcase>
    <testcase classname="CourseStatisticsComponent should filter all exercises not included in score" name="CourseStatisticsComponent should filter all exercises not included in score" time="0.434">
    </testcase>
    <testcase classname="CourseStatisticsComponent should set the scores correctly after retrieving them from the store" name="CourseStatisticsComponent should set the scores correctly after retrieving them from the store" time="0.449">
    </testcase>
    <testcase classname="CourseStatisticsComponent should set the course after being notified about a course update" name="CourseStatisticsComponent should set the course after being notified about a course update" time="0.006">
    </testcase>
    <testcase classname="CourseStatisticsComponent should delegate the user correctly" name="CourseStatisticsComponent should delegate the user correctly" time="0.008">
    </testcase>
    <testcase classname="CourseStatisticsComponent test chart filters should filter optional exercises correctly" name="CourseStatisticsComponent test chart filters should filter optional exercises correctly" time="0.01">
    </testcase>
    <testcase classname="CourseStatisticsComponent test chart filters should toggle categories" name="CourseStatisticsComponent test chart filters should toggle categories" time="0.008">
    </testcase>
    <testcase classname="CourseStatisticsComponent test chart filters should toggle all categories" name="CourseStatisticsComponent test chart filters should toggle all categories" time="0.009">
    </testcase>
    <testcase classname="CourseStatisticsComponent test chart filters should toggle exercises with no categories" name="CourseStatisticsComponent test chart filters should toggle exercises with no categories" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="MetisConversationService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:53" time="2.606" tests="22">
    <testcase classname="MetisConversationService should create" name="MetisConversationService should create" time="0.022">
    </testcase>
    <testcase classname="MetisConversationService should set up the service correctly" name="MetisConversationService should set up the service correctly" time="0.01">
    </testcase>
    <testcase classname="MetisConversationService should set active conversation" name="MetisConversationService should set active conversation" time="0.008">
    </testcase>
    <testcase classname="MetisConversationService should set active conversation by id" name="MetisConversationService should set active conversation by id" time="0.03">
    </testcase>
    <testcase classname="MetisConversationService should set has unread messages to true" name="MetisConversationService should set has unread messages to true" time="0.008">
    </testcase>
    <testcase classname="MetisConversationService should show alert if channel doesn&apos;t exist" name="MetisConversationService should show alert if channel doesn&apos;t exist" time="0.007">
    </testcase>
    <testcase classname="MetisConversationService should get conversations of users again if force refresh is called" name="MetisConversationService should get conversations of users again if force refresh is called" time="0.008">
    </testcase>
    <testcase classname="MetisConversationService should set active conversation to newly created channel" name="MetisConversationService should set active conversation to newly created channel" time="0.012">
    </testcase>
    <testcase classname="MetisConversationService should set active conversation to newly created groupChat" name="MetisConversationService should set active conversation to newly created groupChat" time="0.012">
    </testcase>
    <testcase classname="MetisConversationService should set active conversation to newly created one to one chat" name="MetisConversationService should set active conversation to newly created one to one chat" time="0.018">
    </testcase>
    <testcase classname="MetisConversationService should set active conversation to newly created one to one chat when calling with id" name="MetisConversationService should set active conversation to newly created one to one chat when calling with id" time="0.018">
    </testcase>
    <testcase classname="MetisConversationService should add new conversation to conversations of user on conversation create received" name="MetisConversationService should add new conversation to conversations of user on conversation create received" time="0.028">
    </testcase>
    <testcase classname="MetisConversationService should update conversation in conversations of user on conversation update received" name="MetisConversationService should update conversation in conversations of user on conversation update received" time="0.012">
    </testcase>
    <testcase classname="MetisConversationService should update conversation last message date in conversations of user on conversation new message received" name="MetisConversationService should update conversation last message date in conversations of user on conversation new message received" time="0.009">
    </testcase>
    <testcase classname="MetisConversationService should remove conversation in conversations of user on conversation delete received" name="MetisConversationService should remove conversation in conversations of user on conversation delete received" time="0.013">
    </testcase>
    <testcase classname="MetisConversationService should update subscription for unread messages" name="MetisConversationService should update subscription for unread messages" time="0.008">
    </testcase>
    <testcase classname="MetisConversationService should update subscription for unread messages" name="MetisConversationService should update subscription for unread messages" time="0.007">
    </testcase>
    <testcase classname="MetisConversationService should set code of conduct" name="MetisConversationService should set code of conduct" time="0.007">
    </testcase>
    <testcase classname="MetisConversationService should check and accept code of conduct" name="MetisConversationService should check and accept code of conduct" time="0.008">
    </testcase>
    <testcase classname="MetisConversationService should handle new message" name="MetisConversationService should handle new message" time="0.008">
    </testcase>
    <testcase classname="MetisConversationService should mark messages as read" name="MetisConversationService should mark messages as read" time="0.028">
    </testcase>
    <testcase classname="MetisConversationService should call refresh after marking all channels as read" name="MetisConversationService should call refresh after marking all channels as read" time="0.046">
    </testcase>
  </testsuite>
  <testsuite name="ParticipationSubmissionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:47" time="9.471" tests="12">
    <testcase classname="ParticipationSubmissionComponent Submissions are correctly loaded from server" name="ParticipationSubmissionComponent Submissions are correctly loaded from server" time="1.387">
    </testcase>
    <testcase classname="ParticipationSubmissionComponent Template Submission is correctly loaded" name="ParticipationSubmissionComponent Template Submission is correctly loaded" time="0.515">
    </testcase>
    <testcase classname="ParticipationSubmissionComponent Solution Submission is correctly loaded" name="ParticipationSubmissionComponent Solution Submission is correctly loaded" time="0.394">
    </testcase>
    <testcase classname="ParticipationSubmissionComponent should delete should delete result of fileUploadSubmission" name="ParticipationSubmissionComponent should delete should delete result of fileUploadSubmission" time="0.35">
    </testcase>
    <testcase classname="ParticipationSubmissionComponent should delete should delete result of modelingSubmission" name="ParticipationSubmissionComponent should delete should delete result of modelingSubmission" time="0.302">
    </testcase>
    <testcase classname="ParticipationSubmissionComponent should delete should delete result of programmingSubmission" name="ParticipationSubmissionComponent should delete should delete result of programmingSubmission" time="0.293">
    </testcase>
    <testcase classname="ParticipationSubmissionComponent should delete should delete result of textSubmission" name="ParticipationSubmissionComponent should delete should delete result of textSubmission" time="0.299">
    </testcase>
    <testcase classname="ParticipationSubmissionComponent should handle failed delete should not delete result of fileUploadSubmission because of server error" name="ParticipationSubmissionComponent should handle failed delete should not delete result of fileUploadSubmission because of server error" time="0.277">
    </testcase>
    <testcase classname="ParticipationSubmissionComponent should handle failed delete should not delete result of fileUploadSubmission" name="ParticipationSubmissionComponent should handle failed delete should not delete result of fileUploadSubmission" time="0.291">
    </testcase>
    <testcase classname="ParticipationSubmissionComponent should handle failed delete should not delete result of modelingSubmission" name="ParticipationSubmissionComponent should handle failed delete should not delete result of modelingSubmission" time="0.271">
    </testcase>
    <testcase classname="ParticipationSubmissionComponent should handle failed delete should not delete result of programmingSubmission" name="ParticipationSubmissionComponent should handle failed delete should not delete result of programmingSubmission" time="0.282">
    </testcase>
    <testcase classname="ParticipationSubmissionComponent should handle failed delete should not delete result of textSubmission" name="ParticipationSubmissionComponent should handle failed delete should not delete result of textSubmission" time="0.274">
    </testcase>
  </testsuite>
  <testsuite name="PostComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:51" time="10.018" tests="35">
    <testcase classname="PostComponent should sort answers" name="PostComponent should sort answers" time="0.984">
    </testcase>
    <testcase classname="PostComponent should not sort empty array of answers" name="PostComponent should not sort empty array of answers" time="0.169">
    </testcase>
    <testcase classname="PostComponent should set router link and query params" name="PostComponent should set router link and query params" time="0.134">
    </testcase>
    <testcase classname="PostComponent should initialize post without context information when shown in page section" name="PostComponent should initialize post without context information when shown in page section" time="0.369">
    </testcase>
    <testcase classname="PostComponent should contain the posting content" name="PostComponent should contain the posting content" time="0.325">
    </testcase>
    <testcase classname="PostComponent should contain a post footer" name="PostComponent should contain a post footer" time="0.147">
    </testcase>
    <testcase classname="PostComponent should have correct content and title" name="PostComponent should have correct content and title" time="0.149">
    </testcase>
    <testcase classname="PostComponent should open create answer post modal" name="PostComponent should open create answer post modal" time="0.234">
    </testcase>
    <testcase classname="PostComponent should close create answer post modal" name="PostComponent should close create answer post modal" time="0.237">
    </testcase>
    <testcase classname="PostComponent should create or navigate to oneToOneChat when not on messaging page" name="PostComponent should create or navigate to oneToOneChat when not on messaging page" time="0.125">
    </testcase>
    <testcase classname="PostComponent should create or navigate to oneToOneChat when on messaging page" name="PostComponent should create or navigate to oneToOneChat when on messaging page" time="0.13">
    </testcase>
    <testcase classname="PostComponent should navigate to channel when not on messaging page" name="PostComponent should navigate to channel when not on messaging page" time="0.139">
    </testcase>
    <testcase classname="PostComponent should navigate to channel when on messaging page" name="PostComponent should navigate to channel when on messaging page" time="0.122">
    </testcase>
    <testcase classname="PostComponent should set isDeleted to true" name="PostComponent should set isDeleted to true" time="0.145">
    </testcase>
    <testcase classname="PostComponent should clear existing timers and intervals" name="PostComponent should clear existing timers and intervals" time="0.106">
    </testcase>
    <testcase classname="PostComponent should clear existing timers and intervals on destroy" name="PostComponent should clear existing timers and intervals on destroy" time="0.116">
    </testcase>
    <testcase classname="PostComponent should set deleteTimer and deleteInterval when isDelete is true" name="PostComponent should set deleteTimer and deleteInterval when isDelete is true" time="0.132">
    </testcase>
    <testcase classname="PostComponent should not set timers when isDelete is false" name="PostComponent should not set timers when isDelete is false" time="0.158">
    </testcase>
    <testcase classname="PostComponent should return true if the post is pinned" name="PostComponent should return true if the post is pinned" time="0.166">
    </testcase>
    <testcase classname="PostComponent should return false if the post is not pinned" name="PostComponent should return false if the post is not pinned" time="0.109">
    </testcase>
    <testcase classname="PostComponent should close previous dropdown when another is opened" name="PostComponent should close previous dropdown when another is opened" time="0.117">
    </testcase>
    <testcase classname="PostComponent should disable body scroll" name="PostComponent should disable body scroll" time="0.124">
    </testcase>
    <testcase classname="PostComponent should enable body scroll" name="PostComponent should enable body scroll" time="0.083">
    </testcase>
    <testcase classname="PostComponent should handle click outside and hide dropdown" name="PostComponent should handle click outside and hide dropdown" time="0.102">
    </testcase>
    <testcase classname="PostComponent should handle onRightClick correctly based on cursor style" name="PostComponent should handle onRightClick correctly based on cursor style" time="0.123">
    </testcase>
    <testcase classname="PostComponent should display forwardMessage button and invoke forwardMessage function when clicked" name="PostComponent should display forwardMessage button and invoke forwardMessage function when clicked" time="0.23">
    </testcase>
    <testcase classname="PostComponent should cast the post to Post on change" name="PostComponent should cast the post to Post on change" time="0.243">
    </testcase>
    <testcase classname="PostComponent should display post-time span when isConsecutive() returns true" name="PostComponent should display post-time span when isConsecutive() returns true" time="0.183">
    </testcase>
    <testcase classname="PostComponent should not display post-time span when isConsecutive() returns false" name="PostComponent should not display post-time span when isConsecutive() returns false" time="0.2">
    </testcase>
    <testcase classname="PostComponent should do nothing if both forwardedPosts and forwardedAnswerPosts are empty" name="PostComponent should do nothing if both forwardedPosts and forwardedAnswerPosts are empty" time="0.095">
    </testcase>
    <testcase classname="PostComponent should set originalPostDetails from first forwarded post if forwardedPosts is non-empty" name="PostComponent should set originalPostDetails from first forwarded post if forwardedPosts is non-empty" time="0.114">
    </testcase>
    <testcase classname="PostComponent should set originalPostDetails from first forwarded answer if forwardedAnswerPosts is non-empty and forwardedPosts is empty" name="PostComponent should set originalPostDetails from first forwarded answer if forwardedAnswerPosts is non-empty and forwardedPosts is empty" time="0.097">
    </testcase>
    <testcase classname="PostComponent should call markForCheck if a forwarded post is set" name="PostComponent should call markForCheck if a forwarded post is set" time="0.091">
    </testcase>
    <testcase classname="PostComponent should call markForCheck if a forwarded answer is set" name="PostComponent should call markForCheck if a forwarded answer is set" time="0.158">
    </testcase>
    <testcase classname="PostComponent should emit onNavigateToPost event when onTriggerNavigateToPost is called" name="PostComponent should emit onNavigateToPost event when onTriggerNavigateToPost is called" time="0.116">
    </testcase>
  </testsuite>
  <testsuite name="ExamResultSummaryComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:51" time="11.41" tests="42">
    <testcase classname="ExamResultSummaryComponent should expand all exercises and call print when Export PDF is clicked" name="ExamResultSummaryComponent should expand all exercises and call print when Export PDF is clicked" time="2.015">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should retrieve grade info correctly" name="ExamResultSummaryComponent should retrieve grade info correctly" time="0.229">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for null in generateLink" name="ExamResultSummaryComponent should handle missing/empty fields correctly for null in generateLink" time="0.089">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for undefined in generateLink" name="ExamResultSummaryComponent should handle missing/empty fields correctly for undefined in generateLink" time="0.127">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for {} in generateLink" name="ExamResultSummaryComponent should handle missing/empty fields correctly for {} in generateLink" time="0.13">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: null } in generateLink" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: null } in generateLink" time="0.091">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: undefined } in generateLink" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: undefined } in generateLink" time="0.089">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ [length]: 0 ] } in generateLink" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ [length]: 0 ] } in generateLink" time="0.073">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ { id: 1 }, [length]: 1 ] } in generateLink" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ { id: 1 }, [length]: 1 ] } in generateLink" time="0.127">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for {} in getParticipationForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for {} in getParticipationForExercise" time="0.13">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: null } in getParticipationForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: null } in getParticipationForExercise" time="0.1">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: undefined } in getParticipationForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: undefined } in getParticipationForExercise" time="0.116">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ [length]: 0 ] } in getParticipationForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ [length]: 0 ] } in getParticipationForExercise" time="0.074">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ null, [length]: 1 ] } in getParticipationForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ null, [length]: 1 ] } in getParticipationForExercise" time="0.093">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ undefined, [length]: 1 ] } in getParticipationForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ undefined, [length]: 1 ] } in getParticipationForExercise" time="0.072">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ { id: 2 }, [length]: 1 ] } in getParticipationForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ { id: 2 }, [length]: 1 ] } in getParticipationForExercise" time="0.106">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for null in getSubmissionForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for null in getSubmissionForExercise" time="0.086">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for undefined in getSubmissionForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for undefined in getSubmissionForExercise" time="0.082">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for {} in getSubmissionForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for {} in getSubmissionForExercise" time="0.085">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: null } in getSubmissionForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: null } in getSubmissionForExercise" time="0.088">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: undefined } in getSubmissionForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: undefined } in getSubmissionForExercise" time="0.131">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ [length]: 0 ] } in getSubmissionForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ [length]: 0 ] } in getSubmissionForExercise" time="0.1">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ null, [length]: 1 ] } in getSubmissionForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ null, [length]: 1 ] } in getSubmissionForExercise" time="0.128">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ undefined, [length]: 1 ] } in getSubmissionForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ undefined, [length]: 1 ] } in getSubmissionForExercise" time="0.098">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ {}, [length]: 1 ] } in getSubmissionForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ {}, [length]: 1 ] } in getSubmissionForExercise" time="0.119">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ { submissions: null }, [length]: 1 ] } in getSubmissionForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ { submissions: null }, [length]: 1 ] } in getSubmissionForExercise" time="0.154">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ { submissions: undefined }, [length]: 1 ] } in getSubmissionForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for { studentParticipations: [ { submissions: undefined }, [length]: 1 ] } in getSubmissionForExercise" time="0.112">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should handle missing/empty fields correctly for {
  studentParticipations: [
    { submissions: [ { id: 3 }, [length]: 1 ] },
    [length]: 1
  ]
} in getSubmissionForExercise" name="ExamResultSummaryComponent should handle missing/empty fields correctly for {
  studentParticipations: [
    { submissions: [ { id: 3 }, [length]: 1 ] },
    [length]: 1
  ]
} in getSubmissionForExercise" time="0.122">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should update student exam correctly" name="ExamResultSummaryComponent should update student exam correctly" time="0.145">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should correctly identify a TestExam" name="ExamResultSummaryComponent should correctly identify a TestExam" time="0.076">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should correctly identify a RealExam" name="ExamResultSummaryComponent should correctly identify a RealExam" time="0.095">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should correctly determine if the results are published" name="ExamResultSummaryComponent should correctly determine if the results are published" time="0.12">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should load exam summary when results are published" name="ExamResultSummaryComponent should load exam summary when results are published" time="0.097">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should correctly determine if it is after student review start" name="ExamResultSummaryComponent should correctly determine if it is after student review start" time="0.107">
    </testcase>
    <testcase classname="ExamResultSummaryComponent should correctly determine if it is before student review end" name="ExamResultSummaryComponent should correctly determine if it is before student review end" time="0.093">
    </testcase>
    <testcase classname="ExamResultSummaryComponent getAchievedPercentageByExerciseId should return undefined if exercise result is undefined" name="ExamResultSummaryComponent getAchievedPercentageByExerciseId should return undefined if exercise result is undefined" time="0.122">
    </testcase>
    <testcase classname="ExamResultSummaryComponent getAchievedPercentageByExerciseId should calculate percentage based on achievedScore considering course settings" name="ExamResultSummaryComponent getAchievedPercentageByExerciseId should calculate percentage based on achievedScore considering course settings" time="0.09">
    </testcase>
    <testcase classname="ExamResultSummaryComponent getAchievedPercentageByExerciseId should calculate percentage based on maxScore and achievedPoints" name="ExamResultSummaryComponent getAchievedPercentageByExerciseId should calculate percentage based on maxScore and achievedPoints" time="0.08">
    </testcase>
    <testcase classname="ExamResultSummaryComponent getAchievedPercentageByExerciseId should return undefined if not set and not calculable" name="ExamResultSummaryComponent getAchievedPercentageByExerciseId should return undefined if not set and not calculable" time="0.089">
    </testcase>
    <testcase classname="ExamResultSummaryComponent scrollToOverviewOrTop should scroll to exam title when overview is not displayed" name="ExamResultSummaryComponent scrollToOverviewOrTop should scroll to exam title when overview is not displayed" time="0.061">
    </testcase>
    <testcase classname="ExamResultSummaryComponent scrollToOverviewOrTop should scroll to overview when it is displayed" name="ExamResultSummaryComponent scrollToOverviewOrTop should scroll to overview when it is displayed" time="0.106">
    </testcase>
    <testcase classname="ExamResultSummaryComponent toggleShowSampleSolution should be called on button click" name="ExamResultSummaryComponent toggleShowSampleSolution should be called on button click" time="0.168">
    </testcase>
  </testsuite>
  <testsuite name="ExampleTextSubmissionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:56" time="6.678" tests="16">
    <testcase classname="ExampleTextSubmissionComponent should fetch example submission with result for existing example submission and switch to edit state" name="ExampleTextSubmissionComponent should fetch example submission with result for existing example submission and switch to edit state" time="0.777">
    </testcase>
    <testcase classname="ExampleTextSubmissionComponent should mark text blocks not included in the example submission correctly" name="ExampleTextSubmissionComponent should mark text blocks not included in the example submission correctly" time="0.143">
    </testcase>
    <testcase classname="ExampleTextSubmissionComponent should not fail while fetching submission with null result for existing example submission in tutorial submission mode" name="ExampleTextSubmissionComponent should not fail while fetching submission with null result for existing example submission in tutorial submission mode" time="0.144">
    </testcase>
    <testcase classname="ExampleTextSubmissionComponent should only fetch exercise for new example submission and stay in new state" name="ExampleTextSubmissionComponent should only fetch exercise for new example submission and stay in new state" time="0.093">
    </testcase>
    <testcase classname="ExampleTextSubmissionComponent should switch state when starting assessment" name="ExampleTextSubmissionComponent should switch state when starting assessment" time="0.105">
    </testcase>
    <testcase classname="ExampleTextSubmissionComponent should save assessment" name="ExampleTextSubmissionComponent should save assessment" time="0.177">
    </testcase>
    <testcase classname="ExampleTextSubmissionComponent should not save the assessment when it is invalid" name="ExampleTextSubmissionComponent should not save the assessment when it is invalid" time="0.09">
    </testcase>
    <testcase classname="ExampleTextSubmissionComponent editing submission from assessment state switches state" name="ExampleTextSubmissionComponent editing submission from assessment state switches state" time="0.14">
    </testcase>
    <testcase classname="ExampleTextSubmissionComponent should verify correct tutorial submission" name="ExampleTextSubmissionComponent should verify correct tutorial submission" time="0.162">
    </testcase>
    <testcase classname="ExampleTextSubmissionComponent should not check the assessment when it is invalid" name="ExampleTextSubmissionComponent should not check the assessment when it is invalid" time="0.096">
    </testcase>
    <testcase classname="ExampleTextSubmissionComponent when wrong tutor assessment, upon server response should mark feedback as incorrect" name="ExampleTextSubmissionComponent when wrong tutor assessment, upon server response should mark feedback as incorrect" time="0.113">
    </testcase>
    <testcase classname="ExampleTextSubmissionComponent should create new example submission" name="ExampleTextSubmissionComponent should create new example submission" time="0.121">
    </testcase>
    <testcase classname="ExampleTextSubmissionComponent should not create example submission" name="ExampleTextSubmissionComponent should not create example submission" time="0.148">
    </testcase>
    <testcase classname="ExampleTextSubmissionComponent should read and understood" name="ExampleTextSubmissionComponent should read and understood" time="0.095">
    </testcase>
    <testcase classname="ExampleTextSubmissionComponent should go back with exam" name="ExampleTextSubmissionComponent should go back with exam" time="0.105">
    </testcase>
    <testcase classname="ExampleTextSubmissionComponent should update example text submission" name="ExampleTextSubmissionComponent should update example text submission" time="0.093">
    </testcase>
  </testsuite>
  <testsuite name="BonusComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:03" time="3.597" tests="26">
    <testcase classname="BonusComponent should initialize" name="BonusComponent should initialize" time="0.274">
    </testcase>
    <testcase classname="BonusComponent should get calculation sign" name="BonusComponent should get calculation sign" time="0.041">
    </testcase>
    <testcase classname="BonusComponent should set bonus strategy and discreteness for [&quot;GRADES_CONTINUOUS&quot;, 0, 1]" name="BonusComponent should set bonus strategy and discreteness for [&quot;GRADES_CONTINUOUS&quot;, 0, 1]" time="0.042">
    </testcase>
    <testcase classname="BonusComponent should set bonus strategy and discreteness for [&quot;GRADES_DISCRETE&quot;, 0, 0]" name="BonusComponent should set bonus strategy and discreteness for [&quot;GRADES_DISCRETE&quot;, 0, 0]" time="0.05">
    </testcase>
    <testcase classname="BonusComponent should set bonus strategy and discreteness for [&quot;POINTS&quot;, 1, undefined]" name="BonusComponent should set bonus strategy and discreteness for [&quot;POINTS&quot;, 1, undefined]" time="0.03">
    </testcase>
    <testcase classname="BonusComponent should set bonus strategy and discreteness for [undefined, undefined, undefined]" name="BonusComponent should set bonus strategy and discreteness for [undefined, undefined, undefined]" time="0.048">
    </testcase>
    <testcase classname="BonusComponent should convert from inputs to BonusStrategy for [&quot;GRADES_CONTINUOUS&quot;, 0, 1]" name="BonusComponent should convert from inputs to BonusStrategy for [&quot;GRADES_CONTINUOUS&quot;, 0, 1]" time="0.038">
    </testcase>
    <testcase classname="BonusComponent should convert from inputs to BonusStrategy for [&quot;GRADES_DISCRETE&quot;, 0, 0]" name="BonusComponent should convert from inputs to BonusStrategy for [&quot;GRADES_DISCRETE&quot;, 0, 0]" time="0.039">
    </testcase>
    <testcase classname="BonusComponent should convert from inputs to BonusStrategy for [&quot;POINTS&quot;, 1, undefined]" name="BonusComponent should convert from inputs to BonusStrategy for [&quot;POINTS&quot;, 1, undefined]" time="0.03">
    </testcase>
    <testcase classname="BonusComponent should convert from inputs to BonusStrategy for [undefined, undefined, undefined]" name="BonusComponent should convert from inputs to BonusStrategy for [undefined, undefined, undefined]" time="0.058">
    </testcase>
    <testcase classname="BonusComponent should convert from inputs to BonusStrategy for [&quot;GRADES_CONTINUOUS&quot;, 0, undefined]" name="BonusComponent should convert from inputs to BonusStrategy for [&quot;GRADES_CONTINUOUS&quot;, 0, undefined]" time="0.028">
    </testcase>
    <testcase classname="BonusComponent should generate examples on bonus strategy input change" name="BonusComponent should generate examples on bonus strategy input change" time="0.026">
    </testcase>
    <testcase classname="BonusComponent should check bonus strategy and weight mismatch" name="BonusComponent should check bonus strategy and weight mismatch" time="0.044">
    </testcase>
    <testcase classname="BonusComponent should remove examples when all required fields are not set" name="BonusComponent should remove examples when all required fields are not set" time="0.042">
    </testcase>
    <testcase classname="BonusComponent should create bonus" name="BonusComponent should create bonus" time="0.027">
    </testcase>
    <testcase classname="BonusComponent should update bonus" name="BonusComponent should update bonus" time="0.042">
    </testcase>
    <testcase classname="BonusComponent should delete bonus" name="BonusComponent should delete bonus" time="0.086">
    </testcase>
    <testcase classname="BonusComponent should show error on delete" name="BonusComponent should show error on delete" time="0.046">
    </testcase>
    <testcase classname="BonusComponent should not delete if id is empty" name="BonusComponent should not delete if id is empty" time="0.031">
    </testcase>
    <testcase classname="BonusComponent should handle find bonus response with error" name="BonusComponent should handle find bonus response with error" time="0.028">
    </testcase>
    <testcase classname="BonusComponent should handle empty find bonus response" name="BonusComponent should handle empty find bonus response" time="0.058">
    </testcase>
    <testcase classname="BonusComponent should forward grading scale title call to service" name="BonusComponent should forward grading scale title call to service" time="0.054">
    </testcase>
    <testcase classname="BonusComponent should forward grading scale max points call to service" name="BonusComponent should forward grading scale max points call to service" time="0.034">
    </testcase>
    <testcase classname="BonusComponent should forward has points set call to service" name="BonusComponent should forward has points set call to service" time="0.045">
    </testcase>
    <testcase classname="BonusComponent should forward calculate dynamic example call to service" name="BonusComponent should forward calculate dynamic example call to service" time="0.041">
    </testcase>
    <testcase classname="BonusComponent should refresh dynamic example on weight change only if previously calculated" name="BonusComponent should refresh dynamic example on weight change only if previously calculated" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="MarkdownEditorMonacoComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:14:57" time="10.644" tests="31">
    <testcase classname="MarkdownEditorMonacoComponent should limit the vertical drag position based on the input values" name="MarkdownEditorMonacoComponent should limit the vertical drag position based on the input values" time="0.582">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should emit and update on markdown change" name="MarkdownEditorMonacoComponent should emit and update on markdown change" time="0.318">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should notify when switching to preview mode" name="MarkdownEditorMonacoComponent should notify when switching to preview mode" time="0.328">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should layout and focus the editor when switching to editor mode" name="MarkdownEditorMonacoComponent should layout and focus the editor when switching to editor mode" time="0.3">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should emit when leaving the visual tab" name="MarkdownEditorMonacoComponent should emit when leaving the visual tab" time="0.281">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should set the correct flags when navigating to editor_edit" name="MarkdownEditorMonacoComponent should set the correct flags when navigating to editor_edit" time="0.253">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should set the correct flags when navigating to editor_preview" name="MarkdownEditorMonacoComponent should set the correct flags when navigating to editor_preview" time="0.248">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should set the correct flags when navigating to editor_visual" name="MarkdownEditorMonacoComponent should set the correct flags when navigating to editor_visual" time="0.295">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should embed manually uploaded files" name="MarkdownEditorMonacoComponent should embed manually uploaded files" time="0.367">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should not embed via manual upload if the event contains no files" name="MarkdownEditorMonacoComponent should not embed via manual upload if the event contains no files" time="0.225">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should embed dropped files" name="MarkdownEditorMonacoComponent should embed dropped files" time="0.174">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should not try to embed via drop if the event contains no files" name="MarkdownEditorMonacoComponent should not try to embed via drop if the event contains no files" time="0.181">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should notify if the upload of a markdown file failed" name="MarkdownEditorMonacoComponent should notify if the upload of a markdown file failed" time="0.344">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should set the upload callback on the attachment actions" name="MarkdownEditorMonacoComponent should set the upload callback on the attachment actions" time="0.397">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should embed image and .pdf files" name="MarkdownEditorMonacoComponent should embed image and .pdf files" time="0.27">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should not embed files if file upload is disabled" name="MarkdownEditorMonacoComponent should not embed files if file upload is disabled" time="0.21">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should execute the action when clicked" name="MarkdownEditorMonacoComponent should execute the action when clicked" time="0.215">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should open the color selector" name="MarkdownEditorMonacoComponent should open the color selector" time="0.203">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should pass the correct color as argument to the color action" name="MarkdownEditorMonacoComponent should pass the correct color as argument to the color action" time="0.31">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should pass the entire element to the fullscreen action for external height" name="MarkdownEditorMonacoComponent should pass the entire element to the fullscreen action for external height" time="0.23">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should pass the wrapper element to the fullscreen action for a set initial height" name="MarkdownEditorMonacoComponent should pass the wrapper element to the fullscreen action for a set initial height" time="0.197">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should compute height 0 for a missing element" name="MarkdownEditorMonacoComponent should compute height 0 for a missing element" time="0.324">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should not react to content height changes if the height is not liked to the editor size" name="MarkdownEditorMonacoComponent should not react to content height changes if the height is not liked to the editor size" time="0.18">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should not react to content height changes if file upload is enabled but the footer has not loaded" name="MarkdownEditorMonacoComponent should not react to content height changes if file upload is enabled but the footer has not loaded" time="0.181">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should react to content height changes if the height is linked to the editor" name="MarkdownEditorMonacoComponent should react to content height changes if the height is linked to the editor" time="0.262">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should adjust the wrapper height when resized manually" name="MarkdownEditorMonacoComponent should adjust the wrapper height when resized manually" time="0.234">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should use the correct options to enable text field mode" name="MarkdownEditorMonacoComponent should use the correct options to enable text field mode" time="0.221">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should apply option presets to the editor" name="MarkdownEditorMonacoComponent should apply option presets to the editor" time="0.229">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should render markdown callouts correctly" name="MarkdownEditorMonacoComponent should render markdown callouts correctly" time="0.241">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should handle invalid callout type gracefully" name="MarkdownEditorMonacoComponent should handle invalid callout type gracefully" time="0.24">
    </testcase>
    <testcase classname="MarkdownEditorMonacoComponent should render nested content within callouts" name="MarkdownEditorMonacoComponent should render nested content within callouts" time="0.19">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseDetailsStudentActionsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:01" time="6.812" tests="37">
    <testcase classname="ExerciseDetailsStudentActionsComponent should not show the buttons &quot;Team&quot; and &quot;Start exercise&quot; for a team exercise when not assigned to a team yet" name="ExerciseDetailsStudentActionsComponent should not show the buttons &quot;Team&quot; and &quot;Start exercise&quot; for a team exercise when not assigned to a team yet" time="0.665">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should not show the buttons &quot;Team&quot; and &quot;Start exercise&quot; for a team exercise when not assigned to a team yet" name="ExerciseDetailsStudentActionsComponent should not show the buttons &quot;Team&quot; and &quot;Start exercise&quot; for a team exercise when not assigned to a team yet" time="0.12">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should not show the buttons &quot;Team&quot; and &quot;Start exercise&quot; for a team exercise when not assigned to a team yet" name="ExerciseDetailsStudentActionsComponent should not show the buttons &quot;Team&quot; and &quot;Start exercise&quot; for a team exercise when not assigned to a team yet" time="0.114">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should not show the buttons &quot;Team&quot; and &quot;Start exercise&quot; for a team exercise when not assigned to a team yet" name="ExerciseDetailsStudentActionsComponent should not show the buttons &quot;Team&quot; and &quot;Start exercise&quot; for a team exercise when not assigned to a team yet" time="0.187">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should show the buttons &quot;Team&quot; and &quot;Start exercise&quot; for a team exercise for a student to view his team when assigned to a team" name="ExerciseDetailsStudentActionsComponent should show the buttons &quot;Team&quot; and &quot;Start exercise&quot; for a team exercise for a student to view his team when assigned to a team" time="0.12">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should show the buttons &quot;Team&quot; and &quot;Start exercise&quot; for a team exercise for a student to view his team when assigned to a team" name="ExerciseDetailsStudentActionsComponent should show the buttons &quot;Team&quot; and &quot;Start exercise&quot; for a team exercise for a student to view his team when assigned to a team" time="0.114">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should show the buttons &quot;Team&quot; and &quot;Start exercise&quot; for a team exercise for a student to view his team when assigned to a team" name="ExerciseDetailsStudentActionsComponent should show the buttons &quot;Team&quot; and &quot;Start exercise&quot; for a team exercise for a student to view his team when assigned to a team" time="0.151">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should show the buttons &quot;Team&quot; and &quot;Start exercise&quot; for a team exercise for a student to view his team when assigned to a team" name="ExerciseDetailsStudentActionsComponent should show the buttons &quot;Team&quot; and &quot;Start exercise&quot; for a team exercise for a student to view his team when assigned to a team" time="0.145">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should create the correct repository URL for missing exerciseID in URL" name="ExerciseDetailsStudentActionsComponent should create the correct repository URL for missing exerciseID in URL" time="0.128">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should create the correct repository URL for exam exercises" name="ExerciseDetailsStudentActionsComponent should create the correct repository URL for exam exercises" time="0.119">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should reflect the correct participation state when team exercise was started" name="ExerciseDetailsStudentActionsComponent should reflect the correct participation state when team exercise was started" time="0.12">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should reflect the correct participation state for practice mode" name="ExerciseDetailsStudentActionsComponent should reflect the correct participation state for practice mode" time="0.142">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should correctly not show the Code button for exam test runs" name="ExerciseDetailsStudentActionsComponent should correctly not show the Code button for exam test runs" time="0.082">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should correctly show the Code button for exam test runs" name="ExerciseDetailsStudentActionsComponent should correctly show the Code button for exam test runs" time="0.085">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should correctly resume programming participation" name="ExerciseDetailsStudentActionsComponent should correctly resume programming participation" time="0.139">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should show correct buttons in exam mode" name="ExerciseDetailsStudentActionsComponent should show correct buttons in exam mode" time="0.133">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should show correct buttons in exam mode, including code button" name="ExerciseDetailsStudentActionsComponent should show correct buttons in exam mode, including code button" time="0.111">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should disable start exercise button before start date programming" name="ExerciseDetailsStudentActionsComponent should disable start exercise button before start date programming" time="0.105">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should disable start exercise button before start date modeling" name="ExerciseDetailsStudentActionsComponent should disable start exercise button before start date modeling" time="0.091">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should disable start exercise button before start date text" name="ExerciseDetailsStudentActionsComponent should disable start exercise button before start date text" time="0.102">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should disable start exercise button before start date file-upload" name="ExerciseDetailsStudentActionsComponent should disable start exercise button before start date file-upload" time="0.141">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent onInit should determine if it is an uninitialized quiz" name="ExerciseDetailsStudentActionsComponent onInit should determine if it is an uninitialized quiz" time="0.125">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent onInit should determine if it is an uninitialized quiz" name="ExerciseDetailsStudentActionsComponent onInit should determine if it is an uninitialized quiz" time="0.103">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent onInit should determine if it is an uninitialized quiz" name="ExerciseDetailsStudentActionsComponent onInit should determine if it is an uninitialized quiz" time="0.102">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent onInit should determine if quiz is not started" name="ExerciseDetailsStudentActionsComponent onInit should determine if quiz is not started" time="0.127">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent onInit should determine if quiz is not started" name="ExerciseDetailsStudentActionsComponent onInit should determine if quiz is not started" time="0.08">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent onInit should determine if quiz is not started" name="ExerciseDetailsStudentActionsComponent onInit should determine if quiz is not started" time="0.115">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent onInit should determine if quiz is not started" name="ExerciseDetailsStudentActionsComponent onInit should determine if quiz is not started" time="0.144">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent ngOnChanges should determine participations" name="ExerciseDetailsStudentActionsComponent ngOnChanges should determine participations" time="0.121">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should show correct open exercise button for text exercises" name="ExerciseDetailsStudentActionsComponent should show correct open exercise button for text exercises" time="0.171">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should show correct open exercise button for text exercises" name="ExerciseDetailsStudentActionsComponent should show correct open exercise button for text exercises" time="0.153">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should show correct open exercise button for text exercises" name="ExerciseDetailsStudentActionsComponent should show correct open exercise button for text exercises" time="0.113">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should show correct open exercise button for text exercises" name="ExerciseDetailsStudentActionsComponent should show correct open exercise button for text exercises" time="0.115">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should show correct open exercise button for text exercises" name="ExerciseDetailsStudentActionsComponent should show correct open exercise button for text exercises" time="0.095">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should show correct open exercise button for text exercises" name="ExerciseDetailsStudentActionsComponent should show correct open exercise button for text exercises" time="0.088">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should show correct open exercise button for text exercises" name="ExerciseDetailsStudentActionsComponent should show correct open exercise button for text exercises" time="0.073">
    </testcase>
    <testcase classname="ExerciseDetailsStudentActionsComponent should show correct open exercise button for text exercises" name="ExerciseDetailsStudentActionsComponent should show correct open exercise button for text exercises" time="0.073">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseInstructionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:07" time="5.39" tests="10">
    <testcase classname="ProgrammingExerciseInstructionComponent should on participation change clear old subscription for participation results set up new one" name="ProgrammingExerciseInstructionComponent should on participation change clear old subscription for participation results set up new one" time="0.236">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructionComponent should emit that no instructions are available if there is no problem statement" name="ProgrammingExerciseInstructionComponent should emit that no instructions are available if there is no problem statement" time="0.056">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructionComponent should NOT update markdown if the problemStatement is changed" name="ProgrammingExerciseInstructionComponent should NOT update markdown if the problemStatement is changed" time="0.105">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructionComponent should NOT update the markdown if there is no participation and the exercise has changed" name="ProgrammingExerciseInstructionComponent should NOT update the markdown if there is no participation and the exercise has changed" time="0.101">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructionComponent should still render the instructions if fetching the latest result fails" name="ProgrammingExerciseInstructionComponent should still render the instructions if fetching the latest result fails" time="0.063">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructionComponent should create the steps task icons for the tasks in problem statement markdown" name="ProgrammingExerciseInstructionComponent should create the steps task icons for the tasks in problem statement markdown" time="0.177">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructionComponent should create the steps task icons for the tasks in problem statement markdown with no inserted tests" name="ProgrammingExerciseInstructionComponent should create the steps task icons for the tasks in problem statement markdown with no inserted tests" time="0.133">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructionComponent should create the correct colors in problem statement plantuml diagram with inserted tests" name="ProgrammingExerciseInstructionComponent should create the correct colors in problem statement plantuml diagram with inserted tests" time="0.093">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructionComponent should update the markdown and set the correct problem statement if renderUpdatedProblemStatement is called" name="ProgrammingExerciseInstructionComponent should update the markdown and set the correct problem statement if renderUpdatedProblemStatement is called" time="0.096">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructionComponent should update the markdown on a theme change" name="ProgrammingExerciseInstructionComponent should update the markdown on a theme change" time="0.084">
    </testcase>
  </testsuite>
  <testsuite name="TextEditorComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:03" time="9.292" tests="26">
    <testcase classname="TextEditorComponent should use inputValues if present instead of loading new details" name="TextEditorComponent should use inputValues if present instead of loading new details" time="0.832">
    </testcase>
    <testcase classname="TextEditorComponent should not allow to submit after the due date if there is no due date" name="TextEditorComponent should not allow to submit after the due date if there is no due date" time="0.184">
    </testcase>
    <testcase classname="TextEditorComponent should not allow to submit after the due date if the initialization date is before the due date" name="TextEditorComponent should not allow to submit after the due date if the initialization date is before the due date" time="0.174">
    </testcase>
    <testcase classname="TextEditorComponent should allow to submit after the due date if the initialization date is after the due date" name="TextEditorComponent should allow to submit after the due date if the initialization date is after the due date" time="0.149">
    </testcase>
    <testcase classname="TextEditorComponent should not be always active if there is a result and no due date" name="TextEditorComponent should not be always active if there is a result and no due date" time="0.184">
    </testcase>
    <testcase classname="TextEditorComponent should be always active if there is no result and the initialization date is after the due date" name="TextEditorComponent should be always active if there is no result and the initialization date is after the due date" time="0.154">
    </testcase>
    <testcase classname="TextEditorComponent should get inactive as soon as the due date passes the current date" name="TextEditorComponent should get inactive as soon as the due date passes the current date" time="0.125">
    </testcase>
    <testcase classname="TextEditorComponent should not submit while saving" name="TextEditorComponent should not submit while saving" time="0.108">
    </testcase>
    <testcase classname="TextEditorComponent should not submit without submission" name="TextEditorComponent should not submit without submission" time="0.149">
    </testcase>
    <testcase classname="TextEditorComponent should submit" name="TextEditorComponent should submit" time="0.194">
    </testcase>
    <testcase classname="TextEditorComponent should alert successful on submit if not isAllowedToSubmitAfterDueDate" name="TextEditorComponent should alert successful on submit if not isAllowedToSubmitAfterDueDate" time="0.143">
    </testcase>
    <testcase classname="TextEditorComponent should warn alert on submit if submitDueDateMissedAlert" name="TextEditorComponent should warn alert on submit if submitDueDateMissedAlert" time="0.181">
    </testcase>
    <testcase classname="TextEditorComponent should return submission for answer" name="TextEditorComponent should return submission for answer" time="0.211">
    </testcase>
    <testcase classname="TextEditorComponent should return unreferenced feedback" name="TextEditorComponent should return unreferenced feedback" time="0.172">
    </testcase>
    <testcase classname="TextEditorComponent should receive submission from team" name="TextEditorComponent should receive submission from team" time="0.134">
    </testcase>
    <testcase classname="TextEditorComponent should receive empty submission from team" name="TextEditorComponent should receive empty submission from team" time="0.107">
    </testcase>
    <testcase classname="TextEditorComponent should set latest submission if submissionId is undefined in updateParticipation" name="TextEditorComponent should set latest submission if submissionId is undefined in updateParticipation" time="0.149">
    </testcase>
    <testcase classname="TextEditorComponent should set the correct submission if updateParticipation is called with submission id" name="TextEditorComponent should set the correct submission if updateParticipation is called with submission id" time="0.109">
    </testcase>
    <testcase classname="TextEditorComponent should set the latest submission if updateParticipation is called with submission id that does not exist" name="TextEditorComponent should set the latest submission if updateParticipation is called with submission id that does not exist" time="0.105">
    </testcase>
    <testcase classname="TextEditorComponent should not render the submit button when isReadOnlyWithShowResult is true" name="TextEditorComponent should not render the submit button when isReadOnlyWithShowResult is true" time="0.107">
    </testcase>
    <testcase classname="TextEditorComponent should render the submit button when isReadOnlyWithShowResult is false" name="TextEditorComponent should render the submit button when isReadOnlyWithShowResult is false" time="0.114">
    </testcase>
    <testcase classname="TextEditorComponent should destroy" name="TextEditorComponent should destroy" time="0.117">
    </testcase>
    <testcase classname="TextEditorComponent should destroy and call submission service when submission id" name="TextEditorComponent should destroy and call submission service when submission id" time="0.13">
    </testcase>
    <testcase classname="TextEditorComponent should load Iris settings when Iris profile is active and not in exam mode" name="TextEditorComponent should load Iris settings when Iris profile is active and not in exam mode" time="0.133">
    </testcase>
    <testcase classname="TextEditorComponent should not load Iris settings when in exam mode" name="TextEditorComponent should not load Iris settings when in exam mode" time="0.077">
    </testcase>
    <testcase classname="TextEditorComponent should not load Iris settings when Iris profile is not active" name="TextEditorComponent should not load Iris settings when Iris profile is not active" time="0.094">
    </testcase>
  </testsuite>
  <testsuite name="AssessmentDashboardInformationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:09" time="6.013" tests="17">
    <testcase classname="AssessmentDashboardInformationComponent should init component correctly for exam" name="AssessmentDashboardInformationComponent should init component correctly for exam" time="0.551">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent should init component correctly for course" name="AssessmentDashboardInformationComponent should init component correctly for course" time="0.028">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent should toggle correctionRound for exercises" name="AssessmentDashboardInformationComponent should toggle correctionRound for exercises" time="0.026">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent should update exercises when finished exercises are filtered" name="AssessmentDashboardInformationComponent should update exercises when finished exercises are filtered" time="0.014">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent should update exercises when optional exercises are filtered" name="AssessmentDashboardInformationComponent should update exercises when optional exercises are filtered" time="0.016">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent should sort rows" name="AssessmentDashboardInformationComponent should sort rows" time="0.026">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent getAssessmentDashboardLinkForExercise should getAssessmentDashboardLinkForExercise for exam" name="AssessmentDashboardInformationComponent getAssessmentDashboardLinkForExercise should getAssessmentDashboardLinkForExercise for exam" time="0.021">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent getAssessmentDashboardLinkForExercise should getAssessmentDashboardLinkForExercise for exam and testrun" name="AssessmentDashboardInformationComponent getAssessmentDashboardLinkForExercise should getAssessmentDashboardLinkForExercise for exam and testrun" time="0.011">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent getAssessmentDashboardLinkForExercise should getAssessmentDashboardLinkForExercise for course" name="AssessmentDashboardInformationComponent getAssessmentDashboardLinkForExercise should getAssessmentDashboardLinkForExercise for course" time="0.021">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent tutor issues on ngOnInit compute issues if not in exam mode" name="AssessmentDashboardInformationComponent tutor issues on ngOnInit compute issues if not in exam mode" time="0.037">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent tutor issues tutor issue checkers rating checker tutors value is significantly less than the course average value" name="AssessmentDashboardInformationComponent tutor issues tutor issue checkers rating checker tutors value is significantly less than the course average value" time="0.024">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent tutor issues tutor issue checkers rating checker tutors value is within allowed range" name="AssessmentDashboardInformationComponent tutor issues tutor issue checkers rating checker tutors value is within allowed range" time="0.023">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent tutor issues tutor issue checkers score checker tutors value is significantly less than the course average value" name="AssessmentDashboardInformationComponent tutor issues tutor issue checkers score checker tutors value is significantly less than the course average value" time="0.013">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent tutor issues tutor issue checkers score checker tutors value is within allowed range" name="AssessmentDashboardInformationComponent tutor issues tutor issue checkers score checker tutors value is within allowed range" time="0.012">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent tutor issues tutor issue checkers complaints checker tutors value is significantly bigger than the course average value" name="AssessmentDashboardInformationComponent tutor issues tutor issue checkers complaints checker tutors value is significantly bigger than the course average value" time="0.009">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent tutor issues tutor issue checkers complaints checker tutors value is within allowed range" name="AssessmentDashboardInformationComponent tutor issues tutor issue checkers complaints checker tutors value is within allowed range" time="0.007">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent asQuizExercise should cast exercise to QuizExercise" name="AssessmentDashboardInformationComponent asQuizExercise should cast exercise to QuizExercise" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="ComplaintsStudentViewComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:13" time="3.443" tests="20">
    <testcase classname="ComplaintsStudentViewComponent Exam mode should initialize" name="ComplaintsStudentViewComponent Exam mode should initialize" time="0.221">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent Exam mode should initialize with complaint" name="ComplaintsStudentViewComponent Exam mode should initialize with complaint" time="0.07">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent Exam mode should set complaint type COMPLAINT and scroll to complaint form when pressing complaint" name="ComplaintsStudentViewComponent Exam mode should set complaint type COMPLAINT and scroll to complaint form when pressing complaint" time="0.048">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent Exam mode should be visible on test run" name="ComplaintsStudentViewComponent Exam mode should be visible on test run" time="0.061">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent Exam mode should be hidden if review start not set" name="ComplaintsStudentViewComponent Exam mode should be hidden if review start not set" time="0.039">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent Exam mode should be hidden if review end not set" name="ComplaintsStudentViewComponent Exam mode should be hidden if review end not set" time="0.055">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent Course mode should initialize" name="ComplaintsStudentViewComponent Course mode should initialize" time="0.054">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent Course mode should initialize with complaint" name="ComplaintsStudentViewComponent Course mode should initialize with complaint" time="0.096">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent Course mode should set complaint type COMPLAINT and scroll to complaint form when pressing complaint" name="ComplaintsStudentViewComponent Course mode should set complaint type COMPLAINT and scroll to complaint form when pressing complaint" time="0.098">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent Course mode should set complaint type MORE_FEEDBACK and scroll to complaint form when pressing complaint" name="ComplaintsStudentViewComponent Course mode should set complaint type MORE_FEEDBACK and scroll to complaint form when pressing complaint" time="0.07">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent Course mode should not be available if before or at assessment due date" name="ComplaintsStudentViewComponent Course mode should not be available if before or at assessment due date" time="0.089">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent Course mode should not be available if assessment due date not set and completion date is out of period" name="ComplaintsStudentViewComponent Course mode should not be available if assessment due date not set and completion date is out of period" time="0.064">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent Course mode should not be available if completionDate after assessment due date and date is out of period" name="ComplaintsStudentViewComponent Course mode should not be available if completionDate after assessment due date and date is out of period" time="0.083">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent Course mode should be available if result was before due date" name="ComplaintsStudentViewComponent Course mode should be available if result was before due date" time="0.057">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent Course mode should be available if result was before assessment due date" name="ComplaintsStudentViewComponent Course mode should be available if result was before assessment due date" time="0.105">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent Course mode complaints should be available if feedback requests disabled" name="ComplaintsStudentViewComponent Course mode complaints should be available if feedback requests disabled" time="0.075">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent Course mode feedback requests should be available if complaints are disabled" name="ComplaintsStudentViewComponent Course mode feedback requests should be available if complaints are disabled" time="0.086">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent Course mode no action should be allowed if the result is automatic for a non automatic exercise" name="ComplaintsStudentViewComponent Course mode no action should be allowed if the result is automatic for a non automatic exercise" time="0.056">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent should set time of complaint invalid without completion date" name="ComplaintsStudentViewComponent should set time of complaint invalid without completion date" time="0.054">
    </testcase>
    <testcase classname="ComplaintsStudentViewComponent complaint should be possible with long assessment periods" name="ComplaintsStudentViewComponent complaint should be possible with long assessment periods" time="0.12">
    </testcase>
  </testsuite>
  <testsuite name="UserManagementComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:13" time="3.876" tests="36">
    <testcase classname="UserManagementComponent should parse the user search result into the correct component state" name="UserManagementComponent should parse the user search result into the correct component state" time="0.347">
    </testcase>
    <testcase classname="UserManagementComponent setActive should update user and call load all" name="UserManagementComponent setActive should update user and call load all" time="0.013">
    </testcase>
    <testcase classname="UserManagementComponent should searchForm + currentUser and handle navigation on init" name="UserManagementComponent should searchForm + currentUser and handle navigation on init" time="0.051">
    </testcase>
    <testcase classname="UserManagementComponent should destroy the user list subscription on destroy" name="UserManagementComponent should destroy the user list subscription on destroy" time="0.032">
    </testcase>
    <testcase classname="UserManagementComponent should return the user id or -1 from trackIdentity" name="UserManagementComponent should return the user id or -1 from trackIdentity" time="0.02">
    </testcase>
    <testcase classname="UserManagementComponent should broadcast after user deletion, or show error" name="UserManagementComponent should broadcast after user deletion, or show error" time="0.027">
    </testcase>
    <testcase classname="UserManagementComponent should broadcast after user deletion, or show error" name="UserManagementComponent should broadcast after user deletion, or show error" time="0.038">
    </testcase>
    <testcase classname="UserManagementComponent should call initFilters" name="UserManagementComponent should call initFilters" time="0.038">
    </testcase>
    <testcase classname="UserManagementComponent should init filters" name="UserManagementComponent should init filters" time="0.022">
    </testcase>
    <testcase classname="UserManagementComponent should init filters" name="UserManagementComponent should init filters" time="0.029">
    </testcase>
    <testcase classname="UserManagementComponent should init filters" name="UserManagementComponent should init filters" time="0.063">
    </testcase>
    <testcase classname="UserManagementComponent should toggle authority filters" name="UserManagementComponent should toggle authority filters" time="0.026">
    </testcase>
    <testcase classname="UserManagementComponent should toggle authority filters" name="UserManagementComponent should toggle authority filters" time="0.027">
    </testcase>
    <testcase classname="UserManagementComponent should toggle authority filters" name="UserManagementComponent should toggle authority filters" time="0.03">
    </testcase>
    <testcase classname="UserManagementComponent should toggle authority filters" name="UserManagementComponent should toggle authority filters" time="0.027">
    </testcase>
    <testcase classname="UserManagementComponent should toggle authority filters" name="UserManagementComponent should toggle authority filters" time="0.034">
    </testcase>
    <testcase classname="UserManagementComponent should toggle origin filters" name="UserManagementComponent should toggle origin filters" time="0.041">
    </testcase>
    <testcase classname="UserManagementComponent should toggle origin filters" name="UserManagementComponent should toggle origin filters" time="0.031">
    </testcase>
    <testcase classname="UserManagementComponent should toggle status filters" name="UserManagementComponent should toggle status filters" time="0.025">
    </testcase>
    <testcase classname="UserManagementComponent should toggle status filters" name="UserManagementComponent should toggle status filters" time="0.019">
    </testcase>
    <testcase classname="UserManagementComponent should toggle registration number filters" name="UserManagementComponent should toggle registration number filters" time="0.037">
    </testcase>
    <testcase classname="UserManagementComponent should toggle registration number filters" name="UserManagementComponent should toggle registration number filters" time="0.022">
    </testcase>
    <testcase classname="UserManagementComponent should return correct filter values" name="UserManagementComponent should return correct filter values" time="0.017">
    </testcase>
    <testcase classname="UserManagementComponent should select and deselect all roles" name="UserManagementComponent should select and deselect all roles" time="0.024">
    </testcase>
    <testcase classname="UserManagementComponent should delete all selected users" name="UserManagementComponent should delete all selected users" time="0.01">
    </testcase>
    <testcase classname="UserManagementComponent should add and remove user from selected users" name="UserManagementComponent should add and remove user from selected users" time="0.011">
    </testcase>
    <testcase classname="UserManagementComponent should return number of applied filters" name="UserManagementComponent should return number of applied filters" time="0.014">
    </testcase>
    <testcase classname="UserManagementComponent should toggle authority filter" name="UserManagementComponent should toggle authority filter" time="0.027">
    </testcase>
    <testcase classname="UserManagementComponent should toggle origin filter" name="UserManagementComponent should toggle origin filter" time="0.024">
    </testcase>
    <testcase classname="UserManagementComponent should toggle registration number filter" name="UserManagementComponent should toggle registration number filter" time="0.01">
    </testcase>
    <testcase classname="UserManagementComponent should toggle status filter" name="UserManagementComponent should toggle status filter" time="0.012">
    </testcase>
    <testcase classname="UserManagementComponent should deselect filter" name="UserManagementComponent should deselect filter" time="0.021">
    </testcase>
    <testcase classname="UserManagementComponent should select empty roles" name="UserManagementComponent should select empty roles" time="0.018">
    </testcase>
    <testcase classname="UserManagementComponent should get users without current user" name="UserManagementComponent should get users without current user" time="0.023">
    </testcase>
    <testcase classname="UserManagementComponent should toggle all users selection" name="UserManagementComponent should toggle all users selection" time="0.011">
    </testcase>
    <testcase classname="UserManagementComponent should adjust options" name="UserManagementComponent should adjust options" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="ResultService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:17" time="1.226" tests="21">
    <testcase classname="ResultService should convert the dates and points map when receiving a result with points from the server" name="ResultService should convert the dates and points map when receiving a result with points from the server" time="0.019">
    </testcase>
    <testcase classname="ResultService should convert Result Response from Server" name="ResultService should convert Result Response from Server" time="0.009">
    </testcase>
    <testcase classname="ResultService should trigger csv download" name="ResultService should trigger csv download" time="0.006">
    </testcase>
    <testcase classname="ResultService getResultString should return correct string for non programming exercise long format" name="ResultService getResultString should return correct string for non programming exercise long format" time="0.005">
    </testcase>
    <testcase classname="ResultService getResultString should return correct string for non programming exercise short format" name="ResultService getResultString should return correct string for non programming exercise short format" time="0.003">
    </testcase>
    <testcase classname="ResultService getResultString should return correct string for programming exercise with build failure" name="ResultService getResultString should return correct string for programming exercise with build failure" time="0.011">
    </testcase>
    <testcase classname="ResultService getResultString should return correct string for programming exercise with build failure" name="ResultService getResultString should return correct string for programming exercise with build failure" time="0.006">
    </testcase>
    <testcase classname="ResultService getResultString should return correct string for programming exercise with no tests" name="ResultService getResultString should return correct string for programming exercise with no tests" time="0.005">
    </testcase>
    <testcase classname="ResultService getResultString should return correct string for programming exercise with no tests" name="ResultService getResultString should return correct string for programming exercise with no tests" time="0.019">
    </testcase>
    <testcase classname="ResultService getResultString should return correct string for programming exercise with tests" name="ResultService getResultString should return correct string for programming exercise with tests" time="0.006">
    </testcase>
    <testcase classname="ResultService getResultString should return correct string for programming exercise with tests" name="ResultService getResultString should return correct string for programming exercise with tests" time="0.008">
    </testcase>
    <testcase classname="ResultService getResultString should return correct string for programming exercise with code issues" name="ResultService getResultString should return correct string for programming exercise with code issues" time="0.005">
    </testcase>
    <testcase classname="ResultService getResultString should return correct string for programming exercise preliminary" name="ResultService getResultString should return correct string for programming exercise preliminary" time="0.006">
    </testcase>
    <testcase classname="ResultService getResultString should return correct string for Athena non graded successful feedback" name="ResultService getResultString should return correct string for Athena non graded successful feedback" time="0.009">
    </testcase>
    <testcase classname="ResultService getResultString should return correct string for Athena non graded unsuccessful feedback" name="ResultService getResultString should return correct string for Athena non graded unsuccessful feedback" time="0.011">
    </testcase>
    <testcase classname="ResultService getResultString should return correct string for Athena timed out non graded feedback" name="ResultService getResultString should return correct string for Athena timed out non graded feedback" time="0.005">
    </testcase>
    <testcase classname="ResultService getResultString should return correct string for in progress Athena non-graded feedback" name="ResultService getResultString should return correct string for in progress Athena non-graded feedback" time="0.013">
    </testcase>
    <testcase classname="ResultService getResultString reports to Sentry if result or exercise is undefined" name="ResultService getResultString reports to Sentry if result or exercise is undefined" time="0.008">
    </testcase>
    <testcase classname="ResultService evaluateBadge should be calculated correctly for practice mode" name="ResultService evaluateBadge should be calculated correctly for practice mode" time="0.005">
    </testcase>
    <testcase classname="ResultService evaluateBadge should be calculated correctly for rated submission" name="ResultService evaluateBadge should be calculated correctly for rated submission" time="0.006">
    </testcase>
    <testcase classname="ResultService evaluateBadge should be calculated correctly for unrated submission" name="ResultService evaluateBadge should be calculated correctly for unrated submission" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseUtils URL utils" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:18" time="2.755" tests="49">
    <testcase classname="ProgrammingExerciseUtils URL utils should return correct commit url for student submission" name="ProgrammingExerciseUtils URL utils should return correct commit url for student submission" time="0.002">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return correct commit url with different commit hash url template for student submission" name="ProgrammingExerciseUtils URL utils should return correct commit url with different commit hash url template for student submission" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return correct commit url for student submission and convert project key to lowercase" name="ProgrammingExerciseUtils URL utils should return correct commit url for student submission and convert project key to lowercase" time="0">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return correct commit url for template submission" name="ProgrammingExerciseUtils URL utils should return correct commit url for template submission" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return correct commit url for solution submission" name="ProgrammingExerciseUtils URL utils should return correct commit url for solution submission" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return generic commits url with undefined commit hash" name="ProgrammingExerciseUtils URL utils should return generic commits url with undefined commit hash" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return template commit url with undefined submission type for template participation" name="ProgrammingExerciseUtils URL utils should return template commit url with undefined submission type for template participation" time="0">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return solution commit url with undefined submission type for solution participation" name="ProgrammingExerciseUtils URL utils should return solution commit url with undefined submission type for solution participation" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return test commit url with submission type TEST for template participation" name="ProgrammingExerciseUtils URL utils should return test commit url with submission type TEST for template participation" time="0.014">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return test commit url with submission type TEST for solution participation" name="ProgrammingExerciseUtils URL utils should return test commit url with submission type TEST for solution participation" time="0.002">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return generic commit url with undefined submission for student participation" name="ProgrammingExerciseUtils URL utils should return generic commit url with undefined submission for student participation" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return generic commit url with undefined submission for template participation" name="ProgrammingExerciseUtils URL utils should return generic commit url with undefined submission for template participation" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return generic commit url with undefined submission for solution participation" name="ProgrammingExerciseUtils URL utils should return generic commit url with undefined submission for solution participation" time="0.005">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return undefined commit url with non-programming participation type" name="ProgrammingExerciseUtils URL utils should return undefined commit url with non-programming participation type" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return undefined commit url with undefined repository uri for student participation" name="ProgrammingExerciseUtils URL utils should return undefined commit url with undefined repository uri for student participation" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return undefined commit url with undefined participation type" name="ProgrammingExerciseUtils URL utils should return undefined commit url with undefined participation type" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return undefined commit url with undefined project key" name="ProgrammingExerciseUtils URL utils should return undefined commit url with undefined project key" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return undefined commit url with undefined participant identifier for student participation" name="ProgrammingExerciseUtils URL utils should return undefined commit url with undefined participant identifier for student participation" time="0">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return undefined commit url with undefined commit hash url template" name="ProgrammingExerciseUtils URL utils should return undefined commit url with undefined commit hash url template" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils URL utils should return undefined commit url with undefined participation" name="ProgrammingExerciseUtils URL utils should return undefined commit url with undefined participation" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils createBuildPlanUrl fills in buildPlanId and projectKey" name="ProgrammingExerciseUtils createBuildPlanUrl fills in buildPlanId and projectKey" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils createCommitUrl creates a commit url for a student submission" name="ProgrammingExerciseUtils createCommitUrl creates a commit url for a student submission" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils createCommitUrl creates a commit url for a student submission in practice mode" name="ProgrammingExerciseUtils createCommitUrl creates a commit url for a student submission in practice mode" time="0">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils createCommitUrl creates a commit url for a template submission" name="ProgrammingExerciseUtils createCommitUrl creates a commit url for a template submission" time="0.003">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils createCommitUrl creates a commit url for a template test submission" name="ProgrammingExerciseUtils createCommitUrl creates a commit url for a template test submission" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils createCommitUrl creates a commit url for a solution submission" name="ProgrammingExerciseUtils createCommitUrl creates a commit url for a solution submission" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils createCommitUrl creates a commit url for a solution test submission" name="ProgrammingExerciseUtils createCommitUrl creates a commit url for a solution test submission" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils createCommitUrl creates a commit url without a commit hash" name="ProgrammingExerciseUtils createCommitUrl creates a commit url without a commit hash" time="0.002">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils isProgrammingExerciseStudentParticipation returns true for a programming exercise participation" name="ProgrammingExerciseUtils isProgrammingExerciseStudentParticipation returns true for a programming exercise participation" time="0">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils isProgrammingExerciseStudentParticipation returns false for another participation" name="ProgrammingExerciseUtils isProgrammingExerciseStudentParticipation returns false for another participation" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils isProgrammingExerciseParticipation returns false for an undefined participation" name="ProgrammingExerciseUtils isProgrammingExerciseParticipation returns false for an undefined participation" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils isProgrammingExerciseParticipation returns true for a student programming exercise participation" name="ProgrammingExerciseUtils isProgrammingExerciseParticipation returns true for a student programming exercise participation" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils isProgrammingExerciseParticipation returns true for a template programming exercise participation" name="ProgrammingExerciseUtils isProgrammingExerciseParticipation returns true for a template programming exercise participation" time="0">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils isProgrammingExerciseParticipation returns true for a solution programming exercise participation" name="ProgrammingExerciseUtils isProgrammingExerciseParticipation returns true for a solution programming exercise participation" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils isProgrammingExerciseParticipation returns false for a normal student participation" name="ProgrammingExerciseUtils isProgrammingExerciseParticipation returns false for a normal student participation" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils hasDueDatePassed returns false if no due date is set" name="ProgrammingExerciseUtils hasDueDatePassed returns false if no due date is set" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils hasDueDatePassed buildAndTestDate takes precedence over normal exercise due date" name="ProgrammingExerciseUtils hasDueDatePassed buildAndTestDate takes precedence over normal exercise due date" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils hasDueDatePassed returns true on date in the past" name="ProgrammingExerciseUtils hasDueDatePassed returns true on date in the past" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils hasDueDatePassed returns false on date in the future" name="ProgrammingExerciseUtils hasDueDatePassed returns false on date in the future" time="0">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils isResultPreliminary returns false on undefined exercise" name="ProgrammingExerciseUtils isResultPreliminary returns false on undefined exercise" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils isResultPreliminary return true if the result completion date is not set" name="ProgrammingExerciseUtils isResultPreliminary return true if the result completion date is not set" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils isResultPreliminary return true on invalid date" name="ProgrammingExerciseUtils isResultPreliminary return true on invalid date" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils isResultPreliminary manual assessment set for the exercise return true if the assessment due date is set and in the future" name="ProgrammingExerciseUtils isResultPreliminary manual assessment set for the exercise return true if the assessment due date is set and in the future" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils isResultPreliminary manual assessment set for the exercise return false if the assessment due date is set and in the past" name="ProgrammingExerciseUtils isResultPreliminary manual assessment set for the exercise return false if the assessment due date is set and in the past" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils isResultPreliminary manual assessment set for the exercise return true if the assessment due date is not set and the latest result is an automatic assessment" name="ProgrammingExerciseUtils isResultPreliminary manual assessment set for the exercise return true if the assessment due date is not set and the latest result is an automatic assessment" time="0">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils isResultPreliminary manual assessment set for the exercise return false if the assessment due date is not set and the latest result is not an automatic assessment" name="ProgrammingExerciseUtils isResultPreliminary manual assessment set for the exercise return false if the assessment due date is not set and the latest result is not an automatic assessment" time="0">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils isResultPreliminary return true if buildAndTest date is set and in the future" name="ProgrammingExerciseUtils isResultPreliminary return true if buildAndTest date is set and in the future" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils isResultPreliminary return false if buildAndTest date is set and in the past" name="ProgrammingExerciseUtils isResultPreliminary return false if buildAndTest date is set and in the past" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseUtils isResultPreliminary return false if completion date is valid and buildAndTest date is not set" name="ProgrammingExerciseUtils isResultPreliminary return false if completion date is valid and buildAndTest date is not set" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ShortAnswerQuestionEditComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:08" time="14.134" tests="19">
    <testcase classname="ShortAnswerQuestionEditComponent should initialize with different question texts" name="ShortAnswerQuestionEditComponent should initialize with different question texts" time="1.855">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should invoke ngOnChanges" name="ShortAnswerQuestionEditComponent should invoke ngOnChanges" time="0.555">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should react to a solution being dropped on a spot" name="ShortAnswerQuestionEditComponent should react to a solution being dropped on a spot" time="0.514">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should setup question editor" name="ShortAnswerQuestionEditComponent should setup question editor" time="0.426">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should open" name="ShortAnswerQuestionEditComponent should open" time="0.526">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should add spot to cursor and increase the spot number" name="ShortAnswerQuestionEditComponent should add spot to cursor and increase the spot number" time="0.624">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should add option" name="ShortAnswerQuestionEditComponent should add option" time="0.74">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should add text solution" name="ShortAnswerQuestionEditComponent should add text solution" time="0.37">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should delete text solution" name="ShortAnswerQuestionEditComponent should delete text solution" time="0.382">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should add spot at cursor visual mode" name="ShortAnswerQuestionEditComponent should add spot at cursor visual mode" time="0.458">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should delete question" name="ShortAnswerQuestionEditComponent should delete question" time="0.354">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should toggle preview" name="ShortAnswerQuestionEditComponent should toggle preview" time="0.614">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should move the question in different ways" name="ShortAnswerQuestionEditComponent should move the question in different ways" time="0.743">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should reset the question" name="ShortAnswerQuestionEditComponent should reset the question" time="0.483">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should reset spot" name="ShortAnswerQuestionEditComponent should reset spot" time="0.448">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should delete spot" name="ShortAnswerQuestionEditComponent should delete spot" time="0.397">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should set question text" name="ShortAnswerQuestionEditComponent should set question text" time="0.346">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should toggle exact match" name="ShortAnswerQuestionEditComponent should toggle exact match" time="0.482">
    </testcase>
    <testcase classname="ShortAnswerQuestionEditComponent should return highest spot number" name="ShortAnswerQuestionEditComponent should return highest spot number" time="0.375">
    </testcase>
  </testsuite>
  <testsuite name="Example Modeling Submission Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:15" time="8.779" tests="20">
    <testcase classname="Example Modeling Submission Component should initialize" name="Example Modeling Submission Component should initialize" time="1.003">
    </testcase>
    <testcase classname="Example Modeling Submission Component should handle a new submission" name="Example Modeling Submission Component should handle a new submission" time="0.172">
    </testcase>
    <testcase classname="Example Modeling Submission Component should upsert a new modeling submission" name="Example Modeling Submission Component should upsert a new modeling submission" time="0.168">
    </testcase>
    <testcase classname="Example Modeling Submission Component should upsert an existing modeling submission" name="Example Modeling Submission Component should upsert an existing modeling submission" time="0.127">
    </testcase>
    <testcase classname="Example Modeling Submission Component should check assessment" name="Example Modeling Submission Component should check assessment" time="0.134">
    </testcase>
    <testcase classname="Example Modeling Submission Component should check invalid assessment" name="Example Modeling Submission Component should check invalid assessment" time="0.181">
    </testcase>
    <testcase classname="Example Modeling Submission Component should read and understood" name="Example Modeling Submission Component should read and understood" time="0.137">
    </testcase>
    <testcase classname="Example Modeling Submission Component should handle referenced feedback change" name="Example Modeling Submission Component should handle referenced feedback change" time="0.112">
    </testcase>
    <testcase classname="Example Modeling Submission Component should handle unreferenced feedback change" name="Example Modeling Submission Component should handle unreferenced feedback change" time="0.129">
    </testcase>
    <testcase classname="Example Modeling Submission Component should show submission" name="Example Modeling Submission Component should show submission" time="0.152">
    </testcase>
    <testcase classname="Example Modeling Submission Component should create error alert if assessment is invalid" name="Example Modeling Submission Component should create error alert if assessment is invalid" time="0.103">
    </testcase>
    <testcase classname="Example Modeling Submission Component should update assessment explanation and example assessment" name="Example Modeling Submission Component should update assessment explanation and example assessment" time="0.097">
    </testcase>
    <testcase classname="Example Modeling Submission Component should update assessment explanation but create error message on example assessment update failure" name="Example Modeling Submission Component should update assessment explanation but create error message on example assessment update failure" time="0.108">
    </testcase>
    <testcase classname="Example Modeling Submission Component should mark all feedback correct" name="Example Modeling Submission Component should mark all feedback correct" time="0.155">
    </testcase>
    <testcase classname="Example Modeling Submission Component should mark all feedback wrong" name="Example Modeling Submission Component should mark all feedback wrong" time="0.237">
    </testcase>
    <testcase classname="Example Modeling Submission Component should create success alert on example assessment update" name="Example Modeling Submission Component should create success alert on example assessment update" time="0.115">
    </testcase>
    <testcase classname="Example Modeling Submission Component should create error alert on example assessment update failure" name="Example Modeling Submission Component should create error alert on example assessment update failure" time="0.119">
    </testcase>
    <testcase classname="Example Modeling Submission Component should handle explanation change" name="Example Modeling Submission Component should handle explanation change" time="0.138">
    </testcase>
    <testcase classname="Example Modeling Submission Component should show assessment" name="Example Modeling Submission Component should show assessment" time="0.161">
    </testcase>
    <testcase classname="Example Modeling Submission Component should call get exampleAssessment in toComplete mode" name="Example Modeling Submission Component should call get exampleAssessment in toComplete mode" time="0.109">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExercise Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:23" time="1.396" tests="31">
    <testcase classname="ProgrammingExercise Service Service methods should find an exercise" name="ProgrammingExercise Service Service methods should find an exercise" time="0.026">
    </testcase>
    <testcase classname="ProgrammingExercise Service Service methods should find with template and solution participation and results" name="ProgrammingExercise Service Service methods should find with template and solution participation and results" time="0.006">
    </testcase>
    <testcase classname="ProgrammingExercise Service Service methods should find with auxiliary repositories" name="ProgrammingExercise Service Service methods should find with auxiliary repositories" time="0.004">
    </testcase>
    <testcase classname="ProgrammingExercise Service Service methods should create a ProgrammingExercise" name="ProgrammingExercise Service Service methods should create a ProgrammingExercise" time="0.006">
    </testcase>
    <testcase classname="ProgrammingExercise Service Service methods should reconnect template submission with result" name="ProgrammingExercise Service Service methods should reconnect template submission with result" time="0.006">
    </testcase>
    <testcase classname="ProgrammingExercise Service Service methods should not find a latest result if none exists" name="ProgrammingExercise Service Service methods should not find a latest result if none exists" time="0.007">
    </testcase>
    <testcase classname="ProgrammingExercise Service Service methods should find the latest result if multiple exist" name="ProgrammingExercise Service Service methods should find the latest result if multiple exist" time="0.004">
    </testcase>
    <testcase classname="ProgrammingExercise Service Service methods should update a ProgrammingExercise" name="ProgrammingExercise Service Service methods should update a ProgrammingExercise" time="0.008">
    </testcase>
    <testcase classname="ProgrammingExercise Service Service methods should update the Timeline of a ProgrammingExercise" name="ProgrammingExercise Service Service methods should update the Timeline of a ProgrammingExercise" time="0.009">
    </testcase>
    <testcase classname="ProgrammingExercise Service Service methods should return a list of ProgrammingExercise" name="ProgrammingExercise Service Service methods should return a list of ProgrammingExercise" time="0.007">
    </testcase>
    <testcase classname="ProgrammingExercise Service Service methods should delete a ProgrammingExercise" name="ProgrammingExercise Service Service methods should delete a ProgrammingExercise" time="0.005">
    </testcase>
    <testcase classname="ProgrammingExercise Service Service methods should make get request" name="ProgrammingExercise Service Service methods should make get request" time="0.004">
    </testcase>
    <testcase classname="ProgrammingExercise Service should make post request for import from file" name="ProgrammingExercise Service should make post request for import from file" time="0.016">
    </testcase>
    <testcase classname="ProgrammingExercise Service should make GET request to retrieve diff between submission and template" name="ProgrammingExercise Service should make GET request to retrieve diff between submission and template" time="0.007">
    </testcase>
    <testcase classname="ProgrammingExercise Service should make GET request to retrieve diff between submissions" name="ProgrammingExercise Service should make GET request to retrieve diff between submissions" time="0.005">
    </testcase>
    <testcase classname="ProgrammingExercise Service should make GET request to retrieve diff between commits for CommitDetailsView" name="ProgrammingExercise Service should make GET request to retrieve diff between commits for CommitDetailsView" time="0.003">
    </testcase>
    <testcase classname="ProgrammingExercise Service should generate Structure Oracle" name="ProgrammingExercise Service should generate Structure Oracle" time="0.007">
    </testcase>
    <testcase classname="ProgrammingExercise Service should reset Exercise" name="ProgrammingExercise Service should reset Exercise" time="0.021">
    </testcase>
    <testcase classname="ProgrammingExercise Service should combine Template Repository Commits" name="ProgrammingExercise Service should combine Template Repository Commits" time="0.004">
    </testcase>
    <testcase classname="ProgrammingExercise Service export instructor repository" name="ProgrammingExercise Service export instructor repository" time="0.009">
    </testcase>
    <testcase classname="ProgrammingExercise Service should export Student Requested Repository" name="ProgrammingExercise Service should export Student Requested Repository" time="0.006">
    </testcase>
    <testcase classname="ProgrammingExercise Service should export a student repository" name="ProgrammingExercise Service should export a student repository" time="0.008">
    </testcase>
    <testcase classname="ProgrammingExercise Service should check plagiarism report" name="ProgrammingExercise Service should check plagiarism report" time="0.01">
    </testcase>
    <testcase classname="ProgrammingExercise Service should call correct exercise endpoint" name="ProgrammingExercise Service should call correct exercise endpoint" time="0.004">
    </testcase>
    <testcase classname="ProgrammingExercise Service should call correct exercise endpoint" name="ProgrammingExercise Service should call correct exercise endpoint" time="0.004">
    </testcase>
    <testcase classname="ProgrammingExercise Service should call correct exercise endpoint" name="ProgrammingExercise Service should call correct exercise endpoint" time="0.005">
    </testcase>
    <testcase classname="ProgrammingExercise Service should call correct exercise endpoint" name="ProgrammingExercise Service should call correct exercise endpoint" time="0.006">
    </testcase>
    <testcase classname="ProgrammingExercise Service should call correct exercise endpoint" name="ProgrammingExercise Service should call correct exercise endpoint" time="0.004">
    </testcase>
    <testcase classname="ProgrammingExercise Service should call correct exercise endpoint" name="ProgrammingExercise Service should call correct exercise endpoint" time="0.004">
    </testcase>
    <testcase classname="ProgrammingExercise Service should call correct exercise endpoint" name="ProgrammingExercise Service should call correct exercise endpoint" time="0.006">
    </testcase>
    <testcase classname="ProgrammingExercise Service should call correct exercise endpoint" name="ProgrammingExercise Service should call correct exercise endpoint" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="ComplaintService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:24" time="1.238" tests="33">
    <testcase classname="ComplaintService isComplaintLockedForLoggedInUser should be false if no visible lock is present" name="ComplaintService isComplaintLockedForLoggedInUser should be false if no visible lock is present" time="0.012">
    </testcase>
    <testcase classname="ComplaintService isComplaintLockedForLoggedInUser should be false if user has the lock" name="ComplaintService isComplaintLockedForLoggedInUser should be false if user has the lock" time="0.005">
    </testcase>
    <testcase classname="ComplaintService isComplaintLockedForLoggedInUser should be true if user has not the lock" name="ComplaintService isComplaintLockedForLoggedInUser should be true if user has not the lock" time="0.003">
    </testcase>
    <testcase classname="ComplaintService isComplaintLockedForLoggedInUser should be false if user is instructor" name="ComplaintService isComplaintLockedForLoggedInUser should be false if user is instructor" time="0.004">
    </testcase>
    <testcase classname="ComplaintService isComplaintLockedByLoggedInUser should be false if no visible lock is present" name="ComplaintService isComplaintLockedByLoggedInUser should be false if no visible lock is present" time="0.003">
    </testcase>
    <testcase classname="ComplaintService isComplaintLockedByLoggedInUser should be false if the complaint is not locked" name="ComplaintService isComplaintLockedByLoggedInUser should be false if the complaint is not locked" time="0.005">
    </testcase>
    <testcase classname="ComplaintService isComplaintLockedByLoggedInUser should be false if the complaint has been handled" name="ComplaintService isComplaintLockedByLoggedInUser should be false if the complaint has been handled" time="0.009">
    </testcase>
    <testcase classname="ComplaintService isComplaintLockedByLoggedInUser should be false if another user has the lock" name="ComplaintService isComplaintLockedByLoggedInUser should be false if another user has the lock" time="0.006">
    </testcase>
    <testcase classname="ComplaintService isComplaintLockedByLoggedInUser should be true if the same user has the lock" name="ComplaintService isComplaintLockedByLoggedInUser should be true if the same user has the lock" time="0.011">
    </testcase>
    <testcase classname="ComplaintService isComplaintLocked should be false if no visible lock is present" name="ComplaintService isComplaintLocked should be false if no visible lock is present" time="0.007">
    </testcase>
    <testcase classname="ComplaintService isComplaintLocked should be true if locked" name="ComplaintService isComplaintLocked should be true if locked" time="0.004">
    </testcase>
    <testcase classname="ComplaintService create For course" name="ComplaintService create For course" time="0.018">
    </testcase>
    <testcase classname="ComplaintService create For exam" name="ComplaintService create For exam" time="0.007">
    </testcase>
    <testcase classname="ComplaintService shouldHighlightComplaint should not highlight handled complaints" name="ComplaintService shouldHighlightComplaint should not highlight handled complaints" time="0.009">
    </testcase>
    <testcase classname="ComplaintService shouldHighlightComplaint should not highlight recent complaints" name="ComplaintService shouldHighlightComplaint should not highlight recent complaints" time="0.007">
    </testcase>
    <testcase classname="ComplaintService shouldHighlightComplaint should highlight old complaints" name="ComplaintService shouldHighlightComplaint should highlight old complaints" time="0.005">
    </testcase>
    <testcase classname="ComplaintService getIndividualComplaintDueDate should return undefined for no results" name="ComplaintService getIndividualComplaintDueDate should return undefined for no results" time="0.003">
    </testcase>
    <testcase classname="ComplaintService getIndividualComplaintDueDate should return undefined for quiz exercise" name="ComplaintService getIndividualComplaintDueDate should return undefined for quiz exercise" time="0.008">
    </testcase>
    <testcase classname="ComplaintService getIndividualComplaintDueDate should calculate the correct complaint due date for no exercise due date" name="ComplaintService getIndividualComplaintDueDate should calculate the correct complaint due date for no exercise due date" time="0.039">
    </testcase>
    <testcase classname="ComplaintService getIndividualComplaintDueDate should return undefined for automatic assessment without complaints" name="ComplaintService getIndividualComplaintDueDate should return undefined for automatic assessment without complaints" time="0.007">
    </testcase>
    <testcase classname="ComplaintService getIndividualComplaintDueDate should calculate the correct complaint due date for automatic assessment with complaints" name="ComplaintService getIndividualComplaintDueDate should calculate the correct complaint due date for automatic assessment with complaints" time="0.003">
    </testcase>
    <testcase classname="ComplaintService getIndividualComplaintDueDate should calculate the correct complaint due date for automatic assessment with complaints before dueDate" name="ComplaintService getIndividualComplaintDueDate should calculate the correct complaint due date for automatic assessment with complaints before dueDate" time="0.01">
    </testcase>
    <testcase classname="ComplaintService getIndividualComplaintDueDate should calculate the correct complaint due date after assessmentDueDate" name="ComplaintService getIndividualComplaintDueDate should calculate the correct complaint due date after assessmentDueDate" time="0.004">
    </testcase>
    <testcase classname="ComplaintService getIndividualComplaintDueDate should calculate the correct complaint due date after assessmentDueDate for late feedback" name="ComplaintService getIndividualComplaintDueDate should calculate the correct complaint due date after assessmentDueDate for late feedback" time="0.004">
    </testcase>
    <testcase classname="ComplaintService getIndividualComplaintDueDate should return undefined for complaint due date before assessment dueDate" name="ComplaintService getIndividualComplaintDueDate should return undefined for complaint due date before assessment dueDate" time="0.003">
    </testcase>
    <testcase classname="ComplaintService getIndividualComplaintDueDate should return undefined for complaint due date for unrated result after assessment dueDate" name="ComplaintService getIndividualComplaintDueDate should return undefined for complaint due date for unrated result after assessment dueDate" time="0.005">
    </testcase>
    <testcase classname="ComplaintService findBySubmissionId" name="ComplaintService findBySubmissionId" time="0.005">
    </testcase>
    <testcase classname="ComplaintService getComplaintsForTestRun" name="ComplaintService getComplaintsForTestRun" time="0.005">
    </testcase>
    <testcase classname="ComplaintService findAllByTutorIdForCourseId" name="ComplaintService findAllByTutorIdForCourseId" time="0.006">
    </testcase>
    <testcase classname="ComplaintService findAllByTutorIdForExerciseId" name="ComplaintService findAllByTutorIdForExerciseId" time="0.004">
    </testcase>
    <testcase classname="ComplaintService findAllByCourseId" name="ComplaintService findAllByCourseId" time="0.004">
    </testcase>
    <testcase classname="ComplaintService findAllByCourseIdAndExamId" name="ComplaintService findAllByCourseIdAndExamId" time="0.004">
    </testcase>
    <testcase classname="ComplaintService findAllByExerciseId" name="ComplaintService findAllByExerciseId" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Text Submission Viewer Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:24" time="2.849" tests="18">
    <testcase classname="Text Submission Viewer Component fetches a text submission" name="Text Submission Viewer Component fetches a text submission" time="0.124">
    </testcase>
    <testcase classname="Text Submission Viewer Component fetches a programming submission" name="Text Submission Viewer Component fetches a programming submission" time="0.036">
    </testcase>
    <testcase classname="Text Submission Viewer Component does not fetch a programming submission" name="Text Submission Viewer Component does not fetch a programming submission" time="0.052">
    </testcase>
    <testcase classname="Text Submission Viewer Component handles a programming submission fetch error" name="Text Submission Viewer Component handles a programming submission fetch error" time="0.039">
    </testcase>
    <testcase classname="Text Submission Viewer Component sorts and filters the files when fetching a programming submission" name="Text Submission Viewer Component sorts and filters the files when fetching a programming submission" time="0.056">
    </testcase>
    <testcase classname="Text Submission Viewer Component filters files of type FILE" name="Text Submission Viewer Component filters files of type FILE" time="0.044">
    </testcase>
    <testcase classname="Text Submission Viewer Component handles file selection" name="Text Submission Viewer Component handles file selection" time="0.088">
    </testcase>
    <testcase classname="Text Submission Viewer Component handles binary file selection" name="Text Submission Viewer Component handles binary file selection" time="0.03">
    </testcase>
    <testcase classname="Text Submission Viewer Component should insert exact match tokens" name="Text Submission Viewer Component should insert exact match tokens" time="0.045">
    </testcase>
    <testcase classname="Text Submission Viewer Component should insert full line match tokens" name="Text Submission Viewer Component should insert full line match tokens" time="0.054">
    </testcase>
    <testcase classname="Text Submission Viewer Component should escape the text if no matches are present" name="Text Submission Viewer Component should escape the text if no matches are present" time="0.04">
    </testcase>
    <testcase classname="Text Submission Viewer Component should escape and insert exact tokens" name="Text Submission Viewer Component should escape and insert exact tokens" time="0.046">
    </testcase>
    <testcase classname="Text Submission Viewer Component should escape and insert full line tokens" name="Text Submission Viewer Component should escape and insert full line tokens" time="0.035">
    </testcase>
    <testcase classname="Text Submission Viewer Component should insert exact tokens for multiple matches in one line" name="Text Submission Viewer Component should insert exact tokens for multiple matches in one line" time="0.042">
    </testcase>
    <testcase classname="Text Submission Viewer Component should insert full line tokens for multiple matches in one line" name="Text Submission Viewer Component should insert full line tokens for multiple matches in one line" time="0.026">
    </testcase>
    <testcase classname="Text Submission Viewer Component should insert exact tokens for multiple line matches" name="Text Submission Viewer Component should insert exact tokens for multiple line matches" time="0.031">
    </testcase>
    <testcase classname="Text Submission Viewer Component should return a non-empty string even if matches have undefined &quot;from&quot; and &quot;to&quot; values for exact matches" name="Text Submission Viewer Component should return a non-empty string even if matches have undefined &quot;from&quot; and &quot;to&quot; values for exact matches" time="0.028">
    </testcase>
    <testcase classname="Text Submission Viewer Component should return a non-empty string even if matches have undefined &quot;from&quot; and &quot;to&quot; values for full line matches" name="Text Submission Viewer Component should return a non-empty string even if matches have undefined &quot;from&quot; and &quot;to&quot; values for full line matches" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="LectureAttachmentsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:21" time="7.811" tests="20">
    <testcase classname="LectureAttachmentsComponent should load existing lecture" name="LectureAttachmentsComponent should load existing lecture" time="0.599">
    </testcase>
    <testcase classname="LectureAttachmentsComponent should accept file and add attachment to list" name="LectureAttachmentsComponent should accept file and add attachment to list" time="0.409">
    </testcase>
    <testcase classname="LectureAttachmentsComponent should not accept too large file" name="LectureAttachmentsComponent should not accept too large file" time="0.464">
    </testcase>
    <testcase classname="LectureAttachmentsComponent should exit saveAttachment" name="LectureAttachmentsComponent should exit saveAttachment" time="0.266">
    </testcase>
    <testcase classname="LectureAttachmentsComponent should reset on error for create" name="LectureAttachmentsComponent should reset on error for create" time="0.402">
    </testcase>
    <testcase classname="LectureAttachmentsComponent should reset on error for update: true" name="LectureAttachmentsComponent should reset on error for update: true" time="0.25">
    </testcase>
    <testcase classname="LectureAttachmentsComponent should reset on error for update: false" name="LectureAttachmentsComponent should reset on error for update: false" time="0.247">
    </testcase>
    <testcase classname="LectureAttachmentsComponent should update Attachment" name="LectureAttachmentsComponent should update Attachment" time="0.278">
    </testcase>
    <testcase classname="LectureAttachmentsComponent should edit attachment" name="LectureAttachmentsComponent should edit attachment" time="0.313">
    </testcase>
    <testcase classname="LectureAttachmentsComponent should delete attachment" name="LectureAttachmentsComponent should delete attachment" time="0.199">
    </testcase>
    <testcase classname="LectureAttachmentsComponent should handle error on delete" name="LectureAttachmentsComponent should handle error on delete" time="0.223">
    </testcase>
    <testcase classname="LectureAttachmentsComponent should call cancel" name="LectureAttachmentsComponent should call cancel" time="0.216">
    </testcase>
    <testcase classname="LectureAttachmentsComponent should download attachment" name="LectureAttachmentsComponent should download attachment" time="0.27">
    </testcase>
    <testcase classname="LectureAttachmentsComponent should set lecture attachment" name="LectureAttachmentsComponent should set lecture attachment" time="0.276">
    </testcase>
    <testcase classname="LectureAttachmentsComponent isViewButtonAvailable should return true if the attachment link ends with .pdf" name="LectureAttachmentsComponent isViewButtonAvailable should return true if the attachment link ends with .pdf" time="0.152">
    </testcase>
    <testcase classname="LectureAttachmentsComponent isViewButtonAvailable should return false if the attachment link does not end with .pdf" name="LectureAttachmentsComponent isViewButtonAvailable should return false if the attachment link does not end with .pdf" time="0.181">
    </testcase>
    <testcase classname="LectureAttachmentsComponent isViewButtonAvailable should return false for common file extension document.docx" name="LectureAttachmentsComponent isViewButtonAvailable should return false for common file extension document.docx" time="0.171">
    </testcase>
    <testcase classname="LectureAttachmentsComponent isViewButtonAvailable should return false for common file extension spreadsheet.xlsx" name="LectureAttachmentsComponent isViewButtonAvailable should return false for common file extension spreadsheet.xlsx" time="0.208">
    </testcase>
    <testcase classname="LectureAttachmentsComponent isViewButtonAvailable should return false for common file extension presentation.pptx" name="LectureAttachmentsComponent isViewButtonAvailable should return false for common file extension presentation.pptx" time="0.211">
    </testcase>
    <testcase classname="LectureAttachmentsComponent isViewButtonAvailable should return false for common file extension image.jpeg" name="LectureAttachmentsComponent isViewButtonAvailable should return false for common file extension image.jpeg" time="0.197">
    </testcase>
  </testsuite>
  <testsuite name="LectureUpdateComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:16" time="12.623" tests="14">
    <testcase classname="LectureUpdateComponent should create lecture" name="LectureUpdateComponent should create lecture" time="1.817">
    </testcase>
    <testcase classname="LectureUpdateComponent should edit a lecture" name="LectureUpdateComponent should edit a lecture" time="0.48">
    </testcase>
    <testcase classname="LectureUpdateComponent should select process units checkbox" name="LectureUpdateComponent should select process units checkbox" time="0.389">
    </testcase>
    <testcase classname="LectureUpdateComponent should navigate to previous state" name="LectureUpdateComponent should navigate to previous state" time="0.435">
    </testcase>
    <testcase classname="LectureUpdateComponent should create a lecture and then redirect to unit split" name="LectureUpdateComponent should create a lecture and then redirect to unit split" time="0.36">
    </testcase>
    <testcase classname="LectureUpdateComponent should call onFileChange on changed file" name="LectureUpdateComponent should call onFileChange on changed file" time="0.428">
    </testcase>
    <testcase classname="LectureUpdateComponent should set lecture visible date, start date and end date correctly" name="LectureUpdateComponent should set lecture visible date, start date and end date correctly" time="0.466">
    </testcase>
    <testcase classname="LectureUpdateComponent isChangeMadeToTitleSection should detect changes made to the title section" name="LectureUpdateComponent isChangeMadeToTitleSection should detect changes made to the title section" time="0.327">
    </testcase>
    <testcase classname="LectureUpdateComponent isChangeMadeToTitleSection should handle undefined from description properly" name="LectureUpdateComponent isChangeMadeToTitleSection should handle undefined from description properly" time="0.318">
    </testcase>
    <testcase classname="LectureUpdateComponent isChangeMadeToPeriodSection should detect changes made to the period section" name="LectureUpdateComponent isChangeMadeToPeriodSection should detect changes made to the period section" time="0.286">
    </testcase>
    <testcase classname="LectureUpdateComponent isChangeMadeToPeriodSection should not consider resetting an undefined date as a change" name="LectureUpdateComponent isChangeMadeToPeriodSection should not consider resetting an undefined date as a change" time="0.335">
    </testcase>
    <testcase classname="LectureUpdateComponent updateFormStatusBar should update form status bar correctly in edit mode" name="LectureUpdateComponent updateFormStatusBar should update form status bar correctly in edit mode" time="0.304">
    </testcase>
    <testcase classname="LectureUpdateComponent updateFormStatusBar should update form status bar correctly in create mode" name="LectureUpdateComponent updateFormStatusBar should update form status bar correctly in create mode" time="0.334">
    </testcase>
    <testcase classname="LectureUpdateComponent updateFormStatusBar should handle invalid sections correctly" name="LectureUpdateComponent updateFormStatusBar should handle invalid sections correctly" time="0.306">
    </testcase>
  </testsuite>
  <testsuite name="SecuredImageComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:27" time="3.16" tests="4">
    <testcase classname="SecuredImageComponent should not use cache if cache strategy is set to none" name="SecuredImageComponent should not use cache if cache strategy is set to none" time="0.155">
    </testcase>
    <testcase classname="SecuredImageComponent should use the local storage as a cache if selected as the storage strategy" name="SecuredImageComponent should use the local storage as a cache if selected as the storage strategy" time="0.022">
    </testcase>
    <testcase classname="SecuredImageComponent should use the session storage as a cache if selected as the storage strategy" name="SecuredImageComponent should use the session storage as a cache if selected as the storage strategy" time="0.017">
    </testcase>
    <testcase classname="SecuredImageComponent should use the session storage as a cache as the default storage strategy" name="SecuredImageComponent should use the session storage as a cache as the default storage strategy" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="PostingContentPartComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:29" time="2.305" tests="23">
    <testcase classname="PostingContentPartComponent For posting without reference should not contain a reference but only markdown content" name="PostingContentPartComponent For posting without reference should not contain a reference but only markdown content" time="0.16">
    </testcase>
    <testcase classname="PostingContentPartComponent For posting with reference should contain a post reference with icon and markdown content before and after" name="PostingContentPartComponent For posting with reference should contain a post reference with icon and markdown content before and after" time="0.029">
    </testcase>
    <testcase classname="PostingContentPartComponent For posting with reference should contain a reference to artifact with icon" name="PostingContentPartComponent For posting with reference should contain a reference to artifact with icon" time="0.018">
    </testcase>
    <testcase classname="PostingContentPartComponent For posting with reference should contain a reference to artifact with icon" name="PostingContentPartComponent For posting with reference should contain a reference to artifact with icon" time="0.033">
    </testcase>
    <testcase classname="PostingContentPartComponent For posting with reference should contain a reference to artifact with icon" name="PostingContentPartComponent For posting with reference should contain a reference to artifact with icon" time="0.031">
    </testcase>
    <testcase classname="PostingContentPartComponent For posting with reference should contain a reference to artifact with icon" name="PostingContentPartComponent For posting with reference should contain a reference to artifact with icon" time="0.022">
    </testcase>
    <testcase classname="PostingContentPartComponent For posting with reference should contain a reference to artifact with icon" name="PostingContentPartComponent For posting with reference should contain a reference to artifact with icon" time="0.025">
    </testcase>
    <testcase classname="PostingContentPartComponent For posting with reference should contain a reference to artifact with icon" name="PostingContentPartComponent For posting with reference should contain a reference to artifact with icon" time="0.055">
    </testcase>
    <testcase classname="PostingContentPartComponent For posting with reference should contain a reference to artifact with icon" name="PostingContentPartComponent For posting with reference should contain a reference to artifact with icon" time="0.024">
    </testcase>
    <testcase classname="PostingContentPartComponent For posting with reference should contain a reference to attachment with icon" name="PostingContentPartComponent For posting with reference should contain a reference to attachment with icon" time="0.047">
    </testcase>
    <testcase classname="PostingContentPartComponent For posting with reference should contain a reference to lecture unit" name="PostingContentPartComponent For posting with reference should contain a reference to lecture unit" time="0.022">
    </testcase>
    <testcase classname="PostingContentPartComponent For posting with reference should contain a reference to lecture unit slide image" name="PostingContentPartComponent For posting with reference should contain a reference to lecture unit slide image" time="0.011">
    </testcase>
    <testcase classname="PostingContentPartComponent For posting with reference should trigger userReferenceClicked event for different user logins" name="PostingContentPartComponent For posting with reference should trigger userReferenceClicked event for different user logins" time="0.021">
    </testcase>
    <testcase classname="PostingContentPartComponent For posting with reference should not trigger userReferenceClicked event for same user logins" name="PostingContentPartComponent For posting with reference should not trigger userReferenceClicked event for same user logins" time="0.034">
    </testcase>
    <testcase classname="PostingContentPartComponent For posting with reference should not trigger userReferenceClicked event if login is undefined" name="PostingContentPartComponent For posting with reference should not trigger userReferenceClicked event if login is undefined" time="0.014">
    </testcase>
    <testcase classname="PostingContentPartComponent For posting with reference should trigger channelReferencedClicked event if channel id is number" name="PostingContentPartComponent For posting with reference should trigger channelReferencedClicked event if channel id is number" time="0.018">
    </testcase>
    <testcase classname="PostingContentPartComponent For posting with reference should not trigger channelReferencedClicked event if channel id is undefined" name="PostingContentPartComponent For posting with reference should not trigger channelReferencedClicked event if channel id is undefined" time="0.016">
    </testcase>
    <testcase classname="PostingContentPartComponent Content processing should process content before and after reference with escaped numbered and unordered lists" name="PostingContentPartComponent Content processing should process content before and after reference with escaped numbered and unordered lists" time="0.021">
    </testcase>
    <testcase classname="PostingContentPartComponent Content processing should escape numbered lists correctly" name="PostingContentPartComponent Content processing should escape numbered lists correctly" time="0.023">
    </testcase>
    <testcase classname="PostingContentPartComponent Content processing should escape unordered lists correctly" name="PostingContentPartComponent Content processing should escape unordered lists correctly" time="0.02">
    </testcase>
    <testcase classname="PostingContentPartComponent Content processing should not escape text without numbered or unordered lists" name="PostingContentPartComponent Content processing should not escape text without numbered or unordered lists" time="0.024">
    </testcase>
    <testcase classname="PostingContentPartComponent Content processing should handle mixed numbered and unordered lists in content" name="PostingContentPartComponent Content processing should handle mixed numbered and unordered lists in content" time="0.024">
    </testcase>
    <testcase classname="PostingContentPartComponent PostingContentPart Reactivity should update display when postingContentPart changes" name="PostingContentPartComponent PostingContentPart Reactivity should update display when postingContentPart changes" time="0.085">
    </testcase>
  </testsuite>
  <testsuite name="ComplaintsForTutorComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:31" time="2.504" tests="11">
    <testcase classname="ComplaintsForTutorComponent should instantiate" name="ComplaintsForTutorComponent should instantiate" time="0.186">
    </testcase>
    <testcase classname="ComplaintsForTutorComponent should just display an already handled complaint" name="ComplaintsForTutorComponent should just display an already handled complaint" time="0.049">
    </testcase>
    <testcase classname="ComplaintsForTutorComponent should create a new complaint response for a unhandled complaint without a connected complaint response" name="ComplaintsForTutorComponent should create a new complaint response for a unhandled complaint without a connected complaint response" time="0.04">
    </testcase>
    <testcase classname="ComplaintsForTutorComponent should refresh a complaint response for a unhandled complaint with a connected complaint response" name="ComplaintsForTutorComponent should refresh a complaint response for a unhandled complaint with a connected complaint response" time="0.077">
    </testcase>
    <testcase classname="ComplaintsForTutorComponent should send event when accepting a complaint" name="ComplaintsForTutorComponent should send event when accepting a complaint" time="0.038">
    </testcase>
    <testcase classname="ComplaintsForTutorComponent should directly resolve when rejecting a complaint" name="ComplaintsForTutorComponent should directly resolve when rejecting a complaint" time="0.041">
    </testcase>
    <testcase classname="ComplaintsForTutorComponent should just display disabled accept and reject complaint button" name="ComplaintsForTutorComponent should just display disabled accept and reject complaint button" time="0.083">
    </testcase>
    <testcase classname="ComplaintsForTutorComponent text area should have the correct max length" name="ComplaintsForTutorComponent text area should have the correct max length" time="0.069">
    </testcase>
    <testcase classname="ComplaintsForTutorComponent should calculate the correct maximum text length for exam exercises" name="ComplaintsForTutorComponent should calculate the correct maximum text length for exam exercises" time="0.052">
    </testcase>
    <testcase classname="ComplaintsForTutorComponent should handle success after updating assessment after complaint" name="ComplaintsForTutorComponent should handle success after updating assessment after complaint" time="0.052">
    </testcase>
    <testcase classname="ComplaintsForTutorComponent should handle failure after updating assessment after complaint" name="ComplaintsForTutorComponent should handle failure after updating assessment after complaint" time="0.047">
    </testcase>
  </testsuite>
  <testsuite name="StudentExamsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:30" time="5.271" tests="14">
    <testcase classname="StudentExamsComponent should initialize" name="StudentExamsComponent should initialize" time="0.763">
    </testcase>
    <testcase classname="StudentExamsComponent should generate student exams if there are none" name="StudentExamsComponent should generate student exams if there are none" time="0.217">
    </testcase>
    <testcase classname="StudentExamsComponent should correctly catch HTTPError and get additional error when generating student exams" name="StudentExamsComponent should correctly catch HTTPError and get additional error when generating student exams" time="0.224">
    </testcase>
    <testcase classname="StudentExamsComponent should generate student exams after warning the user that the existing are deleted" name="StudentExamsComponent should generate student exams after warning the user that the existing are deleted" time="0.315">
    </testcase>
    <testcase classname="StudentExamsComponent should generate missing student exams" name="StudentExamsComponent should generate missing student exams" time="0.29">
    </testcase>
    <testcase classname="StudentExamsComponent should correctly catch HTTPError when generating missing student exams" name="StudentExamsComponent should correctly catch HTTPError when generating missing student exams" time="0.19">
    </testcase>
    <testcase classname="StudentExamsComponent should start the exercises of students" name="StudentExamsComponent should start the exercises of students" time="0.18">
    </testcase>
    <testcase classname="StudentExamsComponent should correctly catch HTTPError when starting the exercises of the students" name="StudentExamsComponent should correctly catch HTTPError when starting the exercises of the students" time="0.234">
    </testcase>
    <testcase classname="StudentExamsComponent should correctly calculate exam preparation progress" name="StudentExamsComponent should correctly calculate exam preparation progress" time="0.011">
    </testcase>
    <testcase classname="StudentExamsComponent should correctly calculate exam preparation progress" name="StudentExamsComponent should correctly calculate exam preparation progress" time="0.01">
    </testcase>
    <testcase classname="StudentExamsComponent should correctly calculate exam preparation progress" name="StudentExamsComponent should correctly calculate exam preparation progress" time="0.008">
    </testcase>
    <testcase classname="StudentExamsComponent should correctly calculate exam preparation progress" name="StudentExamsComponent should correctly calculate exam preparation progress" time="0.009">
    </testcase>
    <testcase classname="StudentExamsComponent should correctly calculate exam preparation progress" name="StudentExamsComponent should correctly calculate exam preparation progress" time="0.022">
    </testcase>
    <testcase classname="StudentExamsComponent should correctly calculate exam preparation progress" name="StudentExamsComponent should correctly calculate exam preparation progress" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupsRegistrationImportDialog" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:26" time="9.618" tests="23">
    <testcase classname="TutorialGroupsRegistrationImportDialog should create" name="TutorialGroupsRegistrationImportDialog should create" time="0.507">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should reset dialog when selecting a new file" name="TutorialGroupsRegistrationImportDialog should reset dialog when selecting a new file" time="0.242">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog clear should close the modal with cancel reason" name="TutorialGroupsRegistrationImportDialog clear should close the modal with cancel reason" time="0.357">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog onFinish should close the modal" name="TutorialGroupsRegistrationImportDialog onFinish should close the modal" time="0.26">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should read registrations from csv string" name="TutorialGroupsRegistrationImportDialog should read registrations from csv string" time="0.242">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should read registrations without student from csv string" name="TutorialGroupsRegistrationImportDialog should read registrations without student from csv string" time="0.206">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should filter out unconfirmed registrations" name="TutorialGroupsRegistrationImportDialog should filter out unconfirmed registrations" time="0.23">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should fail csv validation when csv is malformed" name="TutorialGroupsRegistrationImportDialog should fail csv validation when csv is malformed" time="0.228">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should fail when parser throws exception" name="TutorialGroupsRegistrationImportDialog should fail when parser throws exception" time="0.393">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should fail when no title value" name="TutorialGroupsRegistrationImportDialog should fail when no title value" time="0.364">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should fail when title contains invalid character" name="TutorialGroupsRegistrationImportDialog should fail when title contains invalid character" time="0.303">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should fail when title too long" name="TutorialGroupsRegistrationImportDialog should fail when title too long" time="0.283">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should fail when no identifier information" name="TutorialGroupsRegistrationImportDialog should fail when no identifier information" time="0.42">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should fail when same registration number is mapped to two groups" name="TutorialGroupsRegistrationImportDialog should fail when same registration number is mapped to two groups" time="0.455">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should fail when the same login is mapped to two groups" name="TutorialGroupsRegistrationImportDialog should fail when the same login is mapped to two groups" time="0.258">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog onFilterChange should set table data to filtered data" name="TutorialGroupsRegistrationImportDialog onFilterChange should set table data to filtered data" time="0.231">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog wasImported should check the import status set by the server" name="TutorialGroupsRegistrationImportDialog wasImported should check the import status set by the server" time="0.195">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should reset fixed place inputs when the respective checkbox is switched" name="TutorialGroupsRegistrationImportDialog should reset fixed place inputs when the respective checkbox is switched" time="0.217">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should reset fixed place input when fixed place header input is cleared" name="TutorialGroupsRegistrationImportDialog should reset fixed place input when fixed place header input is cleared" time="0.152">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should call the import service when the import button is clicked" name="TutorialGroupsRegistrationImportDialog should call the import service when the import button is clicked" time="0.222">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should read registrations from csv string with additional headers" name="TutorialGroupsRegistrationImportDialog should read registrations from csv string with additional headers" time="0.221">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should remove spaces from header names correctly" name="TutorialGroupsRegistrationImportDialog should remove spaces from header names correctly" time="0.203">
    </testcase>
    <testcase classname="TutorialGroupsRegistrationImportDialog should generate and download CSV when generateCSV is called" name="TutorialGroupsRegistrationImportDialog should generate and download CSV when generateCSV is called" time="0.165">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackAnalysisComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:32" time="4.786" tests="18">
    <testcase classname="FeedbackAnalysisComponent on init should load data on initialization" name="FeedbackAnalysisComponent on init should load data on initialization" time="0.185">
    </testcase>
    <testcase classname="FeedbackAnalysisComponent loadData should load feedback details and update state correctly" name="FeedbackAnalysisComponent loadData should load feedback details and update state correctly" time="0.044">
    </testcase>
    <testcase classname="FeedbackAnalysisComponent loadData should handle error while loading feedback details" name="FeedbackAnalysisComponent loadData should handle error while loading feedback details" time="0.059">
    </testcase>
    <testcase classname="FeedbackAnalysisComponent openFilterModal should open filter modal and pass correct form values and properties" name="FeedbackAnalysisComponent openFilterModal should open filter modal and pass correct form values and properties" time="0.065">
    </testcase>
    <testcase classname="FeedbackAnalysisComponent openFilterModal should open filter modal and pass correct form values and properties when grouped feedback is active" name="FeedbackAnalysisComponent openFilterModal should open filter modal and pass correct form values and properties when grouped feedback is active" time="0.05">
    </testcase>
    <testcase classname="FeedbackAnalysisComponent applyFilters should apply filters, update filter count, and reload data" name="FeedbackAnalysisComponent applyFilters should apply filters, update filter count, and reload data" time="0.038">
    </testcase>
    <testcase classname="FeedbackAnalysisComponent countAppliedFilters should count the applied filters correctly" name="FeedbackAnalysisComponent countAppliedFilters should count the applied filters correctly" time="0.08">
    </testcase>
    <testcase classname="FeedbackAnalysisComponent countAppliedFilters should return 0 if no filters are applied" name="FeedbackAnalysisComponent countAppliedFilters should return 0 if no filters are applied" time="0.044">
    </testcase>
    <testcase classname="FeedbackAnalysisComponent setPage should update page and reload data" name="FeedbackAnalysisComponent setPage should update page and reload data" time="0.076">
    </testcase>
    <testcase classname="FeedbackAnalysisComponent setSortedColumn should update sortedColumn and sortingOrder, and reload data" name="FeedbackAnalysisComponent setSortedColumn should update sortedColumn and sortingOrder, and reload data" time="0.135">
    </testcase>
    <testcase classname="FeedbackAnalysisComponent search should reset page and load data when searching" name="FeedbackAnalysisComponent search should reset page and load data when searching" time="0.116">
    </testcase>
    <testcase classname="FeedbackAnalysisComponent openFeedbackModal should open feedback modal with correct feedback detail" name="FeedbackAnalysisComponent openFeedbackModal should open feedback modal with correct feedback detail" time="0.111">
    </testcase>
    <testcase classname="FeedbackAnalysisComponent openAffectedStudentsModal should open affected students modal with the correct feedback detail" name="FeedbackAnalysisComponent openAffectedStudentsModal should open affected students modal with the correct feedback detail" time="0.143">
    </testcase>
    <testcase classname="FeedbackAnalysisComponent should open the feedback detail channel modal" name="FeedbackAnalysisComponent should open the feedback detail channel modal" time="0.096">
    </testcase>
    <testcase classname="FeedbackAnalysisComponent should handle errors during channel creation gracefully" name="FeedbackAnalysisComponent should handle errors during channel creation gracefully" time="0.086">
    </testcase>
    <testcase classname="FeedbackAnalysisComponent should not proceed if modal is already open" name="FeedbackAnalysisComponent should not proceed if modal is already open" time="0.081">
    </testcase>
    <testcase classname="FeedbackAnalysisComponent toggleGroupFeedback should toggle groupFeedback and call loadData" name="FeedbackAnalysisComponent toggleGroupFeedback should toggle groupFeedback and call loadData" time="0.149">
    </testcase>
    <testcase classname="FeedbackAnalysisComponent updateCache should restore cache if no new response is provided" name="FeedbackAnalysisComponent updateCache should restore cache if no new response is provided" time="0.128">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:33" time="3.796" tests="16">
    <testcase classname="FeedbackComponent should set the exercise from the participation if available" name="FeedbackComponent should set the exercise from the participation if available" time="0.169">
    </testcase>
    <testcase classname="FeedbackComponent should set the exercise type from the exercise if not available otherwise" name="FeedbackComponent should set the exercise type from the exercise if not available otherwise" time="0.023">
    </testcase>
    <testcase classname="FeedbackComponent should set the exercise type from a programming participation if not available otherwise" name="FeedbackComponent should set the exercise type from a programming participation if not available otherwise" time="0.006">
    </testcase>
    <testcase classname="FeedbackComponent should generate commit link for programming exercise result with submission, participation and exercise" name="FeedbackComponent should generate commit link for programming exercise result with submission, participation and exercise" time="0.01">
    </testcase>
    <testcase classname="FeedbackComponent should not try to retrieve the feedbacks from the server if provided result has feedbacks" name="FeedbackComponent should not try to retrieve the feedbacks from the server if provided result has feedbacks" time="0.007">
    </testcase>
    <testcase classname="FeedbackComponent should try to retrieve the feedbacks from the server if provided result does not have feedbacks" name="FeedbackComponent should try to retrieve the feedbacks from the server if provided result does not have feedbacks" time="0.007">
    </testcase>
    <testcase classname="FeedbackComponent should try to retrieve build logs if the exercise type is PROGRAMMING and no submission was provided." name="FeedbackComponent should try to retrieve build logs if the exercise type is PROGRAMMING and no submission was provided." time="0.008">
    </testcase>
    <testcase classname="FeedbackComponent should try to retrieve build logs if the exercise type is PROGRAMMING and a submission was provided which was marked with build failed." name="FeedbackComponent should try to retrieve build logs if the exercise type is PROGRAMMING and a submission was provided which was marked with build failed." time="0.007">
    </testcase>
    <testcase classname="FeedbackComponent should not try to retrieve build logs if the exercise type is not PROGRAMMING" name="FeedbackComponent should not try to retrieve build logs if the exercise type is not PROGRAMMING" time="0.008">
    </testcase>
    <testcase classname="FeedbackComponent should not try to retrieve build logs if submission was not marked with build failed" name="FeedbackComponent should not try to retrieve build logs if submission was not marked with build failed" time="0.011">
    </testcase>
    <testcase classname="FeedbackComponent fetchBuildLogs should suppress 403 error" name="FeedbackComponent fetchBuildLogs should suppress 403 error" time="0.012">
    </testcase>
    <testcase classname="FeedbackComponent fetchBuildLogs should not suppress errors with status other than 403" name="FeedbackComponent fetchBuildLogs should not suppress errors with status other than 403" time="0.008">
    </testcase>
    <testcase classname="FeedbackComponent should not show test details to students" name="FeedbackComponent should not show test details to students" time="0.017">
    </testcase>
    <testcase classname="FeedbackComponent should show test details to tutors" name="FeedbackComponent should show test details to tutors" time="0.008">
    </testcase>
    <testcase classname="FeedbackComponent should show test details to students for programming exercises with show test names on" name="FeedbackComponent should show test details to students for programming exercises with show test names on" time="0.031">
    </testcase>
    <testcase classname="FeedbackComponent should expand feedback when being printed" name="FeedbackComponent should expand feedback when being printed" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Interval Grading System Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:37" time="2.745" tests="20">
    <testcase classname="Interval Grading System Component should generate default grading scale" name="Interval Grading System Component should generate default grading scale" time="0.267">
    </testcase>
    <testcase classname="Interval Grading System Component should generate default grading scale with max points set" name="Interval Grading System Component should generate default grading scale with max points set" time="0.059">
    </testcase>
    <testcase classname="Interval Grading System Component should delete grade step" name="Interval Grading System Component should delete grade step" time="0.025">
    </testcase>
    <testcase classname="Interval Grading System Component should create grade step" name="Interval Grading System Component should create grade step" time="0.029">
    </testcase>
    <testcase classname="Interval Grading System Component should delete grade names correctly" name="Interval Grading System Component should delete grade names correctly" time="0.019">
    </testcase>
    <testcase classname="Interval Grading System Component should set all grade step percentage intervals correctly" name="Interval Grading System Component should set all grade step percentage intervals correctly" time="0.022">
    </testcase>
    <testcase classname="Interval Grading System Component should set all grade step point intervals correctly" name="Interval Grading System Component should set all grade step point intervals correctly" time="0.037">
    </testcase>
    <testcase classname="Interval Grading System Component should cascade percentage interval increase" name="Interval Grading System Component should cascade percentage interval increase" time="0.022">
    </testcase>
    <testcase classname="Interval Grading System Component should cascade percentage interval decrease" name="Interval Grading System Component should cascade percentage interval decrease" time="0.02">
    </testcase>
    <testcase classname="Interval Grading System Component should cascade points interval increase" name="Interval Grading System Component should cascade points interval increase" time="0.042">
    </testcase>
    <testcase classname="Interval Grading System Component should cascade points interval decrease" name="Interval Grading System Component should cascade points interval decrease" time="0.029">
    </testcase>
    <testcase classname="Interval Grading System Component should throw on points interval change when max points are not defined" name="Interval Grading System Component should throw on points interval change when max points are not defined" time="0.084">
    </testcase>
    <testcase classname="Interval Grading System Component should prevent total percentage is less than 100 when only sticky step remains" name="Interval Grading System Component should prevent total percentage is less than 100 when only sticky step remains" time="0.032">
    </testcase>
    <testcase classname="Interval Grading System Component should create the initial step when grading scale is empty" name="Interval Grading System Component should create the initial step when grading scale is empty" time="0.023">
    </testcase>
    <testcase classname="Interval Grading System Component should handle inclusivity setting when there are no grade steps" name="Interval Grading System Component should handle inclusivity setting when there are no grade steps" time="0.015">
    </testcase>
    <testcase classname="Interval Grading System Component should set inclusivity to lower bound inclusive" name="Interval Grading System Component should set inclusivity to lower bound inclusive" time="0.023">
    </testcase>
    <testcase classname="Interval Grading System Component should set inclusivity to upper bound inclusive" name="Interval Grading System Component should set inclusivity to upper bound inclusive" time="0.017">
    </testcase>
    <testcase classname="Interval Grading System Component should not show grading steps above max points warning" name="Interval Grading System Component should not show grading steps above max points warning" time="0.064">
    </testcase>
    <testcase classname="Interval Grading System Component should show grading steps above max points warning for inclusive bound" name="Interval Grading System Component should show grading steps above max points warning for inclusive bound" time="0.029">
    </testcase>
    <testcase classname="Interval Grading System Component should show grading steps above max points warning for exclusive bound" name="Interval Grading System Component should show grading steps above max points warning for exclusive bound" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="ConversationMemberRowComponent with oneToOneChat" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:35" time="7.124" tests="72">
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should create" name="ConversationMemberRowComponent with oneToOneChat should create" time="0.155">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should show remove user button if the user has the permissions in group chat" name="ConversationMemberRowComponent with oneToOneChat should show remove user button if the user has the permissions in group chat" time="0.077">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should show remove user button if the user has the permissions in channel" name="ConversationMemberRowComponent with oneToOneChat should show remove user button if the user has the permissions in channel" time="0.084">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should hide remove user button if the user does not have the permissions" name="ConversationMemberRowComponent with oneToOneChat should hide remove user button if the user does not have the permissions" time="0.075">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should show revoke moderator button if user is already moderator" name="ConversationMemberRowComponent with oneToOneChat should show revoke moderator button if user is already moderator" time="0.078">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should show grant moderator button if user is not yet moderator" name="ConversationMemberRowComponent with oneToOneChat should show grant moderator button if user is not yet moderator" time="0.083">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should open the grant channel moderator role dialog" name="ConversationMemberRowComponent with oneToOneChat should open the grant channel moderator role dialog" time="0.068">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should open the revoke channel moderator role dialog" name="ConversationMemberRowComponent with oneToOneChat should open the revoke channel moderator role dialog" time="0.118">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should open the remove from private channel dialog" name="ConversationMemberRowComponent with oneToOneChat should open the remove from private channel dialog" time="0.052">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should open the remove from group chat dialog" name="ConversationMemberRowComponent with oneToOneChat should open the remove from group chat dialog" time="0.068">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should emit userId when another user clicks the name" name="ConversationMemberRowComponent with oneToOneChat should emit userId when another user clicks the name" time="0.082">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should set isCurrentUser to true if conversation member is the logged-in user" name="ConversationMemberRowComponent with oneToOneChat should set isCurrentUser to true if conversation member is the logged-in user" time="0.063">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should set isCurrentUser to false if conversation member is NOT the logged-in user" name="ConversationMemberRowComponent with oneToOneChat should set isCurrentUser to false if conversation member is NOT the logged-in user" time="0.073">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should prevent removal action if the user is the current user" name="ConversationMemberRowComponent with oneToOneChat should prevent removal action if the user is the current user" time="0.085">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should set correct icon and tooltip when role = instructor" name="ConversationMemberRowComponent with oneToOneChat should set correct icon and tooltip when role = instructor" time="0.038">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should set correct icon and tooltip when role = editor (tutor)" name="ConversationMemberRowComponent with oneToOneChat should set correct icon and tooltip when role = editor (tutor)" time="0.052">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should set correct icon and tooltip when role = teachingAssistant (tutor)" name="ConversationMemberRowComponent with oneToOneChat should set correct icon and tooltip when role = teachingAssistant (tutor)" time="0.052">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with oneToOneChat should set correct icon and tooltip when role = regular student (default)" name="ConversationMemberRowComponent with oneToOneChat should set correct icon and tooltip when role = regular student (default)" time="0.087">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should create" name="ConversationMemberRowComponent with groupChat should create" time="0.05">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should show remove user button if the user has the permissions in group chat" name="ConversationMemberRowComponent with groupChat should show remove user button if the user has the permissions in group chat" time="0.064">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should show remove user button if the user has the permissions in channel" name="ConversationMemberRowComponent with groupChat should show remove user button if the user has the permissions in channel" time="0.043">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should hide remove user button if the user does not have the permissions" name="ConversationMemberRowComponent with groupChat should hide remove user button if the user does not have the permissions" time="0.054">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should show revoke moderator button if user is already moderator" name="ConversationMemberRowComponent with groupChat should show revoke moderator button if user is already moderator" time="0.05">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should show grant moderator button if user is not yet moderator" name="ConversationMemberRowComponent with groupChat should show grant moderator button if user is not yet moderator" time="0.049">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should open the grant channel moderator role dialog" name="ConversationMemberRowComponent with groupChat should open the grant channel moderator role dialog" time="0.045">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should open the revoke channel moderator role dialog" name="ConversationMemberRowComponent with groupChat should open the revoke channel moderator role dialog" time="0.056">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should open the remove from private channel dialog" name="ConversationMemberRowComponent with groupChat should open the remove from private channel dialog" time="0.054">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should open the remove from group chat dialog" name="ConversationMemberRowComponent with groupChat should open the remove from group chat dialog" time="0.06">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should emit userId when another user clicks the name" name="ConversationMemberRowComponent with groupChat should emit userId when another user clicks the name" time="0.051">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should set isCurrentUser to true if conversation member is the logged-in user" name="ConversationMemberRowComponent with groupChat should set isCurrentUser to true if conversation member is the logged-in user" time="0.074">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should set isCurrentUser to false if conversation member is NOT the logged-in user" name="ConversationMemberRowComponent with groupChat should set isCurrentUser to false if conversation member is NOT the logged-in user" time="0.075">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should prevent removal action if the user is the current user" name="ConversationMemberRowComponent with groupChat should prevent removal action if the user is the current user" time="0.066">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should set correct icon and tooltip when role = instructor" name="ConversationMemberRowComponent with groupChat should set correct icon and tooltip when role = instructor" time="0.087">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should set correct icon and tooltip when role = editor (tutor)" name="ConversationMemberRowComponent with groupChat should set correct icon and tooltip when role = editor (tutor)" time="0.06">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should set correct icon and tooltip when role = teachingAssistant (tutor)" name="ConversationMemberRowComponent with groupChat should set correct icon and tooltip when role = teachingAssistant (tutor)" time="0.049">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with groupChat should set correct icon and tooltip when role = regular student (default)" name="ConversationMemberRowComponent with groupChat should set correct icon and tooltip when role = regular student (default)" time="0.084">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should create" name="ConversationMemberRowComponent with channel should create" time="0.065">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should show remove user button if the user has the permissions in group chat" name="ConversationMemberRowComponent with channel should show remove user button if the user has the permissions in group chat" time="0.129">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should show remove user button if the user has the permissions in channel" name="ConversationMemberRowComponent with channel should show remove user button if the user has the permissions in channel" time="0.069">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should hide remove user button if the user does not have the permissions" name="ConversationMemberRowComponent with channel should hide remove user button if the user does not have the permissions" time="0.104">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should show revoke moderator button if user is already moderator" name="ConversationMemberRowComponent with channel should show revoke moderator button if user is already moderator" time="0.071">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should show grant moderator button if user is not yet moderator" name="ConversationMemberRowComponent with channel should show grant moderator button if user is not yet moderator" time="0.082">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should open the grant channel moderator role dialog" name="ConversationMemberRowComponent with channel should open the grant channel moderator role dialog" time="0.072">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should open the revoke channel moderator role dialog" name="ConversationMemberRowComponent with channel should open the revoke channel moderator role dialog" time="0.082">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should open the remove from private channel dialog" name="ConversationMemberRowComponent with channel should open the remove from private channel dialog" time="0.056">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should open the remove from group chat dialog" name="ConversationMemberRowComponent with channel should open the remove from group chat dialog" time="0.107">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should emit userId when another user clicks the name" name="ConversationMemberRowComponent with channel should emit userId when another user clicks the name" time="0.068">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should set isCurrentUser to true if conversation member is the logged-in user" name="ConversationMemberRowComponent with channel should set isCurrentUser to true if conversation member is the logged-in user" time="0.081">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should set isCurrentUser to false if conversation member is NOT the logged-in user" name="ConversationMemberRowComponent with channel should set isCurrentUser to false if conversation member is NOT the logged-in user" time="0.066">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should prevent removal action if the user is the current user" name="ConversationMemberRowComponent with channel should prevent removal action if the user is the current user" time="0.066">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should set correct icon and tooltip when role = instructor" name="ConversationMemberRowComponent with channel should set correct icon and tooltip when role = instructor" time="0.032">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should set correct icon and tooltip when role = editor (tutor)" name="ConversationMemberRowComponent with channel should set correct icon and tooltip when role = editor (tutor)" time="0.075">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should set correct icon and tooltip when role = teachingAssistant (tutor)" name="ConversationMemberRowComponent with channel should set correct icon and tooltip when role = teachingAssistant (tutor)" time="0.043">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should set correct icon and tooltip when role = regular student (default)" name="ConversationMemberRowComponent with channel should set correct icon and tooltip when role = regular student (default)" time="0.042">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should create" name="ConversationMemberRowComponent with channel should create" time="0.047">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should show remove user button if the user has the permissions in group chat" name="ConversationMemberRowComponent with channel should show remove user button if the user has the permissions in group chat" time="0.059">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should show remove user button if the user has the permissions in channel" name="ConversationMemberRowComponent with channel should show remove user button if the user has the permissions in channel" time="0.043">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should hide remove user button if the user does not have the permissions" name="ConversationMemberRowComponent with channel should hide remove user button if the user does not have the permissions" time="0.048">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should show revoke moderator button if user is already moderator" name="ConversationMemberRowComponent with channel should show revoke moderator button if user is already moderator" time="0.056">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should show grant moderator button if user is not yet moderator" name="ConversationMemberRowComponent with channel should show grant moderator button if user is not yet moderator" time="0.087">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should open the grant channel moderator role dialog" name="ConversationMemberRowComponent with channel should open the grant channel moderator role dialog" time="0.064">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should open the revoke channel moderator role dialog" name="ConversationMemberRowComponent with channel should open the revoke channel moderator role dialog" time="0.106">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should open the remove from private channel dialog" name="ConversationMemberRowComponent with channel should open the remove from private channel dialog" time="0.114">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should open the remove from group chat dialog" name="ConversationMemberRowComponent with channel should open the remove from group chat dialog" time="0.078">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should emit userId when another user clicks the name" name="ConversationMemberRowComponent with channel should emit userId when another user clicks the name" time="0.096">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should set isCurrentUser to true if conversation member is the logged-in user" name="ConversationMemberRowComponent with channel should set isCurrentUser to true if conversation member is the logged-in user" time="0.071">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should set isCurrentUser to false if conversation member is NOT the logged-in user" name="ConversationMemberRowComponent with channel should set isCurrentUser to false if conversation member is NOT the logged-in user" time="0.052">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should prevent removal action if the user is the current user" name="ConversationMemberRowComponent with channel should prevent removal action if the user is the current user" time="0.063">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should set correct icon and tooltip when role = instructor" name="ConversationMemberRowComponent with channel should set correct icon and tooltip when role = instructor" time="0.055">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should set correct icon and tooltip when role = editor (tutor)" name="ConversationMemberRowComponent with channel should set correct icon and tooltip when role = editor (tutor)" time="0.048">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should set correct icon and tooltip when role = teachingAssistant (tutor)" name="ConversationMemberRowComponent with channel should set correct icon and tooltip when role = teachingAssistant (tutor)" time="0.037">
    </testcase>
    <testcase classname="ConversationMemberRowComponent with channel should set correct icon and tooltip when role = regular student (default)" name="ConversationMemberRowComponent with channel should set correct icon and tooltip when role = regular student (default)" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="PdfPreviewComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:37" time="5.348" tests="20">
    <testcase classname="PdfPreviewComponent Initialization and Data Loading should load attachment file and verify service calls when attachment data is available" name="PdfPreviewComponent Initialization and Data Loading should load attachment file and verify service calls when attachment data is available" time="0.16">
    </testcase>
    <testcase classname="PdfPreviewComponent Initialization and Data Loading should load attachment unit file and verify service calls when attachment unit data is available" name="PdfPreviewComponent Initialization and Data Loading should load attachment unit file and verify service calls when attachment unit data is available" time="0.034">
    </testcase>
    <testcase classname="PdfPreviewComponent Initialization and Data Loading should handle errors and trigger alert when loading an attachment file fails" name="PdfPreviewComponent Initialization and Data Loading should handle errors and trigger alert when loading an attachment file fails" time="0.067">
    </testcase>
    <testcase classname="PdfPreviewComponent Initialization and Data Loading should handle errors and trigger alert when loading an attachment unit file fails" name="PdfPreviewComponent Initialization and Data Loading should handle errors and trigger alert when loading an attachment unit file fails" time="0.03">
    </testcase>
    <testcase classname="PdfPreviewComponent Unsubscribing from Observables should unsubscribe attachment subscription during component destruction" name="PdfPreviewComponent Unsubscribing from Observables should unsubscribe attachment subscription during component destruction" time="0.032">
    </testcase>
    <testcase classname="PdfPreviewComponent Unsubscribing from Observables should unsubscribe attachmentUnit subscription during component destruction" name="PdfPreviewComponent Unsubscribing from Observables should unsubscribe attachmentUnit subscription during component destruction" time="0.022">
    </testcase>
    <testcase classname="PdfPreviewComponent File Input Handling should trigger the file input click event" name="PdfPreviewComponent File Input Handling should trigger the file input click event" time="0.022">
    </testcase>
    <testcase classname="PdfPreviewComponent Attachment Updating should update attachment successfully and show success alert" name="PdfPreviewComponent Attachment Updating should update attachment successfully and show success alert" time="0.068">
    </testcase>
    <testcase classname="PdfPreviewComponent Attachment Updating should not update attachment if file size exceeds the limit and show an error alert" name="PdfPreviewComponent Attachment Updating should not update attachment if file size exceeds the limit and show an error alert" time="0.192">
    </testcase>
    <testcase classname="PdfPreviewComponent Attachment Updating should handle errors when updating an attachment fails" name="PdfPreviewComponent Attachment Updating should handle errors when updating an attachment fails" time="1.775">
    </testcase>
    <testcase classname="PdfPreviewComponent Attachment Updating should update attachment unit successfully and show success alert" name="PdfPreviewComponent Attachment Updating should update attachment unit successfully and show success alert" time="0.272">
    </testcase>
    <testcase classname="PdfPreviewComponent Attachment Updating should handle errors when updating an attachment unit fails" name="PdfPreviewComponent Attachment Updating should handle errors when updating an attachment unit fails" time="0.034">
    </testcase>
    <testcase classname="PdfPreviewComponent PDF Merging should merge PDF files correctly and update the component state" name="PdfPreviewComponent PDF Merging should merge PDF files correctly and update the component state" time="0.062">
    </testcase>
    <testcase classname="PdfPreviewComponent PDF Merging should handle errors when merging PDFs fails" name="PdfPreviewComponent PDF Merging should handle errors when merging PDFs fails" time="0.044">
    </testcase>
    <testcase classname="PdfPreviewComponent Slide Deletion should delete selected slides and update the PDF" name="PdfPreviewComponent Slide Deletion should delete selected slides and update the PDF" time="0.029">
    </testcase>
    <testcase classname="PdfPreviewComponent Slide Deletion should handle errors when deleting slides" name="PdfPreviewComponent Slide Deletion should handle errors when deleting slides" time="0.061">
    </testcase>
    <testcase classname="PdfPreviewComponent Attachment Deletion should delete the attachment and navigate to attachments on success" name="PdfPreviewComponent Attachment Deletion should delete the attachment and navigate to attachments on success" time="0.045">
    </testcase>
    <testcase classname="PdfPreviewComponent Attachment Deletion should delete the attachment unit and navigate to unit management on success" name="PdfPreviewComponent Attachment Deletion should delete the attachment unit and navigate to unit management on success" time="0.031">
    </testcase>
    <testcase classname="PdfPreviewComponent Attachment Deletion should handle error and call alertService.error if deletion of attachment fails" name="PdfPreviewComponent Attachment Deletion should handle error and call alertService.error if deletion of attachment fails" time="0.057">
    </testcase>
    <testcase classname="PdfPreviewComponent Attachment Deletion should handle error and call alertService.error if deletion of attachment unit fails" name="PdfPreviewComponent Attachment Deletion should handle error and call alertService.error if deletion of attachment unit fails" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="AssessmentHeaderComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:43" time="2.629" tests="21">
    <testcase classname="AssessmentHeaderComponent should create" name="AssessmentHeaderComponent should create" time="0.179">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should display warning when assessment due date has not passed" name="AssessmentHeaderComponent should display warning when assessment due date has not passed" time="0.021">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should display alert when assessment due date has passed" name="AssessmentHeaderComponent should display alert when assessment due date has passed" time="0.03">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should hide right side row-container if loading" name="AssessmentHeaderComponent should hide right side row-container if loading" time="0.021">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should show if submission is locked by other user" name="AssessmentHeaderComponent should show if submission is locked by other user" time="0.031">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should show save/submit buttons when no result present" name="AssessmentHeaderComponent should show save/submit buttons when no result present" time="0.055">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should show override button when result is present" name="AssessmentHeaderComponent should show override button when result is present" time="0.03">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should show next submission if assessor or instructor, result is present and no complaint" name="AssessmentHeaderComponent should show next submission if assessor or instructor, result is present and no complaint" time="0.04">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should not show assess next button if is test run mode" name="AssessmentHeaderComponent should not show assess next button if is test run mode" time="0.019">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should set highlightDifferences to true" name="AssessmentHeaderComponent should set highlightDifferences to true" time="0.031">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should set highlightDifferences to false" name="AssessmentHeaderComponent should set highlightDifferences to false" time="0.015">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should send assessment event on assess next button click when exercise set to Text" name="AssessmentHeaderComponent should send assessment event on assess next button click when exercise set to Text" time="0.015">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should not send assessment event on assess next button click when exercise is not Text" name="AssessmentHeaderComponent should not send assessment event on assess next button click when exercise is not Text" time="0.029">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should send assessment event on submit button click when exercise set to Text" name="AssessmentHeaderComponent should send assessment event on submit button click when exercise set to Text" time="0.025">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should not send assessment event on submit button click when exercise is not Text" name="AssessmentHeaderComponent should not send assessment event on submit button click when exercise is not Text" time="0.018">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should save assessment on control and s" name="AssessmentHeaderComponent should save assessment on control and s" time="0.016">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should submit assessment on control and enter" name="AssessmentHeaderComponent should submit assessment on control and enter" time="0.041">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should override assessment on control and enter" name="AssessmentHeaderComponent should override assessment on control and enter" time="0.033">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should assess next submission on control, shift and arrow right" name="AssessmentHeaderComponent should assess next submission on control, shift and arrow right" time="0.019">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should enable saving after entering an internal assessment note" name="AssessmentHeaderComponent should enable saving after entering an internal assessment note" time="0.019">
    </testcase>
    <testcase classname="AssessmentHeaderComponent should not enable submitting after entering an internal assessment note" name="AssessmentHeaderComponent should not enable submitting after entering an internal assessment note" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="FileUploadSubmissionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:40" time="7.375" tests="14">
    <testcase classname="FileUploadSubmissionComponent File Upload Submission is correctly initialized from service" name="FileUploadSubmissionComponent File Upload Submission is correctly initialized from service" time="0.808">
    </testcase>
    <testcase classname="FileUploadSubmissionComponent Submission and file uploaded" name="FileUploadSubmissionComponent Submission and file uploaded" time="0.22">
    </testcase>
    <testcase classname="FileUploadSubmissionComponent Too big file can not be submitted" name="FileUploadSubmissionComponent Too big file can not be submitted" time="0.242">
    </testcase>
    <testcase classname="FileUploadSubmissionComponent Incorrect file type can not be submitted" name="FileUploadSubmissionComponent Incorrect file type can not be submitted" time="0.178">
    </testcase>
    <testcase classname="FileUploadSubmissionComponent should not allow to submit after the due date if the initialization date is before the due date" name="FileUploadSubmissionComponent should not allow to submit after the due date if the initialization date is before the due date" time="0.238">
    </testcase>
    <testcase classname="FileUploadSubmissionComponent should allow to submit after the due date if the initialization date is after the due date" name="FileUploadSubmissionComponent should allow to submit after the due date if the initialization date is after the due date" time="0.15">
    </testcase>
    <testcase classname="FileUploadSubmissionComponent should not allow to submit if there is a result and no due date" name="FileUploadSubmissionComponent should not allow to submit if there is a result and no due date" time="0.141">
    </testcase>
    <testcase classname="FileUploadSubmissionComponent should get inactive as soon as the due date passes the current date" name="FileUploadSubmissionComponent should get inactive as soon as the due date passes the current date" time="0.099">
    </testcase>
    <testcase classname="FileUploadSubmissionComponent should mark the subsequent feedback" name="FileUploadSubmissionComponent should mark the subsequent feedback" time="0.097">
    </testcase>
    <testcase classname="FileUploadSubmissionComponent should download file" name="FileUploadSubmissionComponent should download file" time="0.101">
    </testcase>
    <testcase classname="FileUploadSubmissionComponent should decide over deactivation correctly" name="FileUploadSubmissionComponent should decide over deactivation correctly" time="0.081">
    </testcase>
    <testcase classname="FileUploadSubmissionComponent should set alert correctly" name="FileUploadSubmissionComponent should set alert correctly" time="0.135">
    </testcase>
    <testcase classname="FileUploadSubmissionComponent should set file name and type correctly" name="FileUploadSubmissionComponent should set file name and type correctly" time="0.082">
    </testcase>
    <testcase classname="FileUploadSubmissionComponent should be set up with input values if present instead of loading new values from server" name="FileUploadSubmissionComponent should be set up with input values if present instead of loading new values from server" time="0.09">
    </testcase>
  </testsuite>
  <testsuite name="CourseNotificationOverviewComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:43" time="5.4" tests="29">
    <testcase classname="CourseNotificationOverviewComponent should create" name="CourseNotificationOverviewComponent should create" time="0.262">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should initialize with the correct default values" name="CourseNotificationOverviewComponent should initialize with the correct default values" time="0.097">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should set up notification count subscription on init" name="CourseNotificationOverviewComponent should set up notification count subscription on init" time="0.073">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should set up notifications subscription on init" name="CourseNotificationOverviewComponent should set up notifications subscription on init" time="0.08">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should filter notifications by selected category" name="CourseNotificationOverviewComponent should filter notifications by selected category" time="0.1">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should toggle overlay visibility when toggleOverlay is called" name="CourseNotificationOverviewComponent should toggle overlay visibility when toggleOverlay is called" time="0.186">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should query for more notifications if less than pageSize are available" name="CourseNotificationOverviewComponent should query for more notifications if less than pageSize are available" time="0.233">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should correctly check if a category is selected" name="CourseNotificationOverviewComponent should correctly check if a category is selected" time="0.128">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should change selected category and update notifications" name="CourseNotificationOverviewComponent should change selected category and update notifications" time="0.17">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should query for more notifications when changing to a category with fewer than pageSize notifications" name="CourseNotificationOverviewComponent should query for more notifications when changing to a category with fewer than pageSize notifications" time="0.18">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should hide overlay when clicking outside the component" name="CourseNotificationOverviewComponent should hide overlay when clicking outside the component" time="0.128">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should not hide overlay when clicking inside the component" name="CourseNotificationOverviewComponent should not hide overlay when clicking inside the component" time="0.102">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should load more notifications when scrolling to bottom" name="CourseNotificationOverviewComponent should load more notifications when scrolling to bottom" time="0.14">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should not load more notifications when already loading or finished" name="CourseNotificationOverviewComponent should not load more notifications when already loading or finished" time="0.115">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should handle archive button click" name="CourseNotificationOverviewComponent should handle archive button click" time="0.111">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should handle notification close button click" name="CourseNotificationOverviewComponent should handle notification close button click" time="0.079">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should update unseen notifications to seen on client side" name="CourseNotificationOverviewComponent should update unseen notifications to seen on client side" time="0.103">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should update unseen notifications to seen on server side" name="CourseNotificationOverviewComponent should update unseen notifications to seen on server side" time="0.093">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should correctly identify visible unseen notification IDs" name="CourseNotificationOverviewComponent should correctly identify visible unseen notification IDs" time="0.097">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should not update notifications if no unseen notifications exist" name="CourseNotificationOverviewComponent should not update notifications if no unseen notifications exist" time="0.105">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should query for more notifications from service" name="CourseNotificationOverviewComponent should query for more notifications from service" time="0.068">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should set pagesFinished when service returns false" name="CourseNotificationOverviewComponent should set pagesFinished when service returns false" time="0.063">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should properly clean up subscriptions on destroy" name="CourseNotificationOverviewComponent should properly clean up subscriptions on destroy" time="0.059">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should toggle overlay when button is clicked" name="CourseNotificationOverviewComponent should toggle overlay when button is clicked" time="0.075">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should apply is-shown class when overlay is shown" name="CourseNotificationOverviewComponent should apply is-shown class when overlay is shown" time="0.071">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should display loading indicator when isLoading is true" name="CourseNotificationOverviewComponent should display loading indicator when isLoading is true" time="0.09">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should display empty state when no notifications are available" name="CourseNotificationOverviewComponent should display empty state when no notifications are available" time="0.105">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should display notifications when available" name="CourseNotificationOverviewComponent should display notifications when available" time="0.061">
    </testcase>
    <testcase classname="CourseNotificationOverviewComponent should display correct categories and handle category selection" name="CourseNotificationOverviewComponent should display correct categories and handle category selection" time="0.124">
    </testcase>
  </testsuite>
  <testsuite name="Lti13DeepLinkingComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:45" time="3.409" tests="20">
    <testcase classname="Lti13DeepLinkingComponent should retrieve course details and exercises on init when user is authenticated" name="Lti13DeepLinkingComponent should retrieve course details and exercises on init when user is authenticated" time="0.109">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should alert user when no exercise is selected" name="Lti13DeepLinkingComponent should alert user when no exercise is selected" time="0.01">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should navigate on init when user is authenticated" name="Lti13DeepLinkingComponent should navigate on init when user is authenticated" time="0.008">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should not course details and exercises on init when courseId is empty" name="Lti13DeepLinkingComponent should not course details and exercises on init when courseId is empty" time="0.013">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should not send deep link request when exercise is not selected" name="Lti13DeepLinkingComponent should not send deep link request when exercise is not selected" time="0.013">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should set isDeepLinking to false if the response status is not 200" name="Lti13DeepLinkingComponent should set isDeepLinking to false if the response status is not 200" time="0.009">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should set isLinking to false if there is an error during the HTTP request" name="Lti13DeepLinkingComponent should set isLinking to false if there is an error during the HTTP request" time="0.012">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should send deep link request and navigate when exercise is selected" name="Lti13DeepLinkingComponent should send deep link request and navigate when exercise is selected" time="0.009">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should retrieve course lectures on init when user is authenticated" name="Lti13DeepLinkingComponent should retrieve course lectures on init when user is authenticated" time="0.018">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should handle empty lectures gracefully" name="Lti13DeepLinkingComponent should handle empty lectures gracefully" time="0.027">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should select and deselect a competency" name="Lti13DeepLinkingComponent should select and deselect a competency" time="0.013">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should select and deselect a learning path" name="Lti13DeepLinkingComponent should select and deselect a learning path" time="0.016">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should send deep link request when competency is selected" name="Lti13DeepLinkingComponent should send deep link request when competency is selected" time="0.016">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should send deep link request when learning path is selected" name="Lti13DeepLinkingComponent should send deep link request when learning path is selected" time="0.018">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should send deep link request when IRIS is selected" name="Lti13DeepLinkingComponent should send deep link request when IRIS is selected" time="0.014">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should send deep link request when lectures are selected" name="Lti13DeepLinkingComponent should send deep link request when lectures are selected" time="0.017">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should show an error when no content is selected" name="Lti13DeepLinkingComponent should show an error when no content is selected" time="0.012">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should sort exercises by title in ascending order" name="Lti13DeepLinkingComponent should sort exercises by title in ascending order" time="0.008">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should handle empty course gracefully" name="Lti13DeepLinkingComponent should handle empty course gracefully" time="0.007">
    </testcase>
    <testcase classname="Lti13DeepLinkingComponent should invoke account service using jhiHasAnyAuthority directive" name="Lti13DeepLinkingComponent should invoke account service using jhiHasAnyAuthority directive" time="0.046">
    </testcase>
  </testsuite>
  <testsuite name="MonacoEditorComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:48" time="3.428" tests="32">
    <testcase classname="MonacoEditorComponent should set the text of the editor" name="MonacoEditorComponent should set the text of the editor" time="0.685">
    </testcase>
    <testcase classname="MonacoEditorComponent should notify when the text changes" name="MonacoEditorComponent should notify when the text changes" time="0.096">
    </testcase>
    <testcase classname="MonacoEditorComponent should only send a notification once per delay interval" name="MonacoEditorComponent should only send a notification once per delay interval" time="0.048">
    </testcase>
    <testcase classname="MonacoEditorComponent should be set to readOnly depending on the input" name="MonacoEditorComponent should be set to readOnly depending on the input" time="0.056">
    </testcase>
    <testcase classname="MonacoEditorComponent should display hidden line widgets" name="MonacoEditorComponent should display hidden line widgets" time="0.061">
    </testcase>
    <testcase classname="MonacoEditorComponent should display build annotations" name="MonacoEditorComponent should display build annotations" time="0.053">
    </testcase>
    <testcase classname="MonacoEditorComponent should not display build annotations that are out of bounds" name="MonacoEditorComponent should not display build annotations that are out of bounds" time="0.05">
    </testcase>
    <testcase classname="MonacoEditorComponent should mark build annotations as outdated if specified" name="MonacoEditorComponent should mark build annotations as outdated if specified" time="0.045">
    </testcase>
    <testcase classname="MonacoEditorComponent should mark build annotations as outdated when a keyboard input is made" name="MonacoEditorComponent should mark build annotations as outdated when a keyboard input is made" time="0.075">
    </testcase>
    <testcase classname="MonacoEditorComponent should highlight line ranges with the specified classnames" name="MonacoEditorComponent should highlight line ranges with the specified classnames" time="0.076">
    </testcase>
    <testcase classname="MonacoEditorComponent should get the number of lines in the editor" name="MonacoEditorComponent should get the number of lines in the editor" time="0.069">
    </testcase>
    <testcase classname="MonacoEditorComponent should pass the current line number to the line decorations hover button when clicked" name="MonacoEditorComponent should pass the current line number to the line decorations hover button when clicked" time="0.078">
    </testcase>
    <testcase classname="MonacoEditorComponent should hide the line decorations hover button when no line number is available" name="MonacoEditorComponent should hide the line decorations hover button when no line number is available" time="0.04">
    </testcase>
    <testcase classname="MonacoEditorComponent should not allow editing in readonly mode" name="MonacoEditorComponent should not allow editing in readonly mode" time="0.123">
    </testcase>
    <testcase classname="MonacoEditorComponent should dispose and destroy its widgets and annotations when destroyed" name="MonacoEditorComponent should dispose and destroy its widgets and annotations when destroyed" time="0.036">
    </testcase>
    <testcase classname="MonacoEditorComponent should switch to and update the text of a single model" name="MonacoEditorComponent should switch to and update the text of a single model" time="0.062">
    </testcase>
    <testcase classname="MonacoEditorComponent should initialize an empty model if no text is specified" name="MonacoEditorComponent should initialize an empty model if no text is specified" time="0.046">
    </testcase>
    <testcase classname="MonacoEditorComponent should switch between multiple models without changing their content" name="MonacoEditorComponent should switch between multiple models without changing their content" time="0.073">
    </testcase>
    <testcase classname="MonacoEditorComponent should dispose its models when destroyed" name="MonacoEditorComponent should dispose its models when destroyed" time="0.04">
    </testcase>
    <testcase classname="MonacoEditorComponent should correctly set the start line number" name="MonacoEditorComponent should correctly set the start line number" time="0.066">
    </testcase>
    <testcase classname="MonacoEditorComponent should apply option presets to the editor" name="MonacoEditorComponent should apply option presets to the editor" time="0.064">
    </testcase>
    <testcase classname="MonacoEditorComponent should convert text emoticons to emojis using convertTextToEmoji" name="MonacoEditorComponent should convert text emoticons to emojis using convertTextToEmoji" time="0.033">
    </testcase>
    <testcase classname="MonacoEditorComponent should detect if text is converted to emoji using isConvertedToEmoji" name="MonacoEditorComponent should detect if text is converted to emoji using isConvertedToEmoji" time="0.044">
    </testcase>
    <testcase classname="MonacoEditorComponent should not change the editor text if no conversion is needed" name="MonacoEditorComponent should not change the editor text if no conversion is needed" time="0.043">
    </testcase>
    <testcase classname="MonacoEditorComponent should register a listener for model content changes" name="MonacoEditorComponent should register a listener for model content changes" time="0.041">
    </testcase>
    <testcase classname="MonacoEditorComponent should retrieve the editor model" name="MonacoEditorComponent should retrieve the editor model" time="0.046">
    </testcase>
    <testcase classname="MonacoEditorComponent should get the content of a specific line" name="MonacoEditorComponent should get the content of a specific line" time="0.074">
    </testcase>
    <testcase classname="MonacoEditorComponent should handle invalid line numbers in getLineContent" name="MonacoEditorComponent should handle invalid line numbers in getLineContent" time="0.078">
    </testcase>
    <testcase classname="MonacoEditorComponent should delete a combined emoji entirely on backspace press" name="MonacoEditorComponent should delete a combined emoji entirely on backspace press" time="0.06">
    </testcase>
    <testcase classname="MonacoEditorComponent should delete combined emojis one cluster at a time on backspace press" name="MonacoEditorComponent should delete combined emojis one cluster at a time on backspace press" time="0.062">
    </testcase>
    <testcase classname="MonacoEditorComponent should delete only one emoji at a time in mixed text" name="MonacoEditorComponent should delete only one emoji at a time in mixed text" time="0.035">
    </testcase>
    <testcase classname="MonacoEditorComponent should place the cursor correctly after deleting an emoji" name="MonacoEditorComponent should place the cursor correctly after deleting an emoji" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="CodeEditorActionsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:49" time="4.64" tests="51">
    <testcase classname="CodeEditorActionsComponent should show refresh and submit button without any inputs" name="CodeEditorActionsComponent should show refresh and submit button without any inputs" time="0.197">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Enable refresh buttton
            for this state combination: EditorState.CLEAN / CommitState.UNDEFINED / is building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Enable refresh buttton
            for this state combination: EditorState.CLEAN / CommitState.UNDEFINED / is building
        " time="0.087">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Enable refresh buttton
            for this state combination: EditorState.CLEAN / CommitState.UNDEFINED / is not building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Enable refresh buttton
            for this state combination: EditorState.CLEAN / CommitState.UNDEFINED / is not building
        " time="0.054">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Enable refresh buttton
            for this state combination: EditorState.CLEAN / CommitState.COULD_NOT_BE_RETRIEVED / is building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Enable refresh buttton
            for this state combination: EditorState.CLEAN / CommitState.COULD_NOT_BE_RETRIEVED / is building
        " time="0.058">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Enable refresh buttton
            for this state combination: EditorState.CLEAN / CommitState.COULD_NOT_BE_RETRIEVED / is not building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Enable refresh buttton
            for this state combination: EditorState.CLEAN / CommitState.COULD_NOT_BE_RETRIEVED / is not building
        " time="0.062">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Enable commit button and
            Enable refresh buttton
            for this state combination: EditorState.CLEAN / CommitState.CLEAN / is building
        " name="CodeEditorActionsComponent Should
            Enable commit button and
            Enable refresh buttton
            for this state combination: EditorState.CLEAN / CommitState.CLEAN / is building
        " time="0.076">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Enable commit button and
            Enable refresh buttton
            for this state combination: EditorState.CLEAN / CommitState.CLEAN / is not building
        " name="CodeEditorActionsComponent Should
            Enable commit button and
            Enable refresh buttton
            for this state combination: EditorState.CLEAN / CommitState.CLEAN / is not building
        " time="0.071">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Enable commit button and
            Enable refresh buttton
            for this state combination: EditorState.CLEAN / CommitState.UNCOMMITTED_CHANGES / is building
        " name="CodeEditorActionsComponent Should
            Enable commit button and
            Enable refresh buttton
            for this state combination: EditorState.CLEAN / CommitState.UNCOMMITTED_CHANGES / is building
        " time="0.079">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Enable commit button and
            Enable refresh buttton
            for this state combination: EditorState.CLEAN / CommitState.UNCOMMITTED_CHANGES / is not building
        " name="CodeEditorActionsComponent Should
            Enable commit button and
            Enable refresh buttton
            for this state combination: EditorState.CLEAN / CommitState.UNCOMMITTED_CHANGES / is not building
        " time="0.07">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.CLEAN / CommitState.COMMITTING / is building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.CLEAN / CommitState.COMMITTING / is building
        " time="0.056">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.CLEAN / CommitState.COMMITTING / is not building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.CLEAN / CommitState.COMMITTING / is not building
        " time="0.06">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Enable refresh buttton
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.UNDEFINED / is building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Enable refresh buttton
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.UNDEFINED / is building
        " time="0.054">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Enable refresh buttton
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.UNDEFINED / is not building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Enable refresh buttton
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.UNDEFINED / is not building
        " time="0.051">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Enable refresh buttton
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.COULD_NOT_BE_RETRIEVED / is building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Enable refresh buttton
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.COULD_NOT_BE_RETRIEVED / is building
        " time="0.058">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Enable refresh buttton
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.COULD_NOT_BE_RETRIEVED / is not building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Enable refresh buttton
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.COULD_NOT_BE_RETRIEVED / is not building
        " time="0.073">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Enable commit button and
            Enable refresh buttton
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.CLEAN / is building
        " name="CodeEditorActionsComponent Should
            Enable commit button and
            Enable refresh buttton
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.CLEAN / is building
        " time="0.046">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Enable commit button and
            Enable refresh buttton
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.CLEAN / is not building
        " name="CodeEditorActionsComponent Should
            Enable commit button and
            Enable refresh buttton
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.CLEAN / is not building
        " time="0.083">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Enable commit button and
            Enable refresh buttton
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.UNCOMMITTED_CHANGES / is building
        " name="CodeEditorActionsComponent Should
            Enable commit button and
            Enable refresh buttton
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.UNCOMMITTED_CHANGES / is building
        " time="0.046">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Enable commit button and
            Enable refresh buttton
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.UNCOMMITTED_CHANGES / is not building
        " name="CodeEditorActionsComponent Should
            Enable commit button and
            Enable refresh buttton
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.UNCOMMITTED_CHANGES / is not building
        " time="0.073">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.COMMITTING / is building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.COMMITTING / is building
        " time="0.047">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.COMMITTING / is not building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.UNSAVED_CHANGES / CommitState.COMMITTING / is not building
        " time="0.063">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.UNDEFINED / is building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.UNDEFINED / is building
        " time="0.063">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.UNDEFINED / is not building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.UNDEFINED / is not building
        " time="0.043">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.COULD_NOT_BE_RETRIEVED / is building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.COULD_NOT_BE_RETRIEVED / is building
        " time="0.053">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.COULD_NOT_BE_RETRIEVED / is not building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.COULD_NOT_BE_RETRIEVED / is not building
        " time="0.06">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.CLEAN / is building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.CLEAN / is building
        " time="0.063">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.CLEAN / is not building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.CLEAN / is not building
        " time="0.039">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.UNCOMMITTED_CHANGES / is building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.UNCOMMITTED_CHANGES / is building
        " time="0.047">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.UNCOMMITTED_CHANGES / is not building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.UNCOMMITTED_CHANGES / is not building
        " time="0.05">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.COMMITTING / is building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.COMMITTING / is building
        " time="0.076">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.COMMITTING / is not building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.SAVING / CommitState.COMMITTING / is not building
        " time="0.042">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.UNDEFINED / is building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.UNDEFINED / is building
        " time="0.045">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.UNDEFINED / is not building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.UNDEFINED / is not building
        " time="0.045">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.COULD_NOT_BE_RETRIEVED / is building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.COULD_NOT_BE_RETRIEVED / is building
        " time="0.062">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.COULD_NOT_BE_RETRIEVED / is not building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.COULD_NOT_BE_RETRIEVED / is not building
        " time="0.051">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.CLEAN / is building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.CLEAN / is building
        " time="0.033">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.CLEAN / is not building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.CLEAN / is not building
        " time="0.057">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.UNCOMMITTED_CHANGES / is building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.UNCOMMITTED_CHANGES / is building
        " time="0.072">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.UNCOMMITTED_CHANGES / is not building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.UNCOMMITTED_CHANGES / is not building
        " time="0.059">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.COMMITTING / is building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.COMMITTING / is building
        " time="0.04">
    </testcase>
    <testcase classname="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.COMMITTING / is not building
        " name="CodeEditorActionsComponent Should
            Disable commit button and
            Disable refresh button
            for this state combination: EditorState.REFRESHING / CommitState.COMMITTING / is not building
        " time="0.061">
    </testcase>
    <testcase classname="CodeEditorActionsComponent should NOT update ui when building" name="CodeEditorActionsComponent should NOT update ui when building" time="0.057">
    </testcase>
    <testcase classname="CodeEditorActionsComponent should call repositoryFileService to save unsavedFiles and emit result on success" name="CodeEditorActionsComponent should call repositoryFileService to save unsavedFiles and emit result on success" time="0.049">
    </testcase>
    <testcase classname="CodeEditorActionsComponent should call repositoryFileService to save unsavedFiles and emit an error on failure" name="CodeEditorActionsComponent should call repositoryFileService to save unsavedFiles and emit an error on failure" time="0.063">
    </testcase>
    <testcase classname="CodeEditorActionsComponent should commit if no unsaved changes exist and update its state on response" name="CodeEditorActionsComponent should commit if no unsaved changes exist and update its state on response" time="0.041">
    </testcase>
    <testcase classname="CodeEditorActionsComponent should commit if no unsaved changes exist and emit an error on error response" name="CodeEditorActionsComponent should commit if no unsaved changes exist and emit an error on error response" time="0.053">
    </testcase>
    <testcase classname="CodeEditorActionsComponent should emit different error messages on different error responses" name="CodeEditorActionsComponent should emit different error messages on different error responses" time="0.048">
    </testcase>
    <testcase classname="CodeEditorActionsComponent should not commit if unsavedFiles exist, instead should save files with commit set to true" name="CodeEditorActionsComponent should not commit if unsavedFiles exist, instead should save files with commit set to true" time="0.043">
    </testcase>
    <testcase classname="CodeEditorActionsComponent should autosave unsaved files after 30 seconds if autosave is not disabled" name="CodeEditorActionsComponent should autosave unsaved files after 30 seconds if autosave is not disabled" time="0.036">
    </testcase>
    <testcase classname="CodeEditorActionsComponent should autosave unsaved files after 30 seconds if autosave is not disabled" name="CodeEditorActionsComponent should autosave unsaved files after 30 seconds if autosave is not disabled" time="0.046">
    </testcase>
    <testcase classname="CodeEditorActionsComponent should save on destroy" name="CodeEditorActionsComponent should save on destroy" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="ConversationHeaderComponent with0oneToOneChat" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:36" time="17.47" tests="99">
    <testcase classname="ConversationHeaderComponent with0oneToOneChat should create" name="ConversationHeaderComponent with0oneToOneChat should create" time="0.234">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0oneToOneChat should open the add users dialog" name="ConversationHeaderComponent with0oneToOneChat should open the add users dialog" time="0.162">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0oneToOneChat should open dialog details dialog with members tab" name="ConversationHeaderComponent with0oneToOneChat should open dialog details dialog with members tab" time="0.122">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0oneToOneChat should open dialog details dialog with info tab" name="ConversationHeaderComponent with0oneToOneChat should open dialog details dialog with info tab" time="0.204">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0oneToOneChat should toggle search when search button is pressed" name="ConversationHeaderComponent with0oneToOneChat should toggle search when search button is pressed" time="0.181">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0oneToOneChat should set otherUser to the non-requesting user in a one-to-one conversation" name="ConversationHeaderComponent with0oneToOneChat should set otherUser to the non-requesting user in a one-to-one conversation" time="0.103">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0oneToOneChat should toggle pinned messages visibility" name="ConversationHeaderComponent with0oneToOneChat should toggle pinned messages visibility" time="0.069">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0oneToOneChat should emit togglePinnedMessage event" name="ConversationHeaderComponent with0oneToOneChat should emit togglePinnedMessage event" time="0.133">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0oneToOneChat should set showPinnedMessages to false if pinnedMessageCount changes to 0 while it is currently showing pinned messages" name="ConversationHeaderComponent with0oneToOneChat should set showPinnedMessages to false if pinnedMessageCount changes to 0 while it is currently showing pinned messages" time="0.131">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0oneToOneChat should not change showPinnedMessages if pinnedMessageCount changes but is not 0" name="ConversationHeaderComponent with0oneToOneChat should not change showPinnedMessages if pinnedMessageCount changes but is not 0" time="0.091">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0oneToOneChat should correctly handle first change of pinnedMessageCount" name="ConversationHeaderComponent with0oneToOneChat should correctly handle first change of pinnedMessageCount" time="0.081">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0oneToOneChat should dismiss modal and call createOneToOneChatWithId when userNameClicked is emitted" name="ConversationHeaderComponent with0oneToOneChat should dismiss modal and call createOneToOneChatWithId when userNameClicked is emitted" time="0.087">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0oneToOneChat should not subscribe to userNameClicked if the modal instance does not have that property" name="ConversationHeaderComponent with0oneToOneChat should not subscribe to userNameClicked if the modal instance does not have that property" time="0.065">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0oneToOneChat should always open info tab when conversation is one-to-one chat" name="ConversationHeaderComponent with0oneToOneChat should always open info tab when conversation is one-to-one chat" time="0.088">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0oneToOneChat should emit onUpdateSidebar when conversation detail dialog is closed" name="ConversationHeaderComponent with0oneToOneChat should emit onUpdateSidebar when conversation detail dialog is closed" time="0.071">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0oneToOneChat should emit collapseSearch when toggleSearchBar is called" name="ConversationHeaderComponent with0oneToOneChat should emit collapseSearch when toggleSearchBar is called" time="0.056">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0groupChat should create" name="ConversationHeaderComponent with0groupChat should create" time="0.098">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0groupChat should open the add users dialog" name="ConversationHeaderComponent with0groupChat should open the add users dialog" time="0.093">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0groupChat should open dialog details dialog with members tab" name="ConversationHeaderComponent with0groupChat should open dialog details dialog with members tab" time="0.078">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0groupChat should open dialog details dialog with info tab" name="ConversationHeaderComponent with0groupChat should open dialog details dialog with info tab" time="0.098">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0groupChat should toggle search when search button is pressed" name="ConversationHeaderComponent with0groupChat should toggle search when search button is pressed" time="0.088">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0groupChat should set otherUser to the non-requesting user in a one-to-one conversation" name="ConversationHeaderComponent with0groupChat should set otherUser to the non-requesting user in a one-to-one conversation" time="0.073">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0groupChat should toggle pinned messages visibility" name="ConversationHeaderComponent with0groupChat should toggle pinned messages visibility" time="0.081">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0groupChat should emit togglePinnedMessage event" name="ConversationHeaderComponent with0groupChat should emit togglePinnedMessage event" time="0.06">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0groupChat should set showPinnedMessages to false if pinnedMessageCount changes to 0 while it is currently showing pinned messages" name="ConversationHeaderComponent with0groupChat should set showPinnedMessages to false if pinnedMessageCount changes to 0 while it is currently showing pinned messages" time="0.094">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0groupChat should not change showPinnedMessages if pinnedMessageCount changes but is not 0" name="ConversationHeaderComponent with0groupChat should not change showPinnedMessages if pinnedMessageCount changes but is not 0" time="0.066">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0groupChat should correctly handle first change of pinnedMessageCount" name="ConversationHeaderComponent with0groupChat should correctly handle first change of pinnedMessageCount" time="0.081">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0groupChat should dismiss modal and call createOneToOneChatWithId when userNameClicked is emitted" name="ConversationHeaderComponent with0groupChat should dismiss modal and call createOneToOneChatWithId when userNameClicked is emitted" time="0.062">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0groupChat should not subscribe to userNameClicked if the modal instance does not have that property" name="ConversationHeaderComponent with0groupChat should not subscribe to userNameClicked if the modal instance does not have that property" time="0.08">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0groupChat should always open info tab when conversation is one-to-one chat" name="ConversationHeaderComponent with0groupChat should always open info tab when conversation is one-to-one chat" time="0.065">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0groupChat should emit onUpdateSidebar when conversation detail dialog is closed" name="ConversationHeaderComponent with0groupChat should emit onUpdateSidebar when conversation detail dialog is closed" time="0.048">
    </testcase>
    <testcase classname="ConversationHeaderComponent with0groupChat should emit collapseSearch when toggleSearchBar is called" name="ConversationHeaderComponent with0groupChat should emit collapseSearch when toggleSearchBar is called" time="0.048">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should create" name="ConversationHeaderComponent withNaNchannel should create" time="0.065">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should open the add users dialog" name="ConversationHeaderComponent withNaNchannel should open the add users dialog" time="0.073">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should open dialog details dialog with members tab" name="ConversationHeaderComponent withNaNchannel should open dialog details dialog with members tab" time="0.074">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should open dialog details dialog with info tab" name="ConversationHeaderComponent withNaNchannel should open dialog details dialog with info tab" time="0.055">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should toggle search when search button is pressed" name="ConversationHeaderComponent withNaNchannel should toggle search when search button is pressed" time="0.044">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should set otherUser to the non-requesting user in a one-to-one conversation" name="ConversationHeaderComponent withNaNchannel should set otherUser to the non-requesting user in a one-to-one conversation" time="0.077">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should toggle pinned messages visibility" name="ConversationHeaderComponent withNaNchannel should toggle pinned messages visibility" time="0.056">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should emit togglePinnedMessage event" name="ConversationHeaderComponent withNaNchannel should emit togglePinnedMessage event" time="0.059">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should set showPinnedMessages to false if pinnedMessageCount changes to 0 while it is currently showing pinned messages" name="ConversationHeaderComponent withNaNchannel should set showPinnedMessages to false if pinnedMessageCount changes to 0 while it is currently showing pinned messages" time="0.069">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should not change showPinnedMessages if pinnedMessageCount changes but is not 0" name="ConversationHeaderComponent withNaNchannel should not change showPinnedMessages if pinnedMessageCount changes but is not 0" time="0.089">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should correctly handle first change of pinnedMessageCount" name="ConversationHeaderComponent withNaNchannel should correctly handle first change of pinnedMessageCount" time="0.061">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should dismiss modal and call createOneToOneChatWithId when userNameClicked is emitted" name="ConversationHeaderComponent withNaNchannel should dismiss modal and call createOneToOneChatWithId when userNameClicked is emitted" time="0.051">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should not subscribe to userNameClicked if the modal instance does not have that property" name="ConversationHeaderComponent withNaNchannel should not subscribe to userNameClicked if the modal instance does not have that property" time="0.07">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should always open info tab when conversation is one-to-one chat" name="ConversationHeaderComponent withNaNchannel should always open info tab when conversation is one-to-one chat" time="0.086">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should emit onUpdateSidebar when conversation detail dialog is closed" name="ConversationHeaderComponent withNaNchannel should emit onUpdateSidebar when conversation detail dialog is closed" time="0.056">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should emit collapseSearch when toggleSearchBar is called" name="ConversationHeaderComponent withNaNchannel should emit collapseSearch when toggleSearchBar is called" time="0.079">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should create" name="ConversationHeaderComponent withNaNchannel should create" time="0.109">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should open the add users dialog" name="ConversationHeaderComponent withNaNchannel should open the add users dialog" time="0.095">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should open dialog details dialog with members tab" name="ConversationHeaderComponent withNaNchannel should open dialog details dialog with members tab" time="0.066">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should open dialog details dialog with info tab" name="ConversationHeaderComponent withNaNchannel should open dialog details dialog with info tab" time="0.069">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should toggle search when search button is pressed" name="ConversationHeaderComponent withNaNchannel should toggle search when search button is pressed" time="0.085">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should set otherUser to the non-requesting user in a one-to-one conversation" name="ConversationHeaderComponent withNaNchannel should set otherUser to the non-requesting user in a one-to-one conversation" time="0.081">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should toggle pinned messages visibility" name="ConversationHeaderComponent withNaNchannel should toggle pinned messages visibility" time="0.054">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should emit togglePinnedMessage event" name="ConversationHeaderComponent withNaNchannel should emit togglePinnedMessage event" time="0.072">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should set showPinnedMessages to false if pinnedMessageCount changes to 0 while it is currently showing pinned messages" name="ConversationHeaderComponent withNaNchannel should set showPinnedMessages to false if pinnedMessageCount changes to 0 while it is currently showing pinned messages" time="0.077">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should not change showPinnedMessages if pinnedMessageCount changes but is not 0" name="ConversationHeaderComponent withNaNchannel should not change showPinnedMessages if pinnedMessageCount changes but is not 0" time="0.046">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should correctly handle first change of pinnedMessageCount" name="ConversationHeaderComponent withNaNchannel should correctly handle first change of pinnedMessageCount" time="0.055">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should navigate to exercise" name="ConversationHeaderComponent withNaNchannel should navigate to exercise" time="0.092">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should dismiss modal and call createOneToOneChatWithId when userNameClicked is emitted" name="ConversationHeaderComponent withNaNchannel should dismiss modal and call createOneToOneChatWithId when userNameClicked is emitted" time="0.049">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should not subscribe to userNameClicked if the modal instance does not have that property" name="ConversationHeaderComponent withNaNchannel should not subscribe to userNameClicked if the modal instance does not have that property" time="0.096">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should always open info tab when conversation is one-to-one chat" name="ConversationHeaderComponent withNaNchannel should always open info tab when conversation is one-to-one chat" time="0.094">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should emit onUpdateSidebar when conversation detail dialog is closed" name="ConversationHeaderComponent withNaNchannel should emit onUpdateSidebar when conversation detail dialog is closed" time="0.072">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should emit collapseSearch when toggleSearchBar is called" name="ConversationHeaderComponent withNaNchannel should emit collapseSearch when toggleSearchBar is called" time="0.055">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should create" name="ConversationHeaderComponent withNaNchannel should create" time="0.084">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should open the add users dialog" name="ConversationHeaderComponent withNaNchannel should open the add users dialog" time="0.074">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should open dialog details dialog with members tab" name="ConversationHeaderComponent withNaNchannel should open dialog details dialog with members tab" time="0.074">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should open dialog details dialog with info tab" name="ConversationHeaderComponent withNaNchannel should open dialog details dialog with info tab" time="0.059">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should toggle search when search button is pressed" name="ConversationHeaderComponent withNaNchannel should toggle search when search button is pressed" time="0.064">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should set otherUser to the non-requesting user in a one-to-one conversation" name="ConversationHeaderComponent withNaNchannel should set otherUser to the non-requesting user in a one-to-one conversation" time="0.052">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should toggle pinned messages visibility" name="ConversationHeaderComponent withNaNchannel should toggle pinned messages visibility" time="0.084">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should emit togglePinnedMessage event" name="ConversationHeaderComponent withNaNchannel should emit togglePinnedMessage event" time="0.081">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should set showPinnedMessages to false if pinnedMessageCount changes to 0 while it is currently showing pinned messages" name="ConversationHeaderComponent withNaNchannel should set showPinnedMessages to false if pinnedMessageCount changes to 0 while it is currently showing pinned messages" time="0.105">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should not change showPinnedMessages if pinnedMessageCount changes but is not 0" name="ConversationHeaderComponent withNaNchannel should not change showPinnedMessages if pinnedMessageCount changes but is not 0" time="0.074">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should correctly handle first change of pinnedMessageCount" name="ConversationHeaderComponent withNaNchannel should correctly handle first change of pinnedMessageCount" time="0.054">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should navigate to lecture" name="ConversationHeaderComponent withNaNchannel should navigate to lecture" time="0.073">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should dismiss modal and call createOneToOneChatWithId when userNameClicked is emitted" name="ConversationHeaderComponent withNaNchannel should dismiss modal and call createOneToOneChatWithId when userNameClicked is emitted" time="0.066">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should not subscribe to userNameClicked if the modal instance does not have that property" name="ConversationHeaderComponent withNaNchannel should not subscribe to userNameClicked if the modal instance does not have that property" time="0.077">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should always open info tab when conversation is one-to-one chat" name="ConversationHeaderComponent withNaNchannel should always open info tab when conversation is one-to-one chat" time="0.066">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should emit onUpdateSidebar when conversation detail dialog is closed" name="ConversationHeaderComponent withNaNchannel should emit onUpdateSidebar when conversation detail dialog is closed" time="0.047">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should emit collapseSearch when toggleSearchBar is called" name="ConversationHeaderComponent withNaNchannel should emit collapseSearch when toggleSearchBar is called" time="0.095">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should create" name="ConversationHeaderComponent withNaNchannel should create" time="0.086">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should open the add users dialog" name="ConversationHeaderComponent withNaNchannel should open the add users dialog" time="0.064">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should open dialog details dialog with members tab" name="ConversationHeaderComponent withNaNchannel should open dialog details dialog with members tab" time="0.067">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should open dialog details dialog with info tab" name="ConversationHeaderComponent withNaNchannel should open dialog details dialog with info tab" time="0.085">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should toggle search when search button is pressed" name="ConversationHeaderComponent withNaNchannel should toggle search when search button is pressed" time="0.073">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should set otherUser to the non-requesting user in a one-to-one conversation" name="ConversationHeaderComponent withNaNchannel should set otherUser to the non-requesting user in a one-to-one conversation" time="0.065">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should toggle pinned messages visibility" name="ConversationHeaderComponent withNaNchannel should toggle pinned messages visibility" time="0.085">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should emit togglePinnedMessage event" name="ConversationHeaderComponent withNaNchannel should emit togglePinnedMessage event" time="0.048">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should set showPinnedMessages to false if pinnedMessageCount changes to 0 while it is currently showing pinned messages" name="ConversationHeaderComponent withNaNchannel should set showPinnedMessages to false if pinnedMessageCount changes to 0 while it is currently showing pinned messages" time="0.088">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should not change showPinnedMessages if pinnedMessageCount changes but is not 0" name="ConversationHeaderComponent withNaNchannel should not change showPinnedMessages if pinnedMessageCount changes but is not 0" time="0.111">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should correctly handle first change of pinnedMessageCount" name="ConversationHeaderComponent withNaNchannel should correctly handle first change of pinnedMessageCount" time="0.099">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should navigate to exam" name="ConversationHeaderComponent withNaNchannel should navigate to exam" time="0.071">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should dismiss modal and call createOneToOneChatWithId when userNameClicked is emitted" name="ConversationHeaderComponent withNaNchannel should dismiss modal and call createOneToOneChatWithId when userNameClicked is emitted" time="0.083">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should not subscribe to userNameClicked if the modal instance does not have that property" name="ConversationHeaderComponent withNaNchannel should not subscribe to userNameClicked if the modal instance does not have that property" time="0.064">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should always open info tab when conversation is one-to-one chat" name="ConversationHeaderComponent withNaNchannel should always open info tab when conversation is one-to-one chat" time="0.041">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should emit onUpdateSidebar when conversation detail dialog is closed" name="ConversationHeaderComponent withNaNchannel should emit onUpdateSidebar when conversation detail dialog is closed" time="0.075">
    </testcase>
    <testcase classname="ConversationHeaderComponent withNaNchannel should emit collapseSearch when toggleSearchBar is called" name="ConversationHeaderComponent withNaNchannel should emit collapseSearch when toggleSearchBar is called" time="0.065">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExercise Aeolus Custom Build Plan" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:48" time="6.052" tests="31">
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should set correct code" name="ProgrammingExercise Aeolus Custom Build Plan should set correct code" time="0.934">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should change the code on active action change" name="ProgrammingExercise Aeolus Custom Build Plan should change the code on active action change" time="0.147">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should delete action" name="ProgrammingExercise Aeolus Custom Build Plan should delete action" time="0.089">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should add action" name="ProgrammingExercise Aeolus Custom Build Plan should add action" time="0.088">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should accept and setup editor" name="ProgrammingExercise Aeolus Custom Build Plan should accept and setup editor" time="0.113">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should change code of active action" name="ProgrammingExercise Aeolus Custom Build Plan should change code of active action" time="0.073">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should change code if deleting active action and unset active action" name="ProgrammingExercise Aeolus Custom Build Plan should change code if deleting active action and unset active action" time="0.128">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should do nothing without a Windfile" name="ProgrammingExercise Aeolus Custom Build Plan should do nothing without a Windfile" time="0.108">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should do nothing on delete invalid action" name="ProgrammingExercise Aeolus Custom Build Plan should do nothing on delete invalid action" time="0.09">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should not fail if setting up undefined editor" name="ProgrammingExercise Aeolus Custom Build Plan should not fail if setting up undefined editor" time="0.123">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should change code" name="ProgrammingExercise Aeolus Custom Build Plan should change code" time="0.096">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should set editor text" name="ProgrammingExercise Aeolus Custom Build Plan should set editor text" time="0.141">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should return false to reload template" name="ProgrammingExercise Aeolus Custom Build Plan should return false to reload template" time="0.135">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should return true to reload template" name="ProgrammingExercise Aeolus Custom Build Plan should return true to reload template" time="0.102">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should reset buildplan" name="ProgrammingExercise Aeolus Custom Build Plan should reset buildplan" time="0.102">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should do nothing without a programming language" name="ProgrammingExercise Aeolus Custom Build Plan should do nothing without a programming language" time="0.126">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should update component properties" name="ProgrammingExercise Aeolus Custom Build Plan should update component properties" time="0.105">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should not call loadAeolusTemplate" name="ProgrammingExercise Aeolus Custom Build Plan should not call loadAeolusTemplate" time="0.11">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should call loadAeolusTemplate" name="ProgrammingExercise Aeolus Custom Build Plan should call loadAeolusTemplate" time="0.114">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should update windfile" name="ProgrammingExercise Aeolus Custom Build Plan should update windfile" time="0.142">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should call this.resetCustomBuildPlan" name="ProgrammingExercise Aeolus Custom Build Plan should call this.resetCustomBuildPlan" time="0.076">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should parse windfile correctly" name="ProgrammingExercise Aeolus Custom Build Plan should parse windfile correctly" time="0.071">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should return undefined on invalid windfile" name="ProgrammingExercise Aeolus Custom Build Plan should return undefined on invalid windfile" time="0.088">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should add parameter to active action" name="ProgrammingExercise Aeolus Custom Build Plan should add parameter to active action" time="0.077">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should delete parameter of active action" name="ProgrammingExercise Aeolus Custom Build Plan should delete parameter of active action" time="0.104">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should return parameter keys" name="ProgrammingExercise Aeolus Custom Build Plan should return parameter keys" time="0.122">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should return empty string for non existing parameter" name="ProgrammingExercise Aeolus Custom Build Plan should return empty string for non existing parameter" time="0.092">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should return empty array" name="ProgrammingExercise Aeolus Custom Build Plan should return empty array" time="0.087">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should not call loadAeolusTemplate on existing exercise" name="ProgrammingExercise Aeolus Custom Build Plan should not call loadAeolusTemplate on existing exercise" time="0.104">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should set docker image correctly" name="ProgrammingExercise Aeolus Custom Build Plan should set docker image correctly" time="0.088">
    </testcase>
    <testcase classname="ProgrammingExercise Aeolus Custom Build Plan should not call getAeolusTemplateScript when import from file if script present" name="ProgrammingExercise Aeolus Custom Build Plan should not call getAeolusTemplateScript when import from file if script present" time="0.093">
    </testcase>
  </testsuite>
  <testsuite name="MonacoEditorActionIntegration" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:52" time="3.629" tests="27">
    <testcase classname="MonacoEditorActionIntegration should throw when trying to register an action twice" name="MonacoEditorActionIntegration should throw when trying to register an action twice" time="0.704">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration should insert Attachment" name="MonacoEditorActionIntegration should insert Attachment" time="0.084">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration should insert Link" name="MonacoEditorActionIntegration should insert Link" time="0.038">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration should not access the clipboard if no upload callback is specified" name="MonacoEditorActionIntegration should not access the clipboard if no upload callback is specified" time="0.078">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration should process files from the clipboard" name="MonacoEditorActionIntegration should process files from the clipboard" time="0.032">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration should insert unordered list" name="MonacoEditorActionIntegration should insert unordered list" time="0.06">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration should toggle unordered list, skipping empty lines" name="MonacoEditorActionIntegration should toggle unordered list, skipping empty lines" time="0.052">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration should insert ordered list" name="MonacoEditorActionIntegration should insert ordered list" time="0.042">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration Should toggle heading 1 on selected line" name="MonacoEditorActionIntegration Should toggle heading 1 on selected line" time="0.069">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration Should toggle heading 2 on selected line" name="MonacoEditorActionIntegration Should toggle heading 2 on selected line" time="0.058">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration Should toggle heading 3 on selected line" name="MonacoEditorActionIntegration Should toggle heading 3 on selected line" time="0.08">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration should insert test case names" name="MonacoEditorActionIntegration should insert test case names" time="0.062">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration should throw when trying to register a completer without a model" name="MonacoEditorActionIntegration should throw when trying to register a completer without a model" time="0.051">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration should provide test case completions" name="MonacoEditorActionIntegration should provide test case completions" time="0.096">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration should insert tasks" name="MonacoEditorActionIntegration should insert tasks" time="0.074">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration should enter fullscreen" name="MonacoEditorActionIntegration should enter fullscreen" time="0.082">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration should leave fullscreen" name="MonacoEditorActionIntegration should leave fullscreen" time="0.071">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration Delimiter action (bold.action) should insert delimiters at position and toggle around selection" name="MonacoEditorActionIntegration Delimiter action (bold.action) should insert delimiters at position and toggle around selection" time="0.119">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration Delimiter action (italic.action) should insert delimiters at position and toggle around selection" name="MonacoEditorActionIntegration Delimiter action (italic.action) should insert delimiters at position and toggle around selection" time="0.13">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration Delimiter action (underline.action) should insert delimiters at position and toggle around selection" name="MonacoEditorActionIntegration Delimiter action (underline.action) should insert delimiters at position and toggle around selection" time="0.067">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration Delimiter action (code.action) should insert delimiters at position and toggle around selection" name="MonacoEditorActionIntegration Delimiter action (code.action) should insert delimiters at position and toggle around selection" time="0.075">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration Delimiter action (color.action) should insert delimiters at position and toggle around selection" name="MonacoEditorActionIntegration Delimiter action (color.action) should insert delimiters at position and toggle around selection" time="0.039">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration Delimiter action (color.action) should insert delimiters at position and toggle around selection" name="MonacoEditorActionIntegration Delimiter action (color.action) should insert delimiters at position and toggle around selection" time="0.05">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration Delimiter action (code-block.action) should insert delimiters at position and toggle around selection" name="MonacoEditorActionIntegration Delimiter action (code-block.action) should insert delimiters at position and toggle around selection" time="0.087">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration Delimiter action (code-block.action) should insert delimiters at position and toggle around selection" name="MonacoEditorActionIntegration Delimiter action (code-block.action) should insert delimiters at position and toggle around selection" time="0.069">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration Delimiter action (quote.action) should insert delimiters at position and toggle around selection" name="MonacoEditorActionIntegration Delimiter action (quote.action) should insert delimiters at position and toggle around selection" time="0.05">
    </testcase>
    <testcase classname="MonacoEditorActionIntegration Delimiter action (formula.action) should insert delimiters at position and toggle around selection" name="MonacoEditorActionIntegration Delimiter action (formula.action) should insert delimiters at position and toggle around selection" time="0.07">
    </testcase>
  </testsuite>
  <testsuite name="ListOfComplaintsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:54" time="3.637" tests="18">
    <testcase classname="ListOfComplaintsComponent loadComplaints find for tutor by exercise" name="ListOfComplaintsComponent loadComplaints find for tutor by exercise" time="0.399">
    </testcase>
    <testcase classname="ListOfComplaintsComponent loadComplaints find for tutor by exam" name="ListOfComplaintsComponent loadComplaints find for tutor by exam" time="0.063">
    </testcase>
    <testcase classname="ListOfComplaintsComponent loadComplaints find for tutor by course" name="ListOfComplaintsComponent loadComplaints find for tutor by course" time="0.097">
    </testcase>
    <testcase classname="ListOfComplaintsComponent loadComplaints find general by exercise" name="ListOfComplaintsComponent loadComplaints find general by exercise" time="0.066">
    </testcase>
    <testcase classname="ListOfComplaintsComponent loadComplaints find general by exam" name="ListOfComplaintsComponent loadComplaints find general by exam" time="0.063">
    </testcase>
    <testcase classname="ListOfComplaintsComponent loadComplaints find general by course" name="ListOfComplaintsComponent loadComplaints find general by course" time="0.063">
    </testcase>
    <testcase classname="ListOfComplaintsComponent loadComplaints process complaints without student information" name="ListOfComplaintsComponent loadComplaints process complaints without student information" time="0.07">
    </testcase>
    <testcase classname="ListOfComplaintsComponent loadComplaints process complaints with student information" name="ListOfComplaintsComponent loadComplaints process complaints with student information" time="0.101">
    </testcase>
    <testcase classname="ListOfComplaintsComponent triggerAddressedComplaints" name="ListOfComplaintsComponent triggerAddressedComplaints" time="0.062">
    </testcase>
    <testcase classname="ListOfComplaintsComponent calculateComplaintLockStatus complaint unlocked" name="ListOfComplaintsComponent calculateComplaintLockStatus complaint unlocked" time="0.056">
    </testcase>
    <testcase classname="ListOfComplaintsComponent calculateComplaintLockStatus complaint locked by the current user" name="ListOfComplaintsComponent calculateComplaintLockStatus complaint locked by the current user" time="0.057">
    </testcase>
    <testcase classname="ListOfComplaintsComponent calculateComplaintLockStatus complaint locked by another user" name="ListOfComplaintsComponent calculateComplaintLockStatus complaint locked by another user" time="0.052">
    </testcase>
    <testcase classname="ListOfComplaintsComponent navigate for openAssessmentEditor" name="ListOfComplaintsComponent navigate for openAssessmentEditor" time="0.084">
    </testcase>
    <testcase classname="ListOfComplaintsComponent uses correct correction round for accepted complaints" name="ListOfComplaintsComponent uses correct correction round for accepted complaints" time="0.033">
    </testcase>
    <testcase classname="ListOfComplaintsComponent uses correct correction round for rejected complaints" name="ListOfComplaintsComponent uses correct correction round for rejected complaints" time="0.021">
    </testcase>
    <testcase classname="ListOfComplaintsComponent uses correct correction round for accepted more feedback requests" name="ListOfComplaintsComponent uses correct correction round for accepted more feedback requests" time="0.034">
    </testcase>
    <testcase classname="ListOfComplaintsComponent should filter complaints accordingly" name="ListOfComplaintsComponent should filter complaints accordingly" time="0.024">
    </testcase>
    <testcase classname="ListOfComplaintsComponent should filter complaints accordingly" name="ListOfComplaintsComponent should filter complaints accordingly" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="ResultComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:54" time="6.294" tests="20">
    <testcase classname="ResultComponent should set template status to BUILDING if isBuilding changes to true even though participation changes" name="ResultComponent should set template status to BUILDING if isBuilding changes to true even though participation changes" time="0.262">
    </testcase>
    <testcase classname="ResultComponent should display HAS_RESULT status properly should not display if result is not present" name="ResultComponent should display HAS_RESULT status properly should not display if result is not present" time="0.158">
    </testcase>
    <testcase classname="ResultComponent should display HAS_RESULT status properly should display result if present" name="ResultComponent should display HAS_RESULT status properly should display result if present" time="0.149">
    </testcase>
    <testcase classname="ResultComponent should display HAS_RESULT status properly should display modal onClick and initialize results modal" name="ResultComponent should display HAS_RESULT status properly should display modal onClick and initialize results modal" time="0.14">
    </testcase>
    <testcase classname="ResultComponent should navigate to text exercise details when exercise type is TEXT" name="ResultComponent should navigate to text exercise details when exercise type is TEXT" time="0.311">
    </testcase>
    <testcase classname="ResultComponent should call showDetails only when isInSidebarCard is false" name="ResultComponent should call showDetails only when isInSidebarCard is false" time="0.145">
    </testcase>
    <testcase classname="ResultComponent should display building message for IS_BUILDING status" name="ResultComponent should display building message for IS_BUILDING status" time="0.191">
    </testcase>
    <testcase classname="ResultComponent should display badge when showBadge is true" name="ResultComponent should display badge when showBadge is true" time="0.181">
    </testcase>
    <testcase classname="ResultComponent should display the correct message for FAILED_PROGRAMMING_SUBMISSION_OFFLINE_IDE and FAILED_PROGRAMMING_SUBMISSION_ONLINE_IDE" name="ResultComponent should display the correct message for FAILED_PROGRAMMING_SUBMISSION_OFFLINE_IDE and FAILED_PROGRAMMING_SUBMISSION_ONLINE_IDE" time="0.158">
    </testcase>
    <testcase classname="ResultComponent should display the submitted text for SUBMITTED template status" name="ResultComponent should display the submitted text for SUBMITTED template status" time="0.179">
    </testcase>
    <testcase classname="ResultComponent should display the submitted text for SUBMITTED_WAITING_FOR_GRADING template status" name="ResultComponent should display the submitted text for SUBMITTED_WAITING_FOR_GRADING template status" time="0.097">
    </testcase>
    <testcase classname="ResultComponent should display the submitted text for LATE_NO_FEEDBACK template status" name="ResultComponent should display the submitted text for LATE_NO_FEEDBACK template status" time="0.12">
    </testcase>
    <testcase classname="ResultComponent should display the submitted text for LATE template status" name="ResultComponent should display the submitted text for LATE template status" time="0.134">
    </testcase>
    <testcase classname="ResultComponent ResultComponent - Graded Results should display the first rated result if showUngradedResults is false" name="ResultComponent ResultComponent - Graded Results should display the first rated result if showUngradedResults is false" time="0.125">
    </testcase>
    <testcase classname="ResultComponent ResultComponent - Graded Results should display the first result if showUngradedResults is true" name="ResultComponent ResultComponent - Graded Results should display the first result if showUngradedResults is true" time="0.122">
    </testcase>
    <testcase classname="ResultComponent ResultComponent - Graded Results should not have a result if there are no rated results and showUngradedResults is false" name="ResultComponent ResultComponent - Graded Results should not have a result if there are no rated results and showUngradedResults is false" time="0.132">
    </testcase>
    <testcase classname="ResultComponent ResultComponent - Feedback Generation should call evaluate again after the specified due time" name="ResultComponent ResultComponent - Feedback Generation should call evaluate again after the specified due time" time="0.11">
    </testcase>
    <testcase classname="ResultComponent ResultComponent - Feedback Generation should clear the timeout if the component is destroyed before the feedback generation is complete" name="ResultComponent ResultComponent - Feedback Generation should clear the timeout if the component is destroyed before the feedback generation is complete" time="0.117">
    </testcase>
    <testcase classname="ResultComponent should use special handling if result is an automatic AI result" name="ResultComponent should use special handling if result is an automatic AI result" time="0.127">
    </testcase>
    <testcase classname="ResultComponent should trigger Interval creation on estimatedCompletionDate change" name="ResultComponent should trigger Interval creation on estimatedCompletionDate change" time="0.068">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseLifecycleComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:55" time="6.196" tests="24">
    <testcase classname="ProgrammingExerciseLifecycleComponent should do nothing if the release date is set to null" name="ProgrammingExerciseLifecycleComponent should do nothing if the release date is set to null" time="0.309">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should only reset the due date if the release date is between the due date and the after due date" name="ProgrammingExerciseLifecycleComponent should only reset the due date if the release date is between the due date and the after due date" time="0.03">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should reset the due date, the after due date and the example solution publication date if the new release is after all dates" name="ProgrammingExerciseLifecycleComponent should reset the due date, the after due date and the example solution publication date if the new release is after all dates" time="0.024">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should only reset the due date if the start date is between the due date and the after due date" name="ProgrammingExerciseLifecycleComponent should only reset the due date if the start date is between the due date and the after due date" time="0.021">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should reset the due date, the after due date and the example solution publication date if the new start date is after all dates" name="ProgrammingExerciseLifecycleComponent should reset the due date, the after due date and the example solution publication date if the new start date is after all dates" time="0.019">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should reset the example solution publication date if the new due date is later" name="ProgrammingExerciseLifecycleComponent should reset the example solution publication date if the new due date is later" time="0.029">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should change the value for allowing complaints for exercise with automatic assessment after toggling" name="ProgrammingExerciseLifecycleComponent should change the value for allowing complaints for exercise with automatic assessment after toggling" time="0.016">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should change feedback request allowed after toggling" name="ProgrammingExerciseLifecycleComponent should change feedback request allowed after toggling" time="0.044">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should change assessment type from automatic to semi-automatic after toggling" name="ProgrammingExerciseLifecycleComponent should change assessment type from automatic to semi-automatic after toggling" time="0.017">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should change assessment type from semi-automatic to automatic after toggling" name="ProgrammingExerciseLifecycleComponent should change assessment type from semi-automatic to automatic after toggling" time="0.019">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should disable feedback suggestions when changing the assessment type to automatic" name="ProgrammingExerciseLifecycleComponent should disable feedback suggestions when changing the assessment type to automatic" time="0.021">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should change publication of tests for programming exercise with published solution" name="ProgrammingExerciseLifecycleComponent should change publication of tests for programming exercise with published solution" time="0.013">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should not cascade date changes when updateReleaseDate is called when readOnly is true" name="ProgrammingExerciseLifecycleComponent should not cascade date changes when updateReleaseDate is called when readOnly is true" time="0.008">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should not cascade date changes when updateExampleSolutionPublicationDate is called when readOnly is true" name="ProgrammingExerciseLifecycleComponent should not cascade date changes when updateExampleSolutionPublicationDate is called when readOnly is true" time="0.008">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should alert correct date when exampleSolutionPublicationDate is updated automatically" name="ProgrammingExerciseLifecycleComponent should alert correct date when exampleSolutionPublicationDate is updated automatically" time="0.008">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should alert each distinct string only once" name="ProgrammingExerciseLifecycleComponent should alert each distinct string only once" time="0.01">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should enable checkbox for complaints on automatic assessments for automatically assessed exam exercises" name="ProgrammingExerciseLifecycleComponent should enable checkbox for complaints on automatic assessments for automatically assessed exam exercises" time="0.161">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should disable checkbox for complaints on automatic assessments for exercises without automatic assessment" name="ProgrammingExerciseLifecycleComponent should disable checkbox for complaints on automatic assessments for exercises without automatic assessment" time="0.052">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should disable checkbox for complaints on automatic assessments for exercises without automatic assessment" name="ProgrammingExerciseLifecycleComponent should disable checkbox for complaints on automatic assessments for exercises without automatic assessment" time="0.175">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should disable checkbox for complaints on automatic assessments for automatically assessed course exercises without due date" name="ProgrammingExerciseLifecycleComponent should disable checkbox for complaints on automatic assessments for automatically assessed course exercises without due date" time="0.138">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should enable checkbox to include tests in example solution" name="ProgrammingExerciseLifecycleComponent should enable checkbox to include tests in example solution" time="0.073">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should enable checkbox to include tests in example solution" name="ProgrammingExerciseLifecycleComponent should enable checkbox to include tests in example solution" time="0.1">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should disable checkbox to include tests in example solution without example solution publication date" name="ProgrammingExerciseLifecycleComponent should disable checkbox to include tests in example solution without example solution publication date" time="0.122">
    </testcase>
    <testcase classname="ProgrammingExerciseLifecycleComponent should calculate form validation status" name="ProgrammingExerciseLifecycleComponent should calculate form validation status" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="DiscussionSectionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:54" time="11.292" tests="16">
    <testcase classname="DiscussionSectionComponent should set course and messages for lecture with lecture channel on initialization" name="DiscussionSectionComponent should set course and messages for lecture with lecture channel on initialization" time="2.045">
    </testcase>
    <testcase classname="DiscussionSectionComponent should set course and messages for exercise with exercise channel on initialization" name="DiscussionSectionComponent should set course and messages for exercise with exercise channel on initialization" time="0.381">
    </testcase>
    <testcase classname="DiscussionSectionComponent should reset current post" name="DiscussionSectionComponent should reset current post" time="0.4">
    </testcase>
    <testcase classname="DiscussionSectionComponent should initialize correctly for exercise posts with default settings" name="DiscussionSectionComponent should initialize correctly for exercise posts with default settings" time="0.454">
    </testcase>
    <testcase classname="DiscussionSectionComponent should display one new message button for more then 3 messages in channel" name="DiscussionSectionComponent should display one new message button for more then 3 messages in channel" time="0.735">
    </testcase>
    <testcase classname="DiscussionSectionComponent should display one new message button" name="DiscussionSectionComponent should display one new message button" time="0.551">
    </testcase>
    <testcase classname="DiscussionSectionComponent should show search-bar and filters if not focused to a post" name="DiscussionSectionComponent should show search-bar and filters if not focused to a post" time="0.564">
    </testcase>
    <testcase classname="DiscussionSectionComponent should hide search-bar and filters if focused to a post" name="DiscussionSectionComponent should hide search-bar and filters if focused to a post" time="0.186">
    </testcase>
    <testcase classname="DiscussionSectionComponent triggering filters should invoke the metis service" name="DiscussionSectionComponent triggering filters should invoke the metis service" time="0.309">
    </testcase>
    <testcase classname="DiscussionSectionComponent loads exercise messages if communication only" name="DiscussionSectionComponent loads exercise messages if communication only" time="0.193">
    </testcase>
    <testcase classname="DiscussionSectionComponent loads lecture messages if communication only" name="DiscussionSectionComponent loads lecture messages if communication only" time="0.189">
    </testcase>
    <testcase classname="DiscussionSectionComponent collapses sidebar if no channel exists" name="DiscussionSectionComponent collapses sidebar if no channel exists" time="0.12">
    </testcase>
    <testcase classname="DiscussionSectionComponent should react to scroll up event" name="DiscussionSectionComponent should react to scroll up event" time="0.409">
    </testcase>
    <testcase classname="DiscussionSectionComponent should toggle send message" name="DiscussionSectionComponent should toggle send message" time="0.185">
    </testcase>
    <testcase classname="DiscussionSectionComponent should change sort direction" name="DiscussionSectionComponent should change sort direction" time="0.168">
    </testcase>
    <testcase classname="DiscussionSectionComponent fetches new messages on scroll up if more messages are available" name="DiscussionSectionComponent fetches new messages on scroll up if more messages are available" time="0.336">
    </testcase>
  </testsuite>
  <testsuite name="Exercise Scores Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:15:58" time="8.392" tests="60">
    <testcase classname="Exercise Scores Component should be correctly set onInit" name="Exercise Scores Component should be correctly set onInit" time="0.472">
    </testcase>
    <testcase classname="Exercise Scores Component should get exercise participation link for exercise without an exercise group" name="Exercise Scores Component should get exercise participation link for exercise without an exercise group" time="0.005">
    </testcase>
    <testcase classname="Exercise Scores Component should get exercise participation link for exercise with an exercise group" name="Exercise Scores Component should get exercise participation link for exercise with an exercise group" time="0.004">
    </testcase>
    <testcase classname="Exercise Scores Component should update result" name="Exercise Scores Component should update result" time="0.011">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.028">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.012">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.011">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.019">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.012">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.017">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.006">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.004">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.004">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.005">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.005">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.005">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.007">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.008">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.009">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.005">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.004">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.004">
    </testcase>
    <testcase classname="Exercise Scores Component should filter participations correctly" name="Exercise Scores Component should filter participations correctly" time="0.004">
    </testcase>
    <testcase classname="Exercise Scores Component should determine if filter is relevant for exercise configuration" name="Exercise Scores Component should determine if filter is relevant for exercise configuration" time="0.028">
    </testcase>
    <testcase classname="Exercise Scores Component should determine if filter is relevant for exercise configuration" name="Exercise Scores Component should determine if filter is relevant for exercise configuration" time="0.005">
    </testcase>
    <testcase classname="Exercise Scores Component should determine if filter is relevant for exercise configuration" name="Exercise Scores Component should determine if filter is relevant for exercise configuration" time="0.008">
    </testcase>
    <testcase classname="Exercise Scores Component should determine if filter is relevant for exercise configuration" name="Exercise Scores Component should determine if filter is relevant for exercise configuration" time="0.005">
    </testcase>
    <testcase classname="Exercise Scores Component should determine if filter is relevant for exercise configuration" name="Exercise Scores Component should determine if filter is relevant for exercise configuration" time="0.005">
    </testcase>
    <testcase classname="Exercise Scores Component should determine if filter is relevant for exercise configuration" name="Exercise Scores Component should determine if filter is relevant for exercise configuration" time="0.004">
    </testcase>
    <testcase classname="Exercise Scores Component should determine if filter is relevant for exercise configuration" name="Exercise Scores Component should determine if filter is relevant for exercise configuration" time="0.007">
    </testcase>
    <testcase classname="Exercise Scores Component should determine if filter is relevant for exercise configuration" name="Exercise Scores Component should determine if filter is relevant for exercise configuration" time="0.004">
    </testcase>
    <testcase classname="Exercise Scores Component should determine if filter is relevant for exercise configuration" name="Exercise Scores Component should determine if filter is relevant for exercise configuration" time="0.004">
    </testcase>
    <testcase classname="Exercise Scores Component should determine if filter is relevant for exercise configuration" name="Exercise Scores Component should determine if filter is relevant for exercise configuration" time="0.004">
    </testcase>
    <testcase classname="Exercise Scores Component should determine if filter is relevant for exercise configuration" name="Exercise Scores Component should determine if filter is relevant for exercise configuration" time="0.004">
    </testcase>
    <testcase classname="Exercise Scores Component should determine if filter is relevant for exercise configuration" name="Exercise Scores Component should determine if filter is relevant for exercise configuration" time="0.004">
    </testcase>
    <testcase classname="Exercise Scores Component should determine if filter is relevant for exercise configuration" name="Exercise Scores Component should determine if filter is relevant for exercise configuration" time="0.004">
    </testcase>
    <testcase classname="Exercise Scores Component should determine if filter is relevant for exercise configuration" name="Exercise Scores Component should determine if filter is relevant for exercise configuration" time="0.006">
    </testcase>
    <testcase classname="Exercise Scores Component should determine if filter is relevant for exercise configuration" name="Exercise Scores Component should determine if filter is relevant for exercise configuration" time="0.011">
    </testcase>
    <testcase classname="Exercise Scores Component should determine if filter is relevant for exercise configuration" name="Exercise Scores Component should determine if filter is relevant for exercise configuration" time="0.007">
    </testcase>
    <testcase classname="Exercise Scores Component should determine if filter is relevant for exercise configuration" name="Exercise Scores Component should determine if filter is relevant for exercise configuration" time="0.007">
    </testcase>
    <testcase classname="Exercise Scores Component should return build plan id" name="Exercise Scores Component should return build plan id" time="0.011">
    </testcase>
    <testcase classname="Exercise Scores Component should return project key" name="Exercise Scores Component should return project key" time="0.007">
    </testcase>
    <testcase classname="Exercise Scores Component should return repository link" name="Exercise Scores Component should return repository link" time="0.036">
    </testcase>
    <testcase classname="Exercise Scores Component should export names correctly for student participation" name="Exercise Scores Component should export names correctly for student participation" time="0.005">
    </testcase>
    <testcase classname="Exercise Scores Component should export names correctly for team participation" name="Exercise Scores Component should export names correctly for team participation" time="0.004">
    </testcase>
    <testcase classname="Exercise Scores Component should search result for student participation" name="Exercise Scores Component should search result for student participation" time="0.006">
    </testcase>
    <testcase classname="Exercise Scores Component should search result for team" name="Exercise Scores Component should search result for team" time="0.008">
    </testcase>
    <testcase classname="Exercise Scores Component should search result and return empty string" name="Exercise Scores Component should search result and return empty string" time="0.007">
    </testcase>
    <testcase classname="Exercise Scores Component should search text from result" name="Exercise Scores Component should search text from result" time="0.009">
    </testcase>
    <testcase classname="Exercise Scores Component should refresh properly" name="Exercise Scores Component should refresh properly" time="0.01">
    </testcase>
    <testcase classname="Exercise Scores Component should filter results correctly and reset the filter" name="Exercise Scores Component should filter results correctly and reset the filter" time="0.007">
    </testcase>
    <testcase classname="Exercise Scores Component should filter results correctly and reset the filter" name="Exercise Scores Component should filter results correctly and reset the filter" time="0.006">
    </testcase>
    <testcase classname="Exercise Scores Component should filter results correctly and reset the filter" name="Exercise Scores Component should filter results correctly and reset the filter" time="0.011">
    </testcase>
    <testcase classname="Exercise Scores Component should filter results correctly and reset the filter" name="Exercise Scores Component should filter results correctly and reset the filter" time="0.004">
    </testcase>
    <testcase classname="Exercise Scores Component should filter results correctly and reset the filter" name="Exercise Scores Component should filter results correctly and reset the filter" time="0.021">
    </testcase>
    <testcase classname="Exercise Scores Component should filter results correctly and reset the filter" name="Exercise Scores Component should filter results correctly and reset the filter" time="0.01">
    </testcase>
    <testcase classname="Exercise Scores Component should filter results correctly and reset the filter" name="Exercise Scores Component should filter results correctly and reset the filter" time="0.026">
    </testcase>
    <testcase classname="Exercise Scores Component should filter results correctly and reset the filter" name="Exercise Scores Component should filter results correctly and reset the filter" time="0.005">
    </testcase>
    <testcase classname="Exercise Scores Component should filter results correctly and reset the filter" name="Exercise Scores Component should filter results correctly and reset the filter" time="0.016">
    </testcase>
    <testcase classname="Exercise Scores Component should filter results correctly and reset the filter" name="Exercise Scores Component should filter results correctly and reset the filter" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="ModelingAssessmentComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:01" time="7.198" tests="16">
    <testcase classname="ModelingAssessmentComponent should show title if any" name="ModelingAssessmentComponent should show title if any" time="0.292">
    </testcase>
    <testcase classname="ModelingAssessmentComponent score display should display score display with right values" name="ModelingAssessmentComponent score display should display score display with right values" time="0.099">
    </testcase>
    <testcase classname="ModelingAssessmentComponent score display should not display score if displayPoints wrong" name="ModelingAssessmentComponent score display should not display score if displayPoints wrong" time="0.125">
    </testcase>
    <testcase classname="ModelingAssessmentComponent should display explanation editor if there is an explanation" name="ModelingAssessmentComponent should display explanation editor if there is an explanation" time="0.159">
    </testcase>
    <testcase classname="ModelingAssessmentComponent should initialize apollon editor" name="ModelingAssessmentComponent should initialize apollon editor" time="0.124">
    </testcase>
    <testcase classname="ModelingAssessmentComponent should filter references" name="ModelingAssessmentComponent should filter references" time="0.122">
    </testcase>
    <testcase classname="ModelingAssessmentComponent should filter references by result feedbacks" name="ModelingAssessmentComponent should filter references by result feedbacks" time="0.108">
    </testcase>
    <testcase classname="ModelingAssessmentComponent should calculate drop info" name="ModelingAssessmentComponent should calculate drop info" time="0.11">
    </testcase>
    <testcase classname="ModelingAssessmentComponent should update element counts" name="ModelingAssessmentComponent should update element counts" time="0.263">
    </testcase>
    <testcase classname="ModelingAssessmentComponent should generate feedback from assessment" name="ModelingAssessmentComponent should generate feedback from assessment" time="0.155">
    </testcase>
    <testcase classname="ModelingAssessmentComponent should highlight elements" name="ModelingAssessmentComponent should highlight elements" time="0.287">
    </testcase>
    <testcase classname="ModelingAssessmentComponent should update model" name="ModelingAssessmentComponent should update model" time="0.201">
    </testcase>
    <testcase classname="ModelingAssessmentComponent should update highlighted elements" name="ModelingAssessmentComponent should update highlighted elements" time="0.409">
    </testcase>
    <testcase classname="ModelingAssessmentComponent should update highlighted assessments first round" name="ModelingAssessmentComponent should update highlighted assessments first round" time="0.388">
    </testcase>
    <testcase classname="ModelingAssessmentComponent should update highlighted assessments" name="ModelingAssessmentComponent should update highlighted assessments" time="0.462">
    </testcase>
    <testcase classname="ModelingAssessmentComponent should update feedbacks" name="ModelingAssessmentComponent should update feedbacks" time="0.124">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseDetailComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:02" time="8.457" tests="14">
    <testcase classname="ProgrammingExerciseDetailComponent should reload on participation change" name="ProgrammingExerciseDetailComponent should reload on participation change" time="0.826">
    </testcase>
    <testcase classname="ProgrammingExerciseDetailComponent onInit for course exercise should not be in exam mode" name="ProgrammingExerciseDetailComponent onInit for course exercise should not be in exam mode" time="0.016">
    </testcase>
    <testcase classname="ProgrammingExerciseDetailComponent onInit for course exercise should only call service method to get build log statistics onInit if the user is at least an editor for this exercise" name="ProgrammingExerciseDetailComponent onInit for course exercise should only call service method to get build log statistics onInit if the user is at least an editor for this exercise" time="0.114">
    </testcase>
    <testcase classname="ProgrammingExerciseDetailComponent onInit for course exercise should only call service method to get build log statistics onInit if the user is at least an editor for this exercise" name="ProgrammingExerciseDetailComponent onInit for course exercise should only call service method to get build log statistics onInit if the user is at least an editor for this exercise" time="0.131">
    </testcase>
    <testcase classname="ProgrammingExerciseDetailComponent onInit for course exercise should create detail sections after getDiffReport error" name="ProgrammingExerciseDetailComponent onInit for course exercise should create detail sections after getDiffReport error" time="0.024">
    </testcase>
    <testcase classname="ProgrammingExerciseDetailComponent onInit for exam exercise should be in exam mode" name="ProgrammingExerciseDetailComponent onInit for exam exercise should be in exam mode" time="0.053">
    </testcase>
    <testcase classname="ProgrammingExerciseDetailComponent should create details" name="ProgrammingExerciseDetailComponent should create details" time="0.06">
    </testcase>
    <testcase classname="ProgrammingExerciseDetailComponent should show the build plan edit button for profile jenkins: true" name="ProgrammingExerciseDetailComponent should show the build plan edit button for profile jenkins: true" time="0.02">
    </testcase>
    <testcase classname="ProgrammingExerciseDetailComponent should combine template commit" name="ProgrammingExerciseDetailComponent should combine template commit" time="0.011">
    </testcase>
    <testcase classname="ProgrammingExerciseDetailComponent should alert on combine template commit error" name="ProgrammingExerciseDetailComponent should alert on combine template commit error" time="0.024">
    </testcase>
    <testcase classname="ProgrammingExerciseDetailComponent should delete programming exercise" name="ProgrammingExerciseDetailComponent should delete programming exercise" time="0.032">
    </testcase>
    <testcase classname="ProgrammingExerciseDetailComponent should delete exam programming exercise" name="ProgrammingExerciseDetailComponent should delete exam programming exercise" time="0.031">
    </testcase>
    <testcase classname="ProgrammingExerciseDetailComponent should generate structure oracle" name="ProgrammingExerciseDetailComponent should generate structure oracle" time="0.009">
    </testcase>
    <testcase classname="ProgrammingExerciseDetailComponent should error on generate structure oracle" name="ProgrammingExerciseDetailComponent should error on generate structure oracle" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="PrerequisiteService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:11" time="1.406" tests="19">
    <testcase classname="PrerequisiteService should find a competency" name="PrerequisiteService should find a competency" time="0.017">
    </testcase>
    <testcase classname="PrerequisiteService should find all competencies" name="PrerequisiteService should find all competencies" time="0.008">
    </testcase>
    <testcase classname="PrerequisiteService should get individual progress for a competency" name="PrerequisiteService should get individual progress for a competency" time="0.008">
    </testcase>
    <testcase classname="PrerequisiteService should get course progress for a competency" name="PrerequisiteService should get course progress for a competency" time="0.006">
    </testcase>
    <testcase classname="PrerequisiteService should create a Competency" name="PrerequisiteService should create a Competency" time="0.005">
    </testcase>
    <testcase classname="PrerequisiteService should update a Competency" name="PrerequisiteService should update a Competency" time="0.008">
    </testcase>
    <testcase classname="PrerequisiteService should delete a Competency" name="PrerequisiteService should delete a Competency" time="0.005">
    </testcase>
    <testcase classname="PrerequisiteService should add a Competency relation" name="PrerequisiteService should add a Competency relation" time="0.006">
    </testcase>
    <testcase classname="PrerequisiteService should remove a Competency relation" name="PrerequisiteService should remove a Competency relation" time="0.006">
    </testcase>
    <testcase classname="PrerequisiteService should parse a list of competencies from a course description" name="PrerequisiteService should parse a list of competencies from a course description" time="0.009">
    </testcase>
    <testcase classname="PrerequisiteService should bulk create competencies" name="PrerequisiteService should bulk create competencies" time="0.009">
    </testcase>
    <testcase classname="PrerequisiteService should import all competencies of a course" name="PrerequisiteService should import all competencies of a course" time="0.04">
    </testcase>
    <testcase classname="PrerequisiteService should bulk import competencies" name="PrerequisiteService should bulk import competencies" time="0.018">
    </testcase>
    <testcase classname="PrerequisiteService should import standardized competencies" name="PrerequisiteService should import standardized competencies" time="0.006">
    </testcase>
    <testcase classname="PrerequisiteService should import competency" name="PrerequisiteService should import competency" time="0.009">
    </testcase>
    <testcase classname="PrerequisiteService should get competency relations" name="PrerequisiteService should get competency relations" time="0.005">
    </testcase>
    <testcase classname="PrerequisiteService should get competencies for import" name="PrerequisiteService should get competencies for import" time="0.019">
    </testcase>
    <testcase classname="PrerequisiteService should get courseCompetency titles" name="PrerequisiteService should get courseCompetency titles" time="0.02">
    </testcase>
    <testcase classname="PrerequisiteService should convert response from server" name="PrerequisiteService should convert response from server" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="LectureUnitManagementComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:07" time="8.142" tests="15">
    <testcase classname="LectureUnitManagementComponent should reorder" name="LectureUnitManagementComponent should reorder" time="0.894">
    </testcase>
    <testcase classname="LectureUnitManagementComponent should emit edit button event" name="LectureUnitManagementComponent should emit edit button event" time="0.186">
    </testcase>
    <testcase classname="LectureUnitManagementComponent should show loadData on delete" name="LectureUnitManagementComponent should show loadData on delete" time="0.226">
    </testcase>
    <testcase classname="LectureUnitManagementComponent should give the correct delete question translation key" name="LectureUnitManagementComponent should give the correct delete question translation key" time="0.256">
    </testcase>
    <testcase classname="LectureUnitManagementComponent should return default question translation key for unhandled types" name="LectureUnitManagementComponent should return default question translation key for unhandled types" time="0.195">
    </testcase>
    <testcase classname="LectureUnitManagementComponent should give the correct confirmation text translation key" name="LectureUnitManagementComponent should give the correct confirmation text translation key" time="0.293">
    </testcase>
    <testcase classname="LectureUnitManagementComponent should return default confirmation text translation key for unhandled types" name="LectureUnitManagementComponent should return default confirmation text translation key for unhandled types" time="0.321">
    </testcase>
    <testcase classname="LectureUnitManagementComponent should give the correct action type" name="LectureUnitManagementComponent should give the correct action type" time="0.271">
    </testcase>
    <testcase classname="LectureUnitManagementComponent should call onIngestButtonClicked when button is clicked" name="LectureUnitManagementComponent should call onIngestButtonClicked when button is clicked" time="0.278">
    </testcase>
    <testcase classname="LectureUnitManagementComponent should initialize profile info and check for Iris settings" name="LectureUnitManagementComponent should initialize profile info and check for Iris settings" time="0.327">
    </testcase>
    <testcase classname="LectureUnitManagementComponent should update ingestion states correctly when getIngestionState returns data" name="LectureUnitManagementComponent should update ingestion states correctly when getIngestionState returns data" time="0.293">
    </testcase>
    <testcase classname="LectureUnitManagementComponent should handle error when ingestLectureUnitInPyris fails" name="LectureUnitManagementComponent should handle error when ingestLectureUnitInPyris fails" time="0.228">
    </testcase>
    <testcase classname="LectureUnitManagementComponent isViewButtonAvailable should return true for an attachment unit with a PDF link" name="LectureUnitManagementComponent isViewButtonAvailable should return true for an attachment unit with a PDF link" time="0.206">
    </testcase>
    <testcase classname="LectureUnitManagementComponent isViewButtonAvailable should return false for file extension different than .pdf" name="LectureUnitManagementComponent isViewButtonAvailable should return false for file extension different than .pdf" time="0.133">
    </testcase>
    <testcase classname="LectureUnitManagementComponent isViewButtonAvailable should return false for a text unit" name="LectureUnitManagementComponent isViewButtonAvailable should return false for a text unit" time="0.14">
    </testcase>
  </testsuite>
  <testsuite name="Bonus Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:13" time="2.87" tests="29">
    <testcase classname="Bonus Service should filter bonus before serializing into request" name="Bonus Service should filter bonus before serializing into request" time="0.01">
    </testcase>
    <testcase classname="Bonus Service should set includeSourceGradeSteps when calling findBonusForExam" name="Bonus Service should set includeSourceGradeSteps when calling findBonusForExam" time="0.004">
    </testcase>
    <testcase classname="Bonus Service should set includeSourceGradeSteps when calling findBonusForExam" name="Bonus Service should set includeSourceGradeSteps when calling findBonusForExam" time="0.003">
    </testcase>
    <testcase classname="Bonus Service should set includeSourceGradeSteps when calling findBonusForExam" name="Bonus Service should set includeSourceGradeSteps when calling findBonusForExam" time="0.004">
    </testcase>
    <testcase classname="Bonus Service should check does bonus exceed max [5, 10, 1, false]" name="Bonus Service should check does bonus exceed max [5, 10, 1, false]" time="0.003">
    </testcase>
    <testcase classname="Bonus Service should check does bonus exceed max [5, 10, -1, true]" name="Bonus Service should check does bonus exceed max [5, 10, -1, true]" time="0.003">
    </testcase>
    <testcase classname="Bonus Service should check does bonus exceed max [10, 10, 1, false]" name="Bonus Service should check does bonus exceed max [10, 10, 1, false]" time="0.005">
    </testcase>
    <testcase classname="Bonus Service should check does bonus exceed max [10, 10, -1, false]" name="Bonus Service should check does bonus exceed max [10, 10, -1, false]" time="0.002">
    </testcase>
    <testcase classname="Bonus Service should check does bonus exceed max [20, 10, 1, true]" name="Bonus Service should check does bonus exceed max [20, 10, 1, true]" time="0.003">
    </testcase>
    <testcase classname="Bonus Service should check does bonus exceed max [20, 10, -1, false]" name="Bonus Service should check does bonus exceed max [20, 10, -1, false]" time="0.003">
    </testcase>
    <testcase classname="Bonus Service should check does bonus exceed max [1.4, 1.3, 1, true]" name="Bonus Service should check does bonus exceed max [1.4, 1.3, 1, true]" time="0.004">
    </testcase>
    <testcase classname="Bonus Service should check does bonus exceed max [1.4, 1.3, -1, false]" name="Bonus Service should check does bonus exceed max [1.4, 1.3, -1, false]" time="0.003">
    </testcase>
    <testcase classname="Bonus Service should check does bonus exceed max [5, 10, 2, false]" name="Bonus Service should check does bonus exceed max [5, 10, 2, false]" time="0.009">
    </testcase>
    <testcase classname="Bonus Service should check does bonus exceed max [10, 10, -2, false]" name="Bonus Service should check does bonus exceed max [10, 10, -2, false]" time="0.015">
    </testcase>
    <testcase classname="Bonus Service should get included boundary points [{&quot;lowerBoundInclusive&quot;: true, &quot;lowerBoundPoints&quot;: 40, &quot;upperBoundInclusive&quot;: false, &quot;upperBoundPoints&quot;: 80}, 100, 40, %p]" name="Bonus Service should get included boundary points [{&quot;lowerBoundInclusive&quot;: true, &quot;lowerBoundPoints&quot;: 40, &quot;upperBoundInclusive&quot;: false, &quot;upperBoundPoints&quot;: 80}, 100, 40, %p]" time="0.018">
    </testcase>
    <testcase classname="Bonus Service should get included boundary points [{&quot;lowerBoundInclusive&quot;: false, &quot;lowerBoundPoints&quot;: 40, &quot;upperBoundInclusive&quot;: true, &quot;upperBoundPoints&quot;: 80}, 100, 80, %p]" name="Bonus Service should get included boundary points [{&quot;lowerBoundInclusive&quot;: false, &quot;lowerBoundPoints&quot;: 40, &quot;upperBoundInclusive&quot;: true, &quot;upperBoundPoints&quot;: 80}, 100, 80, %p]" time="0.006">
    </testcase>
    <testcase classname="Bonus Service should get included boundary points [{&quot;lowerBoundInclusive&quot;: false, &quot;lowerBoundPoints&quot;: 40, &quot;upperBoundInclusive&quot;: true, &quot;upperBoundPoints&quot;: 120}, 100, 100, %p]" name="Bonus Service should get included boundary points [{&quot;lowerBoundInclusive&quot;: false, &quot;lowerBoundPoints&quot;: 40, &quot;upperBoundInclusive&quot;: true, &quot;upperBoundPoints&quot;: 120}, 100, 100, %p]" time="0.003">
    </testcase>
    <testcase classname="Bonus Service should get included boundary points [{&quot;lowerBoundInclusive&quot;: true, &quot;lowerBoundPoints&quot;: 40, &quot;upperBoundInclusive&quot;: true, &quot;upperBoundPoints&quot;: 80}, 100, 40, %p]" name="Bonus Service should get included boundary points [{&quot;lowerBoundInclusive&quot;: true, &quot;lowerBoundPoints&quot;: 40, &quot;upperBoundInclusive&quot;: true, &quot;upperBoundPoints&quot;: 80}, 100, 40, %p]" time="0.01">
    </testcase>
    <testcase classname="Bonus Service should get included boundary points [{&quot;lowerBoundInclusive&quot;: false, &quot;lowerBoundPoints&quot;: 40, &quot;upperBoundInclusive&quot;: false, &quot;upperBoundPoints&quot;: 80}, 100, undefined, %p]" name="Bonus Service should get included boundary points [{&quot;lowerBoundInclusive&quot;: false, &quot;lowerBoundPoints&quot;: 40, &quot;upperBoundInclusive&quot;: false, &quot;upperBoundPoints&quot;: 80}, 100, undefined, %p]" time="0.009">
    </testcase>
    <testcase classname="Bonus Service should check final grade is calculated correctly with BonusStrategy.GRADES_CONTINUOUS {&quot;studentPointsOfBonusTo&quot;:50,&quot;studentPointsOfBonusSource&quot;:100,&quot;examGrade&quot;:&quot;5.0&quot;,&quot;bonusGrade&quot;:0,&quot;finalPoints&quot;:50,&quot;finalGrade&quot;:&quot;5.0&quot;,&quot;exceedsMax&quot;:false}" name="Bonus Service should check final grade is calculated correctly with BonusStrategy.GRADES_CONTINUOUS {&quot;studentPointsOfBonusTo&quot;:50,&quot;studentPointsOfBonusSource&quot;:100,&quot;examGrade&quot;:&quot;5.0&quot;,&quot;bonusGrade&quot;:0,&quot;finalPoints&quot;:50,&quot;finalGrade&quot;:&quot;5.0&quot;,&quot;exceedsMax&quot;:false}" time="0.005">
    </testcase>
    <testcase classname="Bonus Service should check final grade is calculated correctly with BonusStrategy.GRADES_CONTINUOUS {&quot;studentPointsOfBonusTo&quot;:120,&quot;studentPointsOfBonusSource&quot;:75,&quot;examGrade&quot;:&quot;3.0&quot;,&quot;bonusGrade&quot;:0.1,&quot;finalGrade&quot;:2.9,&quot;exceedsMax&quot;:false}" name="Bonus Service should check final grade is calculated correctly with BonusStrategy.GRADES_CONTINUOUS {&quot;studentPointsOfBonusTo&quot;:120,&quot;studentPointsOfBonusSource&quot;:75,&quot;examGrade&quot;:&quot;3.0&quot;,&quot;bonusGrade&quot;:0.1,&quot;finalGrade&quot;:2.9,&quot;exceedsMax&quot;:false}" time="0.005">
    </testcase>
    <testcase classname="Bonus Service should check final grade is calculated correctly with BonusStrategy.GRADES_CONTINUOUS {&quot;studentPointsOfBonusTo&quot;:200,&quot;studentPointsOfBonusSource&quot;:200,&quot;examGrade&quot;:&quot;1.0&quot;,&quot;bonusGrade&quot;:0.2,&quot;finalGrade&quot;:&quot;1.0&quot;,&quot;exceedsMax&quot;:true}" name="Bonus Service should check final grade is calculated correctly with BonusStrategy.GRADES_CONTINUOUS {&quot;studentPointsOfBonusTo&quot;:200,&quot;studentPointsOfBonusSource&quot;:200,&quot;examGrade&quot;:&quot;1.0&quot;,&quot;bonusGrade&quot;:0.2,&quot;finalGrade&quot;:&quot;1.0&quot;,&quot;exceedsMax&quot;:true}" time="0.003">
    </testcase>
    <testcase classname="Bonus Service should check final grade is calculated correctly with BonusStrategy.POINTS {&quot;studentPointsOfBonusTo&quot;:50,&quot;studentPointsOfBonusSource&quot;:100,&quot;examGrade&quot;:&quot;5.0&quot;,&quot;bonusGrade&quot;:0,&quot;finalPoints&quot;:50,&quot;finalGrade&quot;:&quot;5.0&quot;,&quot;exceedsMax&quot;:false}" name="Bonus Service should check final grade is calculated correctly with BonusStrategy.POINTS {&quot;studentPointsOfBonusTo&quot;:50,&quot;studentPointsOfBonusSource&quot;:100,&quot;examGrade&quot;:&quot;5.0&quot;,&quot;bonusGrade&quot;:0,&quot;finalPoints&quot;:50,&quot;finalGrade&quot;:&quot;5.0&quot;,&quot;exceedsMax&quot;:false}" time="0.003">
    </testcase>
    <testcase classname="Bonus Service should check final grade is calculated correctly with BonusStrategy.POINTS {&quot;studentPointsOfBonusTo&quot;:120,&quot;studentPointsOfBonusSource&quot;:75,&quot;examGrade&quot;:&quot;3.0&quot;,&quot;bonusGrade&quot;:10,&quot;finalPoints&quot;:130,&quot;finalGrade&quot;:&quot;3.0&quot;,&quot;exceedsMax&quot;:false}" name="Bonus Service should check final grade is calculated correctly with BonusStrategy.POINTS {&quot;studentPointsOfBonusTo&quot;:120,&quot;studentPointsOfBonusSource&quot;:75,&quot;examGrade&quot;:&quot;3.0&quot;,&quot;bonusGrade&quot;:10,&quot;finalPoints&quot;:130,&quot;finalGrade&quot;:&quot;3.0&quot;,&quot;exceedsMax&quot;:false}" time="0.003">
    </testcase>
    <testcase classname="Bonus Service should check final grade is calculated correctly with BonusStrategy.POINTS {&quot;studentPointsOfBonusTo&quot;:200,&quot;studentPointsOfBonusSource&quot;:200,&quot;examGrade&quot;:&quot;1.0&quot;,&quot;bonusGrade&quot;:20,&quot;finalPoints&quot;:200,&quot;finalGrade&quot;:&quot;1.0&quot;,&quot;exceedsMax&quot;:true}" name="Bonus Service should check final grade is calculated correctly with BonusStrategy.POINTS {&quot;studentPointsOfBonusTo&quot;:200,&quot;studentPointsOfBonusSource&quot;:200,&quot;examGrade&quot;:&quot;1.0&quot;,&quot;bonusGrade&quot;:20,&quot;finalPoints&quot;:200,&quot;finalGrade&quot;:&quot;1.0&quot;,&quot;exceedsMax&quot;:true}" time="0.005">
    </testcase>
    <testcase classname="Bonus Service should generate bonus examples" name="Bonus Service should generate bonus examples" time="0.009">
    </testcase>
    <testcase classname="Bonus Service should throw when generating example without sourceGradingScale" name="Bonus Service should throw when generating example without sourceGradingScale" time="0.051">
    </testcase>
    <testcase classname="Bonus Service should generate examples with default bound points if no boundary points are included" name="Bonus Service should generate examples with default bound points if no boundary points are included" time="0.013">
    </testcase>
    <testcase classname="Bonus Service should not generate examples if there are no passing grades in bonusToGradingScale" name="Bonus Service should not generate examples if there are no passing grades in bonusToGradingScale" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="ConversationPermissionUtils" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:15" time="0.86" tests="54">
    <testcase classname="ConversationPermissionUtils channels canCreateNewMessageInConversation can create new message in channel where user is member" name="ConversationPermissionUtils channels canCreateNewMessageInConversation can create new message in channel where user is member" time="0.002">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canCreateNewMessageInConversation can not create new message in channel where user is not member" name="ConversationPermissionUtils channels canCreateNewMessageInConversation can not create new message in channel where user is not member" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canCreateNewMessageInConversation can not create new message in an archived channel" name="ConversationPermissionUtils channels canCreateNewMessageInConversation can not create new message in an archived channel" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canCreateNewMessageInConversation can not create new message in a an announcement channel where user is not moderator" name="ConversationPermissionUtils channels canCreateNewMessageInConversation can not create new message in a an announcement channel where user is not moderator" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canCreateNewMessageInConversation can create new message in a an announcement channel where user is moderator" name="ConversationPermissionUtils channels canCreateNewMessageInConversation can create new message in a an announcement channel where user is moderator" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canCreateNewMessageInConversation can create a new message in an announcement channel where user is not moderator but has moderation rights" name="ConversationPermissionUtils channels canCreateNewMessageInConversation can create a new message in an announcement channel where user is not moderator but has moderation rights" time="0">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canLeaveConversation can leave channel" name="ConversationPermissionUtils channels canLeaveConversation can leave channel" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canLeaveConversation creator cannot leave a channel" name="ConversationPermissionUtils channels canLeaveConversation creator cannot leave a channel" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canLeaveConversation non member cannot leave a channel" name="ConversationPermissionUtils channels canLeaveConversation non member cannot leave a channel" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canLeaveConversation member cannot leave a course-wide channel" name="ConversationPermissionUtils channels canLeaveConversation member cannot leave a course-wide channel" time="0">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels addUsersToConversation can add users to channel" name="ConversationPermissionUtils channels addUsersToConversation can add users to channel" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels addUsersToConversation should return false if the user is not a channel moderator and channel is public" name="ConversationPermissionUtils channels addUsersToConversation should return false if the user is not a channel moderator and channel is public" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels addUsersToConversation should return false if the user is not a channel moderator and channel is private" name="ConversationPermissionUtils channels addUsersToConversation should return false if the user is not a channel moderator and channel is private" time="0">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels addUsersToConversation should return true if the channel is archived" name="ConversationPermissionUtils channels addUsersToConversation should return true if the channel is archived" time="0.003">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels addUsersToConversation should return false if the channel is course wide" name="ConversationPermissionUtils channels addUsersToConversation should return false if the channel is course wide" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels removeUsersFromConversation can remove users to channel" name="ConversationPermissionUtils channels removeUsersFromConversation can remove users to channel" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels removeUsersFromConversation should return false if the user is not a channel moderator" name="ConversationPermissionUtils channels removeUsersFromConversation should return false if the user is not a channel moderator" time="0.009">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels removeUsersFromConversation should return true if the channel is archived" name="ConversationPermissionUtils channels removeUsersFromConversation should return true if the channel is archived" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels removeUsersFromConversation should return true if the channel is public" name="ConversationPermissionUtils channels removeUsersFromConversation should return true if the channel is public" time="0">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canCreateChannel can create channel as tutor" name="ConversationPermissionUtils channels canCreateChannel can create channel as tutor" time="0">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canCreateChannel can not create channel as student" name="ConversationPermissionUtils channels canCreateChannel can not create channel as student" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canDeleteChannel can delete any channel as instructor" name="ConversationPermissionUtils channels canDeleteChannel can delete any channel as instructor" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canDeleteChannel can not delete any channel as tutor" name="ConversationPermissionUtils channels canDeleteChannel can not delete any channel as tutor" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canDeleteChannel can delete self created channel as tutor" name="ConversationPermissionUtils channels canDeleteChannel can delete self created channel as tutor" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canDeleteChannel can not delete tutorial group channel" name="ConversationPermissionUtils channels canDeleteChannel can not delete tutorial group channel" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels can grant channel moderator role can grant moderator role" name="ConversationPermissionUtils channels can grant channel moderator role can grant moderator role" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels can grant channel moderator role cannot grant moderator role without moderation rights" name="ConversationPermissionUtils channels can grant channel moderator role cannot grant moderator role without moderation rights" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels can revoke channel moderator role can revoke moderator role" name="ConversationPermissionUtils channels can revoke channel moderator role can revoke moderator role" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels can revoke channel moderator role cannot revoke moderator role without moderation rights" name="ConversationPermissionUtils channels can revoke channel moderator role cannot revoke moderator role without moderation rights" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels can change channel archival state can archive channel" name="ConversationPermissionUtils channels can change channel archival state can archive channel" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels can change channel archival state cannot archive channel without moderation rights" name="ConversationPermissionUtils channels can change channel archival state cannot archive channel without moderation rights" time="0.004">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels can change channel properties can change channel properties" name="ConversationPermissionUtils channels can change channel properties can change channel properties" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels can change channel properties cannot change channel properties without moderation rights" name="ConversationPermissionUtils channels can change channel properties cannot change channel properties without moderation rights" time="0">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels can change channel properties can change channel properties of channel that is already archived" name="ConversationPermissionUtils channels can change channel properties can change channel properties of channel that is already archived" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canJoinChannel can join channel" name="ConversationPermissionUtils channels canJoinChannel can join channel" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canJoinChannel can not join a channel twice" name="ConversationPermissionUtils channels canJoinChannel can not join a channel twice" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canJoinChannel can not join a private channel without moderation rights" name="ConversationPermissionUtils channels canJoinChannel can not join a private channel without moderation rights" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canJoinChannel can join an archived public channel without moderation rights" name="ConversationPermissionUtils channels canJoinChannel can join an archived public channel without moderation rights" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils channels canJoinChannel can join a private channel with moderation rights" name="ConversationPermissionUtils channels canJoinChannel can join a private channel with moderation rights" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils one-on-one chats canCreateNewMessageInConversation can create new message in channel where user is member" name="ConversationPermissionUtils one-on-one chats canCreateNewMessageInConversation can create new message in channel where user is member" time="0">
    </testcase>
    <testcase classname="ConversationPermissionUtils one-on-one chats canCreateNewMessageInConversation can not create new message in channel where user is not member" name="ConversationPermissionUtils one-on-one chats canCreateNewMessageInConversation can not create new message in channel where user is not member" time="0">
    </testcase>
    <testcase classname="ConversationPermissionUtils one-on-one chats canLeaveConversation is not possible to leave a one to one chat" name="ConversationPermissionUtils one-on-one chats canLeaveConversation is not possible to leave a one to one chat" time="0">
    </testcase>
    <testcase classname="ConversationPermissionUtils one-on-one chats addUsersToConversation is not possible to add users to a one-on-one chat" name="ConversationPermissionUtils one-on-one chats addUsersToConversation is not possible to add users to a one-on-one chat" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils one-on-one chats removeUsersFromConversation is not possible to remove users to a one-on-one chat" name="ConversationPermissionUtils one-on-one chats removeUsersFromConversation is not possible to remove users to a one-on-one chat" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils groupChats canCreateNewMessageInConversation can create new message in channel where user is member" name="ConversationPermissionUtils groupChats canCreateNewMessageInConversation can create new message in channel where user is member" time="0">
    </testcase>
    <testcase classname="ConversationPermissionUtils groupChats canCreateNewMessageInConversation can not create new message in channel where user is not member" name="ConversationPermissionUtils groupChats canCreateNewMessageInConversation can not create new message in channel where user is not member" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils groupChats canLeaveConversation can leave channel" name="ConversationPermissionUtils groupChats canLeaveConversation can leave channel" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils groupChats canLeaveConversation non member can not leave a group chat" name="ConversationPermissionUtils groupChats canLeaveConversation non member can not leave a group chat" time="0">
    </testcase>
    <testcase classname="ConversationPermissionUtils groupChats addUsersToConversation can add users to channel" name="ConversationPermissionUtils groupChats addUsersToConversation can add users to channel" time="0">
    </testcase>
    <testcase classname="ConversationPermissionUtils groupChats addUsersToConversation should return false if the user is not a member of the group chat" name="ConversationPermissionUtils groupChats addUsersToConversation should return false if the user is not a member of the group chat" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils groupChats removeUsersFromConversation can remove users to channel" name="ConversationPermissionUtils groupChats removeUsersFromConversation can remove users to channel" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils groupChats removeUsersFromConversation should return false if the user is not a member of the group chat" name="ConversationPermissionUtils groupChats removeUsersFromConversation should return false if the user is not a member of the group chat" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils groupChats can change group chat properties can change group chat properties" name="ConversationPermissionUtils groupChats can change group chat properties can change group chat properties" time="0.001">
    </testcase>
    <testcase classname="ConversationPermissionUtils groupChats can change group chat properties cannot change group chat properties without being a member" name="ConversationPermissionUtils groupChats can change group chat properties cannot change group chat properties without being a member" time="0">
    </testcase>
  </testsuite>
  <testsuite name="CourseLectureDetailsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:06" time="9.867" tests="15">
    <testcase classname="CourseLectureDetailsComponent should initialize" name="CourseLectureDetailsComponent should initialize" time="1.854">
    </testcase>
    <testcase classname="CourseLectureDetailsComponent should display all three lecture units: 2 attachment units and 1 text unit" name="CourseLectureDetailsComponent should display all three lecture units: 2 attachment units and 1 text unit" time="0.272">
    </testcase>
    <testcase classname="CourseLectureDetailsComponent should display download PDF button" name="CourseLectureDetailsComponent should display download PDF button" time="0.314">
    </testcase>
    <testcase classname="CourseLectureDetailsComponent should not display download PDF button" name="CourseLectureDetailsComponent should not display download PDF button" time="0.237">
    </testcase>
    <testcase classname="CourseLectureDetailsComponent should not display manage button when user is only tutor" name="CourseLectureDetailsComponent should not display manage button when user is only tutor" time="0.359">
    </testcase>
    <testcase classname="CourseLectureDetailsComponent should display manage button when user is at least editor" name="CourseLectureDetailsComponent should display manage button when user is at least editor" time="0.121">
    </testcase>
    <testcase classname="CourseLectureDetailsComponent should not display manage button when user is a student" name="CourseLectureDetailsComponent should not display manage button when user is a student" time="0.153">
    </testcase>
    <testcase classname="CourseLectureDetailsComponent should redirect to lecture management" name="CourseLectureDetailsComponent should redirect to lecture management" time="0.192">
    </testcase>
    <testcase classname="CourseLectureDetailsComponent should check attachment release date" name="CourseLectureDetailsComponent should check attachment release date" time="0.106">
    </testcase>
    <testcase classname="CourseLectureDetailsComponent should get the attachment extension" name="CourseLectureDetailsComponent should get the attachment extension" time="0.098">
    </testcase>
    <testcase classname="CourseLectureDetailsComponent should show discussion section when communication is enabled" name="CourseLectureDetailsComponent should show discussion section when communication is enabled" time="0.128">
    </testcase>
    <testcase classname="CourseLectureDetailsComponent should not show discussion section when communication is disabled" name="CourseLectureDetailsComponent should not show discussion section when communication is disabled" time="0.201">
    </testcase>
    <testcase classname="CourseLectureDetailsComponent should download file for attachment" name="CourseLectureDetailsComponent should download file for attachment" time="0.139">
    </testcase>
    <testcase classname="CourseLectureDetailsComponent should download PDF file" name="CourseLectureDetailsComponent should download PDF file" time="0.154">
    </testcase>
    <testcase classname="CourseLectureDetailsComponent should set lecture unit as completed" name="CourseLectureDetailsComponent should set lecture unit as completed" time="0.166">
    </testcase>
  </testsuite>
  <testsuite name="CompetencyService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:15" time="1.255" tests="19">
    <testcase classname="CompetencyService should find a competency" name="CompetencyService should find a competency" time="0.016">
    </testcase>
    <testcase classname="CompetencyService should find all competencies" name="CompetencyService should find all competencies" time="0.006">
    </testcase>
    <testcase classname="CompetencyService should get individual progress for a competency" name="CompetencyService should get individual progress for a competency" time="0.016">
    </testcase>
    <testcase classname="CompetencyService should get course progress for a competency" name="CompetencyService should get course progress for a competency" time="0.006">
    </testcase>
    <testcase classname="CompetencyService should create a Competency" name="CompetencyService should create a Competency" time="0.005">
    </testcase>
    <testcase classname="CompetencyService should update a Competency" name="CompetencyService should update a Competency" time="0.006">
    </testcase>
    <testcase classname="CompetencyService should delete a Competency" name="CompetencyService should delete a Competency" time="0.006">
    </testcase>
    <testcase classname="CompetencyService should add a Competency relation" name="CompetencyService should add a Competency relation" time="0.005">
    </testcase>
    <testcase classname="CompetencyService should remove a Competency relation" name="CompetencyService should remove a Competency relation" time="0.005">
    </testcase>
    <testcase classname="CompetencyService should parse a list of competencies from a course description" name="CompetencyService should parse a list of competencies from a course description" time="0.004">
    </testcase>
    <testcase classname="CompetencyService should bulk create competencies" name="CompetencyService should bulk create competencies" time="0.004">
    </testcase>
    <testcase classname="CompetencyService should import all competencies of a course" name="CompetencyService should import all competencies of a course" time="0.005">
    </testcase>
    <testcase classname="CompetencyService should bulk import competencies" name="CompetencyService should bulk import competencies" time="0.012">
    </testcase>
    <testcase classname="CompetencyService should import standardized competencies" name="CompetencyService should import standardized competencies" time="0.007">
    </testcase>
    <testcase classname="CompetencyService should import competency" name="CompetencyService should import competency" time="0.006">
    </testcase>
    <testcase classname="CompetencyService should get competency relations" name="CompetencyService should get competency relations" time="0.004">
    </testcase>
    <testcase classname="CompetencyService should get competencies for import" name="CompetencyService should get competencies for import" time="0.006">
    </testcase>
    <testcase classname="CompetencyService should get courseCompetency titles" name="CompetencyService should get courseCompetency titles" time="0.004">
    </testcase>
    <testcase classname="CompetencyService should convert response from server" name="CompetencyService should convert response from server" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Student Exam Timeline Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:08" time="8.206" tests="15">
    <testcase classname="Student Exam Timeline Component should fetch submission versions and submissions in retrieveSubmissionData" name="Student Exam Timeline Component should fetch submission versions and submissions in retrieveSubmissionData" time="1.539">
    </testcase>
    <testcase classname="Student Exam Timeline Component should fetch submission versions and submissions on init using retrieveSubmissionData" name="Student Exam Timeline Component should fetch submission versions and submissions on init using retrieveSubmissionData" time="0.101">
    </testcase>
    <testcase classname="Student Exam Timeline Component should subscribe to changes in ViewAfterInit" name="Student Exam Timeline Component should subscribe to changes in ViewAfterInit" time="0.128">
    </testcase>
    <testcase classname="Student Exam Timeline Component should correctly set the values onPageChange" name="Student Exam Timeline Component should correctly set the values onPageChange" time="0.1">
    </testcase>
    <testcase classname="Student Exam Timeline Component should correctly set the values onPageChange" name="Student Exam Timeline Component should correctly set the values onPageChange" time="0.073">
    </testcase>
    <testcase classname="Student Exam Timeline Component should correctly set the values onPageChange" name="Student Exam Timeline Component should correctly set the values onPageChange" time="0.108">
    </testcase>
    <testcase classname="Student Exam Timeline Component should correctly set the values onPageChange" name="Student Exam Timeline Component should correctly set the values onPageChange" time="0.104">
    </testcase>
    <testcase classname="Student Exam Timeline Component should correctly set the values onPageChange" name="Student Exam Timeline Component should correctly set the values onPageChange" time="0.077">
    </testcase>
    <testcase classname="Student Exam Timeline Component should correctly set the values onPageChange" name="Student Exam Timeline Component should correctly set the values onPageChange" time="0.106">
    </testcase>
    <testcase classname="Student Exam Timeline Component should correctly set the values onInputChange" name="Student Exam Timeline Component should correctly set the values onInputChange" time="0.127">
    </testcase>
    <testcase classname="Student Exam Timeline Component should correctly set the values onInputChange" name="Student Exam Timeline Component should correctly set the values onInputChange" time="0.106">
    </testcase>
    <testcase classname="Student Exam Timeline Component should correctly set the values onInputChange" name="Student Exam Timeline Component should correctly set the values onInputChange" time="0.085">
    </testcase>
    <testcase classname="Student Exam Timeline Component should correctly determine the previous submission" name="Student Exam Timeline Component should correctly determine the previous submission" time="0.09">
    </testcase>
    <testcase classname="Student Exam Timeline Component should correctly determine the previous submission" name="Student Exam Timeline Component should correctly determine the previous submission" time="0.107">
    </testcase>
    <testcase classname="Student Exam Timeline Component should correctly determine the previous submission" name="Student Exam Timeline Component should correctly determine the previous submission" time="0.086">
    </testcase>
  </testsuite>
  <testsuite name="QuizExamSubmissionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:17" time="3.775" tests="7">
    <testcase classname="QuizExamSubmissionComponent should initialize" name="QuizExamSubmissionComponent should initialize" time="0.802">
    </testcase>
    <testcase classname="QuizExamSubmissionComponent should update view from submission and fill the dictionary accordingly when submitted answer" name="QuizExamSubmissionComponent should update view from submission and fill the dictionary accordingly when submitted answer" time="0.127">
    </testcase>
    <testcase classname="QuizExamSubmissionComponent should set answerOptions/mappings/submitted texts to empty array when not submitted answer" name="QuizExamSubmissionComponent should set answerOptions/mappings/submitted texts to empty array when not submitted answer" time="0.137">
    </testcase>
    <testcase classname="QuizExamSubmissionComponent should trigger navigation towards the corrensponding question of the quiz" name="QuizExamSubmissionComponent should trigger navigation towards the corrensponding question of the quiz" time="0.131">
    </testcase>
    <testcase classname="QuizExamSubmissionComponent should create multiple choice submission from users selection" name="QuizExamSubmissionComponent should create multiple choice submission from users selection" time="0.186">
    </testcase>
    <testcase classname="QuizExamSubmissionComponent should parse the answers from the submission version" name="QuizExamSubmissionComponent should parse the answers from the submission version" time="0.168">
    </testcase>
    <testcase classname="QuizExamSubmissionComponent should call triggerSave if save exercise button is clicked" name="QuizExamSubmissionComponent should call triggerSave if save exercise button is clicked" time="0.159">
    </testcase>
  </testsuite>
  <testsuite name="UpdatingResultComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:17" time="5.156" tests="15">
    <testcase classname="UpdatingResultComponent should not try to subscribe for new results if no participation is provided" name="UpdatingResultComponent should not try to subscribe for new results if no participation is provided" time="0.272">
    </testcase>
    <testcase classname="UpdatingResultComponent should use the newest rated result of the provided participation and subscribe for new results" name="UpdatingResultComponent should use the newest rated result of the provided participation and subscribe for new results" time="0.021">
    </testcase>
    <testcase classname="UpdatingResultComponent should use the newest (un)rated result of the provided participation and subscribe for new results" name="UpdatingResultComponent should use the newest (un)rated result of the provided participation and subscribe for new results" time="0.032">
    </testcase>
    <testcase classname="UpdatingResultComponent should react to rated, but not to unrated results if showUngradedResults is false" name="UpdatingResultComponent should react to rated, but not to unrated results if showUngradedResults is false" time="0.033">
    </testcase>
    <testcase classname="UpdatingResultComponent should react to both rated and unrated results if showUngradedResults is true" name="UpdatingResultComponent should react to both rated and unrated results if showUngradedResults is true" time="0.041">
    </testcase>
    <testcase classname="UpdatingResultComponent should update result and establish new websocket connection on participation change" name="UpdatingResultComponent should update result and establish new websocket connection on participation change" time="0.071">
    </testcase>
    <testcase classname="UpdatingResultComponent should subscribe to fetching the latest pending submission when the exerciseType is PROGRAMMING" name="UpdatingResultComponent should subscribe to fetching the latest pending submission when the exerciseType is PROGRAMMING" time="0.062">
    </testcase>
    <testcase classname="UpdatingResultComponent should set the isBuilding attribute to true if exerciseType is PROGRAMMING and there is a latest pending submission" name="UpdatingResultComponent should set the isBuilding attribute to true if exerciseType is PROGRAMMING and there is a latest pending submission" time="0.048">
    </testcase>
    <testcase classname="UpdatingResultComponent should set the isBuilding attribute to false if exerciseType is PROGRAMMING and there is no pending submission anymore" name="UpdatingResultComponent should set the isBuilding attribute to false if exerciseType is PROGRAMMING and there is no pending submission anymore" time="0.043">
    </testcase>
    <testcase classname="UpdatingResultComponent should set missingResultInfo attribute if the exerciseType is PROGRAMMING and the latest submission failed (offline IDE)" name="UpdatingResultComponent should set missingResultInfo attribute if the exerciseType is PROGRAMMING and the latest submission failed (offline IDE)" time="0.088">
    </testcase>
    <testcase classname="UpdatingResultComponent should set missingResultInfo attribute if the exerciseType is PROGRAMMING and the latest submission failed (online IDE)" name="UpdatingResultComponent should set missingResultInfo attribute if the exerciseType is PROGRAMMING and the latest submission failed (online IDE)" time="0.058">
    </testcase>
    <testcase classname="UpdatingResultComponent should not set the isBuilding attribute to true if the exerciseType is not PROGRAMMING" name="UpdatingResultComponent should not set the isBuilding attribute to true if the exerciseType is not PROGRAMMING" time="0.056">
    </testcase>
    <testcase classname="UpdatingResultComponent should update the building status if the submission was before the due date" name="UpdatingResultComponent should update the building status if the submission was before the due date" time="0.042">
    </testcase>
    <testcase classname="UpdatingResultComponent should not update the building status if the submission was after the due date" name="UpdatingResultComponent should not update the building status if the submission was after the due date" time="0.053">
    </testcase>
    <testcase classname="UpdatingResultComponent should set the isQueue and isBuilding attribute to true with correct timing" name="UpdatingResultComponent should set the isQueue and isBuilding attribute to true with correct timing" time="0.081">
    </testcase>
  </testsuite>
  <testsuite name="RepositoryViewComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:17" time="5.054" tests="9">
    <testcase classname="RepositoryViewComponent should create" name="RepositoryViewComponent should create" time="0.825">
    </testcase>
    <testcase classname="RepositoryViewComponent should load participation for TEMPLATE repository type" name="RepositoryViewComponent should load participation for TEMPLATE repository type" time="0.023">
    </testcase>
    <testcase classname="RepositoryViewComponent should load participation for SOLUTION repository type" name="RepositoryViewComponent should load participation for SOLUTION repository type" time="0.022">
    </testcase>
    <testcase classname="RepositoryViewComponent should load participation for TESTS repository type" name="RepositoryViewComponent should load participation for TESTS repository type" time="0.044">
    </testcase>
    <testcase classname="RepositoryViewComponent should load AUXILIARY repository type" name="RepositoryViewComponent should load AUXILIARY repository type" time="0.071">
    </testcase>
    <testcase classname="RepositoryViewComponent should handle unknown repository type" name="RepositoryViewComponent should handle unknown repository type" time="0.026">
    </testcase>
    <testcase classname="RepositoryViewComponent should load student participation" name="RepositoryViewComponent should load student participation" time="0.014">
    </testcase>
    <testcase classname="RepositoryViewComponent should handle error when loading participation" name="RepositoryViewComponent should handle error when loading participation" time="0.019">
    </testcase>
    <testcase classname="RepositoryViewComponent should handle error when loading exercise" name="RepositoryViewComponent should handle error when loading exercise" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="BuildAgentDetailsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:16" time="5.849" tests="15">
    <testcase classname="BuildAgentDetailsComponent should load build agents on initialization" name="BuildAgentDetailsComponent should load build agents on initialization" time="0.95">
    </testcase>
    <testcase classname="BuildAgentDetailsComponent should initialize websocket subscription on initialization" name="BuildAgentDetailsComponent should initialize websocket subscription on initialization" time="0.02">
    </testcase>
    <testcase classname="BuildAgentDetailsComponent should unsubscribe from the websocket channel on destruction" name="BuildAgentDetailsComponent should unsubscribe from the websocket channel on destruction" time="0.012">
    </testcase>
    <testcase classname="BuildAgentDetailsComponent should cancel a build job" name="BuildAgentDetailsComponent should cancel a build job" time="0.011">
    </testcase>
    <testcase classname="BuildAgentDetailsComponent should cancel all build jobs of a build agent" name="BuildAgentDetailsComponent should cancel all build jobs of a build agent" time="0.022">
    </testcase>
    <testcase classname="BuildAgentDetailsComponent should show an alert when pausing build agent without a name" name="BuildAgentDetailsComponent should show an alert when pausing build agent without a name" time="0.032">
    </testcase>
    <testcase classname="BuildAgentDetailsComponent should show an alert when resuming build agent without a name" name="BuildAgentDetailsComponent should show an alert when resuming build agent without a name" time="0.059">
    </testcase>
    <testcase classname="BuildAgentDetailsComponent should show success alert when pausing build agent" name="BuildAgentDetailsComponent should show success alert when pausing build agent" time="0.017">
    </testcase>
    <testcase classname="BuildAgentDetailsComponent should show error alert when pausing build agent fails" name="BuildAgentDetailsComponent should show error alert when pausing build agent fails" time="0.022">
    </testcase>
    <testcase classname="BuildAgentDetailsComponent should show success alert when resuming build agent" name="BuildAgentDetailsComponent should show success alert when resuming build agent" time="0.026">
    </testcase>
    <testcase classname="BuildAgentDetailsComponent should show error alert when resuming build agent fails" name="BuildAgentDetailsComponent should show error alert when resuming build agent fails" time="0.018">
    </testcase>
    <testcase classname="BuildAgentDetailsComponent should trigger refresh on search term change" name="BuildAgentDetailsComponent should trigger refresh on search term change" time="0.121">
    </testcase>
    <testcase classname="BuildAgentDetailsComponent should set build job duration" name="BuildAgentDetailsComponent should set build job duration" time="0.017">
    </testcase>
    <testcase classname="BuildAgentDetailsComponent should correctly set filterModal values" name="BuildAgentDetailsComponent should correctly set filterModal values" time="0.013">
    </testcase>
    <testcase classname="BuildAgentDetailsComponent should correctly open build log" name="BuildAgentDetailsComponent should correctly open build log" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="QuizExercise Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:22" time="1.373" tests="37">
    <testcase classname="QuizExercise Service should find an element" name="QuizExercise Service should find an element" time="0.016">
    </testcase>
    <testcase classname="QuizExercise Service should create a QuizExercise" name="QuizExercise Service should create a QuizExercise" time="0.009">
    </testcase>
    <testcase classname="QuizExercise Service should import a QuizExercise" name="QuizExercise Service should import a QuizExercise" time="0.009">
    </testcase>
    <testcase classname="QuizExercise Service should update a QuizExercise" name="QuizExercise Service should update a QuizExercise" time="0.024">
    </testcase>
    <testcase classname="QuizExercise Service should return a list of QuizExercise" name="QuizExercise Service should return a list of QuizExercise" time="0.006">
    </testcase>
    <testcase classname="QuizExercise Service should perform a http request for &quot;delete&quot;" name="QuizExercise Service should perform a http request for &quot;delete&quot;" time="0.007">
    </testcase>
    <testcase classname="QuizExercise Service should perform a http request for &quot;join&quot;" name="QuizExercise Service should perform a http request for &quot;join&quot;" time="0.006">
    </testcase>
    <testcase classname="QuizExercise Service should perform a http request for &quot;addBatch&quot;" name="QuizExercise Service should perform a http request for &quot;addBatch&quot;" time="0.007">
    </testcase>
    <testcase classname="QuizExercise Service should perform a http request for &quot;startBatch&quot;" name="QuizExercise Service should perform a http request for &quot;startBatch&quot;" time="0.006">
    </testcase>
    <testcase classname="QuizExercise Service should perform a http request for &quot;setVisible&quot;" name="QuizExercise Service should perform a http request for &quot;setVisible&quot;" time="0.006">
    </testcase>
    <testcase classname="QuizExercise Service should perform a http request for &quot;end&quot;" name="QuizExercise Service should perform a http request for &quot;end&quot;" time="0.006">
    </testcase>
    <testcase classname="QuizExercise Service should perform a http request for &quot;start&quot;" name="QuizExercise Service should perform a http request for &quot;start&quot;" time="0.011">
    </testcase>
    <testcase classname="QuizExercise Service should perform a http request for &quot;openForPractice&quot;" name="QuizExercise Service should perform a http request for &quot;openForPractice&quot;" time="0.009">
    </testcase>
    <testcase classname="QuizExercise Service should perform a http request for &quot;findForStudent&quot;" name="QuizExercise Service should perform a http request for &quot;findForStudent&quot;" time="0.005">
    </testcase>
    <testcase classname="QuizExercise Service should perform a http request for &quot;findForExam&quot;" name="QuizExercise Service should perform a http request for &quot;findForExam&quot;" time="0.004">
    </testcase>
    <testcase classname="QuizExercise Service should perform a http request for &quot;findForCourse&quot;" name="QuizExercise Service should perform a http request for &quot;findForCourse&quot;" time="0.008">
    </testcase>
    <testcase classname="QuizExercise Service should perform a http request for &quot;recalculate&quot;" name="QuizExercise Service should perform a http request for &quot;recalculate&quot;" time="0.03">
    </testcase>
    <testcase classname="QuizExercise Service should perform a http request for &quot;find&quot;" name="QuizExercise Service should perform a http request for &quot;find&quot;" time="0.005">
    </testcase>
    <testcase classname="QuizExercise Service should get status 4" name="QuizExercise Service should get status 4" time="0.004">
    </testcase>
    <testcase classname="QuizExercise Service should get status 3" name="QuizExercise Service should get status 3" time="0.003">
    </testcase>
    <testcase classname="QuizExercise Service should get status 0" name="QuizExercise Service should get status 0" time="0.006">
    </testcase>
    <testcase classname="QuizExercise Service should get status 1" name="QuizExercise Service should get status 1" time="0.004">
    </testcase>
    <testcase classname="QuizExercise Service should get status 2" name="QuizExercise Service should get status 2" time="0.008">
    </testcase>
    <testcase classname="QuizExercise Service should export a quiz with no assets as json (0)" name="QuizExercise Service should export a quiz with no assets as json (0)" time="0.003">
    </testcase>
    <testcase classname="QuizExercise Service should export a quiz with no assets as json (1)" name="QuizExercise Service should export a quiz with no assets as json (1)" time="0.005">
    </testcase>
    <testcase classname="QuizExercise Service should export a quiz with no assets as json (2)" name="QuizExercise Service should export a quiz with no assets as json (2)" time="0.004">
    </testcase>
    <testcase classname="QuizExercise Service should export a quiz with no assets as json (3)" name="QuizExercise Service should export a quiz with no assets as json (3)" time="0.003">
    </testcase>
    <testcase classname="QuizExercise Service should export a quiz with no assets as json (4)" name="QuizExercise Service should export a quiz with no assets as json (4)" time="0.028">
    </testcase>
    <testcase classname="QuizExercise Service should export a quiz with no assets as json (5)" name="QuizExercise Service should export a quiz with no assets as json (5)" time="0.005">
    </testcase>
    <testcase classname="QuizExercise Service should export a quiz with no assets as json (6)" name="QuizExercise Service should export a quiz with no assets as json (6)" time="0.004">
    </testcase>
    <testcase classname="QuizExercise Service should export a quiz with no assets as json (7)" name="QuizExercise Service should export a quiz with no assets as json (7)" time="0.004">
    </testcase>
    <testcase classname="QuizExercise Service should fetch correct image names and paths from drag and drop questions" name="QuizExercise Service should fetch correct image names and paths from drag and drop questions" time="0.015">
    </testcase>
    <testcase classname="QuizExercise Service should handle markdown without images" name="QuizExercise Service should handle markdown without images" time="0.004">
    </testcase>
    <testcase classname="QuizExercise Service should export images from multiple choice options" name="QuizExercise Service should export images from multiple choice options" time="0.016">
    </testcase>
    <testcase classname="QuizExercise Service should export images from short answer questions" name="QuizExercise Service should export images from short answer questions" time="0.007">
    </testcase>
    <testcase classname="QuizExercise Service should not try to fetch files if there are no images to export" name="QuizExercise Service should not try to fetch files if there are no images to export" time="0.007">
    </testcase>
    <testcase classname="QuizExercise Service should throw an error if file fails to fetch" name="QuizExercise Service should throw an error if file fails to fetch" time="0.061">
    </testcase>
  </testsuite>
  <testsuite name="GuidedTourComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:22" time="4.862" tests="20">
    <testcase classname="GuidedTourComponent should subscribe to events on after init" name="GuidedTourComponent should subscribe to events on after init" time="0.493">
    </testcase>
    <testcase classname="GuidedTourComponent should handle user permissions" name="GuidedTourComponent should handle user permissions" time="0.175">
    </testcase>
    <testcase classname="GuidedTourComponent Keydown Element should highlight dots" name="GuidedTourComponent Keydown Element should highlight dots" time="0.207">
    </testcase>
    <testcase classname="GuidedTourComponent Keydown Element should not trigger the guided tour with the right arrow key" name="GuidedTourComponent Keydown Element should not trigger the guided tour with the right arrow key" time="0.193">
    </testcase>
    <testcase classname="GuidedTourComponent Keydown Element should navigate next with the right arrow key" name="GuidedTourComponent Keydown Element should navigate next with the right arrow key" time="0.203">
    </testcase>
    <testcase classname="GuidedTourComponent Keydown Element should navigate back with the left arrow key" name="GuidedTourComponent Keydown Element should navigate back with the left arrow key" time="0.257">
    </testcase>
    <testcase classname="GuidedTourComponent Keydown Element should skip the tour with the escape key" name="GuidedTourComponent Keydown Element should skip the tour with the escape key" time="0.146">
    </testcase>
    <testcase classname="GuidedTourComponent Keydown Element should not skip but finish the cancel tour with the escape key" name="GuidedTourComponent Keydown Element should not skip but finish the cancel tour with the escape key" time="0.164">
    </testcase>
    <testcase classname="GuidedTourComponent Guided Tour Step should determine if the tour step has bottom orientation" name="GuidedTourComponent Guided Tour Step should determine if the tour step has bottom orientation" time="0.136">
    </testcase>
    <testcase classname="GuidedTourComponent Guided Tour Step should determine the highlight padding of the tour step" name="GuidedTourComponent Guided Tour Step should determine the highlight padding of the tour step" time="0.147">
    </testcase>
    <testcase classname="GuidedTourComponent Guided Tour Step should calculate the top position of the tour step" name="GuidedTourComponent Guided Tour Step should calculate the top position of the tour step" time="0.129">
    </testcase>
    <testcase classname="GuidedTourComponent Guided Tour Step should calculate the left position of the tour step" name="GuidedTourComponent Guided Tour Step should calculate the left position of the tour step" time="0.125">
    </testcase>
    <testcase classname="GuidedTourComponent Guided Tour Step should calculate the width of the tour step" name="GuidedTourComponent Guided Tour Step should calculate the width of the tour step" time="0.154">
    </testcase>
    <testcase classname="GuidedTourComponent Guided Tour Step should apply the right transformation" name="GuidedTourComponent Guided Tour Step should apply the right transformation" time="0.126">
    </testcase>
    <testcase classname="GuidedTourComponent Guided Tour Step should calculate the right max width adjustment" name="GuidedTourComponent Guided Tour Step should calculate the right max width adjustment" time="0.128">
    </testcase>
    <testcase classname="GuidedTourComponent Guided Tour Step should calculate the left position of the highlighted element" name="GuidedTourComponent Guided Tour Step should calculate the left position of the highlighted element" time="0.109">
    </testcase>
    <testcase classname="GuidedTourComponent Guided Tour Step should adjust the width for screen bound" name="GuidedTourComponent Guided Tour Step should adjust the width for screen bound" time="0.099">
    </testcase>
    <testcase classname="GuidedTourComponent Guided Tour Step should calculate the right style for the overlays" name="GuidedTourComponent Guided Tour Step should calculate the right style for the overlays" time="0.121">
    </testcase>
    <testcase classname="GuidedTourComponent Guided Tour Step should initiate flip orientation" name="GuidedTourComponent Guided Tour Step should initiate flip orientation" time="0.084">
    </testcase>
    <testcase classname="GuidedTourComponent Guided Tour Step should flip orientation" name="GuidedTourComponent Guided Tour Step should flip orientation" time="0.098">
    </testcase>
  </testsuite>
  <testsuite name="ExamResultOverviewComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:24" time="3.961" tests="13">
    <testcase classname="ExamResultOverviewComponent should handle error correctly" name="ExamResultOverviewComponent should handle error correctly" time="0.347">
    </testcase>
    <testcase classname="ExamResultOverviewComponent should retrieve exam grade correctly" name="ExamResultOverviewComponent should retrieve exam grade correctly" time="0.17">
    </testcase>
    <testcase classname="ExamResultOverviewComponent should initialize and calculate scores correctly" name="ExamResultOverviewComponent should initialize and calculate scores correctly" time="0.134">
    </testcase>
    <testcase classname="ExamResultOverviewComponent should display 0 if no exercises are present" name="ExamResultOverviewComponent should display 0 if no exercises are present" time="0.088">
    </testcase>
    <testcase classname="ExamResultOverviewComponent should evaluate showIncludedInScoreColumn to false if all exercises are included in the score" name="ExamResultOverviewComponent should evaluate showIncludedInScoreColumn to false if all exercises are included in the score" time="0.101">
    </testcase>
    <testcase classname="ExamResultOverviewComponent should evaluate showIncludedInScoreColumn to true if exercise is excluded" name="ExamResultOverviewComponent should evaluate showIncludedInScoreColumn to true if exercise is excluded" time="0.093">
    </testcase>
    <testcase classname="ExamResultOverviewComponent should evaluate showIncludedInScoreColumn to true if bonus exercise is included" name="ExamResultOverviewComponent should evaluate showIncludedInScoreColumn to true if bonus exercise is included" time="0.097">
    </testcase>
    <testcase classname="ExamResultOverviewComponent scrollToExercise should scroll to the target exercise dom element" name="ExamResultOverviewComponent scrollToExercise should scroll to the target exercise dom element" time="0.077">
    </testcase>
    <testcase classname="ExamResultOverviewComponent scrollToExercise should log an error when the target exercise dom element does not exist" name="ExamResultOverviewComponent scrollToExercise should log an error when the target exercise dom element does not exist" time="0.089">
    </testcase>
    <testcase classname="ExamResultOverviewComponent scrollToExercise should return immediately when exerciseId is undefined" name="ExamResultOverviewComponent scrollToExercise should return immediately when exerciseId is undefined" time="0.082">
    </testcase>
    <testcase classname="ExamResultOverviewComponent summedAchievedExerciseScorePercentage should be called when overallScoreAchieved is not defined in DTO from server" name="ExamResultOverviewComponent summedAchievedExerciseScorePercentage should be called when overallScoreAchieved is not defined in DTO from server" time="0.061">
    </testcase>
    <testcase classname="ExamResultOverviewComponent summedAchievedExerciseScorePercentage should be called when overallScoreAchieved is 0 (default value, might be set as initial value because not defined from server DTO)" name="ExamResultOverviewComponent summedAchievedExerciseScorePercentage should be called when overallScoreAchieved is 0 (default value, might be set as initial value because not defined from server DTO)" time="0.092">
    </testcase>
    <testcase classname="ExamResultOverviewComponent summedAchievedExerciseScorePercentage should calculate achieved percentage from exercise info properly" name="ExamResultOverviewComponent summedAchievedExerciseScorePercentage should calculate achieved percentage from exercise info properly" time="0.136">
    </testcase>
  </testsuite>
  <testsuite name="TextExercise Management Update Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:21" time="6.572" tests="14">
    <testcase classname="TextExercise Management Update Component save existing exercise should call update service on save for existing entity" name="TextExercise Management Update Component save existing exercise should call update service on save for existing entity" time="0.932">
    </testcase>
    <testcase classname="TextExercise Management Update Component save existing exercise should error during save" name="TextExercise Management Update Component save existing exercise should error during save" time="0.038">
    </testcase>
    <testcase classname="TextExercise Management Update Component save new exercise should call create service on save for new entity" name="TextExercise Management Update Component save new exercise should call create service on save for new entity" time="0.052">
    </testcase>
    <testcase classname="TextExercise Management Update Component save imported exercise should call import service on save for new entity" name="TextExercise Management Update Component save imported exercise should call import service on save for new entity" time="0.078">
    </testcase>
    <testcase classname="TextExercise Management Update Component exam exercise should be in exam mode" name="TextExercise Management Update Component exam exercise should be in exam mode" time="0.05">
    </testcase>
    <testcase classname="TextExercise Management Update Component exam exercise should not set dateErrors" name="TextExercise Management Update Component exam exercise should not set dateErrors" time="0.042">
    </testcase>
    <testcase classname="TextExercise Management Update Component ngOnInit for course exercise should not be in exam mode" name="TextExercise Management Update Component ngOnInit for course exercise should not be in exam mode" time="0.027">
    </testcase>
    <testcase classname="TextExercise Management Update Component ngOnInit for course exercise should calculate valid sections" name="TextExercise Management Update Component ngOnInit for course exercise should calculate valid sections" time="0.059">
    </testcase>
    <testcase classname="TextExercise Management Update Component ngOnInit in import mode: Course to Course should set isImport and remove all dates" name="TextExercise Management Update Component ngOnInit in import mode: Course to Course should set isImport and remove all dates" time="0.051">
    </testcase>
    <testcase classname="TextExercise Management Update Component ngOnInit in import mode: Course to Course should load exercise categories" name="TextExercise Management Update Component ngOnInit in import mode: Course to Course should load exercise categories" time="0.04">
    </testcase>
    <testcase classname="TextExercise Management Update Component ngOnInit in import mode: Exam to Course should set isImport and remove all dates" name="TextExercise Management Update Component ngOnInit in import mode: Exam to Course should set isImport and remove all dates" time="0.04">
    </testcase>
    <testcase classname="TextExercise Management Update Component ngOnInit in import mode: Course to Exam should set isImport and isExamMode and remove all dates" name="TextExercise Management Update Component ngOnInit in import mode: Course to Exam should set isImport and isExamMode and remove all dates" time="0.067">
    </testcase>
    <testcase classname="TextExercise Management Update Component ngOnInit in import mode: Exam to Exam should set isImport and isExamMode and remove all dates" name="TextExercise Management Update Component ngOnInit in import mode: Exam to Exam should set isImport and isExamMode and remove all dates" time="0.048">
    </testcase>
    <testcase classname="TextExercise Management Update Component should updateCategories properly by making category available for selection again when removing it" name="TextExercise Management Update Component should updateCategories properly by making category available for selection again when removing it" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="ChartCategoryFilter" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:27" time="2.067" tests="4">
    <testcase classname="ChartCategoryFilter should deselect and select all categories" name="ChartCategoryFilter should deselect and select all categories" time="0.049">
    </testcase>
    <testcase classname="ChartCategoryFilter should switch filter categories correctly" name="ChartCategoryFilter should switch filter categories correctly" time="0.009">
    </testcase>
    <testcase classname="ChartCategoryFilter should handle manual reselection of all categories correctly" name="ChartCategoryFilter should handle manual reselection of all categories correctly" time="0.009">
    </testcase>
    <testcase classname="ChartCategoryFilter should display an exercise with multiple categories unless both are deselected" name="ChartCategoryFilter should display an exercise with multiple categories unless both are deselected" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="ModelingExerciseUpdateComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:23" time="7.102" tests="12">
    <testcase classname="ModelingExerciseUpdateComponent save new exercise should call create service on save for new entity" name="ModelingExerciseUpdateComponent save new exercise should call create service on save for new entity" time="1.261">
    </testcase>
    <testcase classname="ModelingExerciseUpdateComponent save existing exercise should call update service on save for existing entity" name="ModelingExerciseUpdateComponent save existing exercise should call update service on save for existing entity" time="0.089">
    </testcase>
    <testcase classname="ModelingExerciseUpdateComponent ngOnInit in import mode: Course to Course should set isImport and remove all dates" name="ModelingExerciseUpdateComponent ngOnInit in import mode: Course to Course should set isImport and remove all dates" time="0.048">
    </testcase>
    <testcase classname="ModelingExerciseUpdateComponent ngOnInit in import mode: Course to Course should load exercise categories" name="ModelingExerciseUpdateComponent ngOnInit in import mode: Course to Course should load exercise categories" time="0.048">
    </testcase>
    <testcase classname="ModelingExerciseUpdateComponent ngOnInit in import mode: Exam to Course should set isImport and remove all dates" name="ModelingExerciseUpdateComponent ngOnInit in import mode: Exam to Course should set isImport and remove all dates" time="0.084">
    </testcase>
    <testcase classname="ModelingExerciseUpdateComponent ngOnInit in import mode: Course to Exam should set isImport and isExamMode and remove all dates" name="ModelingExerciseUpdateComponent ngOnInit in import mode: Course to Exam should set isImport and isExamMode and remove all dates" time="0.049">
    </testcase>
    <testcase classname="ModelingExerciseUpdateComponent ngOnInit in import mode: Exam to Exam should set isImport and isExamMode and remove all dates" name="ModelingExerciseUpdateComponent ngOnInit in import mode: Exam to Exam should set isImport and isExamMode and remove all dates" time="0.068">
    </testcase>
    <testcase classname="ModelingExerciseUpdateComponent should update categories with given ones" name="ModelingExerciseUpdateComponent should update categories with given ones" time="0.044">
    </testcase>
    <testcase classname="ModelingExerciseUpdateComponent should call exercise service to validate date" name="ModelingExerciseUpdateComponent should call exercise service to validate date" time="0.066">
    </testcase>
    <testcase classname="ModelingExerciseUpdateComponent should set assessmentType to manual in exam mode" name="ModelingExerciseUpdateComponent should set assessmentType to manual in exam mode" time="0.029">
    </testcase>
    <testcase classname="ModelingExerciseUpdateComponent should updateCategories properly by making category available for selection again when removing it" name="ModelingExerciseUpdateComponent should updateCategories properly by making category available for selection again when removing it" time="0.026">
    </testcase>
    <testcase classname="ModelingExerciseUpdateComponent should subscribe and unsubscribe to input element changes" name="ModelingExerciseUpdateComponent should subscribe and unsubscribe to input element changes" time="0.036">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:28" time="3.109" tests="13">
    <testcase classname="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should display checkout directories when they exist" name="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should display checkout directories when they exist" time="0.155">
    </testcase>
    <testcase classname="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should send request if localCI is used" name="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should send request if localCI is used" time="0.073">
    </testcase>
    <testcase classname="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should NOT send request if localCI is NOT used" name="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should NOT send request if localCI is NOT used" time="0.097">
    </testcase>
    <testcase classname="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should display checkoutDirectory preview if localCI is used" name="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should display checkoutDirectory preview if localCI is used" time="0.053">
    </testcase>
    <testcase classname="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should NOT display checkoutDirectory preview if localCI is NOT used" name="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should NOT display checkoutDirectory preview if localCI is NOT used" time="0.079">
    </testcase>
    <testcase classname="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should update auxiliary checkout repository directories" name="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should update auxiliary checkout repository directories" time="0.089">
    </testcase>
    <testcase classname="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should unsubscribe from programmingExerciseServiceSubscription on destroy" name="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should unsubscribe from programmingExerciseServiceSubscription on destroy" time="0.05">
    </testcase>
    <testcase classname="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should update checkout directories when selectedProgrammingLanguage changes" name="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should update checkout directories when selectedProgrammingLanguage changes" time="0.048">
    </testcase>
    <testcase classname="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should update checkout directories when checkoutSolution flag changes" name="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should update checkout directories when checkoutSolution flag changes" time="0.086">
    </testcase>
    <testcase classname="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should not call service without language" name="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should not call service without language" time="0.05">
    </testcase>
    <testcase classname="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should not call service when inEdit and build config is available" name="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should not call service when inEdit and build config is available" time="0.059">
    </testcase>
    <testcase classname="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should update auxiliary repository directories on changes" name="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should update auxiliary repository directories on changes" time="0.062">
    </testcase>
    <testcase classname="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should update component when buildconfig was changed" name="ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent should update component when buildconfig was changed" time="0.098">
    </testcase>
  </testsuite>
  <testsuite name="UserManagementUpdateComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:29" time="3.516" tests="17">
    <testcase classname="UserManagementUpdateComponent onInit should load authorities and language on init" name="UserManagementUpdateComponent onInit should load authorities and language on init" time="0.237">
    </testcase>
    <testcase classname="UserManagementUpdateComponent onInit should load available languages" name="UserManagementUpdateComponent onInit should load available languages" time="0.044">
    </testcase>
    <testcase classname="UserManagementUpdateComponent onInit should return current language" name="UserManagementUpdateComponent onInit should return current language" time="0.084">
    </testcase>
    <testcase classname="UserManagementUpdateComponent onInit should set page title based on router snapshot" name="UserManagementUpdateComponent onInit should set page title based on router snapshot" time="0.042">
    </testcase>
    <testcase classname="UserManagementUpdateComponent onInit should set page title to default" name="UserManagementUpdateComponent onInit should set page title to default" time="0.056">
    </testcase>
    <testcase classname="UserManagementUpdateComponent onInit should capture exception if title translation not found" name="UserManagementUpdateComponent onInit should capture exception if title translation not found" time="0.089">
    </testcase>
    <testcase classname="UserManagementUpdateComponent onInit foo" name="UserManagementUpdateComponent onInit foo" time="0.028">
    </testcase>
    <testcase classname="UserManagementUpdateComponent save should call update service on save for existing user" name="UserManagementUpdateComponent save should call update service on save for existing user" time="0.032">
    </testcase>
    <testcase classname="UserManagementUpdateComponent save should call create service on save for new user" name="UserManagementUpdateComponent save should call create service on save for new user" time="0.063">
    </testcase>
    <testcase classname="UserManagementUpdateComponent should set saving to false on save error" name="UserManagementUpdateComponent should set saving to false on save error" time="0.067">
    </testcase>
    <testcase classname="UserManagementUpdateComponent should set password to undefined if random password should be used" name="UserManagementUpdateComponent should set password to undefined if random password should be used" time="0.05">
    </testcase>
    <testcase classname="UserManagementUpdateComponent should open organizations modal" name="UserManagementUpdateComponent should open organizations modal" time="0.036">
    </testcase>
    <testcase classname="UserManagementUpdateComponent should remove organization from user" name="UserManagementUpdateComponent should remove organization from user" time="0.066">
    </testcase>
    <testcase classname="UserManagementUpdateComponent should add the selected group from autocomplete panel to user" name="UserManagementUpdateComponent should add the selected group from autocomplete panel to user" time="0.047">
    </testcase>
    <testcase classname="UserManagementUpdateComponent should add group to user" name="UserManagementUpdateComponent should add group to user" time="0.024">
    </testcase>
    <testcase classname="UserManagementUpdateComponent should not add groups to user" name="UserManagementUpdateComponent should not add groups to user" time="0.026">
    </testcase>
    <testcase classname="UserManagementUpdateComponent should remove group from user" name="UserManagementUpdateComponent should remove group from user" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="ParticipationWebsocketService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:33" time="1.162" tests="10">
    <testcase classname="ParticipationWebsocketService should setup a result subscriptions with the websocket service on subscribeForLatestResult for instructors" name="ParticipationWebsocketService should setup a result subscriptions with the websocket service on subscribeForLatestResult for instructors" time="0.01">
    </testcase>
    <testcase classname="ParticipationWebsocketService should setup a result subscriptions with the websocket service on subscribeForLatestResult for students" name="ParticipationWebsocketService should setup a result subscriptions with the websocket service on subscribeForLatestResult for students" time="0.006">
    </testcase>
    <testcase classname="ParticipationWebsocketService should emit rated result when received through websocket" name="ParticipationWebsocketService should emit rated result when received through websocket" time="0.004">
    </testcase>
    <testcase classname="ParticipationWebsocketService should emit unrated result received through websocket" name="ParticipationWebsocketService should emit unrated result received through websocket" time="0.004">
    </testcase>
    <testcase classname="ParticipationWebsocketService should also emit participation update with new result when new rated result arrives through websocket" name="ParticipationWebsocketService should also emit participation update with new result when new rated result arrives through websocket" time="0.009">
    </testcase>
    <testcase classname="ParticipationWebsocketService should emit participation update with new result when unrated result arrives through websocket" name="ParticipationWebsocketService should emit participation update with new result when unrated result arrives through websocket" time="0.005">
    </testcase>
    <testcase classname="ParticipationWebsocketService should attach the result to right participation if multiple participations are cached" name="ParticipationWebsocketService should attach the result to right participation if multiple participations are cached" time="0.005">
    </testcase>
    <testcase classname="ParticipationWebsocketService should attach the result to participation if the participation has undefined for results value" name="ParticipationWebsocketService should attach the result to participation if the participation has undefined for results value" time="0.024">
    </testcase>
    <testcase classname="ParticipationWebsocketService should reset the local cache" name="ParticipationWebsocketService should reset the local cache" time="0.005">
    </testcase>
    <testcase classname="ParticipationWebsocketService should return the cached participation after adding it" name="ParticipationWebsocketService should return the cached participation after adding it" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="CodeEditorStudentIntegration" errors="0" failures="0" skipped="1" timestamp="2025-03-31T11:16:28" time="6.372" tests="3">
    <testcase classname="CodeEditorStudentIntegration should initialize correctly on route change if participation can be retrieved" name="CodeEditorStudentIntegration should initialize correctly on route change if participation can be retrieved" time="1.108">
    </testcase>
    <testcase classname="CodeEditorStudentIntegration should show the repository locked badge and disable the editor actions if the participation is locked" name="CodeEditorStudentIntegration should show the repository locked badge and disable the editor actions if the participation is locked" time="0">
      <skipped/>
    </testcase>
    <testcase classname="CodeEditorStudentIntegration should abort initialization and show error state if participation cannot be retrieved" name="CodeEditorStudentIntegration should abort initialization and show error state if participation cannot be retrieved" time="0.178">
    </testcase>
  </testsuite>
  <testsuite name="UsersImportDialogComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:30" time="4.337" tests="16">
    <testcase classname="UsersImportDialogComponent should reset dialog when selecting csv file" name="UsersImportDialogComponent should reset dialog when selecting csv file" time="0.399">
    </testcase>
    <testcase classname="UsersImportDialogComponent should read no students from csv file" name="UsersImportDialogComponent should read no students from csv file" time="0.146">
    </testcase>
    <testcase classname="UsersImportDialogComponent should read students from csv file" name="UsersImportDialogComponent should read students from csv file" time="0.171">
    </testcase>
    <testcase classname="UsersImportDialogComponent should have validation error for invalid csv" name="UsersImportDialogComponent should have validation error for invalid csv" time="0.133">
    </testcase>
    <testcase classname="UsersImportDialogComponent should import students" name="UsersImportDialogComponent should import students" time="0.138">
    </testcase>
    <testcase classname="UsersImportDialogComponent should read students from csv files reading from TUMonlineCourseExport.csv" name="UsersImportDialogComponent should read students from csv files reading from TUMonlineCourseExport.csv" time="0.17">
    </testcase>
    <testcase classname="UsersImportDialogComponent should read students from csv files reading from TUMonlineExamExport.csv" name="UsersImportDialogComponent should read students from csv files reading from TUMonlineExamExport.csv" time="0.149">
    </testcase>
    <testcase classname="UsersImportDialogComponent should read students from csv files reading from UserImportSampleFile_1.csv" name="UsersImportDialogComponent should read students from csv files reading from UserImportSampleFile_1.csv" time="0.143">
    </testcase>
    <testcase classname="UsersImportDialogComponent should read students from csv files reading from UserImportSampleFile_2.csv" name="UsersImportDialogComponent should read students from csv files reading from UserImportSampleFile_2.csv" time="0.142">
    </testcase>
    <testcase classname="UsersImportDialogComponent should read students from csv files reading from UserImportSampleFile_3.csv" name="UsersImportDialogComponent should read students from csv files reading from UserImportSampleFile_3.csv" time="0.128">
    </testcase>
    <testcase classname="UsersImportDialogComponent should read students from csv files reading from UserImportSampleFile_4.csv" name="UsersImportDialogComponent should read students from csv files reading from UserImportSampleFile_4.csv" time="0.128">
    </testcase>
    <testcase classname="UsersImportDialogComponent should read students from csv with email only" name="UsersImportDialogComponent should read students from csv with email only" time="0.115">
    </testcase>
    <testcase classname="UsersImportDialogComponent should read students from csv with room/seat information" name="UsersImportDialogComponent should read students from csv with room/seat information" time="0.096">
    </testcase>
    <testcase classname="UsersImportDialogComponent should compute invalid student entries" name="UsersImportDialogComponent should compute invalid student entries" time="0.119">
    </testcase>
    <testcase classname="UsersImportDialogComponent should import correctly" name="UsersImportDialogComponent should import correctly" time="0.102">
    </testcase>
    <testcase classname="UsersImportDialogComponent should invoke REST call on &quot;Import&quot; but not on &quot;Finish&quot;" name="UsersImportDialogComponent should invoke REST call on &quot;Import&quot; but not on &quot;Finish&quot;" time="0.192">
    </testcase>
  </testsuite>
  <testsuite name="TutorialFreePeriodFormComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:31" time="4.15" tests="16">
    <testcase classname="TutorialFreePeriodFormComponent should initialize" name="TutorialFreePeriodFormComponent should initialize" time="0.257">
    </testcase>
    <testcase classname="TutorialFreePeriodFormComponent should correctly set timeFrame in edit mode for freeDay" name="TutorialFreePeriodFormComponent should correctly set timeFrame in edit mode for freeDay" time="0.168">
    </testcase>
    <testcase classname="TutorialFreePeriodFormComponent should correctly set form values and timeFrame in edit mode for freePeriod" name="TutorialFreePeriodFormComponent should correctly set form values and timeFrame in edit mode for freePeriod" time="0.255">
    </testcase>
    <testcase classname="TutorialFreePeriodFormComponent should correctly set form values and timeFrame in edit mode for freePeriodWithinDay" name="TutorialFreePeriodFormComponent should correctly set form values and timeFrame in edit mode for freePeriodWithinDay" time="0.231">
    </testcase>
    <testcase classname="TutorialFreePeriodFormComponent should submit valid form" name="TutorialFreePeriodFormComponent should submit valid form" time="0.212">
    </testcase>
    <testcase classname="TutorialFreePeriodFormComponent should block submit when required property is missing" name="TutorialFreePeriodFormComponent should block submit when required property is missing" time="0.158">
    </testcase>
    <testcase classname="TutorialFreePeriodFormComponent should reset unused form values when time frame changes" name="TutorialFreePeriodFormComponent should reset unused form values when time frame changes" time="0.132">
    </testcase>
    <testcase classname="TutorialFreePeriodFormComponent {
  description: &apos;should set timeFrame initial correctly when editing an existing free period&apos;,
  expectedTimeFrame: 1,
  formData: [Object]
}" name="TutorialFreePeriodFormComponent {
  description: &apos;should set timeFrame initial correctly when editing an existing free period&apos;,
  expectedTimeFrame: 1,
  formData: [Object]
}" time="0.097">
    </testcase>
    <testcase classname="TutorialFreePeriodFormComponent {
  description: &apos;should set timeFrame initial correctly when editing an existing free day&apos;,
  expectedTimeFrame: 0,
  formData: [Object]
}" name="TutorialFreePeriodFormComponent {
  description: &apos;should set timeFrame initial correctly when editing an existing free day&apos;,
  expectedTimeFrame: 0,
  formData: [Object]
}" time="0.107">
    </testcase>
    <testcase classname="TutorialFreePeriodFormComponent {
  description: &apos;should set timeFrame initial correctly when editing an existing free period within day&apos;,
  expectedTimeFrame: 2,
  formData: [Object]
}" name="TutorialFreePeriodFormComponent {
  description: &apos;should set timeFrame initial correctly when editing an existing free period within day&apos;,
  expectedTimeFrame: 2,
  formData: [Object]
}" time="0.147">
    </testcase>
    <testcase classname="TutorialFreePeriodFormComponent should allow submit when time frame is day and form is valid" name="TutorialFreePeriodFormComponent should allow submit when time frame is day and form is valid" time="0.099">
    </testcase>
    <testcase classname="TutorialFreePeriodFormComponent should not allow submit when time frame is day and form is invalid" name="TutorialFreePeriodFormComponent should not allow submit when time frame is day and form is invalid" time="0.088">
    </testcase>
    <testcase classname="TutorialFreePeriodFormComponent should allow submit when time frame is Period and form is valid" name="TutorialFreePeriodFormComponent should allow submit when time frame is Period and form is valid" time="0.117">
    </testcase>
    <testcase classname="TutorialFreePeriodFormComponent should not allow submit when time frame is Period and form is invalid" name="TutorialFreePeriodFormComponent should not allow submit when time frame is Period and form is invalid" time="0.178">
    </testcase>
    <testcase classname="TutorialFreePeriodFormComponent should allow submit when time frame is PeriodWithinDay and form is valid" name="TutorialFreePeriodFormComponent should allow submit when time frame is PeriodWithinDay and form is valid" time="0.135">
    </testcase>
    <testcase classname="TutorialFreePeriodFormComponent should not allow submit when time frame is PeriodWithinDay and form is invalid" name="TutorialFreePeriodFormComponent should not allow submit when time frame is PeriodWithinDay and form is invalid" time="0.191">
    </testcase>
  </testsuite>
  <testsuite name="ModelingAssessmentService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:35" time="1.674" tests="7">
    <testcase classname="ModelingAssessmentService Service methods methods returning a result should save an assessment" name="ModelingAssessmentService Service methods methods returning a result should save an assessment" time="0.028">
    </testcase>
    <testcase classname="ModelingAssessmentService Service methods methods returning a result should save an example assessment" name="ModelingAssessmentService Service methods methods returning a result should save an example assessment" time="0.017">
    </testcase>
    <testcase classname="ModelingAssessmentService Service methods methods returning a result should get an assessment" name="ModelingAssessmentService Service methods methods returning a result should get an assessment" time="0.015">
    </testcase>
    <testcase classname="ModelingAssessmentService Service methods methods returning a result should get an example assessment" name="ModelingAssessmentService Service methods methods returning a result should get an example assessment" time="0.013">
    </testcase>
    <testcase classname="ModelingAssessmentService Service methods methods returning a result should update assessment after complaint" name="ModelingAssessmentService Service methods methods returning a result should update assessment after complaint" time="0.027">
    </testcase>
    <testcase classname="ModelingAssessmentService Service methods methods returning a result should get names for assessment" name="ModelingAssessmentService Service methods methods returning a result should get names for assessment" time="0.038">
    </testcase>
    <testcase classname="ModelingAssessmentService Service methods tests validFeedback check" name="ModelingAssessmentService Service methods tests validFeedback check" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExercise Custom Build Plan" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:34" time="5.92" tests="18">
    <testcase classname="ProgrammingExercise Custom Build Plan should set correct code" name="ProgrammingExercise Custom Build Plan should set correct code" time="0.361">
    </testcase>
    <testcase classname="ProgrammingExercise Custom Build Plan should accept editor" name="ProgrammingExercise Custom Build Plan should accept editor" time="1.103">
    </testcase>
    <testcase classname="ProgrammingExercise Custom Build Plan should not fail if setting up undefined editor" name="ProgrammingExercise Custom Build Plan should not fail if setting up undefined editor" time="0.061">
    </testcase>
    <testcase classname="ProgrammingExercise Custom Build Plan should return false to reload template" name="ProgrammingExercise Custom Build Plan should return false to reload template" time="0.048">
    </testcase>
    <testcase classname="ProgrammingExercise Custom Build Plan should return true to reload template" name="ProgrammingExercise Custom Build Plan should return true to reload template" time="0.051">
    </testcase>
    <testcase classname="ProgrammingExercise Custom Build Plan should reset buildplan" name="ProgrammingExercise Custom Build Plan should reset buildplan" time="0.084">
    </testcase>
    <testcase classname="ProgrammingExercise Custom Build Plan should do nothing without a programming language" name="ProgrammingExercise Custom Build Plan should do nothing without a programming language" time="0.076">
    </testcase>
    <testcase classname="ProgrammingExercise Custom Build Plan should update component properties" name="ProgrammingExercise Custom Build Plan should update component properties" time="0.091">
    </testcase>
    <testcase classname="ProgrammingExercise Custom Build Plan should not call loadAeolusTemplate" name="ProgrammingExercise Custom Build Plan should not call loadAeolusTemplate" time="0.046">
    </testcase>
    <testcase classname="ProgrammingExercise Custom Build Plan should call loadAeolusTemplate" name="ProgrammingExercise Custom Build Plan should call loadAeolusTemplate" time="0.057">
    </testcase>
    <testcase classname="ProgrammingExercise Custom Build Plan should update programming exercise values" name="ProgrammingExercise Custom Build Plan should update programming exercise values" time="0.061">
    </testcase>
    <testcase classname="ProgrammingExercise Custom Build Plan should call this.resetCustomBuildPlan" name="ProgrammingExercise Custom Build Plan should call this.resetCustomBuildPlan" time="0.037">
    </testcase>
    <testcase classname="ProgrammingExercise Custom Build Plan should call getAeolusTemplateScript" name="ProgrammingExercise Custom Build Plan should call getAeolusTemplateScript" time="0.029">
    </testcase>
    <testcase classname="ProgrammingExercise Custom Build Plan should call getAeolusTemplateScript and reset" name="ProgrammingExercise Custom Build Plan should call getAeolusTemplateScript and reset" time="0.056">
    </testcase>
    <testcase classname="ProgrammingExercise Custom Build Plan should accept editor for existing exercise" name="ProgrammingExercise Custom Build Plan should accept editor for existing exercise" time="0.158">
    </testcase>
    <testcase classname="ProgrammingExercise Custom Build Plan should set docker image correctly" name="ProgrammingExercise Custom Build Plan should set docker image correctly" time="0.073">
    </testcase>
    <testcase classname="ProgrammingExercise Custom Build Plan should not call getAeolusTemplateScript when import from file if script present" name="ProgrammingExercise Custom Build Plan should not call getAeolusTemplateScript when import from file if script present" time="0.062">
    </testcase>
    <testcase classname="ProgrammingExercise Custom Build Plan should set timeout correctly" name="ProgrammingExercise Custom Build Plan should set timeout correctly" time="0.055">
    </testcase>
  </testsuite>
  <testsuite name="CommitHistoryComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:35" time="5.8" tests="8">
    <testcase classname="CommitHistoryComponent should create" name="CommitHistoryComponent should create" time="0.215">
    </testcase>
    <testcase classname="CommitHistoryComponent should load student participation" name="CommitHistoryComponent should load student participation" time="0.036">
    </testcase>
    <testcase classname="CommitHistoryComponent should load student commits" name="CommitHistoryComponent should load student commits" time="0.016">
    </testcase>
    <testcase classname="CommitHistoryComponent should set student commit results" name="CommitHistoryComponent should set student commit results" time="0.016">
    </testcase>
    <testcase classname="CommitHistoryComponent should load template participation and handle commits" name="CommitHistoryComponent should load template participation and handle commits" time="0.025">
    </testcase>
    <testcase classname="CommitHistoryComponent should load solution participation" name="CommitHistoryComponent should load solution participation" time="0.033">
    </testcase>
    <testcase classname="CommitHistoryComponent should load test participation" name="CommitHistoryComponent should load test participation" time="0.025">
    </testcase>
    <testcase classname="CommitHistoryComponent should load auxiliary repository commits" name="CommitHistoryComponent should load auxiliary repository commits" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseEditableInstructionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:35" time="6.405" tests="10">
    <testcase classname="ProgrammingExerciseEditableInstructionComponent should not have any test cases if the test case service emits an empty array" name="ProgrammingExerciseEditableInstructionComponent should not have any test cases if the test case service emits an empty array" time="0.564">
    </testcase>
    <testcase classname="ProgrammingExerciseEditableInstructionComponent should have test cases according to the result of the test case service if it does not return an empty array" name="ProgrammingExerciseEditableInstructionComponent should have test cases according to the result of the test case service if it does not return an empty array" time="0.188">
    </testcase>
    <testcase classname="ProgrammingExerciseEditableInstructionComponent should update test cases if a new test case result comes in" name="ProgrammingExerciseEditableInstructionComponent should update test cases if a new test case result comes in" time="0.088">
    </testcase>
    <testcase classname="ProgrammingExerciseEditableInstructionComponent should try to retrieve the test case values from the solution repos last build result if there are no testCases (empty result)" name="ProgrammingExerciseEditableInstructionComponent should try to retrieve the test case values from the solution repos last build result if there are no testCases (empty result)" time="0.1">
    </testcase>
    <testcase classname="ProgrammingExerciseEditableInstructionComponent should not try to query test cases or solution participation results if the exercise is being created (there can be no test cases yet)" name="ProgrammingExerciseEditableInstructionComponent should not try to query test cases or solution participation results if the exercise is being created (there can be no test cases yet)" time="0.081">
    </testcase>
    <testcase classname="ProgrammingExerciseEditableInstructionComponent should re-render the preview html when forceRender has emitted" name="ProgrammingExerciseEditableInstructionComponent should re-render the preview html when forceRender has emitted" time="0.084">
    </testcase>
    <testcase classname="ProgrammingExerciseEditableInstructionComponent should update the code editor annotations when receiving a new ProblemStatementAnalysis" name="ProgrammingExerciseEditableInstructionComponent should update the code editor annotations when receiving a new ProblemStatementAnalysis" time="0.089">
    </testcase>
    <testcase classname="ProgrammingExerciseEditableInstructionComponent should save the problem statement to the server" name="ProgrammingExerciseEditableInstructionComponent should save the problem statement to the server" time="0.075">
    </testcase>
    <testcase classname="ProgrammingExerciseEditableInstructionComponent should log an error on save" name="ProgrammingExerciseEditableInstructionComponent should log an error on save" time="0.059">
    </testcase>
    <testcase classname="ProgrammingExerciseEditableInstructionComponent should save on key commands" name="ProgrammingExerciseEditableInstructionComponent should save on key commands" time="0.07">
    </testcase>
  </testsuite>
  <testsuite name="FileUploadExerciseUpdateComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:36" time="6.914" tests="11">
    <testcase classname="FileUploadExerciseUpdateComponent save new exercise should call create service on save for new entity" name="FileUploadExerciseUpdateComponent save new exercise should call create service on save for new entity" time="0.807">
    </testcase>
    <testcase classname="FileUploadExerciseUpdateComponent save existing exercise should call update service on save for existing entity" name="FileUploadExerciseUpdateComponent save existing exercise should call update service on save for existing entity" time="0.119">
    </testcase>
    <testcase classname="FileUploadExerciseUpdateComponent ngOnInit with given exerciseGroup should be in exam mode" name="FileUploadExerciseUpdateComponent ngOnInit with given exerciseGroup should be in exam mode" time="0.084">
    </testcase>
    <testcase classname="FileUploadExerciseUpdateComponent ngOnInit without given exerciseGroup should not be in exam mode" name="FileUploadExerciseUpdateComponent ngOnInit without given exerciseGroup should not be in exam mode" time="0.065">
    </testcase>
    <testcase classname="FileUploadExerciseUpdateComponent ngOnInit without given exerciseGroup should calculate valid sections" name="FileUploadExerciseUpdateComponent ngOnInit without given exerciseGroup should calculate valid sections" time="0.121">
    </testcase>
    <testcase classname="FileUploadExerciseUpdateComponent imported exercise should call import service on save for new entity" name="FileUploadExerciseUpdateComponent imported exercise should call import service on save for new entity" time="0.054">
    </testcase>
    <testcase classname="FileUploadExerciseUpdateComponent ngOnInit in import mode: Course to Course should set isImport and remove all dates" name="FileUploadExerciseUpdateComponent ngOnInit in import mode: Course to Course should set isImport and remove all dates" time="0.041">
    </testcase>
    <testcase classname="FileUploadExerciseUpdateComponent ngOnInit in import mode: Exam to Course should set isImport and remove all dates" name="FileUploadExerciseUpdateComponent ngOnInit in import mode: Exam to Course should set isImport and remove all dates" time="0.087">
    </testcase>
    <testcase classname="FileUploadExerciseUpdateComponent ngOnInit in import mode: Course to Exam should set isImport and isExamMode and remove all dates" name="FileUploadExerciseUpdateComponent ngOnInit in import mode: Course to Exam should set isImport and isExamMode and remove all dates" time="0.05">
    </testcase>
    <testcase classname="FileUploadExerciseUpdateComponent ngOnInit in import mode: Exam to Exam should set isImport and isExamMode and remove all dates" name="FileUploadExerciseUpdateComponent ngOnInit in import mode: Exam to Exam should set isImport and isExamMode and remove all dates" time="0.047">
    </testcase>
    <testcase classname="FileUploadExerciseUpdateComponent should updateCategories properly by making category available for selection again when removing it" name="FileUploadExerciseUpdateComponent should updateCategories properly by making category available for selection again when removing it" time="0.078">
    </testcase>
  </testsuite>
  <testsuite name="CommitDetailsViewComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:41" time="2.183" tests="10">
    <testcase classname="CommitDetailsViewComponent should create" name="CommitDetailsViewComponent should create" time="0.187">
    </testcase>
    <testcase classname="CommitDetailsViewComponent should handle commits for student participation" name="CommitDetailsViewComponent should handle commits for student participation" time="0.026">
    </testcase>
    <testcase classname="CommitDetailsViewComponent should handle commits for template participation" name="CommitDetailsViewComponent should handle commits for template participation" time="0.022">
    </testcase>
    <testcase classname="CommitDetailsViewComponent should handle new report for commit with template" name="CommitDetailsViewComponent should handle new report for commit with template" time="0.035">
    </testcase>
    <testcase classname="CommitDetailsViewComponent should handle new report for template commit" name="CommitDetailsViewComponent should handle new report for template commit" time="0.057">
    </testcase>
    <testcase classname="CommitDetailsViewComponent should handle new report for commits" name="CommitDetailsViewComponent should handle new report for commits" time="0.027">
    </testcase>
    <testcase classname="CommitDetailsViewComponent should handle error when retrieving commit info" name="CommitDetailsViewComponent should handle error when retrieving commit info" time="0.024">
    </testcase>
    <testcase classname="CommitDetailsViewComponent should fetch repository files" name="CommitDetailsViewComponent should fetch repository files" time="0.043">
    </testcase>
    <testcase classname="CommitDetailsViewComponent should handle error when fetching left repository files" name="CommitDetailsViewComponent should handle error when fetching left repository files" time="0.046">
    </testcase>
    <testcase classname="CommitDetailsViewComponent should handle error when fetching right repository files" name="CommitDetailsViewComponent should handle error when fetching right repository files" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="StudentExamDetailComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:42" time="3.303" tests="15">
    <testcase classname="StudentExamDetailComponent initialize" name="StudentExamDetailComponent initialize" time="0.417">
    </testcase>
    <testcase classname="StudentExamDetailComponent should save working time" name="StudentExamDetailComponent should save working time" time="0.049">
    </testcase>
    <testcase classname="StudentExamDetailComponent should not increase points when save working time is called more than once" name="StudentExamDetailComponent should not increase points when save working time is called more than once" time="0.062">
    </testcase>
    <testcase classname="StudentExamDetailComponent should disable the working time form while saving" name="StudentExamDetailComponent should disable the working time form while saving" time="0.019">
    </testcase>
    <testcase classname="StudentExamDetailComponent should disable the working time form after a test run is submitted" name="StudentExamDetailComponent should disable the working time form after a test run is submitted" time="0.008">
    </testcase>
    <testcase classname="StudentExamDetailComponent should disable the working time form if there is no exam" name="StudentExamDetailComponent should disable the working time form if there is no exam" time="0.009">
    </testcase>
    <testcase classname="StudentExamDetailComponent should get isExamOver" name="StudentExamDetailComponent should get isExamOver" time="0.009">
    </testcase>
    <testcase classname="StudentExamDetailComponent should toggle to unsubmitted" name="StudentExamDetailComponent should toggle to unsubmitted" time="0.051">
    </testcase>
    <testcase classname="StudentExamDetailComponent should open confirmation modal" name="StudentExamDetailComponent should open confirmation modal" time="0.009">
    </testcase>
    <testcase classname="StudentExamDetailComponent should get the correct grade explanation label" name="StudentExamDetailComponent should get the correct grade explanation label" time="0.02">
    </testcase>
    <testcase classname="StudentExamDetailComponent should get the correct grade explanation label" name="StudentExamDetailComponent should get the correct grade explanation label" time="0.01">
    </testcase>
    <testcase classname="StudentExamDetailComponent should get the correct grade explanation label" name="StudentExamDetailComponent should get the correct grade explanation label" time="0.006">
    </testcase>
    <testcase classname="StudentExamDetailComponent should set exam grade" name="StudentExamDetailComponent should set exam grade" time="0.01">
    </testcase>
    <testcase classname="StudentExamDetailComponent change student exam to submitted button should NOT be disabled when individual working time is over" name="StudentExamDetailComponent change student exam to submitted button should NOT be disabled when individual working time is over" time="0.053">
    </testcase>
    <testcase classname="StudentExamDetailComponent change student exam to submitted button should be disabled when individual working time is NOT over" name="StudentExamDetailComponent change student exam to submitted button should be disabled when individual working time is NOT over" time="0.061">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseScoresExportButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:44" time="2.708" tests="6">
    <testcase classname="ExerciseScoresExportButtonComponent should not start the export if the exercise has no results" name="ExerciseScoresExportButtonComponent should not start the export if the exercise has no results" time="0.242">
    </testcase>
    <testcase classname="ExerciseScoresExportButtonComponent should export results for one exercise" name="ExerciseScoresExportButtonComponent should export results for one exercise" time="0.161">
    </testcase>
    <testcase classname="ExerciseScoresExportButtonComponent should export results for a team exercise" name="ExerciseScoresExportButtonComponent should export results for a team exercise" time="0.043">
    </testcase>
    <testcase classname="ExerciseScoresExportButtonComponent should export results for multiple exercises" name="ExerciseScoresExportButtonComponent should export results for multiple exercises" time="0.068">
    </testcase>
    <testcase classname="ExerciseScoresExportButtonComponent should export results with test cases" name="ExerciseScoresExportButtonComponent should export results with test cases" time="0.076">
    </testcase>
    <testcase classname="ExerciseScoresExportButtonComponent should export results with test cases and feedback" name="ExerciseScoresExportButtonComponent should export results with test cases and feedback" time="0.054">
    </testcase>
  </testsuite>
  <testsuite name="WebsocketService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:45" time="2.102" tests="20">
    <testcase classname="WebsocketService should subscribe to a channel" name="WebsocketService should subscribe to a channel" time="0.042">
    </testcase>
    <testcase classname="WebsocketService should return an existing channel" name="WebsocketService should return an existing channel" time="0.008">
    </testcase>
    <testcase classname="WebsocketService should emit a message" name="WebsocketService should emit a message" time="0.008">
    </testcase>
    <testcase classname="WebsocketService should emit and decode a message" name="WebsocketService should emit and decode a message" time="0.005">
    </testcase>
    <testcase classname="WebsocketService should unsubscribe from a channel" name="WebsocketService should unsubscribe from a channel" time="0.004">
    </testcase>
    <testcase classname="WebsocketService should handle invalid Base64 messages gracefully" name="WebsocketService should handle invalid Base64 messages gracefully" time="0.004">
    </testcase>
    <testcase classname="WebsocketService should compress and decompress correctly" name="WebsocketService should compress and decompress correctly" time="0.025">
    </testcase>
    <testcase classname="WebsocketService should handle reconnection with backoff" name="WebsocketService should handle reconnection with backoff" time="0.007">
    </testcase>
    <testcase classname="WebsocketService should not reconnect when reconnect is disabled" name="WebsocketService should not reconnect when reconnect is disabled" time="0.005">
    </testcase>
    <testcase classname="WebsocketService should handle sending message when disconnected" name="WebsocketService should handle sending message when disconnected" time="0.006">
    </testcase>
    <testcase classname="WebsocketService should handle large messages with compression" name="WebsocketService should handle large messages with compression" time="0.005">
    </testcase>
    <testcase classname="WebsocketService should handle undefined channel subscription" name="WebsocketService should handle undefined channel subscription" time="0.005">
    </testcase>
    <testcase classname="WebsocketService should handle multiple subscriptions to same channel" name="WebsocketService should handle multiple subscriptions to same channel" time="0.004">
    </testcase>
    <testcase classname="WebsocketService should handle unsubscribe from non-existent channel" name="WebsocketService should handle unsubscribe from non-existent channel" time="0.003">
    </testcase>
    <testcase classname="WebsocketService should handle multiple connect calls" name="WebsocketService should handle multiple connect calls" time="0.005">
    </testcase>
    <testcase classname="WebsocketService should handle JSON parsing errors" name="WebsocketService should handle JSON parsing errors" time="0.018">
    </testcase>
    <testcase classname="WebsocketService should handle incoming message with no compression" name="WebsocketService should handle incoming message with no compression" time="0.006">
    </testcase>
    <testcase classname="WebsocketService should handle incoming message with compression" name="WebsocketService should handle incoming message with compression" time="0.004">
    </testcase>
    <testcase classname="WebsocketService should update observables when calling receive" name="WebsocketService should update observables when calling receive" time="0.009">
    </testcase>
    <testcase classname="WebsocketService should enable and disable reconnect when functions are called" name="WebsocketService should enable and disable reconnect when functions are called" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="ConversationSettingsComponent with groupChat" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:44" time="3.394" tests="18">
    <testcase classname="ConversationSettingsComponent with groupChat should create" name="ConversationSettingsComponent with groupChat should create" time="0.223">
    </testcase>
    <testcase classname="ConversationSettingsComponent with groupChat should show buttons only if user has the required permissions" name="ConversationSettingsComponent with groupChat should show buttons only if user has the required permissions" time="0.086">
    </testcase>
    <testcase classname="ConversationSettingsComponent with groupChat should call the correct service depending on conversation type when leave conversation is requested" name="ConversationSettingsComponent with groupChat should call the correct service depending on conversation type when leave conversation is requested" time="0.114">
    </testcase>
    <testcase classname="ConversationSettingsComponent with groupChat should open archive dialog when button is pressed" name="ConversationSettingsComponent with groupChat should open archive dialog when button is pressed" time="0.05">
    </testcase>
    <testcase classname="ConversationSettingsComponent with groupChat should open unarchive dialog when button is pressed" name="ConversationSettingsComponent with groupChat should open unarchive dialog when button is pressed" time="0.063">
    </testcase>
    <testcase classname="ConversationSettingsComponent with groupChat should call delete channel when callback is called" name="ConversationSettingsComponent with groupChat should call delete channel when callback is called" time="0.041">
    </testcase>
    <testcase classname="ConversationSettingsComponent with groupChat should toggle channel privacy, update conversationAsChannel, and emit channelPrivacyChange" name="ConversationSettingsComponent with groupChat should toggle channel privacy, update conversationAsChannel, and emit channelPrivacyChange" time="0.06">
    </testcase>
    <testcase classname="ConversationSettingsComponent with groupChat should open the public channel modal if channel is currently private" name="ConversationSettingsComponent with groupChat should open the public channel modal if channel is currently private" time="0.06">
    </testcase>
    <testcase classname="ConversationSettingsComponent with groupChat should open the private channel modal if channel is currently public" name="ConversationSettingsComponent with groupChat should open the private channel modal if channel is currently public" time="0.056">
    </testcase>
    <testcase classname="ConversationSettingsComponent with channel should create" name="ConversationSettingsComponent with channel should create" time="0.075">
    </testcase>
    <testcase classname="ConversationSettingsComponent with channel should show buttons only if user has the required permissions" name="ConversationSettingsComponent with channel should show buttons only if user has the required permissions" time="0.062">
    </testcase>
    <testcase classname="ConversationSettingsComponent with channel should call the correct service depending on conversation type when leave conversation is requested" name="ConversationSettingsComponent with channel should call the correct service depending on conversation type when leave conversation is requested" time="0.098">
    </testcase>
    <testcase classname="ConversationSettingsComponent with channel should open archive dialog when button is pressed" name="ConversationSettingsComponent with channel should open archive dialog when button is pressed" time="0.075">
    </testcase>
    <testcase classname="ConversationSettingsComponent with channel should open unarchive dialog when button is pressed" name="ConversationSettingsComponent with channel should open unarchive dialog when button is pressed" time="0.08">
    </testcase>
    <testcase classname="ConversationSettingsComponent with channel should call delete channel when callback is called" name="ConversationSettingsComponent with channel should call delete channel when callback is called" time="0.079">
    </testcase>
    <testcase classname="ConversationSettingsComponent with channel should toggle channel privacy, update conversationAsChannel, and emit channelPrivacyChange" name="ConversationSettingsComponent with channel should toggle channel privacy, update conversationAsChannel, and emit channelPrivacyChange" time="0.08">
    </testcase>
    <testcase classname="ConversationSettingsComponent with channel should open the public channel modal if channel is currently private" name="ConversationSettingsComponent with channel should open the public channel modal if channel is currently private" time="0.059">
    </testcase>
    <testcase classname="ConversationSettingsComponent with channel should open the private channel modal if channel is currently public" name="ConversationSettingsComponent with channel should open the private channel modal if channel is currently public" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseInstructorSubmissionStateComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:47" time="2.799" tests="7">
    <testcase classname="ProgrammingExerciseInstructorSubmissionStateComponent should not show the component before the build summary is retrieved" name="ProgrammingExerciseInstructorSubmissionStateComponent should not show the component before the build summary is retrieved" time="0.212">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorSubmissionStateComponent should show the result eta if there is at least one building submission" name="ProgrammingExerciseInstructorSubmissionStateComponent should show the result eta if there is at least one building submission" time="0.153">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorSubmissionStateComponent should not show the result eta if there is no building submission" name="ProgrammingExerciseInstructorSubmissionStateComponent should not show the result eta if there is no building submission" time="0.084">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorSubmissionStateComponent should show &amp; enable the trigger all button and the build state once the build summary is loaded" name="ProgrammingExerciseInstructorSubmissionStateComponent should show &amp; enable the trigger all button and the build state once the build summary is loaded" time="0.059">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorSubmissionStateComponent should show &amp; enable both buttons and the build state once the build summary is loaded when a failed submission exists" name="ProgrammingExerciseInstructorSubmissionStateComponent should show &amp; enable both buttons and the build state once the build summary is loaded when a failed submission exists" time="0.112">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorSubmissionStateComponent should trigger the appropriate service method on trigger failed and set the isBuildingFailedSubmissionsState until the request returns a response" name="ProgrammingExerciseInstructorSubmissionStateComponent should trigger the appropriate service method on trigger failed and set the isBuildingFailedSubmissionsState until the request returns a response" time="0.104">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorSubmissionStateComponent should disable the trigger all button while a build is running and re-enable it when it is complete" name="ProgrammingExerciseInstructorSubmissionStateComponent should disable the trigger all button while a build is running and re-enable it when it is complete" time="0.088">
    </testcase>
  </testsuite>
  <testsuite name="CourseArchiveComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:47" time="4.518" tests="11">
    <testcase classname="CourseArchiveComponent onInit should call loadArchivedCourses on init" name="CourseArchiveComponent onInit should call loadArchivedCourses on init" time="0.317">
    </testcase>
    <testcase classname="CourseArchiveComponent onInit should load archived courses on init" name="CourseArchiveComponent onInit should load archived courses on init" time="0.097">
    </testcase>
    <testcase classname="CourseArchiveComponent onInit should handle an empty response body correctly when fetching all courses for archive" name="CourseArchiveComponent onInit should handle an empty response body correctly when fetching all courses for archive" time="0.082">
    </testcase>
    <testcase classname="CourseArchiveComponent onInit should sort the name of the semesters uniquely" name="CourseArchiveComponent onInit should sort the name of the semesters uniquely" time="0.133">
    </testcase>
    <testcase classname="CourseArchiveComponent onInit should map courses into semesters" name="CourseArchiveComponent onInit should map courses into semesters" time="0.094">
    </testcase>
    <testcase classname="CourseArchiveComponent onInit should initialize collapse state of semesters correctly" name="CourseArchiveComponent onInit should initialize collapse state of semesters correctly" time="0.104">
    </testcase>
    <testcase classname="CourseArchiveComponent onInit should initialize translate of semesters correctly" name="CourseArchiveComponent onInit should initialize translate of semesters correctly" time="0.075">
    </testcase>
    <testcase classname="CourseArchiveComponent onInit should collapse semester groups based on the search value correctly" name="CourseArchiveComponent onInit should collapse semester groups based on the search value correctly" time="0.133">
    </testcase>
    <testcase classname="CourseArchiveComponent onInit should toggle sort order and update the icon accordingly" name="CourseArchiveComponent onInit should toggle sort order and update the icon accordingly" time="0.163">
    </testcase>
    <testcase classname="CourseArchiveComponent onInit should find the correct course and call toggle" name="CourseArchiveComponent onInit should find the correct course and call toggle" time="0.21">
    </testcase>
    <testcase classname="CourseArchiveComponent onInit should initialize collapse state correctly" name="CourseArchiveComponent onInit should initialize collapse state correctly" time="0.083">
    </testcase>
  </testsuite>
  <testsuite name="CodeEditorBuildOutputComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:50" time="3.135" tests="6">
    <testcase classname="CodeEditorBuildOutputComponent should setup result websocket, fetch result details and build logs on participation change" name="CodeEditorBuildOutputComponent should setup result websocket, fetch result details and build logs on participation change" time="0.131">
    </testcase>
    <testcase classname="CodeEditorBuildOutputComponent should not retrieve build logs after participation change, if no result is available" name="CodeEditorBuildOutputComponent should not retrieve build logs after participation change, if no result is available" time="0.044">
    </testcase>
    <testcase classname="CodeEditorBuildOutputComponent should not retrieve build logs after participation change, if submission could be built" name="CodeEditorBuildOutputComponent should not retrieve build logs after participation change, if submission could be built" time="0.05">
    </testcase>
    <testcase classname="CodeEditorBuildOutputComponent should retrieve build logs if no result submission is available" name="CodeEditorBuildOutputComponent should retrieve build logs if no result submission is available" time="0.097">
    </testcase>
    <testcase classname="CodeEditorBuildOutputComponent should retrieve build logs if result submission could not be built" name="CodeEditorBuildOutputComponent should retrieve build logs if result submission could not be built" time="0.039">
    </testcase>
    <testcase classname="CodeEditorBuildOutputComponent should create annotation from static code analysis feedback" name="CodeEditorBuildOutputComponent should create annotation from static code analysis feedback" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="CoursesComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:47" time="6.237" tests="9">
    <testcase classname="CoursesComponent onInit should call loadAndFilterCourses on init" name="CoursesComponent onInit should call loadAndFilterCourses on init" time="0.727">
    </testcase>
    <testcase classname="CoursesComponent onInit should load courses on init" name="CoursesComponent onInit should load courses on init" time="0.115">
    </testcase>
    <testcase classname="CoursesComponent onInit should handle an empty response body correctly when fetching all courses for dashboard" name="CoursesComponent onInit should handle an empty response body correctly when fetching all courses for dashboard" time="0.13">
    </testcase>
    <testcase classname="CoursesComponent onInit should load exercises on init" name="CoursesComponent onInit should load exercises on init" time="0.117">
    </testcase>
    <testcase classname="CoursesComponent onInit should sort courses into regular and recently accessed after loading" name="CoursesComponent onInit should sort courses into regular and recently accessed after loading" time="0.09">
    </testcase>
    <testcase classname="CoursesComponent should load next relevant exam" name="CoursesComponent should load next relevant exam" time="0.107">
    </testcase>
    <testcase classname="CoursesComponent should load next relevant exam ignoring test exams" name="CoursesComponent should load next relevant exam ignoring test exams" time="0.097">
    </testcase>
    <testcase classname="CoursesComponent should initialize search course text correctly" name="CoursesComponent should initialize search course text correctly" time="0.099">
    </testcase>
    <testcase classname="CoursesComponent should adjust sort direction by clicking on sort icon" name="CoursesComponent should adjust sort direction by clicking on sort icon" time="0.132">
    </testcase>
  </testsuite>
  <testsuite name="ExamDetailComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:40" time="13.465" tests="12">
    <testcase classname="ExamDetailComponent should load exam from route and display it to user" name="ExamDetailComponent should load exam from route and display it to user" time="1.902">
    </testcase>
    <testcase classname="ExamDetailComponent should correctly route to edit subpage" name="ExamDetailComponent should correctly route to edit subpage" time="0.567">
    </testcase>
    <testcase classname="ExamDetailComponent should correctly route to student exams subpage" name="ExamDetailComponent should correctly route to student exams subpage" time="0.943">
    </testcase>
    <testcase classname="ExamDetailComponent should correctly route to dashboard" name="ExamDetailComponent should correctly route to dashboard" time="0.792">
    </testcase>
    <testcase classname="ExamDetailComponent should correctly route to exercise groups" name="ExamDetailComponent should correctly route to exercise groups" time="0.716">
    </testcase>
    <testcase classname="ExamDetailComponent should correctly route to scores" name="ExamDetailComponent should correctly route to scores" time="0.625">
    </testcase>
    <testcase classname="ExamDetailComponent should correctly route to students" name="ExamDetailComponent should correctly route to students" time="0.982">
    </testcase>
    <testcase classname="ExamDetailComponent should correctly route to test runs" name="ExamDetailComponent should correctly route to test runs" time="0.672">
    </testcase>
    <testcase classname="ExamDetailComponent should return general routes correctly" name="ExamDetailComponent should return general routes correctly" time="0.409">
    </testcase>
    <testcase classname="ExamDetailComponent should reset an exam when reset exam is called" name="ExamDetailComponent should reset an exam when reset exam is called" time="0.322">
    </testcase>
    <testcase classname="ExamDetailComponent should delete an exam when delete exam is called" name="ExamDetailComponent should delete an exam when delete exam is called" time="0.37">
    </testcase>
    <testcase classname="ExamDetailComponent should call scrollToTopOfPage on component initialization" name="ExamDetailComponent should call scrollToTopOfPage on component initialization" time="0.245">
    </testcase>
  </testsuite>
  <testsuite name="CourseExamsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:52" time="5.705" tests="14">
    <testcase classname="CourseExamsComponent exam should be visible" name="CourseExamsComponent exam should be visible" time="0.835">
    </testcase>
    <testcase classname="CourseExamsComponent exam should not be visible" name="CourseExamsComponent exam should not be visible" time="0.281">
    </testcase>
    <testcase classname="CourseExamsComponent should correctly return StudentExams by id in reverse order" name="CourseExamsComponent should correctly return StudentExams by id in reverse order" time="0.214">
    </testcase>
    <testcase classname="CourseExamsComponent should correctly initialize the expandAttemptsMap" name="CourseExamsComponent should correctly initialize the expandAttemptsMap" time="0.148">
    </testcase>
    <testcase classname="CourseExamsComponent should correctly switch boolean value in expandAttemptsMap" name="CourseExamsComponent should correctly switch boolean value in expandAttemptsMap" time="0.111">
    </testcase>
    <testcase classname="CourseExamsComponent should correctly update new exams" name="CourseExamsComponent should correctly update new exams" time="0.115">
    </testcase>
    <testcase classname="CourseExamsComponent should correctly return visible real exams ordered according to startedDate" name="CourseExamsComponent should correctly return visible real exams ordered according to startedDate" time="0.214">
    </testcase>
    <testcase classname="CourseExamsComponent should correctly return visible test exams ordered according to startedDate" name="CourseExamsComponent should correctly return visible test exams ordered according to startedDate" time="0.084">
    </testcase>
    <testcase classname="CourseExamsComponent should display/hide sidebar if exam is started/over" name="CourseExamsComponent should display/hide sidebar if exam is started/over" time="0.133">
    </testcase>
    <testcase classname="CourseExamsComponent should group all exams as test when all exams are test exams" name="CourseExamsComponent should group all exams as test when all exams are test exams" time="0.141">
    </testcase>
    <testcase classname="CourseExamsComponent should group all exam types correctly and map to sidebar card elements" name="CourseExamsComponent should group all exam types correctly and map to sidebar card elements" time="0.12">
    </testcase>
    <testcase classname="CourseExamsComponent should sort exams by startDate" name="CourseExamsComponent should sort exams by startDate" time="0.139">
    </testcase>
    <testcase classname="CourseExamsComponent should toggle sidebar" name="CourseExamsComponent should toggle sidebar" time="0.088">
    </testcase>
    <testcase classname="CourseExamsComponent should not update sidebarData if there is no exam" name="CourseExamsComponent should not update sidebarData if there is no exam" time="0.096">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseHeadersInformationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:54" time="4.032" tests="12">
    <testcase classname="ExerciseHeadersInformationComponent should create" name="ExerciseHeadersInformationComponent should create" time="0.315">
    </testcase>
    <testcase classname="ExerciseHeadersInformationComponent should display the information box items" name="ExerciseHeadersInformationComponent should display the information box items" time="0.045">
    </testcase>
    <testcase classname="ExerciseHeadersInformationComponent should display difficulty level component when content type is difficultyLevel" name="ExerciseHeadersInformationComponent should display difficulty level component when content type is difficultyLevel" time="0.053">
    </testcase>
    <testcase classname="ExerciseHeadersInformationComponent should set individualComplaintDueDate if course.maxComplaintTimeDays is defined" name="ExerciseHeadersInformationComponent should set individualComplaintDueDate if course.maxComplaintTimeDays is defined" time="0.037">
    </testcase>
    <testcase classname="ExerciseHeadersInformationComponent should add points item to informationBoxItems" name="ExerciseHeadersInformationComponent should add points item to informationBoxItems" time="0.05">
    </testcase>
    <testcase classname="ExerciseHeadersInformationComponent should add bonus points item to informationBoxItems" name="ExerciseHeadersInformationComponent should add bonus points item to informationBoxItems" time="0.036">
    </testcase>
    <testcase classname="ExerciseHeadersInformationComponent should add start date item to informationBoxItems if startDate is in the future" name="ExerciseHeadersInformationComponent should add start date item to informationBoxItems if startDate is in the future" time="0.025">
    </testcase>
    <testcase classname="ExerciseHeadersInformationComponent should return correct submission color based on submissions left" name="ExerciseHeadersInformationComponent should return correct submission color based on submissions left" time="0.061">
    </testcase>
    <testcase classname="ExerciseHeadersInformationComponent should add assessment due date item to informationBoxItems if dueDate is in the past and assessmentDueDate is in the future" name="ExerciseHeadersInformationComponent should add assessment due date item to informationBoxItems if dueDate is in the past and assessmentDueDate is in the future" time="0.028">
    </testcase>
    <testcase classname="ExerciseHeadersInformationComponent should update submission policy item in informationBoxItems" name="ExerciseHeadersInformationComponent should update submission policy item in informationBoxItems" time="0.069">
    </testcase>
    <testcase classname="ExerciseHeadersInformationComponent should correctly count unique manual submissions" name="ExerciseHeadersInformationComponent should correctly count unique manual submissions" time="0.041">
    </testcase>
    <testcase classname="ExerciseHeadersInformationComponent should call updateSubmissionPolicyItem if submissionPolicy is active and has a submission limit" name="ExerciseHeadersInformationComponent should call updateSubmissionPolicyItem if submissionPolicy is active and has a submission limit" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="GenerateCompetenciesComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:53" time="4.973" tests="11">
    <testcase classname="GenerateCompetenciesComponent should initialize" name="GenerateCompetenciesComponent should initialize" time="1.063">
    </testcase>
    <testcase classname="GenerateCompetenciesComponent should handle description submit" name="GenerateCompetenciesComponent should handle description submit" time="0.131">
    </testcase>
    <testcase classname="GenerateCompetenciesComponent should initialize the form with the course description" name="GenerateCompetenciesComponent should initialize the form with the course description" time="0.134">
    </testcase>
    <testcase classname="GenerateCompetenciesComponent should add competency recommendations" name="GenerateCompetenciesComponent should add competency recommendations" time="0.134">
    </testcase>
    <testcase classname="GenerateCompetenciesComponent should open modal to remove competency recommendations" name="GenerateCompetenciesComponent should open modal to remove competency recommendations" time="0.107">
    </testcase>
    <testcase classname="GenerateCompetenciesComponent should cancel" name="GenerateCompetenciesComponent should cancel" time="0.121">
    </testcase>
    <testcase classname="GenerateCompetenciesComponent should deactivate correctly" name="GenerateCompetenciesComponent should deactivate correctly" time="0.071">
    </testcase>
    <testcase classname="GenerateCompetenciesComponent should not submit for unviewed recommendations" name="GenerateCompetenciesComponent should not submit for unviewed recommendations" time="0.14">
    </testcase>
    <testcase classname="GenerateCompetenciesComponent should submit" name="GenerateCompetenciesComponent should submit" time="0.123">
    </testcase>
    <testcase classname="GenerateCompetenciesComponent should display alerts after generating" name="GenerateCompetenciesComponent should display alerts after generating" time="0.088">
    </testcase>
    <testcase classname="GenerateCompetenciesComponent should not deactivate when loading" name="GenerateCompetenciesComponent should not deactivate when loading" time="0.119">
    </testcase>
  </testsuite>
  <testsuite name="getExerciseCategoryFilterOptions" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:59" time="1.933" tests="14">
    <testcase classname="getExerciseCategoryFilterOptions should return all exercise categories" name="getExerciseCategoryFilterOptions should return all exercise categories" time="0.003">
    </testcase>
    <testcase classname="getExerciseCategoryFilterOptions should filter duplicates" name="getExerciseCategoryFilterOptions should filter duplicates" time="0.004">
    </testcase>
    <testcase classname="getExerciseCategoryFilterOptions should sort categories alphanumerical" name="getExerciseCategoryFilterOptions should sort categories alphanumerical" time="0.001">
    </testcase>
    <testcase classname="getExerciseCategoryFilterOptions should not be displayed if no categories are available" name="getExerciseCategoryFilterOptions should not be displayed if no categories are available" time="0.001">
    </testcase>
    <testcase classname="getExerciseCategoryFilterOptions should directly return if already initialized" name="getExerciseCategoryFilterOptions should directly return if already initialized" time="0.001">
    </testcase>
    <testcase classname="getExerciseTypeFilterOptions should return present exercise types and sort them properly (same order as instructor creation)" name="getExerciseTypeFilterOptions should return present exercise types and sort them properly (same order as instructor creation)" time="0.001">
    </testcase>
    <testcase classname="getExerciseTypeFilterOptions should not contain duplicates" name="getExerciseTypeFilterOptions should not contain duplicates" time="0.001">
    </testcase>
    <testcase classname="getExerciseTypeFilterOptions should directly return if already initialized" name="getExerciseTypeFilterOptions should directly return if already initialized" time="0.001">
    </testcase>
    <testcase classname="getExerciseDifficultyFilterOptions should return present exercise difficulties and sort them ascending" name="getExerciseDifficultyFilterOptions should return present exercise difficulties and sort them ascending" time="0.006">
    </testcase>
    <testcase classname="getExerciseDifficultyFilterOptions should not contain duplicates" name="getExerciseDifficultyFilterOptions should not contain duplicates" time="0.001">
    </testcase>
    <testcase classname="getExerciseDifficultyFilterOptions should directly return if already initialized" name="getExerciseDifficultyFilterOptions should directly return if already initialized" time="0.001">
    </testcase>
    <testcase classname="getAchievablePointsAndAchievedScoreFilterOptions should return present exercise point and score range" name="getAchievablePointsAndAchievedScoreFilterOptions should return present exercise point and score range" time="0.005">
    </testcase>
    <testcase classname="getAchievablePointsAndAchievedScoreFilterOptions should set scores filter to not displayed if no scores are present" name="getAchievablePointsAndAchievedScoreFilterOptions should set scores filter to not displayed if no scores are present" time="0.002">
    </testcase>
    <testcase classname="getAchievablePointsAndAchievedScoreFilterOptions should directly return if already initialized and filters are not applied" name="getAchievablePointsAndAchievedScoreFilterOptions should directly return if already initialized and filters are not applied" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CourseCompetencyRelationFormComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:59" time="2.257" tests="25">
    <testcase classname="CourseCompetencyRelationFormComponent should set relationAlreadyExists correctly" name="CourseCompetencyRelationFormComponent should set relationAlreadyExists correctly" time="0.187">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should set exactRelationAlreadyExists correctly" name="CourseCompetencyRelationFormComponent should set exactRelationAlreadyExists correctly" time="0.032">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should select relation if selectedRelationId is set" name="CourseCompetencyRelationFormComponent should select relation if selectedRelationId is set" time="0.031">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should set headCompetencyId if it is undefined" name="CourseCompetencyRelationFormComponent should set headCompetencyId if it is undefined" time="0.026">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should set tailCompetencyId if headCompetencyId is defined and tailCompetencyId is undefined" name="CourseCompetencyRelationFormComponent should set tailCompetencyId if headCompetencyId is defined and tailCompetencyId is undefined" time="0.02">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should reset headCompetencyId if both headCompetencyId and tailCompetencyId are defined" name="CourseCompetencyRelationFormComponent should reset headCompetencyId if both headCompetencyId and tailCompetencyId are defined" time="0.05">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should create relation" name="CourseCompetencyRelationFormComponent should create relation" time="0.015">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should set isLoading correctly when creating a relation" name="CourseCompetencyRelationFormComponent should set isLoading correctly when creating a relation" time="0.02">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should show error when creating relation fails" name="CourseCompetencyRelationFormComponent should show error when creating relation fails" time="0.011">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should update relation" name="CourseCompetencyRelationFormComponent should update relation" time="0.026">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should set isLoading correctly when updating a relation" name="CourseCompetencyRelationFormComponent should set isLoading correctly when updating a relation" time="0.03">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should show error when updating relation fails" name="CourseCompetencyRelationFormComponent should show error when updating relation fails" time="0.039">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should select head course competency" name="CourseCompetencyRelationFormComponent should select head course competency" time="0.04">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should set tailCompetencyId and selectedRelationId when an existing relation is found" name="CourseCompetencyRelationFormComponent should set tailCompetencyId and selectedRelationId when an existing relation is found" time="0.027">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should set tailCompetencyId and clear selectedRelationId when no existing relation is found" name="CourseCompetencyRelationFormComponent should set tailCompetencyId and clear selectedRelationId when no existing relation is found" time="0.021">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should not allow to create circular dependencies" name="CourseCompetencyRelationFormComponent should not allow to create circular dependencies" time="0.018">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should delete relation" name="CourseCompetencyRelationFormComponent should delete relation" time="0.023">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should set isLoading correctly when deleting a relation" name="CourseCompetencyRelationFormComponent should set isLoading correctly when deleting a relation" time="0.026">
    </testcase>
    <testcase classname="CourseCompetencyRelationFormComponent should show error when deleting relation fails" name="CourseCompetencyRelationFormComponent should show error when deleting relation fails" time="0.093">
    </testcase>
    <testcase classname="UnionFind should initialize parent and rank arrays correctly" name="UnionFind should initialize parent and rank arrays correctly" time="0.001">
    </testcase>
    <testcase classname="UnionFind should find the representative of a set" name="UnionFind should find the representative of a set" time="0.001">
    </testcase>
    <testcase classname="UnionFind should perform union by rank correctly" name="UnionFind should perform union by rank correctly" time="0.004">
    </testcase>
    <testcase classname="UnionFind should perform path compression correctly" name="UnionFind should perform path compression correctly" time="0">
    </testcase>
    <testcase classname="UnionFind should handle union of already connected components" name="UnionFind should handle union of already connected components" time="0">
    </testcase>
    <testcase classname="UnionFind should handle union of components with equal rank" name="UnionFind should handle union of components with equal rank" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupFormComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:55" time="8.517" tests="7">
    <testcase classname="TutorialGroupFormComponent with schedule should block submit when required property is missing" name="TutorialGroupFormComponent with schedule should block submit when required property is missing" time="1.97">
    </testcase>
    <testcase classname="TutorialGroupFormComponent with schedule should block submit when time range is invalid" name="TutorialGroupFormComponent with schedule should block submit when time range is invalid" time="0.525">
    </testcase>
    <testcase classname="TutorialGroupFormComponent with schedule should correctly set form values in edit mode" name="TutorialGroupFormComponent with schedule should correctly set form values in edit mode" time="0.481">
    </testcase>
    <testcase classname="TutorialGroupFormComponent with schedule should submit valid form" name="TutorialGroupFormComponent with schedule should submit valid form" time="0.591">
    </testcase>
    <testcase classname="TutorialGroupFormComponent without schedule should block submit when required property is missing" name="TutorialGroupFormComponent without schedule should block submit when required property is missing" time="0.66">
    </testcase>
    <testcase classname="TutorialGroupFormComponent without schedule should correctly set form values in edit mode" name="TutorialGroupFormComponent without schedule should correctly set form values in edit mode" time="0.609">
    </testcase>
    <testcase classname="TutorialGroupFormComponent without schedule should submit valid form" name="TutorialGroupFormComponent without schedule should submit valid form" time="0.697">
    </testcase>
  </testsuite>
  <testsuite name="ExamParticipationService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:04" time="2.838" tests="18">
    <testcase classname="ExamParticipationService should load a StudentExam with exercises for conduction" name="ExamParticipationService should load a StudentExam with exercises for conduction" time="0.02">
    </testcase>
    <testcase classname="ExamParticipationService should load a StudentExam with exercises for conduction of TestExam" name="ExamParticipationService should load a StudentExam with exercises for conduction of TestExam" time="0.005">
    </testcase>
    <testcase classname="ExamParticipationService should load a StudentExam with exercises for summary" name="ExamParticipationService should load a StudentExam with exercises for summary" time="0.005">
    </testcase>
    <testcase classname="ExamParticipationService should load a student exam grade info for summary" name="ExamParticipationService should load a student exam grade info for summary" time="0.004">
    </testcase>
    <testcase classname="ExamParticipationService should load a StudentExam" name="ExamParticipationService should load a StudentExam" time="0.005">
    </testcase>
    <testcase classname="ExamParticipationService should load a StudentExam for a TestExam" name="ExamParticipationService should load a StudentExam for a TestExam" time="0.005">
    </testcase>
    <testcase classname="ExamParticipationService should load a StudentExam for a TestExam by Id" name="ExamParticipationService should load a StudentExam for a TestExam by Id" time="0.005">
    </testcase>
    <testcase classname="ExamParticipationService should load a StudentExam in the version of server" name="ExamParticipationService should load a StudentExam in the version of server" time="0.03">
    </testcase>
    <testcase classname="ExamParticipationService should update a QuizSubmission" name="ExamParticipationService should update a QuizSubmission" time="0.008">
    </testcase>
    <testcase classname="ExamParticipationService should load testRun with exercises for conduction" name="ExamParticipationService should load testRun with exercises for conduction" time="0.014">
    </testcase>
    <testcase classname="ExamParticipationService save examSessionToken to sessionStorage" name="ExamParticipationService save examSessionToken to sessionStorage" time="0.006">
    </testcase>
    <testcase classname="ExamParticipationService should save StudentExam to localStorage" name="ExamParticipationService should save StudentExam to localStorage" time="0.005">
    </testcase>
    <testcase classname="ExamParticipationService should load StudentExam from localStorage" name="ExamParticipationService should load StudentExam from localStorage" time="0.007">
    </testcase>
    <testcase classname="ExamParticipationService should load a List of StudentExams for a user and course" name="ExamParticipationService should load a List of StudentExams for a user and course" time="0.013">
    </testcase>
    <testcase classname="ExamParticipationService should submit a StudentExam successfully" name="ExamParticipationService should submit a StudentExam successfully" time="0.021">
    </testcase>
    <testcase classname="ExamParticipationService should throw error if submission is not in time" name="ExamParticipationService should throw error if submission is not in time" time="0.012">
    </testcase>
    <testcase classname="ExamParticipationService should throw error if the exam was already submitted" name="ExamParticipationService should throw error if the exam was already submitted" time="0.015">
    </testcase>
    <testcase classname="ExamParticipationService should throw a generic error if submission fails for any other reason" name="ExamParticipationService should throw a generic error if submission fails for any other reason" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="SidebarComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:16:58" time="8.632" tests="17">
    <testcase classname="SidebarComponent should filter sidebar items based on search criteria" name="SidebarComponent should filter sidebar items based on search criteria" time="0.763">
    </testcase>
    <testcase classname="SidebarComponent should display the correct message when no data is found" name="SidebarComponent should display the correct message when no data is found" time="0.341">
    </testcase>
    <testcase classname="SidebarComponent should give the correct size for exercises" name="SidebarComponent should give the correct size for exercises" time="0.347">
    </testcase>
    <testcase classname="SidebarComponent should give the correct size for exams" name="SidebarComponent should give the correct size for exams" time="0.26">
    </testcase>
    <testcase classname="SidebarComponent should give the correct size for default" name="SidebarComponent should give the correct size for default" time="0.399">
    </testcase>
    <testcase classname="SidebarComponent should update sidebar event subscription on re emit input event change" name="SidebarComponent should update sidebar event subscription on re emit input event change" time="0.37">
    </testcase>
    <testcase classname="SidebarComponent openFilterExercisesLink should display the filter link" name="SidebarComponent openFilterExercisesLink should display the filter link" time="0.428">
    </testcase>
    <testcase classname="SidebarComponent openFilterExercisesLink should NOT display the filter link when sidebarType is NOT exercise" name="SidebarComponent openFilterExercisesLink should NOT display the filter link when sidebarType is NOT exercise" time="0.376">
    </testcase>
    <testcase classname="SidebarComponent openFilterExercisesLink should open modal on click with initialized filters" name="SidebarComponent openFilterExercisesLink should open modal on click with initialized filters" time="0.364">
    </testcase>
    <testcase classname="SidebarComponent Chat and Channel Creation Methods should emit onDirectChatPressed and set showChatDropdown to false when createDirectChat is called" name="SidebarComponent Chat and Channel Creation Methods should emit onDirectChatPressed and set showChatDropdown to false when createDirectChat is called" time="0.216">
    </testcase>
    <testcase classname="SidebarComponent Chat and Channel Creation Methods should emit onGroupChatPressed and set showChatDropdown to false when createGroupChat is called" name="SidebarComponent Chat and Channel Creation Methods should emit onGroupChatPressed and set showChatDropdown to false when createGroupChat is called" time="0.208">
    </testcase>
    <testcase classname="SidebarComponent Chat and Channel Creation Methods should emit onBrowsePressed and set showChannelDropdown to false when browseChannels is called" name="SidebarComponent Chat and Channel Creation Methods should emit onBrowsePressed and set showChannelDropdown to false when browseChannels is called" time="0.169">
    </testcase>
    <testcase classname="SidebarComponent Chat and Channel Creation Methods should emit onCreateChannelPressed and set showChannelDropdown to false when createNewChannel is called" name="SidebarComponent Chat and Channel Creation Methods should emit onCreateChannelPressed and set showChannelDropdown to false when createNewChannel is called" time="0.22">
    </testcase>
    <testcase classname="SidebarComponent openFilterExercisesDialog should subscribe to filterApplied from modal" name="SidebarComponent openFilterExercisesDialog should subscribe to filterApplied from modal" time="0.193">
    </testcase>
    <testcase classname="SidebarComponent openFilterExercisesDialog should update variables correctly when filterApplied is emitted" name="SidebarComponent openFilterExercisesDialog should update variables correctly when filterApplied is emitted" time="0.152">
    </testcase>
    <testcase classname="SidebarComponent openFilterExercisesDialog should show &quot;Create Channel&quot; button when canCreateChannel is true" name="SidebarComponent openFilterExercisesDialog should show &quot;Create Channel&quot; button when canCreateChannel is true" time="0.148">
    </testcase>
    <testcase classname="SidebarComponent openFilterExercisesDialog should not show &quot;Create Channel&quot; button when canCreateChannel is false" name="SidebarComponent openFilterExercisesDialog should not show &quot;Create Channel&quot; button when canCreateChannel is false" time="0.205">
    </testcase>
  </testsuite>
  <testsuite name="AnswerPostComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:01" time="6.864" tests="19">
    <testcase classname="AnswerPostComponent should contain the posting header when isConsecutive is false" name="AnswerPostComponent should contain the posting header when isConsecutive is false" time="1.327">
    </testcase>
    <testcase classname="AnswerPostComponent should not contain the posting header when isConsecutive is true" name="AnswerPostComponent should not contain the posting header when isConsecutive is true" time="0.112">
    </testcase>
    <testcase classname="AnswerPostComponent should contain reference to container for rendering answerPostCreateEditModal component" name="AnswerPostComponent should contain reference to container for rendering answerPostCreateEditModal component" time="0.287">
    </testcase>
    <testcase classname="AnswerPostComponent should contain component to edit answer post" name="AnswerPostComponent should contain component to edit answer post" time="0.255">
    </testcase>
    <testcase classname="AnswerPostComponent should contain an answer post reactions bar" name="AnswerPostComponent should contain an answer post reactions bar" time="0.251">
    </testcase>
    <testcase classname="AnswerPostComponent should have correct content in posting-content component" name="AnswerPostComponent should have correct content in posting-content component" time="0.232">
    </testcase>
    <testcase classname="AnswerPostComponent should close previous dropdown when another is opened" name="AnswerPostComponent should close previous dropdown when another is opened" time="0.099">
    </testcase>
    <testcase classname="AnswerPostComponent should handle click outside and hide dropdown" name="AnswerPostComponent should handle click outside and hide dropdown" time="0.135">
    </testcase>
    <testcase classname="AnswerPostComponent should disable body scroll" name="AnswerPostComponent should disable body scroll" time="0.116">
    </testcase>
    <testcase classname="AnswerPostComponent should enable body scroll" name="AnswerPostComponent should enable body scroll" time="0.094">
    </testcase>
    <testcase classname="AnswerPostComponent should adjust dropdown position if it overflows the screen width" name="AnswerPostComponent should adjust dropdown position if it overflows the screen width" time="0.125">
    </testcase>
    <testcase classname="AnswerPostComponent should not adjust dropdown position if it does not overflow the screen width" name="AnswerPostComponent should not adjust dropdown position if it does not overflow the screen width" time="0.122">
    </testcase>
    <testcase classname="AnswerPostComponent should update the posting when onPostingUpdated is called" name="AnswerPostComponent should update the posting when onPostingUpdated is called" time="0.098">
    </testcase>
    <testcase classname="AnswerPostComponent should update reactions when onReactionsUpdated is called" name="AnswerPostComponent should update reactions when onReactionsUpdated is called" time="0.114">
    </testcase>
    <testcase classname="AnswerPostComponent should handle onRightClick correctly based on cursor style" name="AnswerPostComponent should handle onRightClick correctly based on cursor style" time="0.101">
    </testcase>
    <testcase classname="AnswerPostComponent should cast the post to answer post on change" name="AnswerPostComponent should cast the post to answer post on change" time="0.092">
    </testcase>
    <testcase classname="AnswerPostComponent should display post-time span when isConsecutive() returns true" name="AnswerPostComponent should display post-time span when isConsecutive() returns true" time="0.123">
    </testcase>
    <testcase classname="AnswerPostComponent should not display post-time span when isConsecutive() returns false" name="AnswerPostComponent should not display post-time span when isConsecutive() returns false" time="0.098">
    </testcase>
    <testcase classname="AnswerPostComponent should display forwardMessage button and invoke forwardMessage function when clicked" name="AnswerPostComponent should display forwardMessage button and invoke forwardMessage function when clicked" time="0.12">
    </testcase>
  </testsuite>
  <testsuite name="Exercise Groups Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:01" time="10.535" tests="23">
    <testcase classname="Exercise Groups Component loads the exercise groups" name="Exercise Groups Component loads the exercise groups" time="0.695">
    </testcase>
    <testcase classname="Exercise Groups Component loads exam information" name="Exercise Groups Component loads exam information" time="0.208">
    </testcase>
    <testcase classname="Exercise Groups Component removes an exercise from group" name="Exercise Groups Component removes an exercise from group" time="0.255">
    </testcase>
    <testcase classname="Exercise Groups Component deletes an exercise group" name="Exercise Groups Component deletes an exercise group" time="0.207">
    </testcase>
    <testcase classname="Exercise Groups Component returns the exercise icon type quiz" name="Exercise Groups Component returns the exercise icon type quiz" time="0.246">
    </testcase>
    <testcase classname="Exercise Groups Component returns the exercise icon type file upload" name="Exercise Groups Component returns the exercise icon type file upload" time="0.157">
    </testcase>
    <testcase classname="Exercise Groups Component returns the exercise icon type modeling" name="Exercise Groups Component returns the exercise icon type modeling" time="0.17">
    </testcase>
    <testcase classname="Exercise Groups Component returns the exercise icon type programming" name="Exercise Groups Component returns the exercise icon type programming" time="0.196">
    </testcase>
    <testcase classname="Exercise Groups Component returns the exercise icon type text" name="Exercise Groups Component returns the exercise icon type text" time="0.24">
    </testcase>
    <testcase classname="Exercise Groups Component opens the import modal and navigates to import page" name="Exercise Groups Component opens the import modal and navigates to import page" time="0.234">
    </testcase>
    <testcase classname="Exercise Groups Component opens the import modal and navigates to import page" name="Exercise Groups Component opens the import modal and navigates to import page" time="0.309">
    </testcase>
    <testcase classname="Exercise Groups Component opens the import modal and navigates to import page" name="Exercise Groups Component opens the import modal and navigates to import page" time="0.325">
    </testcase>
    <testcase classname="Exercise Groups Component opens the import modal and navigates to import page" name="Exercise Groups Component opens the import modal and navigates to import page" time="0.252">
    </testcase>
    <testcase classname="Exercise Groups Component opens the import modal and navigates to import page" name="Exercise Groups Component opens the import modal and navigates to import page" time="0.22">
    </testcase>
    <testcase classname="Exercise Groups Component opens the import modal and navigates to import from file page" name="Exercise Groups Component opens the import modal and navigates to import from file page" time="0.131">
    </testcase>
    <testcase classname="Exercise Groups Component opens the import modal and navigates to import from file page" name="Exercise Groups Component opens the import modal and navigates to import from file page" time="0.159">
    </testcase>
    <testcase classname="Exercise Groups Component opens the import modal and navigates to import from file page" name="Exercise Groups Component opens the import modal and navigates to import from file page" time="0.173">
    </testcase>
    <testcase classname="Exercise Groups Component opens the import modal and navigates to import from file page" name="Exercise Groups Component opens the import modal and navigates to import from file page" time="0.188">
    </testcase>
    <testcase classname="Exercise Groups Component opens the import modal and navigates to import from file page" name="Exercise Groups Component opens the import modal and navigates to import from file page" time="0.19">
    </testcase>
    <testcase classname="Exercise Groups Component moves up an exercise group" name="Exercise Groups Component moves up an exercise group" time="0.146">
    </testcase>
    <testcase classname="Exercise Groups Component moves down an exercise group" name="Exercise Groups Component moves down an exercise group" time="0.222">
    </testcase>
    <testcase classname="Exercise Groups Component maps exercise types to exercise groups" name="Exercise Groups Component maps exercise types to exercise groups" time="0.291">
    </testcase>
    <testcase classname="Exercise Groups Component opens the import modal for exercise groups" name="Exercise Groups Component opens the import modal for exercise groups" time="0.229">
    </testcase>
  </testsuite>
  <testsuite name="Lecture" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:07" time="5.339" tests="12">
    <testcase classname="Lecture should fetch lectures when initialized" name="Lecture should fetch lectures when initialized" time="0.512">
    </testcase>
    <testcase classname="Lecture should delete lecture" name="Lecture should delete lecture" time="0.238">
    </testcase>
    <testcase classname="Lecture should import lecture" name="Lecture should import lecture" time="0.237">
    </testcase>
    <testcase classname="Lecture should show all lectures sorted" name="Lecture should show all lectures sorted" time="0.2">
    </testcase>
    <testcase classname="Lecture should filter for past lectures" name="Lecture should filter for past lectures" time="0.302">
    </testcase>
    <testcase classname="Lecture should filter for current lectures" name="Lecture should filter for current lectures" time="0.246">
    </testcase>
    <testcase classname="Lecture should filter for future lectures" name="Lecture should filter for future lectures" time="0.286">
    </testcase>
    <testcase classname="Lecture should filter for lectures without dates" name="Lecture should filter for lectures without dates" time="0.234">
    </testcase>
    <testcase classname="Lecture should call the service to ingest lectures when ingestLecturesInPyris is called" name="Lecture should call the service to ingest lectures when ingestLecturesInPyris is called" time="0.224">
    </testcase>
    <testcase classname="Lecture should update ingestion states correctly when getIngestionState returns data" name="Lecture should update ingestion states correctly when getIngestionState returns data" time="0.179">
    </testcase>
    <testcase classname="Lecture should not call the service if the first lecture does not exist" name="Lecture should not call the service if the first lecture does not exist" time="0.169">
    </testcase>
    <testcase classname="Lecture should do nothing when error occurs" name="Lecture should do nothing when error occurs" time="0.202">
    </testcase>
  </testsuite>
  <testsuite name="Plagiarism Cases Instructor View Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:08" time="5.55" tests="12">
    <testcase classname="Plagiarism Cases Instructor View Component should set plagiarism case and exercises on initialization" name="Plagiarism Cases Instructor View Component should set plagiarism case and exercises on initialization" time="0.984">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should throw when saving plagiarism case plagiarism verdict before student is notified" name="Plagiarism Cases Instructor View Component should throw when saving plagiarism case plagiarism verdict before student is notified" time="0.041">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should save plagiarism case plagiarism verdict" name="Plagiarism Cases Instructor View Component should save plagiarism case plagiarism verdict" time="0.009">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should save plagiarism case warning verdict" name="Plagiarism Cases Instructor View Component should save plagiarism case warning verdict" time="0.021">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should save plagiarism case point deduction verdict" name="Plagiarism Cases Instructor View Component should save plagiarism case point deduction verdict" time="0.011">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should save plagiarism case no plagiarism verdict" name="Plagiarism Cases Instructor View Component should save plagiarism case no plagiarism verdict" time="0.007">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should create student notification for course exercise" name="Plagiarism Cases Instructor View Component should create student notification for course exercise" time="0.018">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should create student notification for exam exercise" name="Plagiarism Cases Instructor View Component should create student notification for exam exercise" time="0.038">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should create student notification with empty names and titles" name="Plagiarism Cases Instructor View Component should create student notification with empty names and titles" time="0.016">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should notify student" name="Plagiarism Cases Instructor View Component should notify student" time="0.008">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should not display post unrelated to the current plagiarism case" name="Plagiarism Cases Instructor View Component should not display post unrelated to the current plagiarism case" time="0.021">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should delete post successfully" name="Plagiarism Cases Instructor View Component should delete post successfully" time="0.036">
    </testcase>
  </testsuite>
  <testsuite name="QuizExercise Statistic Footer Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:12" time="2.332" tests="19">
    <testcase classname="QuizExercise Statistic Footer Component should load Quiz on Init" name="QuizExercise Statistic Footer Component should load Quiz on Init" time="0.049">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component should set quiz and update properties" name="QuizExercise Statistic Footer Component should set quiz and update properties" time="0.009">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component should return remaining Time" name="QuizExercise Statistic Footer Component should return remaining Time" time="0.01">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component test previous statistic should go to quiz-point-statistic" name="QuizExercise Statistic Footer Component test previous statistic should go to quiz-point-statistic" time="0.007">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component test previous statistic should go to quiz-statistic" name="QuizExercise Statistic Footer Component test previous statistic should go to quiz-statistic" time="0.007">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component test previous statistic should go to previous statistic" name="QuizExercise Statistic Footer Component test previous statistic should go to previous statistic" time="0.014">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component test previous statistic should call util previous Statistic" name="QuizExercise Statistic Footer Component test previous statistic should call util previous Statistic" time="0.007">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component test previous statistic for exams should go to quiz-point-statistic for exam" name="QuizExercise Statistic Footer Component test previous statistic for exams should go to quiz-point-statistic for exam" time="0.007">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component test previous statistic for exams should go to quiz-statistic for exam" name="QuizExercise Statistic Footer Component test previous statistic for exams should go to quiz-statistic for exam" time="0.007">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component test previous statistic for exams should go to previous statistic for exam" name="QuizExercise Statistic Footer Component test previous statistic for exams should go to previous statistic for exam" time="0.014">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component test previous statistic for exams should call util previous Statistic for exam" name="QuizExercise Statistic Footer Component test previous statistic for exams should call util previous Statistic for exam" time="0.009">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component test next statistic should go to quiz-statistic" name="QuizExercise Statistic Footer Component test next statistic should go to quiz-statistic" time="0.019">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component test next statistic should go to quiz-statistic with points" name="QuizExercise Statistic Footer Component test next statistic should go to quiz-statistic with points" time="0.007">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component test next statistic should go to next statistic" name="QuizExercise Statistic Footer Component test next statistic should go to next statistic" time="0.023">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component test next statistic should call util next Statistic" name="QuizExercise Statistic Footer Component test next statistic should call util next Statistic" time="0.006">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component test next statistic for exams should go to quiz-statistic for exam" name="QuizExercise Statistic Footer Component test next statistic for exams should go to quiz-statistic for exam" time="0.012">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component test next statistic for exams should go to quiz-statistic with points for exam" name="QuizExercise Statistic Footer Component test next statistic for exams should go to quiz-statistic with points for exam" time="0.01">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component test next statistic for exams should go to next statistic for exam" name="QuizExercise Statistic Footer Component test next statistic for exams should go to next statistic for exam" time="0.007">
    </testcase>
    <testcase classname="QuizExercise Statistic Footer Component test next statistic for exams should call util next Statistic for exam" name="QuizExercise Statistic Footer Component test next statistic for exams should call util next Statistic for exam" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="StatisticsAverageScoreGraphComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:08" time="7.416" tests="19">
    <testcase classname="StatisticsAverageScoreGraphComponent should initialize" name="StatisticsAverageScoreGraphComponent should initialize" time="0.852">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent should return the correct type stringification for the tooltips" name="StatisticsAverageScoreGraphComponent should return the correct type stringification for the tooltips" time="0.106">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent should delegate the user to the correct pages" name="StatisticsAverageScoreGraphComponent should delegate the user to the correct pages" time="0.117">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent should switch time span" name="StatisticsAverageScoreGraphComponent should switch time span" time="0.077">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent test filtering should filter for type correctly if only one type is selected" name="StatisticsAverageScoreGraphComponent test filtering should filter for type correctly if only one type is selected" time="0.107">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent test filtering should filter for type correctly if only one type is selected" name="StatisticsAverageScoreGraphComponent test filtering should filter for type correctly if only one type is selected" time="0.105">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent test filtering should filter for type correctly if only one type is selected" name="StatisticsAverageScoreGraphComponent test filtering should filter for type correctly if only one type is selected" time="0.089">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent test filtering should filter for type correctly if only one type is selected" name="StatisticsAverageScoreGraphComponent test filtering should filter for type correctly if only one type is selected" time="0.121">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent test filtering should filter for type correctly if only one type is selected" name="StatisticsAverageScoreGraphComponent test filtering should filter for type correctly if only one type is selected" time="0.121">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent test filtering should filter for category correctly if only one category is selected" name="StatisticsAverageScoreGraphComponent test filtering should filter for category correctly if only one category is selected" time="0.109">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent test filtering should filter for category correctly if only one category is selected" name="StatisticsAverageScoreGraphComponent test filtering should filter for category correctly if only one category is selected" time="0.092">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent test filtering should filter all categories" name="StatisticsAverageScoreGraphComponent test filtering should filter all categories" time="0.113">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent test filtering should filter exercises with no category" name="StatisticsAverageScoreGraphComponent test filtering should filter exercises with no category" time="0.076">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent test filtering should filter correctly if lowest third is selected" name="StatisticsAverageScoreGraphComponent test filtering should filter correctly if lowest third is selected" time="0.11">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent test filtering should filter correctly if average third is selected" name="StatisticsAverageScoreGraphComponent test filtering should filter correctly if average third is selected" time="0.085">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent test filtering should filter correctly if best third is selected" name="StatisticsAverageScoreGraphComponent test filtering should filter correctly if best third is selected" time="0.109">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent test filtering should filter correctly if lowest and average third is selected" name="StatisticsAverageScoreGraphComponent test filtering should filter correctly if lowest and average third is selected" time="0.097">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent test filtering should filter correctly if lowest and best third is selected" name="StatisticsAverageScoreGraphComponent test filtering should filter correctly if lowest and best third is selected" time="0.062">
    </testcase>
    <testcase classname="StatisticsAverageScoreGraphComponent test filtering should filter correctly if median and best third is selected" name="StatisticsAverageScoreGraphComponent test filtering should filter correctly if median and best third is selected" time="0.08">
    </testcase>
  </testsuite>
  <testsuite name="FileUploadExamSubmissionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:12" time="3.322" tests="18">
    <testcase classname="FileUploadExamSubmissionComponent With exercise should initialize" name="FileUploadExamSubmissionComponent With exercise should initialize" time="0.251">
    </testcase>
    <testcase classname="FileUploadExamSubmissionComponent With exercise should show static text in header" name="FileUploadExamSubmissionComponent With exercise should show static text in header" time="0.075">
    </testcase>
    <testcase classname="FileUploadExamSubmissionComponent With exercise should show exercise max score if any" name="FileUploadExamSubmissionComponent With exercise should show exercise max score if any" time="0.084">
    </testcase>
    <testcase classname="FileUploadExamSubmissionComponent With exercise should show exercise bonus score if any" name="FileUploadExamSubmissionComponent With exercise should show exercise bonus score if any" time="0.101">
    </testcase>
    <testcase classname="FileUploadExamSubmissionComponent With exercise should show problem statement if there is any" name="FileUploadExamSubmissionComponent With exercise should show problem statement if there is any" time="0.069">
    </testcase>
    <testcase classname="FileUploadExamSubmissionComponent ngOnInit should call updateViewFromSubmission" name="FileUploadExamSubmissionComponent ngOnInit should call updateViewFromSubmission" time="0.072">
    </testcase>
    <testcase classname="FileUploadExamSubmissionComponent getSubmission should return student submission" name="FileUploadExamSubmissionComponent getSubmission should return student submission" time="0.05">
    </testcase>
    <testcase classname="FileUploadExamSubmissionComponent getExercise should return exercise" name="FileUploadExamSubmissionComponent getExercise should return exercise" time="0.066">
    </testcase>
    <testcase classname="FileUploadExamSubmissionComponent updateProblemStatement should update problem statement" name="FileUploadExamSubmissionComponent updateProblemStatement should update problem statement" time="0.105">
    </testcase>
    <testcase classname="FileUploadExamSubmissionComponent updateSubmissionFromView should do nothing" name="FileUploadExamSubmissionComponent updateSubmissionFromView should do nothing" time="0.085">
    </testcase>
    <testcase classname="FileUploadExamSubmissionComponent hasUnsavedChanges should return true if isSynced false" name="FileUploadExamSubmissionComponent hasUnsavedChanges should return true if isSynced false" time="0.062">
    </testcase>
    <testcase classname="FileUploadExamSubmissionComponent hasUnsavedChanges should return false if isSynced true" name="FileUploadExamSubmissionComponent hasUnsavedChanges should return false if isSynced true" time="0.042">
    </testcase>
    <testcase classname="FileUploadExamSubmissionComponent updateViewFromSubmission should do nothing if isSynced is false" name="FileUploadExamSubmissionComponent updateViewFromSubmission should do nothing if isSynced is false" time="0.068">
    </testcase>
    <testcase classname="FileUploadExamSubmissionComponent updateViewFromSubmission should set submitted filename and file extension" name="FileUploadExamSubmissionComponent updateViewFromSubmission should set submitted filename and file extension" time="0.068">
    </testcase>
    <testcase classname="FileUploadExamSubmissionComponent Too big file can not be submitted" name="FileUploadExamSubmissionComponent Too big file can not be submitted" time="0.104">
    </testcase>
    <testcase classname="FileUploadExamSubmissionComponent Incorrect file type can not be submitted" name="FileUploadExamSubmissionComponent Incorrect file type can not be submitted" time="0.112">
    </testcase>
    <testcase classname="FileUploadExamSubmissionComponent saveUploadedFile should just return if submissionFile is undefined" name="FileUploadExamSubmissionComponent saveUploadedFile should just return if submissionFile is undefined" time="0.067">
    </testcase>
    <testcase classname="FileUploadExamSubmissionComponent saveUploadedFile should save if submissionFile is defined" name="FileUploadExamSubmissionComponent saveUploadedFile should save if submissionFile is defined" time="0.071">
    </testcase>
  </testsuite>
  <testsuite name="satisfiesDifficultyFilter" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:15" time="1.112" tests="19">
    <testcase classname="satisfiesDifficultyFilter should return true if difficulty filter is undefined" name="satisfiesDifficultyFilter should return true if difficulty filter is undefined" time="0.005">
    </testcase>
    <testcase classname="satisfiesDifficultyFilter should return true if difficulty filter is []" name="satisfiesDifficultyFilter should return true if difficulty filter is []" time="0.001">
    </testcase>
    <testcase classname="satisfiesDifficultyFilter should return true if difficulty is in difficulty filter" name="satisfiesDifficultyFilter should return true if difficulty is in difficulty filter" time="0.004">
    </testcase>
    <testcase classname="satisfiesDifficultyFilter should return false if difficulty is NOT in difficulty filter" name="satisfiesDifficultyFilter should return false if difficulty is NOT in difficulty filter" time="0.001">
    </testcase>
    <testcase classname="satisfiesCategoryFilter should return true if difficulty filter is []" name="satisfiesCategoryFilter should return true if difficulty filter is []" time="0.001">
    </testcase>
    <testcase classname="satisfiesCategoryFilter should return true category is included in difficulty filter" name="satisfiesCategoryFilter should return true category is included in difficulty filter" time="0.007">
    </testcase>
    <testcase classname="satisfiesCategoryFilter should return false if difficulty is NOT in difficulty filter" name="satisfiesCategoryFilter should return false if difficulty is NOT in difficulty filter" time="0.001">
    </testcase>
    <testcase classname="satisfiesScoreFilter should return true if score filter is undefined" name="satisfiesScoreFilter should return true if score filter is undefined" time="0.006">
    </testcase>
    <testcase classname="satisfiesScoreFilter should return true if score filter is not applied" name="satisfiesScoreFilter should return true if score filter is not applied" time="0.001">
    </testcase>
    <testcase classname="satisfiesScoreFilter should return true if score is in score filter" name="satisfiesScoreFilter should return true if score is in score filter" time="0.001">
    </testcase>
    <testcase classname="satisfiesScoreFilter should return false if score is NOT in score filter" name="satisfiesScoreFilter should return false if score is NOT in score filter" time="0.007">
    </testcase>
    <testcase classname="satisfiesScoreFilter should return true if score of participation is not defined (not participated) and lower bound is 0" name="satisfiesScoreFilter should return true if score of participation is not defined (not participated) and lower bound is 0" time="0.001">
    </testcase>
    <testcase classname="satisfiesScoreFilter should return false if score of participation is not defined (not participated) and lower bound is NOT 0" name="satisfiesScoreFilter should return false if score of participation is not defined (not participated) and lower bound is NOT 0" time="0.001">
    </testcase>
    <testcase classname="satisfiesPointsFilter should return true if points filter is undefined" name="satisfiesPointsFilter should return true if points filter is undefined" time="0.001">
    </testcase>
    <testcase classname="satisfiesPointsFilter should return true if points filter is not applied" name="satisfiesPointsFilter should return true if points filter is not applied" time="0.004">
    </testcase>
    <testcase classname="satisfiesPointsFilter should return true if points is in points filter" name="satisfiesPointsFilter should return true if points is in points filter" time="0.003">
    </testcase>
    <testcase classname="satisfiesPointsFilter should return false if points is NOT in points filter" name="satisfiesPointsFilter should return false if points is NOT in points filter" time="0.005">
    </testcase>
    <testcase classname="satisfiesFilters should return true if item satisfies filters" name="satisfiesFilters should return true if item satisfies filters" time="0.001">
    </testcase>
    <testcase classname="satisfiesFilters should return false if item does not satisfy the score filter" name="satisfiesFilters should return false if item does not satisfy the score filter" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseTask Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:16" time="1.61" tests="13">
    <testcase classname="ProgrammingExerciseTask Service should get tasks from server" name="ProgrammingExerciseTask Service should get tasks from server" time="0.028">
    </testcase>
    <testcase classname="ProgrammingExerciseTask Service should create correct task options from test cases" name="ProgrammingExerciseTask Service should create correct task options from test cases" time="0.01">
    </testcase>
    <testcase classname="ProgrammingExerciseTask Service should assign tests correct grading statistics" name="ProgrammingExerciseTask Service should assign tests correct grading statistics" time="0.005">
    </testcase>
    <testcase classname="ProgrammingExerciseTask Service should handle inactive test cases correctly if they are ignored" name="ProgrammingExerciseTask Service should handle inactive test cases correctly if they are ignored" time="0.005">
    </testcase>
    <testcase classname="ProgrammingExerciseTask Service should handle inactive test cases correctly if they are not ignored" name="ProgrammingExerciseTask Service should handle inactive test cases correctly if they are not ignored" time="0.005">
    </testcase>
    <testcase classname="ProgrammingExerciseTask Service should update test resulting points correctly" name="ProgrammingExerciseTask Service should update test resulting points correctly" time="0.019">
    </testcase>
    <testcase classname="ProgrammingExerciseTask Service should save test case configuration" name="ProgrammingExerciseTask Service should save test case configuration" time="0.011">
    </testcase>
    <testcase classname="ProgrammingExerciseTask Service should show an error alert when test case weights below zero when saving" name="ProgrammingExerciseTask Service should show an error alert when test case weights below zero when saving" time="0.008">
    </testcase>
    <testcase classname="ProgrammingExerciseTask Service should NOT show an error alert when test case weights zero when saving" name="ProgrammingExerciseTask Service should NOT show an error alert when test case weights zero when saving" time="0.012">
    </testcase>
    <testcase classname="ProgrammingExerciseTask Service should reset test case configuration" name="ProgrammingExerciseTask Service should reset test case configuration" time="0.012">
    </testcase>
    <testcase classname="ProgrammingExerciseTask Service should correctly detect unsaved changes" name="ProgrammingExerciseTask Service should correctly detect unsaved changes" time="0.005">
    </testcase>
    <testcase classname="ProgrammingExerciseTask Service should remove tasks with only duplicated tests cases" name="ProgrammingExerciseTask Service should remove tasks with only duplicated tests cases" time="0.006">
    </testcase>
    <testcase classname="ProgrammingExerciseTask Service should remove duplicated tests cases from tasks" name="ProgrammingExerciseTask Service should remove duplicated tests cases from tasks" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="ForwardedMessageComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:14" time="4.19" tests="22">
    <testcase classname="ForwardedMessageComponent should create the component" name="ForwardedMessageComponent should create the component" time="0.405">
    </testcase>
    <testcase classname="ForwardedMessageComponent should call updateSourceName and update todayFlag when originalPostDetails changes" name="ForwardedMessageComponent should call updateSourceName and update todayFlag when originalPostDetails changes" time="0.112">
    </testcase>
    <testcase classname="ForwardedMessageComponent should set sourceName correctly for a channel post" name="ForwardedMessageComponent should set sourceName correctly for a channel post" time="0.092">
    </testcase>
    <testcase classname="ForwardedMessageComponent should set sourceName correctly for a one-to-one chat post when isAnswerPost is false" name="ForwardedMessageComponent should set sourceName correctly for a one-to-one chat post when isAnswerPost is false" time="0.152">
    </testcase>
    <testcase classname="ForwardedMessageComponent should set sourceName correctly for a one-to-one chat post when isAnswerPost is true" name="ForwardedMessageComponent should set sourceName correctly for a one-to-one chat post when isAnswerPost is true" time="0.045">
    </testcase>
    <testcase classname="ForwardedMessageComponent should set todayFlag to &quot;artemisApp.metis.today&quot; if post is created today" name="ForwardedMessageComponent should set todayFlag to &quot;artemisApp.metis.today&quot; if post is created today" time="0.041">
    </testcase>
    <testcase classname="ForwardedMessageComponent should set todayFlag to undefined if post is not created today" name="ForwardedMessageComponent should set todayFlag to undefined if post is not created today" time="0.088">
    </testcase>
    <testcase classname="ForwardedMessageComponent should set sourceName correctly for a group chat post when isAnswerPost is true" name="ForwardedMessageComponent should set sourceName correctly for a group chat post when isAnswerPost is true" time="0.05">
    </testcase>
    <testcase classname="ForwardedMessageComponent should set sourceName correctly for a group chat post when isAnswerPost is false" name="ForwardedMessageComponent should set sourceName correctly for a group chat post when isAnswerPost is false" time="0.104">
    </testcase>
    <testcase classname="ForwardedMessageComponent should set sourceName to &quot;#unknown |&quot; for channel post without name and isAnswerPost false" name="ForwardedMessageComponent should set sourceName to &quot;#unknown |&quot; for channel post without name and isAnswerPost false" time="0.069">
    </testcase>
    <testcase classname="ForwardedMessageComponent should set sourceName correctly for an unknown conversation type when isAnswerPost is true" name="ForwardedMessageComponent should set sourceName correctly for an unknown conversation type when isAnswerPost is true" time="0.09">
    </testcase>
    <testcase classname="ForwardedMessageComponent should set sourceName correctly for an unknown conversation type when isAnswerPost is false" name="ForwardedMessageComponent should set sourceName correctly for an unknown conversation type when isAnswerPost is false" time="0.069">
    </testcase>
    <testcase classname="ForwardedMessageComponent should set sourceName to empty string when conversation is undefined" name="ForwardedMessageComponent should set sourceName to empty string when conversation is undefined" time="0.084">
    </testcase>
    <testcase classname="ForwardedMessageComponent should emit onNavigateToPost event when onTriggerNavigateToPost is called" name="ForwardedMessageComponent should emit onNavigateToPost event when onTriggerNavigateToPost is called" time="0.102">
    </testcase>
    <testcase classname="ForwardedMessageComponent should update sourceName correctly based on isAnswerPost flag (true case)" name="ForwardedMessageComponent should update sourceName correctly based on isAnswerPost flag (true case)" time="0.038">
    </testcase>
    <testcase classname="ForwardedMessageComponent should update sourceName correctly based on isAnswerPost flag (false case)" name="ForwardedMessageComponent should update sourceName correctly based on isAnswerPost flag (false case)" time="0.083">
    </testcase>
    <testcase classname="ForwardedMessageComponent should update sourceName correctly when updateSourceName is called manually" name="ForwardedMessageComponent should update sourceName correctly when updateSourceName is called manually" time="0.071">
    </testcase>
    <testcase classname="ForwardedMessageComponent should handle missing conversation gracefully in updateSourceName" name="ForwardedMessageComponent should handle missing conversation gracefully in updateSourceName" time="0.086">
    </testcase>
    <testcase classname="ForwardedMessageComponent should toggle showFullForwardedMessage when toggleShowFullForwardedMessage is called" name="ForwardedMessageComponent should toggle showFullForwardedMessage when toggleShowFullForwardedMessage is called" time="0.062">
    </testcase>
    <testcase classname="ForwardedMessageComponent should set isContentLong to true if content overflows" name="ForwardedMessageComponent should set isContentLong to true if content overflows" time="0.071">
    </testcase>
    <testcase classname="ForwardedMessageComponent should set isContentLong to false if content does not overflow" name="ForwardedMessageComponent should set isContentLong to false if content does not overflow" time="0.049">
    </testcase>
    <testcase classname="ForwardedMessageComponent should call checkIfContentOverflows in ngAfterViewInit" name="ForwardedMessageComponent should call checkIfContentOverflows in ngAfterViewInit" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="Plagiarism Inspector Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:14" time="4.757" tests="18">
    <testcase classname="Plagiarism Inspector Component should return the correct topic url" name="Plagiarism Inspector Component should return the correct topic url" time="0.3">
    </testcase>
    <testcase classname="Plagiarism Inspector Component should get the minimumSize tooltip for programming" name="Plagiarism Inspector Component should get the minimumSize tooltip for programming" time="0.016">
    </testcase>
    <testcase classname="Plagiarism Inspector Component should get the minimumSize tootip for text" name="Plagiarism Inspector Component should get the minimumSize tootip for text" time="0.016">
    </testcase>
    <testcase classname="Plagiarism Inspector Component should fetch the plagiarism detection results for programming exercises" name="Plagiarism Inspector Component should fetch the plagiarism detection results for programming exercises" time="0.029">
    </testcase>
    <testcase classname="Plagiarism Inspector Component should fetch the plagiarism detection results for text exercises" name="Plagiarism Inspector Component should fetch the plagiarism detection results for text exercises" time="0.027">
    </testcase>
    <testcase classname="Plagiarism Inspector Component should select a comparison at the given index" name="Plagiarism Inspector Component should select a comparison at the given index" time="0.022">
    </testcase>
    <testcase classname="Plagiarism Inspector Component should download the plagiarism detection results as JSON" name="Plagiarism Inspector Component should download the plagiarism detection results as JSON" time="0.022">
    </testcase>
    <testcase classname="Plagiarism Inspector Component should download the plagiarism detection results as CSV" name="Plagiarism Inspector Component should download the plagiarism detection results as CSV" time="0.022">
    </testcase>
    <testcase classname="Plagiarism Inspector Component should get the latest plagiarism result for programming exercise" name="Plagiarism Inspector Component should get the latest plagiarism result for programming exercise" time="0.023">
    </testcase>
    <testcase classname="Plagiarism Inspector Component should get the latest plagiarism result for text exercise" name="Plagiarism Inspector Component should get the latest plagiarism result for text exercise" time="0.016">
    </testcase>
    <testcase classname="Plagiarism Inspector Component should be programming exercise" name="Plagiarism Inspector Component should be programming exercise" time="0.016">
    </testcase>
    <testcase classname="Plagiarism Inspector Component should not be programming exercise" name="Plagiarism Inspector Component should not be programming exercise" time="0.028">
    </testcase>
    <testcase classname="Plagiarism Inspector Component should trigger similarity distribution" name="Plagiarism Inspector Component should trigger similarity distribution" time="0.015">
    </testcase>
    <testcase classname="Plagiarism Inspector Component test chart interactivity should apply filter and reset it" name="Plagiarism Inspector Component test chart interactivity should apply filter and reset it" time="0.018">
    </testcase>
    <testcase classname="Plagiarism Inspector Component test chart interactivity should return the selected comparison" name="Plagiarism Inspector Component test chart interactivity should return the selected comparison" time="0.018">
    </testcase>
    <testcase classname="Plagiarism Inspector Component should clean up plagiarism" name="Plagiarism Inspector Component should clean up plagiarism" time="0.014">
    </testcase>
    <testcase classname="Plagiarism Inspector Component should clean up plagiarism and delete all plagiarism comparisons" name="Plagiarism Inspector Component should clean up plagiarism and delete all plagiarism comparisons" time="0.011">
    </testcase>
    <testcase classname="Plagiarism Inspector Component should call cleanUpPlagiarism on confirm modal" name="Plagiarism Inspector Component should call cleanUpPlagiarism on confirm modal" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="PostingDirective" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:18" time="1.411" tests="23">
    <testcase classname="PostingDirective should initialize content on ngOnInit" name="PostingDirective should initialize content on ngOnInit" time="0.029">
    </testcase>
    <testcase classname="PostingDirective should call editPosting on reactionsBar and hide dropdown" name="PostingDirective should call editPosting on reactionsBar and hide dropdown" time="0.01">
    </testcase>
    <testcase classname="PostingDirective should call togglePin on reactionsBar and hide dropdown" name="PostingDirective should call togglePin on reactionsBar and hide dropdown" time="0.024">
    </testcase>
    <testcase classname="PostingDirective should call deletePosting on reactionsBar and hide dropdown" name="PostingDirective should call deletePosting on reactionsBar and hide dropdown" time="0.008">
    </testcase>
    <testcase classname="PostingDirective should return display priority from reactionsBar" name="PostingDirective should return display priority from reactionsBar" time="0.008">
    </testcase>
    <testcase classname="PostingDirective should call selectReaction on reactionsBar and hide reaction selector" name="PostingDirective should call selectReaction on reactionsBar and hide reaction selector" time="0.011">
    </testcase>
    <testcase classname="PostingDirective should add reaction and set click position" name="PostingDirective should add reaction and set click position" time="0.011">
    </testcase>
    <testcase classname="PostingDirective should toggle reaction selector visibility" name="PostingDirective should toggle reaction selector visibility" time="0.007">
    </testcase>
    <testcase classname="PostingDirective should not proceed in onUserNameClicked if author is not set" name="PostingDirective should not proceed in onUserNameClicked if author is not set" time="0.008">
    </testcase>
    <testcase classname="PostingDirective should not proceed in onUserNameClicked if messaging is not enabled" name="PostingDirective should not proceed in onUserNameClicked if messaging is not enabled" time="0.013">
    </testcase>
    <testcase classname="PostingDirective should not proceed in onUserReferenceClicked if messaging is not enabled" name="PostingDirective should not proceed in onUserReferenceClicked if messaging is not enabled" time="0.007">
    </testcase>
    <testcase classname="PostingDirective should create one-to-one chat in onUserNameClicked when messaging is enabled" name="PostingDirective should create one-to-one chat in onUserNameClicked when messaging is enabled" time="0.046">
    </testcase>
    <testcase classname="PostingDirective should create one-to-one chat in onUserReferenceClicked when messaging is enabled" name="PostingDirective should create one-to-one chat in onUserReferenceClicked when messaging is enabled" time="0.024">
    </testcase>
    <testcase classname="PostingDirective should set isDeleted to true when delete event is triggered" name="PostingDirective should set isDeleted to true when delete event is triggered" time="0.024">
    </testcase>
    <testcase classname="PostingDirective should set isDeleted to false when delete event is false" name="PostingDirective should set isDeleted to false when delete event is false" time="0.011">
    </testcase>
    <testcase classname="PostingDirective should clear existing delete timer and interval before setting up new ones" name="PostingDirective should clear existing delete timer and interval before setting up new ones" time="0.01">
    </testcase>
    <testcase classname="PostingDirective should set delete timer to initial value when delete is true" name="PostingDirective should set delete timer to initial value when delete is true" time="0.016">
    </testcase>
    <testcase classname="PostingDirective should call metisService.deletePost for regular post" name="PostingDirective should call metisService.deletePost for regular post" time="0.017">
    </testcase>
    <testcase classname="PostingDirective should call metisService.deleteAnswerPost for answer post" name="PostingDirective should call metisService.deleteAnswerPost for answer post" time="0.007">
    </testcase>
    <testcase classname="PostingDirective should set up interval to decrement delete timer" name="PostingDirective should set up interval to decrement delete timer" time="0.007">
    </testcase>
    <testcase classname="PostingDirective should stop timer at 0 when decrementing" name="PostingDirective should stop timer at 0 when decrementing" time="0.015">
    </testcase>
    <testcase classname="PostingDirective should do nothing if delete event is false" name="PostingDirective should do nothing if delete event is false" time="0.013">
    </testcase>
    <testcase classname="PostingDirective should call forwardMessage on reactionsBar" name="PostingDirective should call forwardMessage on reactionsBar" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="IrisSettingsUpdateComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:16" time="5.731" tests="12">
    <testcase classname="IrisSettingsUpdateComponent should display the checkbox for lecture ingestion when settingsType is COURSE" name="IrisSettingsUpdateComponent should display the checkbox for lecture ingestion when settingsType is COURSE" time="0.472">
    </testcase>
    <testcase classname="IrisSettingsUpdateComponent fillEmptyIrisSubSettings should do nothing if irisSettings is undefined" name="IrisSettingsUpdateComponent fillEmptyIrisSubSettings should do nothing if irisSettings is undefined" time="0.12">
    </testcase>
    <testcase classname="IrisSettingsUpdateComponent fillEmptyIrisSubSettings should create each sub-setting if not defined" name="IrisSettingsUpdateComponent fillEmptyIrisSubSettings should create each sub-setting if not defined" time="0.131">
    </testcase>
    <testcase classname="IrisSettingsUpdateComponent fillEmptyIrisSubSettings should preserve existing sub-settings and only create missing ones" name="IrisSettingsUpdateComponent fillEmptyIrisSubSettings should preserve existing sub-settings and only create missing ones" time="0.167">
    </testcase>
    <testcase classname="IrisSettingsUpdateComponent loadParentIrisSettingsObservable should call getGlobalSettings for COURSE" name="IrisSettingsUpdateComponent loadParentIrisSettingsObservable should call getGlobalSettings for COURSE" time="0.227">
    </testcase>
    <testcase classname="IrisSettingsUpdateComponent loadParentIrisSettingsObservable should call getCombinedCourseSettings for EXERCISE" name="IrisSettingsUpdateComponent loadParentIrisSettingsObservable should call getCombinedCourseSettings for EXERCISE" time="0.141">
    </testcase>
    <testcase classname="IrisSettingsUpdateComponent loadIrisSettingsObservable should call getGlobalSettings for GLOBAL" name="IrisSettingsUpdateComponent loadIrisSettingsObservable should call getGlobalSettings for GLOBAL" time="0.144">
    </testcase>
    <testcase classname="IrisSettingsUpdateComponent loadIrisSettingsObservable should call getUncombinedCourseSettings for COURSE" name="IrisSettingsUpdateComponent loadIrisSettingsObservable should call getUncombinedCourseSettings for COURSE" time="0.156">
    </testcase>
    <testcase classname="IrisSettingsUpdateComponent loadIrisSettingsObservable should call getUncombinedExerciseSettings for EXERCISE" name="IrisSettingsUpdateComponent loadIrisSettingsObservable should call getUncombinedExerciseSettings for EXERCISE" time="0.169">
    </testcase>
    <testcase classname="IrisSettingsUpdateComponent saveIrisSettingsObservable should call setGlobalSettings for GLOBAL" name="IrisSettingsUpdateComponent saveIrisSettingsObservable should call setGlobalSettings for GLOBAL" time="0.226">
    </testcase>
    <testcase classname="IrisSettingsUpdateComponent saveIrisSettingsObservable should call setCourseSettings for COURSE" name="IrisSettingsUpdateComponent saveIrisSettingsObservable should call setCourseSettings for COURSE" time="0.161">
    </testcase>
    <testcase classname="IrisSettingsUpdateComponent saveIrisSettingsObservable should call setExerciseSettings for EXERCISE" name="IrisSettingsUpdateComponent saveIrisSettingsObservable should call setExerciseSettings for EXERCISE" time="0.19">
    </testcase>
  </testsuite>
  <testsuite name="AthenaService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:20" time="3.01" tests="7">
    <testcase classname="AthenaService should return true if athena is enabled" name="AthenaService should return true if athena is enabled" time="0.016">
    </testcase>
    <testcase classname="AthenaService should return false if athena is disabled" name="AthenaService should return false if athena is disabled" time="0.004">
    </testcase>
    <testcase classname="AthenaService should get feedback suggestions when athena is enabled" name="AthenaService should get feedback suggestions when athena is enabled" time="0.011">
    </testcase>
    <testcase classname="AthenaService should return no feedback suggestions when feedback suggestions are disabled on the exercise" name="AthenaService should return no feedback suggestions when feedback suggestions are disabled on the exercise" time="0.004">
    </testcase>
    <testcase classname="AthenaService should return no feedback suggestions when athena is disabled on the server" name="AthenaService should return no feedback suggestions when athena is disabled on the server" time="0.022">
    </testcase>
    <testcase classname="AthenaService should return no modules when athena is disabled on the server" name="AthenaService should return no modules when athena is disabled on the server" time="0.006">
    </testcase>
    <testcase classname="AthenaService should get available modules when athena is enabled" name="AthenaService should get available modules when athena is enabled" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Alert Service Test" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:22" time="1.564" tests="22">
    <testcase classname="Alert Service Test should produce a proper alert object and fetch it" name="Alert Service Test should produce a proper alert object and fetch it" time="0.03">
    </testcase>
    <testcase classname="Alert Service Test should close an alert correctly" name="Alert Service Test should close an alert correctly" time="0.03">
    </testcase>
    <testcase classname="Alert Service Test should close an alert on timeout correctly" name="Alert Service Test should close an alert on timeout correctly" time="0.007">
    </testcase>
    <testcase classname="Alert Service Test should clear alerts" name="Alert Service Test should clear alerts" time="0.008">
    </testcase>
    <testcase classname="Alert Service Test should produce a success message" name="Alert Service Test should produce a success message" time="0.005">
    </testcase>
    <testcase classname="Alert Service Test should produce a error message" name="Alert Service Test should produce a error message" time="0.007">
    </testcase>
    <testcase classname="Alert Service Test should produce a warning message" name="Alert Service Test should produce a warning message" time="0.005">
    </testcase>
    <testcase classname="Alert Service Test should produce a info message" name="Alert Service Test should produce a info message" time="0.005">
    </testcase>
    <testcase classname="Alert Service Test should produce a info message with translated message if key exists" name="Alert Service Test should produce a info message with translated message if key exists" time="0.007">
    </testcase>
    <testcase classname="Alert Service Test should produce a info message with provided message if key does not exists" name="Alert Service Test should produce a info message with provided message if key does not exists" time="0.008">
    </testcase>
    <testcase classname="Alert Service Test should produce a info message with provided key if translation key does not exist in translations and message is not provided" name="Alert Service Test should produce a info message with provided key if translation key does not exist in translations and message is not provided" time="0.005">
    </testcase>
    <testcase classname="Alert Service Test should display an alert on status 0" name="Alert Service Test should display an alert on status 0" time="0.005">
    </testcase>
    <testcase classname="Alert Service Test should not display an alert on status 404" name="Alert Service Test should not display an alert on status 404" time="0.011">
    </testcase>
    <testcase classname="Alert Service Test should display an alert on status 400 for generic error and use the error title" name="Alert Service Test should display an alert on status 400 for generic error and use the error title" time="0.021">
    </testcase>
    <testcase classname="Alert Service Test should not display an alert on status 400 for errors without message" name="Alert Service Test should not display an alert on status 400 for errors without message" time="0.005">
    </testcase>
    <testcase classname="Alert Service Test should display an alert on status 400 for invalid parameters" name="Alert Service Test should display an alert on status 400 for invalid parameters" time="0.006">
    </testcase>
    <testcase classname="Alert Service Test should display an alert on status 400 for error headers" name="Alert Service Test should display an alert on status 400 for error headers" time="0.007">
    </testcase>
    <testcase classname="Alert Service Test should not show two alerts with the same content if spawned within 50ms" name="Alert Service Test should not show two alerts with the same content if spawned within 50ms" time="0.027">
    </testcase>
    <testcase classname="Alert Service Test should not show alerts with skipAlert=true" name="Alert Service Test should not show alerts with skipAlert=true" time="0.007">
    </testcase>
    <testcase classname="Alert Service Test should not show alerts with skipAlert=true" name="Alert Service Test should not show alerts with skipAlert=true" time="0.01">
    </testcase>
    <testcase classname="Alert Service Test should not show alerts with skipAlert=true" name="Alert Service Test should not show alerts with skipAlert=true" time="0.02">
    </testcase>
    <testcase classname="Alert Service Test should not show alerts with skipAlert=true" name="Alert Service Test should not show alerts with skipAlert=true" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="FaqComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:19" time="5.496" tests="15">
    <testcase classname="FaqComponent should fetch faqs when initialized" name="FaqComponent should fetch faqs when initialized" time="0.635">
    </testcase>
    <testcase classname="FaqComponent should catch error if loading fails" name="FaqComponent should catch error if loading fails" time="0.133">
    </testcase>
    <testcase classname="FaqComponent should delete faq" name="FaqComponent should delete faq" time="0.278">
    </testcase>
    <testcase classname="FaqComponent should not delete faq on error" name="FaqComponent should not delete faq on error" time="0.164">
    </testcase>
    <testcase classname="FaqComponent should toggle filter correctly" name="FaqComponent should toggle filter correctly" time="0.164">
    </testcase>
    <testcase classname="FaqComponent should catch error if no categories are found" name="FaqComponent should catch error if no categories are found" time="0.153">
    </testcase>
    <testcase classname="FaqComponent should search through already filtered array" name="FaqComponent should search through already filtered array" time="0.117">
    </testcase>
    <testcase classname="FaqComponent should call sortService when sortRows is called" name="FaqComponent should call sortService when sortRows is called" time="0.116">
    </testcase>
    <testcase classname="FaqComponent should reject faq properly" name="FaqComponent should reject faq properly" time="0.139">
    </testcase>
    <testcase classname="FaqComponent should not change status if rejection fails" name="FaqComponent should not change status if rejection fails" time="0.196">
    </testcase>
    <testcase classname="FaqComponent should accepts proposed faq properly" name="FaqComponent should accepts proposed faq properly" time="0.117">
    </testcase>
    <testcase classname="FaqComponent should not change status if acceptance fails" name="FaqComponent should not change status if acceptance fails" time="0.152">
    </testcase>
    <testcase classname="FaqComponent should call the service to ingest faqs when ingestFaqsInPyris is called" name="FaqComponent should call the service to ingest faqs when ingestFaqsInPyris is called" time="0.127">
    </testcase>
    <testcase classname="FaqComponent should log error when error occurs" name="FaqComponent should log error when error occurs" time="0.113">
    </testcase>
    <testcase classname="FaqComponent should set faqIngestionEnabled based on service response" name="FaqComponent should set faqIngestionEnabled based on service response" time="0.104">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseFilterModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:19" time="5.881" tests="7">
    <testcase classname="ExerciseFilterModalComponent should initialize filters properly" name="ExerciseFilterModalComponent should initialize filters properly" time="1.131">
    </testcase>
    <testcase classname="ExerciseFilterModalComponent should close modal with button in upper right corner on click" name="ExerciseFilterModalComponent should close modal with button in upper right corner on click" time="0.253">
    </testcase>
    <testcase classname="ExerciseFilterModalComponent should close modal with button in lower right corner on click" name="ExerciseFilterModalComponent should close modal with button in lower right corner on click" time="0.278">
    </testcase>
    <testcase classname="ExerciseFilterModalComponent select category should mark a category as selected when category is found" name="ExerciseFilterModalComponent select category should mark a category as selected when category is found" time="0.258">
    </testcase>
    <testcase classname="ExerciseFilterModalComponent select category should not change category filter when no item is provided" name="ExerciseFilterModalComponent select category should not change category filter when no item is provided" time="0.217">
    </testcase>
    <testcase classname="ExerciseFilterModalComponent should reset all filters when button is clicked" name="ExerciseFilterModalComponent should reset all filters when button is clicked" time="0.31">
    </testcase>
    <testcase classname="ExerciseFilterModalComponent should apply filters, emit the correct sidebar data and close the modal" name="ExerciseFilterModalComponent should apply filters, emit the correct sidebar data and close the modal" time="0.25">
    </testcase>
  </testsuite>
  <testsuite name="ExamExerciseRowButtonsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:23" time="3.401" tests="18">
    <testcase classname="ExamExerciseRowButtonsComponent isExamOver should return true if over" name="ExamExerciseRowButtonsComponent isExamOver should return true if over" time="0.211">
    </testcase>
    <testcase classname="ExamExerciseRowButtonsComponent isExamOver should return false if not yet over" name="ExamExerciseRowButtonsComponent isExamOver should return false if not yet over" time="0.082">
    </testcase>
    <testcase classname="ExamExerciseRowButtonsComponent isExamOver should return false if endDate is undefined" name="ExamExerciseRowButtonsComponent isExamOver should return false if endDate is undefined" time="0.077">
    </testcase>
    <testcase classname="ExamExerciseRowButtonsComponent hasExamStarted should return true if started" name="ExamExerciseRowButtonsComponent hasExamStarted should return true if started" time="0.079">
    </testcase>
    <testcase classname="ExamExerciseRowButtonsComponent hasExamStarted should return false if not yet started" name="ExamExerciseRowButtonsComponent hasExamStarted should return false if not yet started" time="0.079">
    </testcase>
    <testcase classname="ExamExerciseRowButtonsComponent hasExamStarted should return false if startDate is undefined" name="ExamExerciseRowButtonsComponent hasExamStarted should return false if startDate is undefined" time="0.077">
    </testcase>
    <testcase classname="ExamExerciseRowButtonsComponent deleteExercise deleteTextExercise should deleteTextExercise" name="ExamExerciseRowButtonsComponent deleteExercise deleteTextExercise should deleteTextExercise" time="0.055">
    </testcase>
    <testcase classname="ExamExerciseRowButtonsComponent deleteExercise deleteTextExercise should handle error for textexercise" name="ExamExerciseRowButtonsComponent deleteExercise deleteTextExercise should handle error for textexercise" time="0.066">
    </testcase>
    <testcase classname="ExamExerciseRowButtonsComponent deleteExercise deleteModelingExercise should deleteModelingExercise" name="ExamExerciseRowButtonsComponent deleteExercise deleteModelingExercise should deleteModelingExercise" time="0.078">
    </testcase>
    <testcase classname="ExamExerciseRowButtonsComponent deleteExercise deleteModelingExercise should handle error for modelingexercise" name="ExamExerciseRowButtonsComponent deleteExercise deleteModelingExercise should handle error for modelingexercise" time="0.105">
    </testcase>
    <testcase classname="ExamExerciseRowButtonsComponent deleteExercise deleteFileUploadExercise should deleteFileUploadExercise" name="ExamExerciseRowButtonsComponent deleteExercise deleteFileUploadExercise should deleteFileUploadExercise" time="0.076">
    </testcase>
    <testcase classname="ExamExerciseRowButtonsComponent deleteExercise deleteFileUploadExercise should handle error for fileupload exercise" name="ExamExerciseRowButtonsComponent deleteExercise deleteFileUploadExercise should handle error for fileupload exercise" time="0.132">
    </testcase>
    <testcase classname="ExamExerciseRowButtonsComponent deleteExercise should deleteQuizExercise should deleteQuizExercise" name="ExamExerciseRowButtonsComponent deleteExercise should deleteQuizExercise should deleteQuizExercise" time="0.149">
    </testcase>
    <testcase classname="ExamExerciseRowButtonsComponent deleteExercise should deleteQuizExercise should handle error for quizexercise" name="ExamExerciseRowButtonsComponent deleteExercise should deleteQuizExercise should handle error for quizexercise" time="0.152">
    </testcase>
    <testcase classname="ExamExerciseRowButtonsComponent deleteProgrammingExercise should deleteProgrammingExercise" name="ExamExerciseRowButtonsComponent deleteProgrammingExercise should deleteProgrammingExercise" time="0.073">
    </testcase>
    <testcase classname="ExamExerciseRowButtonsComponent deleteProgrammingExercise should handle error for programmingExercise" name="ExamExerciseRowButtonsComponent deleteProgrammingExercise should handle error for programmingExercise" time="0.077">
    </testcase>
    <testcase classname="ExamExerciseRowButtonsComponent exportQuizById should export Quiz, exportAll true" name="ExamExerciseRowButtonsComponent exportQuizById should export Quiz, exportAll true" time="0.08">
    </testcase>
    <testcase classname="ExamExerciseRowButtonsComponent exportQuizById should export Quiz, exportAll false" name="ExamExerciseRowButtonsComponent exportQuizById should export Quiz, exportAll false" time="0.094">
    </testcase>
  </testsuite>
  <testsuite name="Plagiarism Split View Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:25" time="2.406" tests="12">
    <testcase classname="Plagiarism Split View Component checks type of text exercise" name="Plagiarism Split View Component checks type of text exercise" time="0.162">
    </testcase>
    <testcase classname="Plagiarism Split View Component should parse text matches for comparison" name="Plagiarism Split View Component should parse text matches for comparison" time="0.076">
    </testcase>
    <testcase classname="Plagiarism Split View Component should subscribe to the split control subject" name="Plagiarism Split View Component should subscribe to the split control subject" time="0.026">
    </testcase>
    <testcase classname="Plagiarism Split View Component should collapse the left pane" name="Plagiarism Split View Component should collapse the left pane" time="0.058">
    </testcase>
    <testcase classname="Plagiarism Split View Component should collapse the right pane" name="Plagiarism Split View Component should collapse the right pane" time="0.077">
    </testcase>
    <testcase classname="Plagiarism Split View Component should reset the split panes" name="Plagiarism Split View Component should reset the split panes" time="0.044">
    </testcase>
    <testcase classname="Plagiarism Split View Component should get the first text submission" name="Plagiarism Split View Component should get the first text submission" time="0.046">
    </testcase>
    <testcase classname="Plagiarism Split View Component should get the second text submission" name="Plagiarism Split View Component should get the second text submission" time="0.03">
    </testcase>
    <testcase classname="Plagiarism Split View Component should parse text matches" name="Plagiarism Split View Component should parse text matches" time="0.043">
    </testcase>
    <testcase classname="Plagiarism Split View Component should map matches to elements" name="Plagiarism Split View Component should map matches to elements" time="0.038">
    </testcase>
    <testcase classname="Plagiarism Split View Component should map matches to elements even if matches are out of bounds" name="Plagiarism Split View Component should map matches to elements even if matches are out of bounds" time="0.037">
    </testcase>
    <testcase classname="Plagiarism Split View Component should swap submissions correctly with corresponding matches" name="Plagiarism Split View Component should swap submissions correctly with corresponding matches" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Course Exam Archive Button Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:25" time="4.016" tests="15">
    <testcase classname="Course Exam Archive Button Component onInit without required properties should just return" name="Course Exam Archive Button Component onInit without required properties should just return" time="0.258">
    </testcase>
    <testcase classname="Course Exam Archive Button Component onInit for not instructor should not display archiving and cleanup controls" name="Course Exam Archive Button Component onInit for not instructor should not display archiving and cleanup controls" time="0.058">
    </testcase>
    <testcase classname="Course Exam Archive Button Component onInit for course that is not over should not display archiving and cleanup controls" name="Course Exam Archive Button Component onInit for course that is not over should not display archiving and cleanup controls" time="0.081">
    </testcase>
    <testcase classname="Course Exam Archive Button Component onInit for course that has no archive should not display an archive course button" name="Course Exam Archive Button Component onInit for course that has no archive should not display an archive course button" time="0.095">
    </testcase>
    <testcase classname="Course Exam Archive Button Component onInit for course that has an archive should not display an archive course button" name="Course Exam Archive Button Component onInit for course that has an archive should not display an archive course button" time="0.159">
    </testcase>
    <testcase classname="Course Exam Archive Button Component onInit for course that has an archive should cleanup archive for course" name="Course Exam Archive Button Component onInit for course that has an archive should cleanup archive for course" time="0.153">
    </testcase>
    <testcase classname="Course Exam Archive Button Component onInit for course that has an archive should download archive for course" name="Course Exam Archive Button Component onInit for course that has an archive should download archive for course" time="0.177">
    </testcase>
    <testcase classname="Course Exam Archive Button Component onInit for course that has an archive should archive course" name="Course Exam Archive Button Component onInit for course that has an archive should archive course" time="0.157">
    </testcase>
    <testcase classname="Course Exam Archive Button Component onInit for course that has an archive should reload course on archive complete" name="Course Exam Archive Button Component onInit for course that has an archive should reload course on archive complete" time="0.156">
    </testcase>
    <testcase classname="Course Exam Archive Button Component onInit for course that has an archive should display warning and reload course on archive complete with warnings" name="Course Exam Archive Button Component onInit for course that has an archive should display warning and reload course on archive complete with warnings" time="0.181">
    </testcase>
    <testcase classname="Course Exam Archive Button Component onInit for exam that has an archive should display an archive and cleanup button" name="Course Exam Archive Button Component onInit for exam that has an archive should display an archive and cleanup button" time="0.059">
    </testcase>
    <testcase classname="Course Exam Archive Button Component onInit for exam that has an archive should cleanup archive for exam" name="Course Exam Archive Button Component onInit for exam that has an archive should cleanup archive for exam" time="0.134">
    </testcase>
    <testcase classname="Course Exam Archive Button Component onInit for exam that has an archive should download archive for exam" name="Course Exam Archive Button Component onInit for exam that has an archive should download archive for exam" time="0.188">
    </testcase>
    <testcase classname="Course Exam Archive Button Component onInit for exam that has an archive should archive course" name="Course Exam Archive Button Component onInit for exam that has an archive should archive course" time="0.101">
    </testcase>
    <testcase classname="Course Exam Archive Button Component onInit for exam that has an archive should reload exam on archive complete" name="Course Exam Archive Button Component onInit for exam that has an archive should reload exam on archive complete" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="CourseWideSearchComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:23" time="6.169" tests="12">
    <testcase classname="CourseWideSearchComponent should create" name="CourseWideSearchComponent should create" time="1.142">
    </testcase>
    <testcase classname="CourseWideSearchComponent should set initial values correctly" name="CourseWideSearchComponent should set initial values correctly" time="0.129">
    </testcase>
    <testcase classname="CourseWideSearchComponent should initialize currentPostContextFilter correctly" name="CourseWideSearchComponent should initialize currentPostContextFilter correctly" time="0.129">
    </testcase>
    <testcase classname="CourseWideSearchComponent should update currentPostContextFilter correctly" name="CourseWideSearchComponent should update currentPostContextFilter correctly" time="0.101">
    </testcase>
    <testcase classname="CourseWideSearchComponent should fetch posts on next page fetch" name="CourseWideSearchComponent should fetch posts on next page fetch" time="0.122">
    </testcase>
    <testcase classname="CourseWideSearchComponent should initialize formGroup correctly" name="CourseWideSearchComponent should initialize formGroup correctly" time="0.178">
    </testcase>
    <testcase classname="CourseWideSearchComponent Should update filter setting when filterToUnresolved checkbox is checked" name="CourseWideSearchComponent Should update filter setting when filterToUnresolved checkbox is checked" time="0.27">
    </testcase>
    <testcase classname="CourseWideSearchComponent Should update filter setting when filterToOwn checkbox is checked" name="CourseWideSearchComponent Should update filter setting when filterToOwn checkbox is checked" time="0.321">
    </testcase>
    <testcase classname="CourseWideSearchComponent Should update filter setting when filterToAnsweredOrReacted checkbox is checked" name="CourseWideSearchComponent Should update filter setting when filterToAnsweredOrReacted checkbox is checked" time="0.317">
    </testcase>
    <testcase classname="CourseWideSearchComponent Should update filter setting when all filter checkboxes are checked" name="CourseWideSearchComponent Should update filter setting when all filter checkboxes are checked" time="0.237">
    </testcase>
    <testcase classname="CourseWideSearchComponent should initialize sorting direction correctly" name="CourseWideSearchComponent should initialize sorting direction correctly" time="0.301">
    </testcase>
    <testcase classname="CourseWideSearchComponent should change sorting direction after clicking the order direction button" name="CourseWideSearchComponent should change sorting direction after clicking the order direction button" time="0.124">
    </testcase>
  </testsuite>
  <testsuite name="Plagiarism Cases Instructor View Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:27" time="4.926" tests="14">
    <testcase classname="Plagiarism Cases Instructor View Component should set plagiarism cases and exercises on initialization" name="Plagiarism Cases Instructor View Component should set plagiarism cases and exercises on initialization" time="0.23">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should get plagiarism cases for course when exam id is not set" name="Plagiarism Cases Instructor View Component should get plagiarism cases for course when exam id is not set" time="0.082">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should get plagiarism cases for exam when exam id is set" name="Plagiarism Cases Instructor View Component should get plagiarism cases for exam when exam id is set" time="0.072">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should calculate number of plagiarism cases" name="Plagiarism Cases Instructor View Component should calculate number of plagiarism cases" time="0.056">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should calculate number of plagiarism cases with verdict" name="Plagiarism Cases Instructor View Component should calculate number of plagiarism cases with verdict" time="0.072">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should calculate percentage of plagiarism cases with verdict" name="Plagiarism Cases Instructor View Component should calculate percentage of plagiarism cases with verdict" time="0.079">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should calculate number of plagiarism cases with post" name="Plagiarism Cases Instructor View Component should calculate number of plagiarism cases with post" time="0.053">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should calculate percentage of plagiarism cases with post" name="Plagiarism Cases Instructor View Component should calculate percentage of plagiarism cases with post" time="0.077">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should calculate number of plagiarism cases with student answer" name="Plagiarism Cases Instructor View Component should calculate number of plagiarism cases with student answer" time="0.102">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should calculate percentage of plagiarism cases with student answer" name="Plagiarism Cases Instructor View Component should calculate percentage of plagiarism cases with student answer" time="0.084">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should check if student has responded for a plagiarism case" name="Plagiarism Cases Instructor View Component should check if student has responded for a plagiarism case" time="0.105">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should export plagiarism cases as CSV" name="Plagiarism Cases Instructor View Component should export plagiarism cases as CSV" time="0.072">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should navigate to plagiarism detection page on click" name="Plagiarism Cases Instructor View Component should navigate to plagiarism detection page on click" time="0.194">
    </testcase>
    <testcase classname="Plagiarism Cases Instructor View Component should scroll to the correct exercise element when scrollToExercise is called" name="Plagiarism Cases Instructor View Component should scroll to the correct exercise element when scrollToExercise is called" time="0.108">
    </testcase>
  </testsuite>
  <testsuite name="AttachmentUnitsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:27" time="5.106" tests="10">
    <testcase classname="AttachmentUnitsComponent should initialize with remove slides key phrases empty" name="AttachmentUnitsComponent should initialize with remove slides key phrases empty" time="0.297">
    </testcase>
    <testcase classname="AttachmentUnitsComponent should create attachment units" name="AttachmentUnitsComponent should create attachment units" time="0.158">
    </testcase>
    <testcase classname="AttachmentUnitsComponent should validate valid table correctly" name="AttachmentUnitsComponent should validate valid table correctly" time="0.127">
    </testcase>
    <testcase classname="AttachmentUnitsComponent should validate valid start page" name="AttachmentUnitsComponent should validate valid start page" time="0.125">
    </testcase>
    <testcase classname="AttachmentUnitsComponent should validate valid end page" name="AttachmentUnitsComponent should validate valid end page" time="0.112">
    </testcase>
    <testcase classname="AttachmentUnitsComponent should add row to table and delete row from table only if there are more then 1 rows in table" name="AttachmentUnitsComponent should add row to table and delete row from table only if there are more then 1 rows in table" time="0.097">
    </testcase>
    <testcase classname="AttachmentUnitsComponent should navigate to previous state" name="AttachmentUnitsComponent should navigate to previous state" time="0.136">
    </testcase>
    <testcase classname="AttachmentUnitsComponent should get slides to remove" name="AttachmentUnitsComponent should get slides to remove" time="0.127">
    </testcase>
    <testcase classname="AttachmentUnitsComponent should not get slides to remove if query is empty" name="AttachmentUnitsComponent should not get slides to remove if query is empty" time="0.077">
    </testcase>
    <testcase classname="AttachmentUnitsComponent should start uploading file again after timeout" name="AttachmentUnitsComponent should start uploading file again after timeout" time="0.103">
    </testcase>
  </testsuite>
  <testsuite name="ProfileService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:32" time="1.143" tests="2">
    <testcase classname="ProfileService Service methods should call correct URL" name="ProfileService Service methods should call correct URL" time="0.009">
    </testcase>
    <testcase classname="ProfileService Service methods should get the profile info" name="ProfileService Service methods should get the profile info" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="ModelingEditorComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:29" time="4.702" tests="17">
    <testcase classname="ModelingEditorComponent ngAfterViewInit" name="ModelingEditorComponent ngAfterViewInit" time="0.673">
    </testcase>
    <testcase classname="ModelingEditorComponent ngOnDestroy" name="ModelingEditorComponent ngOnDestroy" time="0.129">
    </testcase>
    <testcase classname="ModelingEditorComponent ngOnChanges" name="ModelingEditorComponent ngOnChanges" time="0.392">
    </testcase>
    <testcase classname="ModelingEditorComponent isFullScreen false" name="ModelingEditorComponent isFullScreen false" time="0.085">
    </testcase>
    <testcase classname="ModelingEditorComponent getCurrentModel" name="ModelingEditorComponent getCurrentModel" time="0.082">
    </testcase>
    <testcase classname="ModelingEditorComponent elementWithClass" name="ModelingEditorComponent elementWithClass" time="0.087">
    </testcase>
    <testcase classname="ModelingEditorComponent elementWithAttribute" name="ModelingEditorComponent elementWithAttribute" time="0.095">
    </testcase>
    <testcase classname="ModelingEditorComponent elementWithMethod" name="ModelingEditorComponent elementWithMethod" time="0.159">
    </testcase>
    <testcase classname="ModelingEditorComponent should not show save indicator without savedStatus set" name="ModelingEditorComponent should not show save indicator without savedStatus set" time="0.147">
    </testcase>
    <testcase classname="ModelingEditorComponent should not show save indicator in read only mode" name="ModelingEditorComponent should not show save indicator in read only mode" time="0.063">
    </testcase>
    <testcase classname="ModelingEditorComponent should not show save indicator in fullscreen mode" name="ModelingEditorComponent should not show save indicator in fullscreen mode" time="0.09">
    </testcase>
    <testcase classname="ModelingEditorComponent should show green checkmark save indicator if everything is saved" name="ModelingEditorComponent should show green checkmark save indicator if everything is saved" time="0.086">
    </testcase>
    <testcase classname="ModelingEditorComponent should show yellow times save indicator if something is unsaved" name="ModelingEditorComponent should show yellow times save indicator if something is unsaved" time="0.13">
    </testcase>
    <testcase classname="ModelingEditorComponent should show saving indicator if it is currently saving" name="ModelingEditorComponent should show saving indicator if it is currently saving" time="0.112">
    </testcase>
    <testcase classname="ModelingEditorComponent should handle explanation input change" name="ModelingEditorComponent should handle explanation input change" time="0.072">
    </testcase>
    <testcase classname="ModelingEditorComponent should assess model for guided tour for all UML types" name="ModelingEditorComponent should assess model for guided tour for all UML types" time="0.196">
    </testcase>
    <testcase classname="ModelingEditorComponent should subscribe to model change patches and emit them." name="ModelingEditorComponent should subscribe to model change patches and emit them." time="0.095">
    </testcase>
  </testsuite>
  <testsuite name="ExamStudentsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:29" time="4.772" tests="12">
    <testcase classname="ExamStudentsComponent should initialize" name="ExamStudentsComponent should initialize" time="0.444">
    </testcase>
    <testcase classname="ExamStudentsComponent should handle auto-complete for user without login" name="ExamStudentsComponent should handle auto-complete for user without login" time="0.145">
    </testcase>
    <testcase classname="ExamStudentsComponent should handle auto-complete for unregistered user" name="ExamStudentsComponent should handle auto-complete for unregistered user" time="0.207">
    </testcase>
    <testcase classname="ExamStudentsComponent should search for users" name="ExamStudentsComponent should search for users" time="0.175">
    </testcase>
    <testcase classname="ExamStudentsComponent should reload with only registered users" name="ExamStudentsComponent should reload with only registered users" time="0.181">
    </testcase>
    <testcase classname="ExamStudentsComponent should remove users from the exam" name="ExamStudentsComponent should remove users from the exam" time="0.191">
    </testcase>
    <testcase classname="ExamStudentsComponent should register all enrolled students of the course to the exam" name="ExamStudentsComponent should register all enrolled students of the course to the exam" time="0.195">
    </testcase>
    <testcase classname="ExamStudentsComponent should remove all users from the exam" name="ExamStudentsComponent should remove all users from the exam" time="0.174">
    </testcase>
    <testcase classname="ExamStudentsComponent should remove all users from the exam with participaations" name="ExamStudentsComponent should remove all users from the exam with participaations" time="0.161">
    </testcase>
    <testcase classname="ExamStudentsComponent should format search result" name="ExamStudentsComponent should format search result" time="0.142">
    </testcase>
    <testcase classname="ExamStudentsComponent should format search text from user" name="ExamStudentsComponent should format search text from user" time="0.156">
    </testcase>
    <testcase classname="ExamStudentsComponent should test on error" name="ExamStudentsComponent should test on error" time="0.146">
    </testcase>
  </testsuite>
  <testsuite name="ShortAnswerQuestionUtil" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:34" time="0.936" tests="7">
    <testcase classname="ShortAnswerQuestionUtil should return correct getter" name="ShortAnswerQuestionUtil should return correct getter" time="0.033">
    </testcase>
    <testcase classname="ShortAnswerQuestionUtil should check whether spots and solutions are setup correctly" name="ShortAnswerQuestionUtil should check whether spots and solutions are setup correctly" time="0.006">
    </testcase>
    <testcase classname="ShortAnswerQuestionUtil should check for misleading mappings" name="ShortAnswerQuestionUtil should check for misleading mappings" time="0.007">
    </testcase>
    <testcase classname="ShortAnswerQuestionUtil should split the question text into text parts and transform to html" name="ShortAnswerQuestionUtil should split the question text into text parts and transform to html" time="0.053">
    </testcase>
    <testcase classname="ShortAnswerQuestionUtil should transform text parts to html correctly" name="ShortAnswerQuestionUtil should transform text parts to html correctly" time="0.025">
    </testcase>
    <testcase classname="ShortAnswerQuestionUtil should return the correct indentation" name="ShortAnswerQuestionUtil should return the correct indentation" time="0.004">
    </testcase>
    <testcase classname="ShortAnswerQuestionUtil should return first word of a sentence" name="ShortAnswerQuestionUtil should return first word of a sentence" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExercise Management Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:32" time="3.045" tests="16">
    <testcase classname="ProgrammingExercise Management Component should call load all on init" name="ProgrammingExercise Management Component should call load all on init" time="0.122">
    </testcase>
    <testcase classname="ProgrammingExercise Management Component should delete exercise" name="ProgrammingExercise Management Component should delete exercise" time="0.017">
    </testcase>
    <testcase classname="ProgrammingExercise Management Component should delete multiple exercises" name="ProgrammingExercise Management Component should delete multiple exercises" time="0.01">
    </testcase>
    <testcase classname="ProgrammingExercise Management Component should not delete exercise on error" name="ProgrammingExercise Management Component should not delete exercise on error" time="0.015">
    </testcase>
    <testcase classname="ProgrammingExercise Management Component should open edit selected modal" name="ProgrammingExercise Management Component should open edit selected modal" time="0.011">
    </testcase>
    <testcase classname="ProgrammingExercise Management Component should return exercise id" name="ProgrammingExercise Management Component should return exercise id" time="0.022">
    </testcase>
    <testcase classname="ProgrammingExercise Management Component should download the repository" name="ProgrammingExercise Management Component should download the repository" time="0.011">
    </testcase>
    <testcase classname="ProgrammingExercise Management Component ProgrammingExercise Search Exercises should show all exercises" name="ProgrammingExercise Management Component ProgrammingExercise Search Exercises should show all exercises" time="0.031">
    </testcase>
    <testcase classname="ProgrammingExercise Management Component ProgrammingExercise Search Exercises should show no exercises" name="ProgrammingExercise Management Component ProgrammingExercise Search Exercises should show no exercises" time="0.02">
    </testcase>
    <testcase classname="ProgrammingExercise Management Component ProgrammingExercise Search Exercises should show first exercise" name="ProgrammingExercise Management Component ProgrammingExercise Search Exercises should show first exercise" time="0.018">
    </testcase>
    <testcase classname="ProgrammingExercise Management Component ProgrammingExercise Search Exercises should show last 2 exercises" name="ProgrammingExercise Management Component ProgrammingExercise Search Exercises should show last 2 exercises" time="0.023">
    </testcase>
    <testcase classname="ProgrammingExercise Management Component ProgrammingExercise Select Exercises should add selected exercise to list" name="ProgrammingExercise Management Component ProgrammingExercise Select Exercises should add selected exercise to list" time="0.021">
    </testcase>
    <testcase classname="ProgrammingExercise Management Component ProgrammingExercise Select Exercises should remove selected exercise to list" name="ProgrammingExercise Management Component ProgrammingExercise Select Exercises should remove selected exercise to list" time="0.02">
    </testcase>
    <testcase classname="ProgrammingExercise Management Component ProgrammingExercise Select Exercises should select all" name="ProgrammingExercise Management Component ProgrammingExercise Select Exercises should select all" time="0.013">
    </testcase>
    <testcase classname="ProgrammingExercise Management Component ProgrammingExercise Select Exercises should deselect all" name="ProgrammingExercise Management Component ProgrammingExercise Select Exercises should deselect all" time="0.016">
    </testcase>
    <testcase classname="ProgrammingExercise Management Component ProgrammingExercise Select Exercises should check correctly if selected" name="ProgrammingExercise Management Component ProgrammingExercise Select Exercises should check correctly if selected" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="TextAssessment Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:35" time="2.476" tests="15">
    <testcase classname="TextAssessment Service should save an assessment" name="TextAssessment Service should save an assessment" time="0.013">
    </testcase>
    <testcase classname="TextAssessment Service should save example assessment" name="TextAssessment Service should save example assessment" time="0.011">
    </testcase>
    <testcase classname="TextAssessment Service should submit an assessment" name="TextAssessment Service should submit an assessment" time="0.011">
    </testcase>
    <testcase classname="TextAssessment Service should update assessment after complaint" name="TextAssessment Service should update assessment after complaint" time="0.004">
    </testcase>
    <testcase classname="TextAssessment Service should cancel assessment" name="TextAssessment Service should cancel assessment" time="0.004">
    </testcase>
    <testcase classname="TextAssessment Service should delete assessment" name="TextAssessment Service should delete assessment" time="0.007">
    </testcase>
    <testcase classname="TextAssessment Service should delete example assessment" name="TextAssessment Service should delete example assessment" time="0.004">
    </testcase>
    <testcase classname="TextAssessment Service should send assessment event to analytics" name="TextAssessment Service should send assessment event to analytics" time="0.004">
    </testcase>
    <testcase classname="TextAssessment Service should get feedback data for submission" name="TextAssessment Service should get feedback data for submission" time="0.008">
    </testcase>
    <testcase classname="TextAssessment Service should get feedback data with resultId set" name="TextAssessment Service should get feedback data with resultId set" time="0.004">
    </testcase>
    <testcase classname="TextAssessment Service should get example result for defined exercise and submission" name="TextAssessment Service should get example result for defined exercise and submission" time="0.064">
    </testcase>
    <testcase classname="TextAssessment Service should get number of tutors involved in assessment" name="TextAssessment Service should get number of tutors involved in assessment" time="0.004">
    </testcase>
    <testcase classname="TextAssessment Service should match blocks with feedbacks" name="TextAssessment Service should match blocks with feedbacks" time="0.006">
    </testcase>
    <testcase classname="TextAssessment Service should resolve new StudentParticipations for TextSubmissionAssessmentComponent" name="TextAssessment Service should resolve new StudentParticipations for TextSubmissionAssessmentComponent" time="0.008">
    </testcase>
    <testcase classname="TextAssessment Service should resolve the needed StudentParticipations for TextSubmissionAssessmentComponent" name="TextAssessment Service should resolve the needed StudentParticipations for TextSubmissionAssessmentComponent" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Participation Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:37" time="1.078" tests="12">
    <testcase classname="Participation Service should find an element" name="Participation Service should find an element" time="0.012">
    </testcase>
    <testcase classname="Participation Service should find participation for the exercise" name="Participation Service should find participation for the exercise" time="0.006">
    </testcase>
    <testcase classname="Participation Service should find no participation for the exercise" name="Participation Service should find no participation for the exercise" time="0.003">
    </testcase>
    <testcase classname="Participation Service should delete for guided tour" name="Participation Service should delete for guided tour" time="0.008">
    </testcase>
    <testcase classname="Participation Service should cleanup build plan" name="Participation Service should cleanup build plan" time="0.028">
    </testcase>
    <testcase classname="Participation Service should merge student participations for programming exercises" name="Participation Service should merge student participations for programming exercises" time="0.015">
    </testcase>
    <testcase classname="Participation Service should not merge practice participation for programming exercises" name="Participation Service should not merge practice participation for programming exercises" time="0.005">
    </testcase>
    <testcase classname="Participation Service should merge student participations" name="Participation Service should merge student participations" time="0.008">
    </testcase>
    <testcase classname="Participation Service should update a Participation" name="Participation Service should update a Participation" time="0.013">
    </testcase>
    <testcase classname="Participation Service should return a list of Participation" name="Participation Service should return a list of Participation" time="0.013">
    </testcase>
    <testcase classname="Participation Service should delete a Participation" name="Participation Service should delete a Participation" time="0.004">
    </testcase>
    <testcase classname="Participation Service should get build job ids for participation results" name="Participation Service should get build job ids for participation results" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseImportComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:34" time="4.529" tests="19">
    <testcase classname="ExerciseImportComponent should initialize the content" name="ExerciseImportComponent should initialize the content" time="0.498">
    </testcase>
    <testcase classname="ExerciseImportComponent should close the active modal" name="ExerciseImportComponent should close the active modal" time="0.106">
    </testcase>
    <testcase classname="ExerciseImportComponent should close the active modal with result" name="ExerciseImportComponent should close the active modal with result" time="0.103">
    </testcase>
    <testcase classname="ExerciseImportComponent should change the page on active modal" name="ExerciseImportComponent should change the page on active modal" time="0.135">
    </testcase>
    <testcase classname="ExerciseImportComponent should sort rows with default values" name="ExerciseImportComponent should sort rows with default values" time="0.126">
    </testcase>
    <testcase classname="ExerciseImportComponent should set search term and search" name="ExerciseImportComponent should set search term and search" time="0.131">
    </testcase>
    <testcase classname="ExerciseImportComponent should set content to paging result on sort" name="ExerciseImportComponent should set content to paging result on sort" time="0.083">
    </testcase>
    <testcase classname="ExerciseImportComponent should set content to paging result on pageChange" name="ExerciseImportComponent should set content to paging result on pageChange" time="0.092">
    </testcase>
    <testcase classname="ExerciseImportComponent should set content to paging result on search" name="ExerciseImportComponent should set content to paging result on search" time="0.134">
    </testcase>
    <testcase classname="ExerciseImportComponent should set content to paging result on sortedColumn change" name="ExerciseImportComponent should set content to paging result on sortedColumn change" time="0.082">
    </testcase>
    <testcase classname="ExerciseImportComponent should return quiz exercise id" name="ExerciseImportComponent should return quiz exercise id" time="0.09">
    </testcase>
    <testcase classname="ExerciseImportComponent should switch courseFilter/examFilter and search" name="ExerciseImportComponent should switch courseFilter/examFilter and search" time="0.119">
    </testcase>
    <testcase classname="ExerciseImportComponent uses the correct paging service" name="ExerciseImportComponent uses the correct paging service" time="0.119">
    </testcase>
    <testcase classname="ExerciseImportComponent uses the correct paging service" name="ExerciseImportComponent uses the correct paging service" time="0.129">
    </testcase>
    <testcase classname="ExerciseImportComponent uses the correct paging service" name="ExerciseImportComponent uses the correct paging service" time="0.073">
    </testcase>
    <testcase classname="ExerciseImportComponent uses the correct paging service" name="ExerciseImportComponent uses the correct paging service" time="0.078">
    </testcase>
    <testcase classname="ExerciseImportComponent uses the correct paging service" name="ExerciseImportComponent uses the correct paging service" time="0.075">
    </testcase>
    <testcase classname="ExerciseImportComponent should allow importing SCA configurations" name="ExerciseImportComponent should allow importing SCA configurations" time="0.153">
    </testcase>
    <testcase classname="ExerciseImportComponent should sort by exam title when only the exam filter is active" name="ExerciseImportComponent should sort by exam title when only the exam filter is active" time="0.114">
    </testcase>
  </testsuite>
  <testsuite name="OrganizationManagementDetailComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:34" time="5.39" tests="10">
    <testcase classname="OrganizationManagementDetailComponent should initialize and load organization from route" name="OrganizationManagementDetailComponent should initialize and load organization from route" time="0.334">
    </testcase>
    <testcase classname="OrganizationManagementDetailComponent should track id" name="OrganizationManagementDetailComponent should track id" time="0.095">
    </testcase>
    <testcase classname="OrganizationManagementDetailComponent should remove user from organization" name="OrganizationManagementDetailComponent should remove user from organization" time="0.108">
    </testcase>
    <testcase classname="OrganizationManagementDetailComponent should not remove user from organization if error occurred" name="OrganizationManagementDetailComponent should not remove user from organization if error occurred" time="0.094">
    </testcase>
    <testcase classname="OrganizationManagementDetailComponent should load all current organization users" name="OrganizationManagementDetailComponent should load all current organization users" time="0.167">
    </testcase>
    <testcase classname="OrganizationManagementDetailComponent should search users in the used DataTable component and return them and add organization icons" name="OrganizationManagementDetailComponent should search users in the used DataTable component and return them and add organization icons" time="0.159">
    </testcase>
    <testcase classname="OrganizationManagementDetailComponent should return zero users if search term is less then 3 chars" name="OrganizationManagementDetailComponent should return zero users if search term is less then 3 chars" time="0.124">
    </testcase>
    <testcase classname="OrganizationManagementDetailComponent should set the no results flag is no users were found during search" name="OrganizationManagementDetailComponent should set the no results flag is no users were found during search" time="0.161">
    </testcase>
    <testcase classname="OrganizationManagementDetailComponent should set the search failed flag if search failed" name="OrganizationManagementDetailComponent should set the search failed flag if search failed" time="0.205">
    </testcase>
    <testcase classname="OrganizationManagementDetailComponent should add the user to organization on autocomplete select" name="OrganizationManagementDetailComponent should add the user to organization on autocomplete select" time="0.162">
    </testcase>
  </testsuite>
  <testsuite name="Quiz Scoring Info Student Modal Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:36" time="4.429" tests="9">
    <testcase classname="Quiz Scoring Info Student Modal Component should check for singular point singular score" name="Quiz Scoring Info Student Modal Component should check for singular point singular score" time="0.565">
    </testcase>
    <testcase classname="Quiz Scoring Info Student Modal Component should check for plural points and scores" name="Quiz Scoring Info Student Modal Component should check for plural points and scores" time="0.197">
    </testcase>
    <testcase classname="Quiz Scoring Info Student Modal Component should open modal" name="Quiz Scoring Info Student Modal Component should open modal" time="0.218">
    </testcase>
    <testcase classname="Quiz Scoring Info Student Modal Component check count for drag and drop exercise with singular values" name="Quiz Scoring Info Student Modal Component check count for drag and drop exercise with singular values" time="0.181">
    </testcase>
    <testcase classname="Quiz Scoring Info Student Modal Component check count for drag and drop exercise with plural values" name="Quiz Scoring Info Student Modal Component check count for drag and drop exercise with plural values" time="0.278">
    </testcase>
    <testcase classname="Quiz Scoring Info Student Modal Component check count for short answer exercise with singular values" name="Quiz Scoring Info Student Modal Component check count for short answer exercise with singular values" time="0.215">
    </testcase>
    <testcase classname="Quiz Scoring Info Student Modal Component check count for short answer exercise with plural values" name="Quiz Scoring Info Student Modal Component check count for short answer exercise with plural values" time="0.294">
    </testcase>
    <testcase classname="Quiz Scoring Info Student Modal Component Check values for multiple choice exercise check count for multiple choice exercise with singular values" name="Quiz Scoring Info Student Modal Component Check values for multiple choice exercise check count for multiple choice exercise with singular values" time="0.249">
    </testcase>
    <testcase classname="Quiz Scoring Info Student Modal Component Check values for multiple choice exercise check count for multiple choice exercise with plural values" name="Quiz Scoring Info Student Modal Component Check values for multiple choice exercise check count for multiple choice exercise with plural values" time="0.258">
    </testcase>
  </testsuite>
  <testsuite name="ConversationInfoComponent with oneToOneChat" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:40" time="3.407" tests="18">
    <testcase classname="ConversationInfoComponent with oneToOneChat should create" name="ConversationInfoComponent with oneToOneChat should create" time="0.198">
    </testcase>
    <testcase classname="ConversationInfoComponent with oneToOneChat should hide certain sections of the info component depending on the type of the conversation" name="ConversationInfoComponent with oneToOneChat should hide certain sections of the info component depending on the type of the conversation" time="0.094">
    </testcase>
    <testcase classname="ConversationInfoComponent with oneToOneChat should hide the action buttons if the user is missing the permissions" name="ConversationInfoComponent with oneToOneChat should hide the action buttons if the user is missing the permissions" time="0.121">
    </testcase>
    <testcase classname="ConversationInfoComponent with oneToOneChat should open the edit name dialog when the respective action button is clicked" name="ConversationInfoComponent with oneToOneChat should open the edit name dialog when the respective action button is clicked" time="0.068">
    </testcase>
    <testcase classname="ConversationInfoComponent with oneToOneChat should open the edit topic dialog when the respective action button is clicked" name="ConversationInfoComponent with oneToOneChat should open the edit topic dialog when the respective action button is clicked" time="0.098">
    </testcase>
    <testcase classname="ConversationInfoComponent with oneToOneChat should open the edit description dialog when the respective action button is clicked" name="ConversationInfoComponent with oneToOneChat should open the edit description dialog when the respective action button is clicked" time="0.066">
    </testcase>
    <testcase classname="ConversationInfoComponent with groupChat should create" name="ConversationInfoComponent with groupChat should create" time="0.086">
    </testcase>
    <testcase classname="ConversationInfoComponent with groupChat should hide certain sections of the info component depending on the type of the conversation" name="ConversationInfoComponent with groupChat should hide certain sections of the info component depending on the type of the conversation" time="0.086">
    </testcase>
    <testcase classname="ConversationInfoComponent with groupChat should hide the action buttons if the user is missing the permissions" name="ConversationInfoComponent with groupChat should hide the action buttons if the user is missing the permissions" time="0.084">
    </testcase>
    <testcase classname="ConversationInfoComponent with groupChat should open the edit name dialog when the respective action button is clicked" name="ConversationInfoComponent with groupChat should open the edit name dialog when the respective action button is clicked" time="0.111">
    </testcase>
    <testcase classname="ConversationInfoComponent with groupChat should open the edit topic dialog when the respective action button is clicked" name="ConversationInfoComponent with groupChat should open the edit topic dialog when the respective action button is clicked" time="0.064">
    </testcase>
    <testcase classname="ConversationInfoComponent with groupChat should open the edit description dialog when the respective action button is clicked" name="ConversationInfoComponent with groupChat should open the edit description dialog when the respective action button is clicked" time="0.061">
    </testcase>
    <testcase classname="ConversationInfoComponent with channel should create" name="ConversationInfoComponent with channel should create" time="0.065">
    </testcase>
    <testcase classname="ConversationInfoComponent with channel should hide certain sections of the info component depending on the type of the conversation" name="ConversationInfoComponent with channel should hide certain sections of the info component depending on the type of the conversation" time="0.074">
    </testcase>
    <testcase classname="ConversationInfoComponent with channel should hide the action buttons if the user is missing the permissions" name="ConversationInfoComponent with channel should hide the action buttons if the user is missing the permissions" time="0.126">
    </testcase>
    <testcase classname="ConversationInfoComponent with channel should open the edit name dialog when the respective action button is clicked" name="ConversationInfoComponent with channel should open the edit name dialog when the respective action button is clicked" time="0.095">
    </testcase>
    <testcase classname="ConversationInfoComponent with channel should open the edit topic dialog when the respective action button is clicked" name="ConversationInfoComponent with channel should open the edit topic dialog when the respective action button is clicked" time="0.051">
    </testcase>
    <testcase classname="ConversationInfoComponent with channel should open the edit description dialog when the respective action button is clicked" name="ConversationInfoComponent with channel should open the edit description dialog when the respective action button is clicked" time="0.074">
    </testcase>
  </testsuite>
  <testsuite name="PostingFooterComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:38" time="4.589" tests="13">
    <testcase classname="PostingFooterComponent should be initialized correctly for users that are at least tutors in course" name="PostingFooterComponent should be initialized correctly for users that are at least tutors in course" time="0.632">
    </testcase>
    <testcase classname="PostingFooterComponent should group answer posts correctly" name="PostingFooterComponent should group answer posts correctly" time="0.062">
    </testcase>
    <testcase classname="PostingFooterComponent should group answer posts and detect changes on changes to sortedAnswerPosts input" name="PostingFooterComponent should group answer posts and detect changes on changes to sortedAnswerPosts input" time="0.05">
    </testcase>
    <testcase classname="PostingFooterComponent should clear answerPostCreateEditModal container on destroy" name="PostingFooterComponent should clear answerPostCreateEditModal container on destroy" time="0.083">
    </testcase>
    <testcase classname="PostingFooterComponent should return the ID of the post in trackPostByFn" name="PostingFooterComponent should return the ID of the post in trackPostByFn" time="0.06">
    </testcase>
    <testcase classname="PostingFooterComponent should return the ID of the first post in the group in trackGroupByFn" name="PostingFooterComponent should return the ID of the first post in the group in trackGroupByFn" time="0.066">
    </testcase>
    <testcase classname="PostingFooterComponent should return true if the post is the last post in the group in isLastPost" name="PostingFooterComponent should return true if the post is the last post in the group in isLastPost" time="0.05">
    </testcase>
    <testcase classname="PostingFooterComponent should return false if the post is not the last post in the group in isLastPost" name="PostingFooterComponent should return false if the post is not the last post in the group in isLastPost" time="0.052">
    </testcase>
    <testcase classname="PostingFooterComponent should be initialized correctly for users that are not at least tutors in course" name="PostingFooterComponent should be initialized correctly for users that are not at least tutors in course" time="0.049">
    </testcase>
    <testcase classname="PostingFooterComponent should open create answer post modal" name="PostingFooterComponent should open create answer post modal" time="0.079">
    </testcase>
    <testcase classname="PostingFooterComponent should close create answer post modal" name="PostingFooterComponent should close create answer post modal" time="0.085">
    </testcase>
    <testcase classname="PostingFooterComponent should group answer posts correctly based on author and time difference" name="PostingFooterComponent should group answer posts correctly based on author and time difference" time="0.077">
    </testcase>
    <testcase classname="PostingFooterComponent should handle empty answer posts array" name="PostingFooterComponent should handle empty answer posts array" time="0.066">
    </testcase>
  </testsuite>
  <testsuite name="ExamParticipationCoverComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:39" time="5.649" tests="11">
    <testcase classname="ExamParticipationCoverComponent should initialize with ngOnInit" name="ExamParticipationCoverComponent should initialize with ngOnInit" time="0.387">
    </testcase>
    <testcase classname="ExamParticipationCoverComponent should update confirmation" name="ExamParticipationCoverComponent should update confirmation" time="0.231">
    </testcase>
    <testcase classname="ExamParticipationCoverComponent should start exam" name="ExamParticipationCoverComponent should start exam" time="0.141">
    </testcase>
    <testcase classname="ExamParticipationCoverComponent test run should always have already started" name="ExamParticipationCoverComponent test run should always have already started" time="0.125">
    </testcase>
    <testcase classname="ExamParticipationCoverComponent should update displayed times if exam suddenly started" name="ExamParticipationCoverComponent should update displayed times if exam suddenly started" time="0.13">
    </testcase>
    <testcase classname="ExamParticipationCoverComponent should create the relative time text correctly" name="ExamParticipationCoverComponent should create the relative time text correctly" time="0.107">
    </testcase>
    <testcase classname="ExamParticipationCoverComponent should submit exam" name="ExamParticipationCoverComponent should submit exam" time="0.104">
    </testcase>
    <testcase classname="ExamParticipationCoverComponent should continue after handing in early" name="ExamParticipationCoverComponent should continue after handing in early" time="0.156">
    </testcase>
    <testcase classname="ExamParticipationCoverComponent should get start button enabled and end button enabled" name="ExamParticipationCoverComponent should get start button enabled and end button enabled" time="0.228">
    </testcase>
    <testcase classname="ExamParticipationCoverComponent should get end button enabled" name="ExamParticipationCoverComponent should get end button enabled" time="0.151">
    </testcase>
    <testcase classname="ExamParticipationCoverComponent should disable exam button" name="ExamParticipationCoverComponent should disable exam button" time="0.111">
    </testcase>
  </testsuite>
  <testsuite name="ResultComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:40" time="5.076" tests="15">
    <testcase classname="ResultComponent should initialize" name="ResultComponent should initialize" time="0.276">
    </testcase>
    <testcase classname="ResultComponent should set results for programming exercise" name="ResultComponent should set results for programming exercise" time="0.148">
    </testcase>
    <testcase classname="ResultComponent should set results for modeling exercise" name="ResultComponent should set results for modeling exercise" time="0.105">
    </testcase>
    <testcase classname="ResultComponent should set (automatic athena) results for modeling exercise" name="ResultComponent should set (automatic athena) results for modeling exercise" time="0.107">
    </testcase>
    <testcase classname="ResultComponent should set (automatic athena) results for programming exercise" name="ResultComponent should set (automatic athena) results for programming exercise" time="0.104">
    </testcase>
    <testcase classname="ResultComponent should set (automatic athena) results for text exercise" name="ResultComponent should set (automatic athena) results for text exercise" time="0.101">
    </testcase>
    <testcase classname="ResultComponent should show a warning icon if code issues exist ({ short: false, score: 37, codeIssues: 1, iconShown: false })" name="ResultComponent should show a warning icon if code issues exist ({ short: false, score: 37, codeIssues: 1, iconShown: false })" time="0.077">
    </testcase>
    <testcase classname="ResultComponent should show a warning icon if code issues exist ({ short: false, score: 40, codeIssues: 1, iconShown: false })" name="ResultComponent should show a warning icon if code issues exist ({ short: false, score: 40, codeIssues: 1, iconShown: false })" time="0.134">
    </testcase>
    <testcase classname="ResultComponent should show a warning icon if code issues exist ({ short: false, score: 80, codeIssues: 2, iconShown: false })" name="ResultComponent should show a warning icon if code issues exist ({ short: false, score: 80, codeIssues: 2, iconShown: false })" time="0.126">
    </testcase>
    <testcase classname="ResultComponent should show a warning icon if code issues exist ({ short: true, score: 37, codeIssues: 1, iconShown: true })" name="ResultComponent should show a warning icon if code issues exist ({ short: true, score: 37, codeIssues: 1, iconShown: true })" time="0.142">
    </testcase>
    <testcase classname="ResultComponent should show a warning icon if code issues exist ({ short: true, score: 40, codeIssues: 1, iconShown: true })" name="ResultComponent should show a warning icon if code issues exist ({ short: true, score: 40, codeIssues: 1, iconShown: true })" time="0.072">
    </testcase>
    <testcase classname="ResultComponent should show a warning icon if code issues exist ({ short: true, score: 80, codeIssues: 2, iconShown: true })" name="ResultComponent should show a warning icon if code issues exist ({ short: true, score: 80, codeIssues: 2, iconShown: true })" time="0.085">
    </testcase>
    <testcase classname="ResultComponent should show a warning icon if code issues exist ({ short: true, score: 80, codeIssues: undefined, iconShown: false })" name="ResultComponent should show a warning icon if code issues exist ({ short: true, score: 80, codeIssues: undefined, iconShown: false })" time="0.102">
    </testcase>
    <testcase classname="ResultComponent should show a warning icon if code issues exist ({ short: true, score: 80, codeIssues: 0, iconShown: false })" name="ResultComponent should show a warning icon if code issues exist ({ short: true, score: 80, codeIssues: 0, iconShown: false })" time="0.158">
    </testcase>
    <testcase classname="ResultComponent should show a warning icon if code issues exist ({ short: true, score: 80, codeIssues: 10, iconShown: true })" name="ResultComponent should show a warning icon if code issues exist ({ short: true, score: 80, codeIssues: 10, iconShown: true })" time="0.098">
    </testcase>
  </testsuite>
  <testsuite name="ResultUtils" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:44" time="2.217" tests="34">
    <testcase classname="ResultUtils should filter out all non unreferenced feedbacks that do not have type MANUAL_UNREFERENCED" name="ResultUtils should filter out all non unreferenced feedbacks that do not have type MANUAL_UNREFERENCED" time="0.004">
    </testcase>
    <testcase classname="ResultUtils should filter out all non unreferenced feedbacks" name="ResultUtils should filter out all non unreferenced feedbacks" time="0.004">
    </testcase>
    <testcase classname="ResultUtils should correctly determine if compilation is tested" name="ResultUtils should correctly determine if compilation is tested" time="0.001">
    </testcase>
    <testcase classname="ResultUtils should correctly determine if compilation is tested" name="ResultUtils should correctly determine if compilation is tested" time="0.02">
    </testcase>
    <testcase classname="ResultUtils should correctly determine if compilation is tested" name="ResultUtils should correctly determine if compilation is tested" time="0.001">
    </testcase>
    <testcase classname="ResultUtils should correctly determine if compilation is tested" name="ResultUtils should correctly determine if compilation is tested" time="0.001">
    </testcase>
    <testcase classname="ResultUtils should correctly determine text color class" name="ResultUtils should correctly determine text color class" time="0.005">
    </testcase>
    <testcase classname="ResultUtils should correctly determine text color class" name="ResultUtils should correctly determine text color class" time="0.001">
    </testcase>
    <testcase classname="ResultUtils should correctly determine text color class" name="ResultUtils should correctly determine text color class" time="0">
    </testcase>
    <testcase classname="ResultUtils should correctly determine text color class" name="ResultUtils should correctly determine text color class" time="0.002">
    </testcase>
    <testcase classname="ResultUtils should correctly determine text color class" name="ResultUtils should correctly determine text color class" time="0.006">
    </testcase>
    <testcase classname="ResultUtils should correctly determine text color class" name="ResultUtils should correctly determine text color class" time="0.001">
    </testcase>
    <testcase classname="ResultUtils should correctly determine text color class" name="ResultUtils should correctly determine text color class" time="0.006">
    </testcase>
    <testcase classname="ResultUtils should correctly determine text color class" name="ResultUtils should correctly determine text color class" time="0.001">
    </testcase>
    <testcase classname="ResultUtils should correctly determine text color class" name="ResultUtils should correctly determine text color class" time="0.001">
    </testcase>
    <testcase classname="ResultUtils should correctly determine text color class" name="ResultUtils should correctly determine text color class" time="0.001">
    </testcase>
    <testcase classname="ResultUtils should correctly determine text color class" name="ResultUtils should correctly determine text color class" time="0.001">
    </testcase>
    <testcase classname="ResultUtils should correctly determine text color class" name="ResultUtils should correctly determine text color class" time="0">
    </testcase>
    <testcase classname="ResultUtils should correctly determine result icon" name="ResultUtils should correctly determine result icon" time="0.001">
    </testcase>
    <testcase classname="ResultUtils should correctly determine result icon" name="ResultUtils should correctly determine result icon" time="0.007">
    </testcase>
    <testcase classname="ResultUtils should correctly determine result icon" name="ResultUtils should correctly determine result icon" time="0">
    </testcase>
    <testcase classname="ResultUtils should correctly determine result icon" name="ResultUtils should correctly determine result icon" time="0.001">
    </testcase>
    <testcase classname="ResultUtils should correctly determine result icon" name="ResultUtils should correctly determine result icon" time="0.001">
    </testcase>
    <testcase classname="ResultUtils should correctly determine result icon" name="ResultUtils should correctly determine result icon" time="0.001">
    </testcase>
    <testcase classname="ResultUtils should correctly determine result icon" name="ResultUtils should correctly determine result icon" time="0">
    </testcase>
    <testcase classname="ResultUtils should correctly determine result icon" name="ResultUtils should correctly determine result icon" time="0.001">
    </testcase>
    <testcase classname="ResultUtils should correctly determine result icon" name="ResultUtils should correctly determine result icon" time="0.001">
    </testcase>
    <testcase classname="ResultUtils should correctly determine result icon" name="ResultUtils should correctly determine result icon" time="0.001">
    </testcase>
    <testcase classname="ResultUtils should correctly determine result icon" name="ResultUtils should correctly determine result icon" time="0">
    </testcase>
    <testcase classname="ResultUtils should correctly determine result icon" name="ResultUtils should correctly determine result icon" time="0.001">
    </testcase>
    <testcase classname="ResultUtils circular reference breaker should break a reference from the participation results back to the result" name="ResultUtils circular reference breaker should break a reference from the participation results back to the result" time="0.001">
    </testcase>
    <testcase classname="ResultUtils circular reference breaker should break a reference from the submission results back to the result" name="ResultUtils circular reference breaker should break a reference from the submission results back to the result" time="0.004">
    </testcase>
    <testcase classname="ResultUtils circular reference breaker should break a reference chain result -&gt; submission -&gt; participation -&gt; result" name="ResultUtils circular reference breaker should break a reference chain result -&gt; submission -&gt; participation -&gt; result" time="0.001">
    </testcase>
    <testcase classname="ResultUtils circular reference breaker should break a reference from feedbacks back to the result" name="ResultUtils circular reference breaker should break a reference from feedbacks back to the result" time="0">
    </testcase>
  </testsuite>
  <testsuite name="RequestFeedbackButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:44" time="2.33" tests="11">
    <testcase classname="RequestFeedbackButtonComponent should handle errors when requestAIFeedback fails" name="RequestFeedbackButtonComponent should handle errors when requestAIFeedback fails" time="0.064">
    </testcase>
    <testcase classname="RequestFeedbackButtonComponent should display the button when Athena is enabled and it is not an exam exercise" name="RequestFeedbackButtonComponent should display the button when Athena is enabled and it is not an exam exercise" time="0.022">
    </testcase>
    <testcase classname="RequestFeedbackButtonComponent should not display the button when it is an exam exercise" name="RequestFeedbackButtonComponent should not display the button when it is an exam exercise" time="0.009">
    </testcase>
    <testcase classname="RequestFeedbackButtonComponent should disable the button when participation is missing" name="RequestFeedbackButtonComponent should disable the button when participation is missing" time="0.011">
    </testcase>
    <testcase classname="RequestFeedbackButtonComponent should display the correct button label and style when Athena is enabled" name="RequestFeedbackButtonComponent should display the correct button label and style when Athena is enabled" time="0.013">
    </testcase>
    <testcase classname="RequestFeedbackButtonComponent should call requestAIFeedback() when button is clicked" name="RequestFeedbackButtonComponent should call requestAIFeedback() when button is clicked" time="0.032">
    </testcase>
    <testcase classname="RequestFeedbackButtonComponent should show an alert when requestAIFeedback() is called and conditions are not satisfied" name="RequestFeedbackButtonComponent should show an alert when requestAIFeedback() is called and conditions are not satisfied" time="0.017">
    </testcase>
    <testcase classname="RequestFeedbackButtonComponent should disable the button if latest submission is not submitted or feedback is generating" name="RequestFeedbackButtonComponent should disable the button if latest submission is not submitted or feedback is generating" time="0.087">
    </testcase>
    <testcase classname="RequestFeedbackButtonComponent should enable the button if latest submission is submitted and feedback is not generating" name="RequestFeedbackButtonComponent should enable the button if latest submission is submitted and feedback is not generating" time="0.05">
    </testcase>
    <testcase classname="RequestFeedbackButtonComponent should open modal when hasUserAcceptedExternalLLMUsage is false and requestAIFeedback is clicked" name="RequestFeedbackButtonComponent should open modal when hasUserAcceptedExternalLLMUsage is false and requestAIFeedback is clicked" time="0.039">
    </testcase>
    <testcase classname="RequestFeedbackButtonComponent should not open modal when hasUserAcceptedExternalLLMUsage is true and requestAIFeedback is clicked" name="RequestFeedbackButtonComponent should not open modal when hasUserAcceptedExternalLLMUsage is true and requestAIFeedback is clicked" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Faq Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:46" time="2.281" tests="15">
    <testcase classname="Faq Service Service methods should create a faq" name="Faq Service Service methods should create a faq" time="0.019">
    </testcase>
    <testcase classname="Faq Service Service methods should update a faq" name="Faq Service Service methods should update a faq" time="0.008">
    </testcase>
    <testcase classname="Faq Service Service methods should delete a faq" name="Faq Service Service methods should delete a faq" time="0.007">
    </testcase>
    <testcase classname="Faq Service Service methods should find a faq" name="Faq Service Service methods should find a faq" time="0.033">
    </testcase>
    <testcase classname="Faq Service Service methods should find faqs by courseId" name="Faq Service Service methods should find faqs by courseId" time="0.007">
    </testcase>
    <testcase classname="Faq Service Service methods should find faqs by courseId and status" name="Faq Service Service methods should find faqs by courseId and status" time="0.005">
    </testcase>
    <testcase classname="Faq Service Service methods should find all categories by courseId" name="Faq Service Service methods should find all categories by courseId" time="0.005">
    </testcase>
    <testcase classname="Faq Service Service methods should find all categories by courseId and faqState" name="Faq Service Service methods should find all categories by courseId and faqState" time="0.004">
    </testcase>
    <testcase classname="Faq Service Service methods should set add active filter correctly" name="Faq Service Service methods should set add active filter correctly" time="0.003">
    </testcase>
    <testcase classname="Faq Service Service methods should remove active filter correctly" name="Faq Service Service methods should remove active filter correctly" time="0.003">
    </testcase>
    <testcase classname="Faq Service Service methods should apply faqFilter correctly" name="Faq Service Service methods should apply faqFilter correctly" time="0.01">
    </testcase>
    <testcase classname="Faq Service Service methods should convert String into FAQ categories   correctly" name="Faq Service Service methods should convert String into FAQ categories   correctly" time="0.006">
    </testcase>
    <testcase classname="Faq Service Service methods should convert FAQ categories into strings" name="Faq Service Service methods should convert FAQ categories into strings" time="0.008">
    </testcase>
    <testcase classname="Faq Service Service methods should return if all tokens exist in FAQ title or answer" name="Faq Service Service methods should return if all tokens exist in FAQ title or answer" time="0.011">
    </testcase>
    <testcase classname="Faq Service Service methods should send a POST request to ingest faqs and return an OK response" name="Faq Service Service methods should send a POST request to ingest faqs and return an OK response" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="GradingInstructionsDetailsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:45" time="3.759" tests="15">
    <testcase classname="GradingInstructionsDetailsComponent onInit should initialize the component" name="GradingInstructionsDetailsComponent onInit should initialize the component" time="0.322">
    </testcase>
    <testcase classname="GradingInstructionsDetailsComponent onInit should set the grading criteria based on the exercise" name="GradingInstructionsDetailsComponent onInit should set the grading criteria based on the exercise" time="0.008">
    </testcase>
    <testcase classname="GradingInstructionsDetailsComponent should return grading criteria index" name="GradingInstructionsDetailsComponent should return grading criteria index" time="0.009">
    </testcase>
    <testcase classname="GradingInstructionsDetailsComponent should return grading instruction index" name="GradingInstructionsDetailsComponent should return grading instruction index" time="0.007">
    </testcase>
    <testcase classname="GradingInstructionsDetailsComponent should add new grading instruction to criteria" name="GradingInstructionsDetailsComponent should add new grading instruction to criteria" time="0.007">
    </testcase>
    <testcase classname="GradingInstructionsDetailsComponent should delete the grading criterion" name="GradingInstructionsDetailsComponent should delete the grading criterion" time="0.009">
    </testcase>
    <testcase classname="GradingInstructionsDetailsComponent should reset the grading criterion" name="GradingInstructionsDetailsComponent should reset the grading criterion" time="0.007">
    </testcase>
    <testcase classname="GradingInstructionsDetailsComponent should add new grading criteria to corresponding exercise" name="GradingInstructionsDetailsComponent should add new grading criteria to corresponding exercise" time="0.021">
    </testcase>
    <testcase classname="GradingInstructionsDetailsComponent should change grading criteria title" name="GradingInstructionsDetailsComponent should change grading criteria title" time="0.008">
    </testcase>
    <testcase classname="GradingInstructionsDetailsComponent should change grading instruction" name="GradingInstructionsDetailsComponent should change grading instruction" time="0.008">
    </testcase>
    <testcase classname="GradingInstructionsDetailsComponent should delete a grading instruction" name="GradingInstructionsDetailsComponent should delete a grading instruction" time="0.009">
    </testcase>
    <testcase classname="GradingInstructionsDetailsComponent should set grading instruction text for exercise" name="GradingInstructionsDetailsComponent should set grading instruction text for exercise" time="0.014">
    </testcase>
    <testcase classname="GradingInstructionsDetailsComponent should set grading instruction without criterion action when markdown-change triggered" name="GradingInstructionsDetailsComponent should set grading instruction without criterion action when markdown-change triggered" time="0.014">
    </testcase>
    <testcase classname="GradingInstructionsDetailsComponent should set grading instruction with criterion action when markdown-change triggered" name="GradingInstructionsDetailsComponent should set grading instruction with criterion action when markdown-change triggered" time="0.007">
    </testcase>
    <testcase classname="GradingInstructionsDetailsComponent should update properties for grading instruction" name="GradingInstructionsDetailsComponent should update properties for grading instruction" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Course Management Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:46" time="2.858" tests="8">
    <testcase classname="Course Management Service should find all programming exercises" name="Course Management Service should find all programming exercises" time="0.036">
    </testcase>
    <testcase classname="Course Management Service should find all modeling exercises" name="Course Management Service should find all modeling exercises" time="0.009">
    </testcase>
    <testcase classname="Course Management Service should find all text exercises" name="Course Management Service should find all text exercises" time="0.006">
    </testcase>
    <testcase classname="Course Management Service should find all file upload exercises" name="Course Management Service should find all file upload exercises" time="0.009">
    </testcase>
    <testcase classname="Course Management Service should start exercise" name="Course Management Service should start exercise" time="0.01">
    </testcase>
    <testcase classname="Course Management Service should start practice" name="Course Management Service should start practice" time="0.007">
    </testcase>
    <testcase classname="Course Management Service should start practice" name="Course Management Service should start practice" time="0.007">
    </testcase>
    <testcase classname="Course Management Service should resume programming exercise" name="Course Management Service should resume programming exercise" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Notification Popup Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:48" time="2.187" tests="10">
    <testcase classname="Notification Popup Component Initialization should subscribe to singular notification updates" name="Notification Popup Component Initialization should subscribe to singular notification updates" time="0.119">
    </testcase>
    <testcase classname="Notification Popup Component Click should navigate to conversation target when New message notification is clicked" name="Notification Popup Component Click should navigate to conversation target when New message notification is clicked" time="0.095">
    </testcase>
    <testcase classname="Notification Popup Component Click General &amp; Quiz should remove notification from component state when notification is closed" name="Notification Popup Component Click General &amp; Quiz should remove notification from component state when notification is closed" time="0.053">
    </testcase>
    <testcase classname="Notification Popup Component Click General &amp; Quiz should remove quiz notification from component state and navigate to quiz target when notification is clicked" name="Notification Popup Component Click General &amp; Quiz should remove quiz notification from component state and navigate to quiz target when notification is clicked" time="0.088">
    </testcase>
    <testcase classname="Notification Popup Component Click General &amp; Quiz should navigate to quiz target when quiz notification is clicked" name="Notification Popup Component Click General &amp; Quiz should navigate to quiz target when quiz notification is clicked" time="0.245">
    </testcase>
    <testcase classname="Notification Popup Component Websocket receive should append received notification" name="Notification Popup Component Websocket receive should append received notification" time="0.067">
    </testcase>
    <testcase classname="Notification Popup Component Websocket receive should not add received quiz notification if user is already on quiz page" name="Notification Popup Component Websocket receive should not add received quiz notification if user is already on quiz page" time="0.045">
    </testcase>
    <testcase classname="Notification Popup Component Websocket receive should not add received exam exercise update notification if user is not in exam mode" name="Notification Popup Component Websocket receive should not add received exam exercise update notification if user is not in exam mode" time="0.081">
    </testcase>
    <testcase classname="Notification Popup Component Websocket receive should not add received not exam exercise relevant update notification if user is not in exam mode" name="Notification Popup Component Websocket receive should not add received not exam exercise relevant update notification if user is not in exam mode" time="0.04">
    </testcase>
    <testcase classname="Notification Popup Component Websocket receive should add and remove received message notification" name="Notification Popup Component Websocket receive should add and remove received message notification" time="0.068">
    </testcase>
  </testsuite>
  <testsuite name="ForwardMessageDialogComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:46" time="5.941" tests="20">
    <testcase classname="ForwardMessageDialogComponent should create the component" name="ForwardMessageDialogComponent should create the component" time="0.588">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should initialize combined options with channels and users" name="ForwardMessageDialogComponent should initialize combined options with channels and users" time="0.105">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should filter options based on search term" name="ForwardMessageDialogComponent should filter options based on search term" time="0.09">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should select a channel and add it to selectedChannels" name="ForwardMessageDialogComponent should select a channel and add it to selectedChannels" time="0.125">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should select a user and add it to selectedUsers" name="ForwardMessageDialogComponent should select a user and add it to selectedUsers" time="0.104">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should remove a selected channel" name="ForwardMessageDialogComponent should remove a selected channel" time="0.131">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should remove a selected chat" name="ForwardMessageDialogComponent should remove a selected chat" time="0.124">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should send selected items when Send button is clicked" name="ForwardMessageDialogComponent should send selected items when Send button is clicked" time="0.102">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should close the modal when cancel button is clicked" name="ForwardMessageDialogComponent should close the modal when cancel button is clicked" time="0.092">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should focus the input field" name="ForwardMessageDialogComponent should focus the input field" time="0.105">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should handle missing input element gracefully when focusInput is called" name="ForwardMessageDialogComponent should handle missing input element gracefully when focusInput is called" time="0.149">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should open dropdown when input is focused and close when clicked outside" name="ForwardMessageDialogComponent should open dropdown when input is focused and close when clicked outside" time="0.1">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should clear filteredOptions when no matching results are found" name="ForwardMessageDialogComponent should clear filteredOptions when no matching results are found" time="0.077">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should detect if content overflows and set isContentLong correctly" name="ForwardMessageDialogComponent should detect if content overflows and set isContentLong correctly" time="0.119">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should disable Send button if no content and no selections are made" name="ForwardMessageDialogComponent should disable Send button if no content and no selections are made" time="0.159">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should send both channels and chats when selections are made" name="ForwardMessageDialogComponent should send both channels and chats when selections are made" time="0.235">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should not add duplicate channels or users to selected lists" name="ForwardMessageDialogComponent should not add duplicate channels or users to selected lists" time="0.185">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should toggle showFullForwardedMessage and reflect changes" name="ForwardMessageDialogComponent should toggle showFullForwardedMessage and reflect changes" time="0.218">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should update newPost.content with the provided value" name="ForwardMessageDialogComponent should update newPost.content with the provided value" time="0.083">
    </testcase>
    <testcase classname="ForwardMessageDialogComponent should filter channels and users based on the search term" name="ForwardMessageDialogComponent should filter channels and users based on the search term" time="0.204">
    </testcase>
  </testsuite>
  <testsuite name="GitDiffReportModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:50" time="2.528" tests="7">
    <testcase classname="GitDiffReportModalComponent should call correct service method onInit" name="GitDiffReportModalComponent should call correct service method onInit" time="0.262">
    </testcase>
    <testcase classname="GitDiffReportModalComponent should retrieve files for template and submission if diffForTemplateAndSolution is false and firstParticipationId is undefined" name="GitDiffReportModalComponent should retrieve files for template and submission if diffForTemplateAndSolution is false and firstParticipationId is undefined" time="0.032">
    </testcase>
    <testcase classname="GitDiffReportModalComponent should retrieve files for both submissions if diffForTemplateAndSolution is false and firstParticipationId is defined" name="GitDiffReportModalComponent should retrieve files for both submissions if diffForTemplateAndSolution is false and firstParticipationId is defined" time="0.03">
    </testcase>
    <testcase classname="GitDiffReportModalComponent should load files from cache if available for template and participation repo" name="GitDiffReportModalComponent should load files from cache if available for template and participation repo" time="0.024">
    </testcase>
    <testcase classname="GitDiffReportModalComponent should set error flag if loading files fails" name="GitDiffReportModalComponent should set error flag if loading files fails" time="0.028">
    </testcase>
    <testcase classname="GitDiffReportModalComponent should call modal service when close() is invoked" name="GitDiffReportModalComponent should call modal service when close() is invoked" time="0.02">
    </testcase>
    <testcase classname="GitDiffReportModalComponent should load files from cache if available for participation repo at both commits" name="GitDiffReportModalComponent should load files from cache if available for participation repo at both commits" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="ImageCropperComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:52" time="1.426" tests="11">
    <testcase classname="ImageCropperComponent reset cropper position should reset cropper position without auto crop" name="ImageCropperComponent reset cropper position should reset cropper position without auto crop" time="0.105">
    </testcase>
    <testcase classname="ImageCropperComponent reset cropper position should reset cropper position with auto crop" name="ImageCropperComponent reset cropper position should reset cropper position with auto crop" time="0.016">
    </testcase>
    <testcase classname="ImageCropperComponent should not crop without loaded image" name="ImageCropperComponent should not crop without loaded image" time="0.023">
    </testcase>
    <testcase classname="ImageCropperComponent crop should crop and emit with loaded image" name="ImageCropperComponent crop should crop and emit with loaded image" time="0.009">
    </testcase>
    <testcase classname="ImageCropperComponent crop should crop but not emit without cropping output" name="ImageCropperComponent crop should crop but not emit without cropping output" time="0.012">
    </testcase>
    <testcase classname="ImageCropperComponent should reset when removing image" name="ImageCropperComponent should reset when removing image" time="0.021">
    </testcase>
    <testcase classname="ImageCropperComponent should not reset when image does not get changed" name="ImageCropperComponent should not reset when image does not get changed" time="0.016">
    </testcase>
    <testcase classname="ImageCropperComponent load image should load from file" name="ImageCropperComponent load image should load from file" time="0.007">
    </testcase>
    <testcase classname="ImageCropperComponent load image should load from URL" name="ImageCropperComponent load image should load from URL" time="0.014">
    </testcase>
    <testcase classname="ImageCropperComponent load image should load from Base64" name="ImageCropperComponent load image should load from Base64" time="0.02">
    </testcase>
    <testcase classname="ImageCropperComponent load image should load from event" name="ImageCropperComponent load image should load from event" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="FaqUpdateComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:49" time="4.756" tests="9">
    <testcase classname="FaqUpdateComponent should create faq" name="FaqUpdateComponent should create faq" time="0.644">
    </testcase>
    <testcase classname="FaqUpdateComponent should propose faq" name="FaqUpdateComponent should propose faq" time="0.089">
    </testcase>
    <testcase classname="FaqUpdateComponent should edit a faq" name="FaqUpdateComponent should edit a faq" time="0.103">
    </testcase>
    <testcase classname="FaqUpdateComponent should propose to edit a faq" name="FaqUpdateComponent should propose to edit a faq" time="0.127">
    </testcase>
    <testcase classname="FaqUpdateComponent should navigate to previous state" name="FaqUpdateComponent should navigate to previous state" time="0.089">
    </testcase>
    <testcase classname="FaqUpdateComponent should update categories" name="FaqUpdateComponent should update categories" time="0.138">
    </testcase>
    <testcase classname="FaqUpdateComponent should not be able to save unless title and question are filled" name="FaqUpdateComponent should not be able to save unless title and question are filled" time="0.122">
    </testcase>
    <testcase classname="FaqUpdateComponent should fail while saving with ErrorResponse" name="FaqUpdateComponent should fail while saving with ErrorResponse" time="0.119">
    </testcase>
    <testcase classname="FaqUpdateComponent should handleMarkdownChange properly " name="FaqUpdateComponent should handleMarkdownChange properly " time="0.123">
    </testcase>
  </testsuite>
  <testsuite name="ArtemisDatePipe" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:54" time="1.157" tests="22">
    <testcase classname="ArtemisDatePipe Return empty string if given date time is null or undefined" name="ArtemisDatePipe Return empty string if given date time is null or undefined" time="0.009">
    </testcase>
    <testcase classname="ArtemisDatePipe Return empty string if given date time is invalid dayjs object" name="ArtemisDatePipe Return empty string if given date time is invalid dayjs object" time="0.005">
    </testcase>
    <testcase classname="ArtemisDatePipe en locale without seconds should return format equal to &quot;2020-04-14 09:27&quot; with format parameter set to &quot;short&quot;" name="ArtemisDatePipe en locale without seconds should return format equal to &quot;2020-04-14 09:27&quot; with format parameter set to &quot;short&quot;" time="0.007">
    </testcase>
    <testcase classname="ArtemisDatePipe en locale without seconds should return format equal to &quot;Apr 14, 2020 09:27&quot; with format parameter set to &quot;long&quot;" name="ArtemisDatePipe en locale without seconds should return format equal to &quot;Apr 14, 2020 09:27&quot; with format parameter set to &quot;long&quot;" time="0.004">
    </testcase>
    <testcase classname="ArtemisDatePipe en locale without seconds should return format equal to &quot;2020-04-14&quot; with format parameter set to &quot;short-date&quot;" name="ArtemisDatePipe en locale without seconds should return format equal to &quot;2020-04-14&quot; with format parameter set to &quot;short-date&quot;" time="0.006">
    </testcase>
    <testcase classname="ArtemisDatePipe en locale without seconds should return format equal to &quot;Apr 14, 2020&quot; with format parameter set to &quot;long-date&quot;" name="ArtemisDatePipe en locale without seconds should return format equal to &quot;Apr 14, 2020&quot; with format parameter set to &quot;long-date&quot;" time="0.004">
    </testcase>
    <testcase classname="ArtemisDatePipe en locale without seconds should return format equal to &quot;09:27&quot; with format parameter set to &quot;time&quot;" name="ArtemisDatePipe en locale without seconds should return format equal to &quot;09:27&quot; with format parameter set to &quot;time&quot;" time="0.005">
    </testcase>
    <testcase classname="ArtemisDatePipe en locale with seconds should return format equal to &quot;2020-04-14 09:27:03&quot; with format parameter set to &quot;short&quot;" name="ArtemisDatePipe en locale with seconds should return format equal to &quot;2020-04-14 09:27:03&quot; with format parameter set to &quot;short&quot;" time="0.005">
    </testcase>
    <testcase classname="ArtemisDatePipe en locale with seconds should return format equal to &quot;Apr 14, 2020 09:27:03&quot; with format parameter set to &quot;long&quot;" name="ArtemisDatePipe en locale with seconds should return format equal to &quot;Apr 14, 2020 09:27:03&quot; with format parameter set to &quot;long&quot;" time="0.032">
    </testcase>
    <testcase classname="ArtemisDatePipe en locale with seconds should return format equal to &quot;2020-04-14&quot; with format parameter set to &quot;short-date&quot;" name="ArtemisDatePipe en locale with seconds should return format equal to &quot;2020-04-14&quot; with format parameter set to &quot;short-date&quot;" time="0.006">
    </testcase>
    <testcase classname="ArtemisDatePipe en locale with seconds should return format equal to &quot;Apr 14, 2020&quot; with format parameter set to &quot;long-date&quot;" name="ArtemisDatePipe en locale with seconds should return format equal to &quot;Apr 14, 2020&quot; with format parameter set to &quot;long-date&quot;" time="0.004">
    </testcase>
    <testcase classname="ArtemisDatePipe en locale with seconds should return format equal to &quot;09:27:03&quot; with format parameter set to &quot;time&quot;" name="ArtemisDatePipe en locale with seconds should return format equal to &quot;09:27:03&quot; with format parameter set to &quot;time&quot;" time="0.003">
    </testcase>
    <testcase classname="ArtemisDatePipe de locale without seconds should return format equal to &quot;14.04.2020 09:27&quot; with format parameter set to &quot;short&quot;" name="ArtemisDatePipe de locale without seconds should return format equal to &quot;14.04.2020 09:27&quot; with format parameter set to &quot;short&quot;" time="0.004">
    </testcase>
    <testcase classname="ArtemisDatePipe de locale without seconds should return format equal to &quot;14. Apr. 2020 09:27&quot; with format parameter set to &quot;long&quot;" name="ArtemisDatePipe de locale without seconds should return format equal to &quot;14. Apr. 2020 09:27&quot; with format parameter set to &quot;long&quot;" time="0.003">
    </testcase>
    <testcase classname="ArtemisDatePipe de locale without seconds should return format equal to &quot;14.04.2020&quot; with format parameter set to &quot;short-date&quot;" name="ArtemisDatePipe de locale without seconds should return format equal to &quot;14.04.2020&quot; with format parameter set to &quot;short-date&quot;" time="0.005">
    </testcase>
    <testcase classname="ArtemisDatePipe de locale without seconds should return format equal to &quot;14. Apr. 2020&quot; with format parameter set to &quot;long-date&quot;" name="ArtemisDatePipe de locale without seconds should return format equal to &quot;14. Apr. 2020&quot; with format parameter set to &quot;long-date&quot;" time="0.011">
    </testcase>
    <testcase classname="ArtemisDatePipe de locale without seconds should return format equal to &quot;09:27&quot; with format parameter set to &quot;time&quot;" name="ArtemisDatePipe de locale without seconds should return format equal to &quot;09:27&quot; with format parameter set to &quot;time&quot;" time="0.008">
    </testcase>
    <testcase classname="ArtemisDatePipe de locale with seconds should return format equal to &quot;14.04.2020 09:27:03&quot; with format parameter set to &quot;short&quot;" name="ArtemisDatePipe de locale with seconds should return format equal to &quot;14.04.2020 09:27:03&quot; with format parameter set to &quot;short&quot;" time="0.003">
    </testcase>
    <testcase classname="ArtemisDatePipe de locale with seconds should return format equal to &quot;14. Apr. 2020 09:27:03&quot; with format parameter set to &quot;long&quot;" name="ArtemisDatePipe de locale with seconds should return format equal to &quot;14. Apr. 2020 09:27:03&quot; with format parameter set to &quot;long&quot;" time="0.009">
    </testcase>
    <testcase classname="ArtemisDatePipe de locale with seconds should return format equal to &quot;14.04.2020&quot; with format parameter set to &quot;short-date&quot;" name="ArtemisDatePipe de locale with seconds should return format equal to &quot;14.04.2020&quot; with format parameter set to &quot;short-date&quot;" time="0.006">
    </testcase>
    <testcase classname="ArtemisDatePipe de locale with seconds should return format equal to &quot;14. Apr. 2020&quot; with format parameter set to &quot;long-date&quot;" name="ArtemisDatePipe de locale with seconds should return format equal to &quot;14. Apr. 2020&quot; with format parameter set to &quot;long-date&quot;" time="0.006">
    </testcase>
    <testcase classname="ArtemisDatePipe de locale with seconds should return format equal to &quot;09:27:03&quot; with format parameter set to &quot;time&quot;" name="ArtemisDatePipe de locale with seconds should return format equal to &quot;09:27:03&quot; with format parameter set to &quot;time&quot;" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="QuizExercise Re-evaluate Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:49" time="7.051" tests="15">
    <testcase classname="QuizExercise Re-evaluate Component should initialize quiz exercise" name="QuizExercise Re-evaluate Component should initialize quiz exercise" time="1.477">
    </testcase>
    <testcase classname="QuizExercise Re-evaluate Component should delete quiz question" name="QuizExercise Re-evaluate Component should delete quiz question" time="0.025">
    </testcase>
    <testcase classname="QuizExercise Re-evaluate Component should update and reset quiz questions" name="QuizExercise Re-evaluate Component should update and reset quiz questions" time="0.015">
    </testcase>
    <testcase classname="QuizExercise Re-evaluate Component should have pending changes" name="QuizExercise Re-evaluate Component should have pending changes" time="0.015">
    </testcase>
    <testcase classname="QuizExercise Re-evaluate Component should move down the quiz question" name="QuizExercise Re-evaluate Component should move down the quiz question" time="0.035">
    </testcase>
    <testcase classname="QuizExercise Re-evaluate Component should move up the quiz question" name="QuizExercise Re-evaluate Component should move up the quiz question" time="0.019">
    </testcase>
    <testcase classname="QuizExercise Re-evaluate Component Updates quiz on changes" name="QuizExercise Re-evaluate Component Updates quiz on changes" time="0.029">
    </testcase>
    <testcase classname="QuizExercise Re-evaluate Component Quiz question validation Quiz mc question validation should be invalid if quiz hint is too long" name="QuizExercise Re-evaluate Component Quiz question validation Quiz mc question validation should be invalid if quiz hint is too long" time="0.013">
    </testcase>
    <testcase classname="QuizExercise Re-evaluate Component Quiz question validation Quiz mc question validation should be invalid if quiz explanation is too long" name="QuizExercise Re-evaluate Component Quiz question validation Quiz mc question validation should be invalid if quiz explanation is too long" time="0.019">
    </testcase>
    <testcase classname="QuizExercise Re-evaluate Component Quiz question validation Quiz mc question validation should be invalid if answer option hint is too long" name="QuizExercise Re-evaluate Component Quiz question validation Quiz mc question validation should be invalid if answer option hint is too long" time="0.029">
    </testcase>
    <testcase classname="QuizExercise Re-evaluate Component Quiz question validation Quiz mc question validation should be invalid if answer option explanation is too long" name="QuizExercise Re-evaluate Component Quiz question validation Quiz mc question validation should be invalid if answer option explanation is too long" time="0.013">
    </testcase>
    <testcase classname="QuizExercise Re-evaluate Component Quiz question validation Quiz dnd question validation should be invalid if question hint is invalid" name="QuizExercise Re-evaluate Component Quiz question validation Quiz dnd question validation should be invalid if question hint is invalid" time="0.021">
    </testcase>
    <testcase classname="QuizExercise Re-evaluate Component Quiz question validation Quiz dnd question validation should be invalid if question explanation is invalid" name="QuizExercise Re-evaluate Component Quiz question validation Quiz dnd question validation should be invalid if question explanation is invalid" time="0.03">
    </testcase>
    <testcase classname="QuizExercise Re-evaluate Component should change score calculation type" name="QuizExercise Re-evaluate Component should change score calculation type" time="0.045">
    </testcase>
    <testcase classname="QuizExercise Re-evaluate Component should be valid when mc option is marked as invalid" name="QuizExercise Re-evaluate Component should be valid when mc option is marked as invalid" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="TutorParticipationGraphComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:53" time="3.834" tests="14">
    <testcase classname="TutorParticipationGraphComponent Participation Status Method should calculate the right classes for the initial NOT_PARTICIPATED status" name="TutorParticipationGraphComponent Participation Status Method should calculate the right classes for the initial NOT_PARTICIPATED status" time="0.08">
    </testcase>
    <testcase classname="TutorParticipationGraphComponent Participation Status Method should calculate the right classes for the REVIEWED_INSTRUCTIONS status" name="TutorParticipationGraphComponent Participation Status Method should calculate the right classes for the REVIEWED_INSTRUCTIONS status" time="0.054">
    </testcase>
    <testcase classname="TutorParticipationGraphComponent Participation Status Method should calculate the right classes for the TRAINED status" name="TutorParticipationGraphComponent Participation Status Method should calculate the right classes for the TRAINED status" time="0.044">
    </testcase>
    <testcase classname="TutorParticipationGraphComponent Participation Status Method should calculate the right classes for the COMPLETED status" name="TutorParticipationGraphComponent Participation Status Method should calculate the right classes for the COMPLETED status" time="0.039">
    </testcase>
    <testcase classname="TutorParticipationGraphComponent should calculate the right classes for the given status should calculate the right classes for the COMPLETED status" name="TutorParticipationGraphComponent should calculate the right classes for the given status should calculate the right classes for the COMPLETED status" time="0.048">
    </testcase>
    <testcase classname="TutorParticipationGraphComponent should calculate the right classes for the given status should calculate the right classes for the NOT_PARTICIPATED status" name="TutorParticipationGraphComponent should calculate the right classes for the given status should calculate the right classes for the NOT_PARTICIPATED status" time="0.041">
    </testcase>
    <testcase classname="TutorParticipationGraphComponent should calculate the right classes for the given status should calculate the right classes for the TRAINED status" name="TutorParticipationGraphComponent should calculate the right classes for the given status should calculate the right classes for the TRAINED status" time="0.051">
    </testcase>
    <testcase classname="TutorParticipationGraphComponent test calculatePercentageAssessmentProgress should calculate the right classes for the TRAINED status" name="TutorParticipationGraphComponent test calculatePercentageAssessmentProgress should calculate the right classes for the TRAINED status" time="0.045">
    </testcase>
    <testcase classname="TutorParticipationGraphComponent should test ngOnInit" name="TutorParticipationGraphComponent should test ngOnInit" time="0.083">
    </testcase>
    <testcase classname="TutorParticipationGraphComponent should calculate numerator" name="TutorParticipationGraphComponent should calculate numerator" time="0.073">
    </testcase>
    <testcase classname="TutorParticipationGraphComponent should calculate denominator" name="TutorParticipationGraphComponent should calculate denominator" time="0.115">
    </testcase>
    <testcase classname="TutorParticipationGraphComponent should update changes" name="TutorParticipationGraphComponent should update changes" time="0.088">
    </testcase>
    <testcase classname="TutorParticipationGraphComponent should calculatePercentageComplaintsProgress" name="TutorParticipationGraphComponent should calculatePercentageComplaintsProgress" time="0.084">
    </testcase>
    <testcase classname="TutorParticipationGraphComponent should navigate" name="TutorParticipationGraphComponent should navigate" time="0.101">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseImportFromFileComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:54" time="4.257" tests="13">
    <testcase classname="ExerciseImportFromFileComponent should close the active modal with result" name="ExerciseImportFromFileComponent should close the active modal with result" time="0.159">
    </testcase>
    <testcase classname="ExerciseImportFromFileComponent should raise error alert if not supported exercise type" name="ExerciseImportFromFileComponent should raise error alert if not supported exercise type" time="0.06">
    </testcase>
    <testcase classname="ExerciseImportFromFileComponent should raise error alert if not supported exercise type" name="ExerciseImportFromFileComponent should raise error alert if not supported exercise type" time="0.028">
    </testcase>
    <testcase classname="ExerciseImportFromFileComponent should raise error alert if not supported exercise type" name="ExerciseImportFromFileComponent should raise error alert if not supported exercise type" time="0.027">
    </testcase>
    <testcase classname="ExerciseImportFromFileComponent should raise error alert if not supported exercise type" name="ExerciseImportFromFileComponent should raise error alert if not supported exercise type" time="0.082">
    </testcase>
    <testcase classname="ExerciseImportFromFileComponent should raise error alert if not one json file at the root level" name="ExerciseImportFromFileComponent should raise error alert if not one json file at the root level" time="0.039">
    </testcase>
    <testcase classname="ExerciseImportFromFileComponent should raise error alert if exercise type does not match exercise type of imported exercise" name="ExerciseImportFromFileComponent should raise error alert if exercise type does not match exercise type of imported exercise" time="0.03">
    </testcase>
    <testcase classname="ExerciseImportFromFileComponent should set exercise attributes and open import dialog" name="ExerciseImportFromFileComponent should set exercise attributes and open import dialog" time="0.031">
    </testcase>
    <testcase classname="ExerciseImportFromFileComponent should disable upload button as long as no file is selected" name="ExerciseImportFromFileComponent should disable upload button as long as no file is selected" time="0.062">
    </testcase>
    <testcase classname="ExerciseImportFromFileComponent should enable upload button once file is selected" name="ExerciseImportFromFileComponent should enable upload button once file is selected" time="0.045">
    </testcase>
    <testcase classname="ExerciseImportFromFileComponent should raise error alert when more than one file is selected" name="ExerciseImportFromFileComponent should raise error alert when more than one file is selected" time="0.063">
    </testcase>
    <testcase classname="ExerciseImportFromFileComponent should raise error alert when not a zip file is selected" name="ExerciseImportFromFileComponent should raise error alert when not a zip file is selected" time="0.037">
    </testcase>
    <testcase classname="ExerciseImportFromFileComponent should set file for import if no errors occur" name="ExerciseImportFromFileComponent should set file for import if no errors occur" time="0.044">
    </testcase>
  </testsuite>
  <testsuite name="IrisChatService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:57" time="1.686" tests="12">
    <testcase classname="IrisChatService should change to an course chat and start new session" name="IrisChatService should change to an course chat and start new session" time="0.02">
    </testcase>
    <testcase classname="IrisChatService should change to tutor chat and start new session" name="IrisChatService should change to tutor chat and start new session" time="0.005">
    </testcase>
    <testcase classname="IrisChatService should send a message" name="IrisChatService should send a message" time="0.006">
    </testcase>
    <testcase classname="IrisChatService should handle error when sending a message" name="IrisChatService should handle error when sending a message" time="0.008">
    </testcase>
    <testcase classname="IrisChatService should load existing messages on session creation" name="IrisChatService should load existing messages on session creation" time="0.005">
    </testcase>
    <testcase classname="IrisChatService should clear chat" name="IrisChatService should clear chat" time="0.029">
    </testcase>
    <testcase classname="IrisChatService should rate a message" name="IrisChatService should rate a message" time="0.012">
    </testcase>
    <testcase classname="IrisChatService should resend a message" name="IrisChatService should resend a message" time="0.014">
    </testcase>
    <testcase classname="IrisChatService should handle error when rate limited" name="IrisChatService should handle error when rate limited" time="0.013">
    </testcase>
    <testcase classname="IrisChatService should handle error when iris is disabled" name="IrisChatService should handle error when iris is disabled" time="0.008">
    </testcase>
    <testcase classname="IrisChatService should handle websocket status message" name="IrisChatService should handle websocket status message" time="0.009">
    </testcase>
    <testcase classname="IrisChatService should handle websocket message" name="IrisChatService should handle websocket message" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="ExamNavigationSidebarComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:58" time="2.328" tests="20">
    <testcase classname="ExamNavigationSidebarComponent should update the submissions onInit if their CommitState is UNCOMMITTED_CHANGES to isSynced false, if not in initial session" name="ExamNavigationSidebarComponent should update the submissions onInit if their CommitState is UNCOMMITTED_CHANGES to isSynced false, if not in initial session" time="0.088">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should change the exercise" name="ExamNavigationSidebarComponent should change the exercise" time="0.028">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should not change the exercise with invalid index" name="ExamNavigationSidebarComponent should not change the exercise with invalid index" time="0.029">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should set the exercise button status for undefined submission" name="ExamNavigationSidebarComponent should set the exercise button status for undefined submission" time="0.018">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should set the exercise button status for submitted and synced submission active" name="ExamNavigationSidebarComponent should set the exercise button status for submitted and synced submission active" time="0.012">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should set the exercise button status for submitted submission" name="ExamNavigationSidebarComponent should set the exercise button status for submitted submission" time="0.018">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should set the exercise button status for submitted and synced submission saved" name="ExamNavigationSidebarComponent should set the exercise button status for submitted and synced submission saved" time="0.023">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should set the exercise button status for submitted and synced submission not active" name="ExamNavigationSidebarComponent should set the exercise button status for submitted and synced submission not active" time="0.017">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should get the exercise button tooltip without submission" name="ExamNavigationSidebarComponent should get the exercise button tooltip without submission" time="0.014">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should get the exercise button tooltip with submitted and synced submission" name="ExamNavigationSidebarComponent should get the exercise button tooltip with submitted and synced submission" time="0.026">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should get the exercise button tooltip with submitted submission" name="ExamNavigationSidebarComponent should get the exercise button tooltip with submitted submission" time="0.017">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should get the exercise button tooltip with submission" name="ExamNavigationSidebarComponent should get the exercise button tooltip with submission" time="0.035">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should get the exercise button tooltip with synced submission" name="ExamNavigationSidebarComponent should get the exercise button tooltip with synced submission" time="0.019">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should navigate to other Exercise" name="ExamNavigationSidebarComponent should navigate to other Exercise" time="0.014">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should set exercise button status to synced active if it is the active exercise in the exam timeline view" name="ExamNavigationSidebarComponent should set exercise button status to synced active if it is the active exercise in the exam timeline view" time="0.012">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should set exercise button status to synced if it is not the active exercise in the exam timeline view" name="ExamNavigationSidebarComponent should set exercise button status to synced if it is not the active exercise in the exam timeline view" time="0.018">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should toggle sidebar based on isCollapsed" name="ExamNavigationSidebarComponent should toggle sidebar based on isCollapsed" time="0.021">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should call toggleCollapseState when clicking on collapse" name="ExamNavigationSidebarComponent should call toggleCollapseState when clicking on collapse" time="0.02">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should toggle collapse state on Control+M keydown event" name="ExamNavigationSidebarComponent should toggle collapse state on Control+M keydown event" time="0.014">
    </testcase>
    <testcase classname="ExamNavigationSidebarComponent should prevent default action on Control+M keydown event" name="ExamNavigationSidebarComponent should prevent default action on Control+M keydown event" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="ModelingExamSubmissionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:55" time="5.162" tests="17">
    <testcase classname="ModelingExamSubmissionComponent With exercise should initialize" name="ModelingExamSubmissionComponent With exercise should initialize" time="0.274">
    </testcase>
    <testcase classname="ModelingExamSubmissionComponent With exercise should show static text in header" name="ModelingExamSubmissionComponent With exercise should show static text in header" time="0.194">
    </testcase>
    <testcase classname="ModelingExamSubmissionComponent With exercise should show exercise max score if any" name="ModelingExamSubmissionComponent With exercise should show exercise max score if any" time="0.106">
    </testcase>
    <testcase classname="ModelingExamSubmissionComponent With exercise should show exercise bonus score if any" name="ModelingExamSubmissionComponent With exercise should show exercise bonus score if any" time="0.101">
    </testcase>
    <testcase classname="ModelingExamSubmissionComponent With exercise should call triggerSave if save exercise button is clicked" name="ModelingExamSubmissionComponent With exercise should call triggerSave if save exercise button is clicked" time="0.2">
    </testcase>
    <testcase classname="ModelingExamSubmissionComponent With exercise should show modeling editor with correct props when there is submission and exercise" name="ModelingExamSubmissionComponent With exercise should show modeling editor with correct props when there is submission and exercise" time="0.152">
    </testcase>
    <testcase classname="ModelingExamSubmissionComponent With exercise should show problem statement if there is any" name="ModelingExamSubmissionComponent With exercise should show problem statement if there is any" time="0.139">
    </testcase>
    <testcase classname="ModelingExamSubmissionComponent ngOnInit should call updateViewFromSubmission" name="ModelingExamSubmissionComponent ngOnInit should call updateViewFromSubmission" time="0.066">
    </testcase>
    <testcase classname="ModelingExamSubmissionComponent getSubmission should return student submission" name="ModelingExamSubmissionComponent getSubmission should return student submission" time="0.051">
    </testcase>
    <testcase classname="ModelingExamSubmissionComponent getExercise should return exercise" name="ModelingExamSubmissionComponent getExercise should return exercise" time="0.035">
    </testcase>
    <testcase classname="ModelingExamSubmissionComponent updateProblemStatement should update problem statement" name="ModelingExamSubmissionComponent updateProblemStatement should update problem statement" time="0.077">
    </testcase>
    <testcase classname="ModelingExamSubmissionComponent updateSubmissionFromView should set submission model to new model from modeling editor" name="ModelingExamSubmissionComponent updateSubmissionFromView should set submission model to new model from modeling editor" time="0.111">
    </testcase>
    <testcase classname="ModelingExamSubmissionComponent hasUnsavedChanges should return true if isSynced false" name="ModelingExamSubmissionComponent hasUnsavedChanges should return true if isSynced false" time="0.056">
    </testcase>
    <testcase classname="ModelingExamSubmissionComponent hasUnsavedChanges should return false if isSynced true" name="ModelingExamSubmissionComponent hasUnsavedChanges should return false if isSynced true" time="0.061">
    </testcase>
    <testcase classname="ModelingExamSubmissionComponent modelChanged should set isSynced to false" name="ModelingExamSubmissionComponent modelChanged should set isSynced to false" time="0.073">
    </testcase>
    <testcase classname="ModelingExamSubmissionComponent explanationChanged should set explanation text to given value and isSynced to false" name="ModelingExamSubmissionComponent explanationChanged should set explanation text to given value and isSynced to false" time="0.055">
    </testcase>
    <testcase classname="ModelingExamSubmissionComponent should update the model on submission version change" name="ModelingExamSubmissionComponent should update the model on submission version change" time="0.07">
    </testcase>
  </testsuite>
  <testsuite name="QuizExercise Point Statistic Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:56" time="4.812" tests="11">
    <testcase classname="QuizExercise Point Statistic Component onInit should call functions on Init" name="QuizExercise Point Statistic Component onInit should call functions on Init" time="0.216">
    </testcase>
    <testcase classname="QuizExercise Point Statistic Component onInit should not load QuizSuccess if not authorised" name="QuizExercise Point Statistic Component onInit should not load QuizSuccess if not authorised" time="0.011">
    </testcase>
    <testcase classname="QuizExercise Point Statistic Component updateDisplayedTimes should update remaining time" name="QuizExercise Point Statistic Component updateDisplayedTimes should update remaining time" time="0.009">
    </testcase>
    <testcase classname="QuizExercise Point Statistic Component updateDisplayedTimes should show remaining time as zero if time unknown" name="QuizExercise Point Statistic Component updateDisplayedTimes should show remaining time as zero if time unknown" time="0.03">
    </testcase>
    <testcase classname="QuizExercise Point Statistic Component loadQuizSuccess should call router if called by student" name="QuizExercise Point Statistic Component loadQuizSuccess should call router if called by student" time="0.017">
    </testcase>
    <testcase classname="QuizExercise Point Statistic Component loadQuizSuccess should load the quiz" name="QuizExercise Point Statistic Component loadQuizSuccess should load the quiz" time="0.009">
    </testcase>
    <testcase classname="QuizExercise Point Statistic Component should return remaining Time" name="QuizExercise Point Statistic Component should return remaining Time" time="0.009">
    </testcase>
    <testcase classname="QuizExercise Point Statistic Component should calculate the MaxScore if no quiz questions are contained" name="QuizExercise Point Statistic Component should calculate the MaxScore if no quiz questions are contained" time="0.02">
    </testcase>
    <testcase classname="QuizExercise Point Statistic Component loadData should set data" name="QuizExercise Point Statistic Component loadData should set data" time="0.024">
    </testcase>
    <testcase classname="QuizExercise Point Statistic Component loadNewData should route students back to courses" name="QuizExercise Point Statistic Component loadNewData should route students back to courses" time="0.013">
    </testcase>
    <testcase classname="QuizExercise Point Statistic Component recalculate should recalculate" name="QuizExercise Point Statistic Component recalculate should recalculate" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="QuizExercise Statistic Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:17:59" time="3.661" tests="11">
    <testcase classname="QuizExercise Statistic Component onInit should call functions on Init" name="QuizExercise Statistic Component onInit should call functions on Init" time="0.147">
    </testcase>
    <testcase classname="QuizExercise Statistic Component onInit should not load QuizSuccess if not authorised" name="QuizExercise Statistic Component onInit should not load QuizSuccess if not authorised" time="0.013">
    </testcase>
    <testcase classname="QuizExercise Statistic Component loadQuizSuccess should set data" name="QuizExercise Statistic Component loadQuizSuccess should set data" time="0.008">
    </testcase>
    <testcase classname="QuizExercise Statistic Component loadQuizSuccess should call navigate to courses if called by student" name="QuizExercise Statistic Component loadQuizSuccess should call navigate to courses if called by student" time="0.009">
    </testcase>
    <testcase classname="QuizExercise Statistic Component calculateMaxScore should return MaxScore by looping over scores" name="QuizExercise Statistic Component calculateMaxScore should return MaxScore by looping over scores" time="0.008">
    </testcase>
    <testcase classname="QuizExercise Statistic Component calculateMaxScore should return MaxScore be using quizExercise.maxScore" name="QuizExercise Statistic Component calculateMaxScore should return MaxScore be using quizExercise.maxScore" time="0.007">
    </testcase>
    <testcase classname="QuizExercise Statistic Component loadData should use values of quizExercise and rated data" name="QuizExercise Statistic Component loadData should use values of quizExercise and rated data" time="0.058">
    </testcase>
    <testcase classname="QuizExercise Statistic Component loadData should use values of quizExercise and unrated data" name="QuizExercise Statistic Component loadData should use values of quizExercise and unrated data" time="0.021">
    </testcase>
    <testcase classname="QuizExercise Statistic Component loadData should use defaults if no quizQuestions are not set" name="QuizExercise Statistic Component loadData should use defaults if no quizQuestions are not set" time="0.031">
    </testcase>
    <testcase classname="QuizExercise Statistic Component should switch rated" name="QuizExercise Statistic Component should switch rated" time="0.022">
    </testcase>
    <testcase classname="QuizExercise Statistic Component should format correctly" name="QuizExercise Statistic Component should format correctly" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="ExamAssessmentButtons" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:01" time="1.458" tests="6">
    <testcase classname="ExamAssessmentButtons should automatically assess modeling and text exercises of unsubmitted student exams" name="ExamAssessmentButtons should automatically assess modeling and text exercises of unsubmitted student exams" time="0.126">
    </testcase>
    <testcase classname="ExamAssessmentButtons should correctly catch HTTPError when assessing unsubmitted exams" name="ExamAssessmentButtons should correctly catch HTTPError when assessing unsubmitted exams" time="0.024">
    </testcase>
    <testcase classname="ExamAssessmentButtons should evaluate Quiz exercises" name="ExamAssessmentButtons should evaluate Quiz exercises" time="0.05">
    </testcase>
    <testcase classname="ExamAssessmentButtons should correctly catch HTTPError when evaluating quiz exercises" name="ExamAssessmentButtons should correctly catch HTTPError when evaluating quiz exercises" time="0.039">
    </testcase>
    <testcase classname="ExamAssessmentButtons should not show assess unsubmitted student exam modeling and text participations" name="ExamAssessmentButtons should not show assess unsubmitted student exam modeling and text participations" time="0.035">
    </testcase>
    <testcase classname="ExamAssessmentButtons should disable show assess unsubmitted student exam modeling and text participations" name="ExamAssessmentButtons should disable show assess unsubmitted student exam modeling and text participations" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupTableWrapperTest" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:01" time="2.61" tests="8">
    <testcase classname="TutorialGroupTableWrapperTest should pass the tutorialGroup to the headers" name="TutorialGroupTableWrapperTest should pass the tutorialGroup to the headers" time="0.288">
    </testcase>
    <testcase classname="TutorialGroupsTableComponent should initialize" name="TutorialGroupsTableComponent should initialize" time="0.064">
    </testcase>
    <testcase classname="TutorialGroupsTableComponent should show the language column if multiple languages are present" name="TutorialGroupsTableComponent should show the language column if multiple languages are present" time="0.034">
    </testcase>
    <testcase classname="TutorialGroupsTableComponent should show the language column if multiple formats are present" name="TutorialGroupsTableComponent should show the language column if multiple formats are present" time="0.046">
    </testcase>
    <testcase classname="TutorialGroupsTableComponent should show the language column if multiple campuses are present" name="TutorialGroupsTableComponent should show the language column if multiple campuses are present" time="0.038">
    </testcase>
    <testcase classname="TutorialGroupsTableComponent should call sort service" name="TutorialGroupsTableComponent should call sort service" time="0.067">
    </testcase>
    <testcase classname="TutorialGroupsTableComponent should call sort service with day and time" name="TutorialGroupsTableComponent should call sort service with day and time" time="0.037">
    </testcase>
    <testcase classname="TutorialGroupsTableComponent should call sort service with capacity and number of registered users" name="TutorialGroupsTableComponent should call sort service with capacity and number of registered users" time="0.036">
    </testcase>
  </testsuite>
  <testsuite name="DragAndDropQuestionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:01" time="2.788" tests="14">
    <testcase classname="DragAndDropQuestionComponent should update html when question changes" name="DragAndDropQuestionComponent should update html when question changes" time="0.468">
    </testcase>
    <testcase classname="DragAndDropQuestionComponent should count correct mappings as zero if no correct mappings" name="DragAndDropQuestionComponent should count correct mappings as zero if no correct mappings" time="0.056">
    </testcase>
    <testcase classname="DragAndDropQuestionComponent should count correct mappings on changes" name="DragAndDropQuestionComponent should count correct mappings on changes" time="0.052">
    </testcase>
    <testcase classname="DragAndDropQuestionComponent should return correct drag item for drop location" name="DragAndDropQuestionComponent should return correct drag item for drop location" time="0.03">
    </testcase>
    <testcase classname="DragAndDropQuestionComponent should show sample solution if force sample solution is set to true" name="DragAndDropQuestionComponent should show sample solution if force sample solution is set to true" time="0.033">
    </testcase>
    <testcase classname="DragAndDropQuestionComponent should hide sample solutions" name="DragAndDropQuestionComponent should hide sample solutions" time="0.073">
    </testcase>
    <testcase classname="DragAndDropQuestionComponent should return unassigned drag items" name="DragAndDropQuestionComponent should return unassigned drag items" time="0.045">
    </testcase>
    <testcase classname="DragAndDropQuestionComponent should return invalid dragItem for location" name="DragAndDropQuestionComponent should return invalid dragItem for location" time="0.034">
    </testcase>
    <testcase classname="DragAndDropQuestionComponent should return no drag item if there is no mapping" name="DragAndDropQuestionComponent should return no drag item if there is no mapping" time="0.053">
    </testcase>
    <testcase classname="DragAndDropQuestionComponent should remove existing mappings when there is no drop location" name="DragAndDropQuestionComponent should remove existing mappings when there is no drop location" time="0.037">
    </testcase>
    <testcase classname="DragAndDropQuestionComponent should not do anything if given dropLocation and dragEvent dragData is mapped" name="DragAndDropQuestionComponent should not do anything if given dropLocation and dragEvent dragData is mapped" time="0.075">
    </testcase>
    <testcase classname="DragAndDropQuestionComponent should map dragItem to new drop location" name="DragAndDropQuestionComponent should map dragItem to new drop location" time="0.045">
    </testcase>
    <testcase classname="DragAndDropQuestionComponent should change loading with given value" name="DragAndDropQuestionComponent should change loading with given value" time="0.06">
    </testcase>
    <testcase classname="DragAndDropQuestionComponent should set drop allowed to true when dragged" name="DragAndDropQuestionComponent should set drop allowed to true when dragged" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="User Settings Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:04" time="1.048" tests="7">
    <testcase classname="User Settings Service Service methods with Category Notification Settings test loading methods should call correct URL to fetch all settings" name="User Settings Service Service methods with Category Notification Settings test loading methods should call correct URL to fetch all settings" time="0.014">
    </testcase>
    <testcase classname="User Settings Service Service methods with Category Notification Settings test loading methods should load correct default settings as foundation" name="User Settings Service Service methods with Category Notification Settings test loading methods should load correct default settings as foundation" time="0.01">
    </testcase>
    <testcase classname="User Settings Service Service methods with Category Notification Settings test loading methods should correctly update and return settings based on received settings" name="User Settings Service Service methods with Category Notification Settings test loading methods should correctly update and return settings based on received settings" time="0.007">
    </testcase>
    <testcase classname="User Settings Service Service methods with Category Notification Settings test loading methods should correctly update and return settings based on extracted settings" name="User Settings Service Service methods with Category Notification Settings test loading methods should correctly update and return settings based on extracted settings" time="0.05">
    </testcase>
    <testcase classname="User Settings Service Service methods with Category Notification Settings test saving methods should call correct URL to save settings" name="User Settings Service Service methods with Category Notification Settings test saving methods should call correct URL to save settings" time="0.008">
    </testcase>
    <testcase classname="User Settings Service Service methods with Category Notification Settings test saving methods should correctly update and return settings based on received settings" name="User Settings Service Service methods with Category Notification Settings test saving methods should correctly update and return settings based on received settings" time="0.01">
    </testcase>
    <testcase classname="User Settings Service Service methods with Category Notification Settings test saving methods server response should contain inputted settings" name="User Settings Service Service methods with Category Notification Settings test saving methods server response should contain inputted settings" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="ExamChecklistService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:04" time="1.62" tests="25">
    <testcase classname="ExamChecklistService should indicate correctly whether all exercises are generated" name="ExamChecklistService should indicate correctly whether all exercises are generated" time="0.015">
    </testcase>
    <testcase classname="ExamChecklistService should return exam statistics correctly" name="ExamChecklistService should return exam statistics correctly" time="0.009">
    </testcase>
    <testcase classname="ExamChecklistService test checkTotalPointsMandatory should return false if max points do not equal within an exercise group" name="ExamChecklistService test checkTotalPointsMandatory should return false if max points do not equal within an exercise group" time="0.008">
    </testcase>
    <testcase classname="ExamChecklistService test checkTotalPointsMandatory should return true if exam points can be reached by mandatory points" name="ExamChecklistService test checkTotalPointsMandatory should return true if exam points can be reached by mandatory points" time="0.004">
    </testcase>
    <testcase classname="ExamChecklistService test checkTotalPointsMandatory should return to true if exam points can be reached by optional points" name="ExamChecklistService test checkTotalPointsMandatory should return to true if exam points can be reached by optional points" time="0.02">
    </testcase>
    <testcase classname="ExamChecklistService test checkTotalPointsMandatory should set totalPointsMandatoryOptional to false if exam points cannot be reached by mandatory points + optional points" name="ExamChecklistService test checkTotalPointsMandatory should set totalPointsMandatoryOptional to false if exam points cannot be reached by mandatory points + optional points" time="0.004">
    </testcase>
    <testcase classname="ExamChecklistService test checkPointsExercisesEqual should return false if no exercise groups are present" name="ExamChecklistService test checkPointsExercisesEqual should return false if no exercise groups are present" time="0.005">
    </testcase>
    <testcase classname="ExamChecklistService test checkPointsExercisesEqual should return checkPointsExercisesEqual as true if max points equal in each exercise group" name="ExamChecklistService test checkPointsExercisesEqual should return checkPointsExercisesEqual as true if max points equal in each exercise group" time="0.008">
    </testcase>
    <testcase classname="ExamChecklistService test checkPointsExercisesEqual should return checkPointsExercisesEqual as false if max points do not equal in each exercise group" name="ExamChecklistService test checkPointsExercisesEqual should return checkPointsExercisesEqual as false if max points do not equal in each exercise group" time="0.006">
    </testcase>
    <testcase classname="ExamChecklistService test checkEachGroupContainsExercise should return false if no exercise groups are present" name="ExamChecklistService test checkEachGroupContainsExercise should return false if no exercise groups are present" time="0.005">
    </testcase>
    <testcase classname="ExamChecklistService test checkEachGroupContainsExercise should return true if every exercise group contains at least one exercise" name="ExamChecklistService test checkEachGroupContainsExercise should return true if every exercise group contains at least one exercise" time="0.004">
    </testcase>
    <testcase classname="ExamChecklistService test checkEachGroupContainsExercise should return false if an exercise group does not contain exercises" name="ExamChecklistService test checkEachGroupContainsExercise should return false if an exercise group does not contain exercises" time="0.004">
    </testcase>
    <testcase classname="ExamChecklistService test checkAtLeastOneExerciseGroup should return true if there is at least one exercise group" name="ExamChecklistService test checkAtLeastOneExerciseGroup should return true if there is at least one exercise group" time="0.004">
    </testcase>
    <testcase classname="ExamChecklistService test checkAtLeastOneExerciseGroup should return false if no exercise groups exist" name="ExamChecklistService test checkAtLeastOneExerciseGroup should return false if no exercise groups exist" time="0.008">
    </testcase>
    <testcase classname="ExamChecklistService test checkNumberOfExerciseGroups should return true if number of mandatory exercise groups is equal to number of exam exercises" name="ExamChecklistService test checkNumberOfExerciseGroups should return true if number of mandatory exercise groups is equal to number of exam exercises" time="0.008">
    </testcase>
    <testcase classname="ExamChecklistService test checkNumberOfExerciseGroups should return true if number of mandatory exercise groups is smaller than number of exam exercises" name="ExamChecklistService test checkNumberOfExerciseGroups should return true if number of mandatory exercise groups is smaller than number of exam exercises" time="0.008">
    </testcase>
    <testcase classname="ExamChecklistService test checkNumberOfExerciseGroups should return false if number of mandatory exercise groups is greater than number of exam exercises" name="ExamChecklistService test checkNumberOfExerciseGroups should return false if number of mandatory exercise groups is greater than number of exam exercises" time="0.008">
    </testcase>
    <testcase classname="ExamChecklistService test checkNumberOfExerciseGroups should return false if number of exam exercises is greater than number of exercise groups" name="ExamChecklistService test checkNumberOfExerciseGroups should return false if number of exam exercises is greater than number of exercise groups" time="0.012">
    </testcase>
    <testcase classname="ExamChecklistService test checkAtLeastOneRegisteredStudent should return true if at least one student is registered" name="ExamChecklistService test checkAtLeastOneRegisteredStudent should return true if at least one student is registered" time="0.011">
    </testcase>
    <testcase classname="ExamChecklistService test checkAtLeastOneRegisteredStudent should return false if no student is registered" name="ExamChecklistService test checkAtLeastOneRegisteredStudent should return false if no student is registered" time="0.039">
    </testcase>
    <testcase classname="ExamChecklistService test calculateExercisePoints should return 0 if max points do not equal within an exercise group" name="ExamChecklistService test calculateExercisePoints should return 0 if max points do not equal within an exercise group" time="0.008">
    </testcase>
    <testcase classname="ExamChecklistService test calculateExercisePoints should return 100 for the exam points with equal points within one exercise group with mandatory exercises" name="ExamChecklistService test calculateExercisePoints should return 100 for the exam points with equal points within one exercise group with mandatory exercises" time="0.015">
    </testcase>
    <testcase classname="ExamChecklistService test calculateExercisePoints should return 100 for the exam points with equal points within one exercise group with optional exercises" name="ExamChecklistService test calculateExercisePoints should return 100 for the exam points with equal points within one exercise group with optional exercises" time="0.016">
    </testcase>
    <testcase classname="ExamChecklistService test topics should return the submitted topic" name="ExamChecklistService test topics should return the submitted topic" time="0.008">
    </testcase>
    <testcase classname="ExamChecklistService test topics should return the started topic" name="ExamChecklistService test topics should return the started topic" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="CompetencyManagementComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:02" time="6.983" tests="7">
    <testcase classname="CompetencyManagementComponent should show generate button if IRIS is enabled" name="CompetencyManagementComponent should show generate button if IRIS is enabled" time="0.341">
    </testcase>
    <testcase classname="CompetencyManagementComponent should load competencies and prerequisites" name="CompetencyManagementComponent should load competencies and prerequisites" time="0.11">
    </testcase>
    <testcase classname="CompetencyManagementComponent should set isLoading correctly" name="CompetencyManagementComponent should set isLoading correctly" time="0.086">
    </testcase>
    <testcase classname="CompetencyManagementComponent should show alert when loading iris settings fails" name="CompetencyManagementComponent should show alert when loading iris settings fails" time="0.498">
    </testcase>
    <testcase classname="CompetencyManagementComponent should show alert when loading course competencies fails" name="CompetencyManagementComponent should show alert when loading course competencies fails" time="0.137">
    </testcase>
    <testcase classname="CompetencyManagementComponent should open course competency explanation" name="CompetencyManagementComponent should open course competency explanation" time="0.13">
    </testcase>
    <testcase classname="CompetencyManagementComponent should open import modal and update values" name="CompetencyManagementComponent should open import modal and update values" time="0.124">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseInstructorStatusComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:05" time="4.096" tests="9">
    <testcase classname="ProgrammingExerciseInstructorStatusComponent should not show anything without inputs" name="ProgrammingExerciseInstructorStatusComponent should not show anything without inputs" time="0.116">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorStatusComponent should not show anything if participationType is Assignment" name="ProgrammingExerciseInstructorStatusComponent should not show anything if participationType is Assignment" time="0.048">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorStatusComponent should not show anything if there is no participation" name="ProgrammingExerciseInstructorStatusComponent should not show anything if there is no participation" time="0.014">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorStatusComponent should not show anything if there is no participation" name="ProgrammingExerciseInstructorStatusComponent should not show anything if there is no participation" time="0.021">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorStatusComponent should show nothing if the participation is template and the latest result has a score of 0" name="ProgrammingExerciseInstructorStatusComponent should show nothing if the participation is template and the latest result has a score of 0" time="0.063">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorStatusComponent should show nothing if the participation is solution and the latest result is successful" name="ProgrammingExerciseInstructorStatusComponent should show nothing if the participation is solution and the latest result is successful" time="0.027">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorStatusComponent should show a template warning if the participation is template and the score is &gt; 0" name="ProgrammingExerciseInstructorStatusComponent should show a template warning if the participation is template and the score is &gt; 0" time="0.024">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorStatusComponent should show a solution warning if the participation is solution and the result is not successful" name="ProgrammingExerciseInstructorStatusComponent should show a solution warning if the participation is solution and the result is not successful" time="0.021">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorStatusComponent should update the latestResult on update from the result subscription" name="ProgrammingExerciseInstructorStatusComponent should update the latestResult on update from the result subscription" time="0.045">
    </testcase>
  </testsuite>
  <testsuite name="ApollonDiagramDetail Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:05" time="5.859" tests="8">
    <testcase classname="ApollonDiagramDetail Component initializeApollonEditor" name="ApollonDiagramDetail Component initializeApollonEditor" time="0.082">
    </testcase>
    <testcase classname="ApollonDiagramDetail Component save" name="ApollonDiagramDetail Component save" time="0.282">
    </testcase>
    <testcase classname="ApollonDiagramDetail Component generateExercise" name="ApollonDiagramDetail Component generateExercise" time="0.508">
    </testcase>
    <testcase classname="ApollonDiagramDetail Component validateGeneration" name="ApollonDiagramDetail Component validateGeneration" time="0.163">
    </testcase>
    <testcase classname="ApollonDiagramDetail Component downloadSelection" name="ApollonDiagramDetail Component downloadSelection" time="0.369">
    </testcase>
    <testcase classname="ApollonDiagramDetail Component confirmExitDetailView" name="ApollonDiagramDetail Component confirmExitDetailView" time="0.021">
    </testcase>
    <testcase classname="ApollonDiagramDetail Component ngOnInit" name="ApollonDiagramDetail Component ngOnInit" time="0.013">
    </testcase>
    <testcase classname="ApollonDiagramDetail Component ngOnDestroy" name="ApollonDiagramDetail Component ngOnDestroy" time="0.052">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseGradingComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:03" time="7.488" tests="23">
    <testcase classname="ProgrammingExerciseGradingComponent should initialize" name="ProgrammingExerciseGradingComponent should initialize" time="1.023">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should create a grading summary" name="ProgrammingExerciseGradingComponent should create a grading summary" time="0.054">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should create a grading summary for a bonus exercise with semiautomatic assessment" name="ProgrammingExerciseGradingComponent should create a grading summary for a bonus exercise with semiautomatic assessment" time="0.039">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should create a grading summary with exceeding penalty" name="ProgrammingExerciseGradingComponent should create a grading summary with exceeding penalty" time="0.041">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should create a grading summary with locked repositories and disabled code analysis" name="ProgrammingExerciseGradingComponent should create a grading summary with locked repositories and disabled code analysis" time="0.062">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should not create a grading summary when there are no points" name="ProgrammingExerciseGradingComponent should not create a grading summary when there are no points" time="0.042">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should return replacement for grading summary key" name="ProgrammingExerciseGradingComponent should return replacement for grading summary key" time="0.041">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should not return replacement for unknown grading summary key" name="ProgrammingExerciseGradingComponent should not return replacement for unknown grading summary key" time="0.037">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should update form section calculation" name="ProgrammingExerciseGradingComponent should update form section calculation" time="0.036">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should handle field visibility should handle input field jhi-included-in-overall-score-picker properly should be displayed" name="ProgrammingExerciseGradingComponent should handle field visibility should handle input field jhi-included-in-overall-score-picker properly should be displayed" time="0.041">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should handle field visibility should handle input field jhi-included-in-overall-score-picker properly should NOT be displayed" name="ProgrammingExerciseGradingComponent should handle field visibility should handle input field jhi-included-in-overall-score-picker properly should NOT be displayed" time="0.039">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should handle field visibility should handle input field points field properly should be displayed" name="ProgrammingExerciseGradingComponent should handle field visibility should handle input field points field properly should be displayed" time="0.037">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should handle field visibility should handle input field points field properly should NOT be displayed" name="ProgrammingExerciseGradingComponent should handle field visibility should handle input field points field properly should NOT be displayed" time="0.049">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should handle field visibility should handle input field bonusPoints field properly should be displayed" name="ProgrammingExerciseGradingComponent should handle field visibility should handle input field bonusPoints field properly should be displayed" time="0.043">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should handle field visibility should handle input field bonusPoints field properly should NOT be displayed" name="ProgrammingExerciseGradingComponent should handle field visibility should handle input field bonusPoints field properly should NOT be displayed" time="0.05">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should handle field visibility should handle input field submission policy field properly should be displayed" name="ProgrammingExerciseGradingComponent should handle field visibility should handle input field submission policy field properly should be displayed" time="0.058">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should handle field visibility should handle input field submission policy field properly should NOT be displayed" name="ProgrammingExerciseGradingComponent should handle field visibility should handle input field submission policy field properly should NOT be displayed" time="0.035">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should handle field visibility should handle input field timeline properly should be displayed" name="ProgrammingExerciseGradingComponent should handle field visibility should handle input field timeline properly should be displayed" time="0.037">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should handle field visibility should handle input field timeline properly should NOT be displayed" name="ProgrammingExerciseGradingComponent should handle field visibility should handle input field timeline properly should NOT be displayed" time="0.053">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should handle field visibility should handle input field assessment instructions properly should be displayed" name="ProgrammingExerciseGradingComponent should handle field visibility should handle input field assessment instructions properly should be displayed" time="0.056">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should handle field visibility should handle input field assessment instructions properly should NOT be displayed" name="ProgrammingExerciseGradingComponent should handle field visibility should handle input field assessment instructions properly should NOT be displayed" time="0.032">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should handle field visibility should handle input field presentation score properly should be displayed" name="ProgrammingExerciseGradingComponent should handle field visibility should handle input field presentation score properly should be displayed" time="0.047">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingComponent should handle field visibility should handle input field presentation score properly should NOT be displayed" name="ProgrammingExerciseGradingComponent should handle field visibility should handle input field presentation score properly should NOT be displayed" time="0.097">
    </testcase>
  </testsuite>
  <testsuite name="ExamStatusComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:10" time="2.849" tests="12">
    <testcase classname="ExamStatusComponent should set examConductionState correctly if exam is started but not finished yet" name="ExamStatusComponent should set examConductionState correctly if exam is started but not finished yet" time="0.31">
    </testcase>
    <testcase classname="ExamStatusComponent should set examConductionState correctly if exam not started yet" name="ExamStatusComponent should set examConductionState correctly if exam not started yet" time="0.089">
    </testcase>
    <testcase classname="ExamStatusComponent should set examConductionState correctly if exam is finished" name="ExamStatusComponent should set examConductionState correctly if exam is finished" time="0.094">
    </testcase>
    <testcase classname="ExamStatusComponent should set examReviewState correctly if exam review phase is not defined" name="ExamStatusComponent should set examReviewState correctly if exam review phase is not defined" time="0.119">
    </testcase>
    <testcase classname="ExamStatusComponent should set examReviewState correctly if exam review phase is currently running" name="ExamStatusComponent should set examReviewState correctly if exam review phase is currently running" time="0.123">
    </testcase>
    <testcase classname="ExamStatusComponent should set examReviewState correctly if exam review phase is finished" name="ExamStatusComponent should set examReviewState correctly if exam review phase is finished" time="0.163">
    </testcase>
    <testcase classname="ExamStatusComponent should set examReviewState correctly if exam review phase is defined in future" name="ExamStatusComponent should set examReviewState correctly if exam review phase is defined in future" time="0.158">
    </testcase>
    <testcase classname="ExamStatusComponent should set flags for exam preparation steps correctly" name="ExamStatusComponent should set flags for exam preparation steps correctly" time="0.127">
    </testcase>
    <testcase classname="ExamStatusComponent should set examConductionState correctly if TestExam is started but not finished yet" name="ExamStatusComponent should set examConductionState correctly if TestExam is started but not finished yet" time="0.111">
    </testcase>
    <testcase classname="ExamStatusComponent should set examConductionState correctly if TestExam is started but not finished yet AND preparation is not finished AND user is editor" name="ExamStatusComponent should set examConductionState correctly if TestExam is started but not finished yet AND preparation is not finished AND user is editor" time="0.103">
    </testcase>
    <testcase classname="ExamStatusComponent should set examConductionState correctly if TestExam not started yet" name="ExamStatusComponent should set examConductionState correctly if TestExam not started yet" time="0.108">
    </testcase>
    <testcase classname="ExamStatusComponent should set flags for TestExam preparation steps correctly" name="ExamStatusComponent should set flags for TestExam preparation steps correctly" time="0.118">
    </testcase>
  </testsuite>
  <testsuite name="BuildAgentSummaryComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:11" time="2.84" tests="12">
    <testcase classname="BuildAgentSummaryComponent should load build agents on initialization" name="BuildAgentSummaryComponent should load build agents on initialization" time="0.215">
    </testcase>
    <testcase classname="BuildAgentSummaryComponent should initialize websocket subscription on initialization" name="BuildAgentSummaryComponent should initialize websocket subscription on initialization" time="0.018">
    </testcase>
    <testcase classname="BuildAgentSummaryComponent should unsubscribe from the websocket channel on destruction" name="BuildAgentSummaryComponent should unsubscribe from the websocket channel on destruction" time="0.019">
    </testcase>
    <testcase classname="BuildAgentSummaryComponent should cancel a build job" name="BuildAgentSummaryComponent should cancel a build job" time="0.05">
    </testcase>
    <testcase classname="BuildAgentSummaryComponent should cancel all build jobs of a build agent" name="BuildAgentSummaryComponent should cancel all build jobs of a build agent" time="0.02">
    </testcase>
    <testcase classname="BuildAgentSummaryComponent should calculate the build capacity and current builds" name="BuildAgentSummaryComponent should calculate the build capacity and current builds" time="0.019">
    </testcase>
    <testcase classname="BuildAgentSummaryComponent should calculate the build capacity and current builds when there are no build agents" name="BuildAgentSummaryComponent should calculate the build capacity and current builds when there are no build agents" time="0.013">
    </testcase>
    <testcase classname="BuildAgentSummaryComponent should call correct service method when pausing and resuming build agents" name="BuildAgentSummaryComponent should call correct service method when pausing and resuming build agents" time="0.081">
    </testcase>
    <testcase classname="BuildAgentSummaryComponent should show alert when error in pausing or resuming build agents" name="BuildAgentSummaryComponent should show alert when error in pausing or resuming build agents" time="0.019">
    </testcase>
    <testcase classname="BuildAgentSummaryComponent should call correct service method when clearing distributed data" name="BuildAgentSummaryComponent should call correct service method when clearing distributed data" time="0.022">
    </testcase>
    <testcase classname="BuildAgentSummaryComponent should show alert when error in clearing distributed data" name="BuildAgentSummaryComponent should show alert when error in clearing distributed data" time="0.015">
    </testcase>
    <testcase classname="BuildAgentSummaryComponent should correctly open modals" name="BuildAgentSummaryComponent should correctly open modals" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="CourseCompetenciesDetails" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:10" time="5.115" tests="8">
    <testcase classname="CourseCompetenciesDetails should initialize" name="CourseCompetenciesDetails should initialize" time="0.756">
    </testcase>
    <testcase classname="CourseCompetenciesDetails should load competency to display progress and all lecture units" name="CourseCompetenciesDetails should load competency to display progress and all lecture units" time="0.184">
    </testcase>
    <testcase classname="CourseCompetenciesDetails should load competency to display progress and the exercise unit" name="CourseCompetenciesDetails should load competency to display progress and the exercise unit" time="0.109">
    </testcase>
    <testcase classname="CourseCompetenciesDetails should show fireworks when competency was mastered" name="CourseCompetenciesDetails should show fireworks when competency was mastered" time="0.091">
    </testcase>
    <testcase classname="CourseCompetenciesDetails should detect if due date is passed" name="CourseCompetenciesDetails should detect if due date is passed" time="0.102">
    </testcase>
    <testcase classname="CourseCompetenciesDetails should have [ngClass] resolve to correct date badge" name="CourseCompetenciesDetails should have [ngClass] resolve to correct date badge" time="0.104">
    </testcase>
    <testcase classname="CourseCompetenciesDetails should have [ngClass] resolve to correct date badge" name="CourseCompetenciesDetails should have [ngClass] resolve to correct date badge" time="0.113">
    </testcase>
    <testcase classname="CourseCompetenciesDetails should update progress after lecture unit completion" name="CourseCompetenciesDetails should update progress after lecture unit completion" time="0.123">
    </testcase>
  </testsuite>
  <testsuite name="CourseSidebarComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:13" time="3.877" tests="12">
    <testcase classname="CourseSidebarComponent should initialize visible/hidden items on component initialization" name="CourseSidebarComponent should initialize visible/hidden items on component initialization" time="0.518">
    </testcase>
    <testcase classname="CourseSidebarComponent should call updateVisibleNavbarItems on window resize" name="CourseSidebarComponent should call updateVisibleNavbarItems on window resize" time="0.164">
    </testcase>
    <testcase classname="CourseSidebarComponent should check if dropdown should be closed when updating visible navbar items" name="CourseSidebarComponent should check if dropdown should be closed when updating visible navbar items" time="0.166">
    </testcase>
    <testcase classname="CourseSidebarComponent should calculate threshold based on sidebar items length" name="CourseSidebarComponent should calculate threshold based on sidebar items length" time="0.153">
    </testcase>
    <testcase classname="CourseSidebarComponent should apply threshold to determine hidden items" name="CourseSidebarComponent should apply threshold to determine hidden items" time="0.14">
    </testcase>
    <testcase classname="CourseSidebarComponent should display course title when navbar is not collapsed" name="CourseSidebarComponent should display course title when navbar is not collapsed" time="0.193">
    </testcase>
    <testcase classname="CourseSidebarComponent should display more icon and label if at least one item gets hidden in the sidebar" name="CourseSidebarComponent should display more icon and label if at least one item gets hidden in the sidebar" time="0.147">
    </testcase>
    <testcase classname="CourseSidebarComponent should display course icon when available" name="CourseSidebarComponent should display course icon when available" time="0.132">
    </testcase>
    <testcase classname="CourseSidebarComponent should not display course icon when not available" name="CourseSidebarComponent should not display course icon when not available" time="0.188">
    </testcase>
    <testcase classname="CourseSidebarComponent should emit toggleCollapseState when collapse chevron is clicked" name="CourseSidebarComponent should emit toggleCollapseState when collapse chevron is clicked" time="0.17">
    </testcase>
    <testcase classname="CourseSidebarComponent should emit switchCourse when a course is selected from dropdown" name="CourseSidebarComponent should emit switchCourse when a course is selected from dropdown" time="0.201">
    </testcase>
    <testcase classname="CourseSidebarComponent should emit courseActionItemClick when an action item is clicked" name="CourseSidebarComponent should emit courseActionItemClick when an action item is clicked" time="0.187">
    </testcase>
  </testsuite>
  <testsuite name="NotificationSettingsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:14" time="2.709" tests="8">
    <testcase classname="NotificationSettingsComponent should create" name="NotificationSettingsComponent should create" time="0.248">
    </testcase>
    <testcase classname="NotificationSettingsComponent should fetch setting info and notification info on initialization" name="NotificationSettingsComponent should fetch setting info and notification info on initialization" time="0.037">
    </testcase>
    <testcase classname="NotificationSettingsComponent should initialize values after receiving both info responses" name="NotificationSettingsComponent should initialize values after receiving both info responses" time="0.081">
    </testcase>
    <testcase classname="NotificationSettingsComponent should update selected preset when presetSelected is called" name="NotificationSettingsComponent should update selected preset when presetSelected is called" time="0.031">
    </testcase>
    <testcase classname="NotificationSettingsComponent should handle option changes and queue them for upload" name="NotificationSettingsComponent should handle option changes and queue them for upload" time="0.036">
    </testcase>
    <testcase classname="NotificationSettingsComponent should render preset picker when not loading" name="NotificationSettingsComponent should render preset picker when not loading" time="0.06">
    </testcase>
    <testcase classname="NotificationSettingsComponent should render specification cards when not loading" name="NotificationSettingsComponent should render specification cards when not loading" time="0.024">
    </testcase>
    <testcase classname="NotificationSettingsComponent should correctly update specifications from notification map" name="NotificationSettingsComponent should correctly update specifications from notification map" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="PrerequisiteFormComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:11" time="6.115" tests="6">
    <testcase classname="PrerequisiteFormComponent should initialize" name="PrerequisiteFormComponent should initialize" time="1.348">
    </testcase>
    <testcase classname="PrerequisiteFormComponent should submit valid form" name="PrerequisiteFormComponent should submit valid form" time="0.372">
    </testcase>
    <testcase classname="PrerequisiteFormComponent should correctly set form values in edit mode" name="PrerequisiteFormComponent should correctly set form values in edit mode" time="0.282">
    </testcase>
    <testcase classname="PrerequisiteFormComponent should suggest taxonomy when title changes" name="PrerequisiteFormComponent should suggest taxonomy when title changes" time="0.338">
    </testcase>
    <testcase classname="PrerequisiteFormComponent should suggest taxonomy when description changes" name="PrerequisiteFormComponent should suggest taxonomy when description changes" time="0.335">
    </testcase>
    <testcase classname="PrerequisiteFormComponent validator should verify title is unique" name="PrerequisiteFormComponent validator should verify title is unique" time="0.22">
    </testcase>
  </testsuite>
  <testsuite name="CompetencySelection" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:15" time="1.927" tests="10">
    <testcase classname="CompetencySelection should get competencies from cache" name="CompetencySelection should get competencies from cache" time="0.135">
    </testcase>
    <testcase classname="CompetencySelection should get competencies from service" name="CompetencySelection should get competencies from service" time="0.017">
    </testcase>
    <testcase classname="CompetencySelection should set disabled when error during loading" name="CompetencySelection should set disabled when error during loading" time="0.007">
    </testcase>
    <testcase classname="CompetencySelection should be hidden when no competencies" name="CompetencySelection should be hidden when no competencies" time="0.008">
    </testcase>
    <testcase classname="CompetencySelection should select competencies when value is written" name="CompetencySelection should select competencies when value is written" time="0.011">
    </testcase>
    <testcase classname="CompetencySelection should update link weight when value is written" name="CompetencySelection should update link weight when value is written" time="0.022">
    </testcase>
    <testcase classname="CompetencySelection should trigger change detection after loading competencies" name="CompetencySelection should trigger change detection after loading competencies" time="0.015">
    </testcase>
    <testcase classname="CompetencySelection should select / unselect competencies" name="CompetencySelection should select / unselect competencies" time="0.043">
    </testcase>
    <testcase classname="CompetencySelection should register onchange" name="CompetencySelection should register onchange" time="0.006">
    </testcase>
    <testcase classname="CompetencySelection should set disabled state" name="CompetencySelection should set disabled state" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Grading System Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:17" time="1.681" tests="22">
    <testcase classname="Grading System Service should find a grading scale for course" name="Grading System Service should find a grading scale for course" time="0.021">
    </testcase>
    <testcase classname="Grading System Service should find a grading scale for exam" name="Grading System Service should find a grading scale for exam" time="0.008">
    </testcase>
    <testcase classname="Grading System Service should create a grading scale for course" name="Grading System Service should create a grading scale for course" time="0.007">
    </testcase>
    <testcase classname="Grading System Service should create a grading scale for exam" name="Grading System Service should create a grading scale for exam" time="0.007">
    </testcase>
    <testcase classname="Grading System Service should update a grading scale for course" name="Grading System Service should update a grading scale for course" time="0.009">
    </testcase>
    <testcase classname="Grading System Service should update a grading scale for exam" name="Grading System Service should update a grading scale for exam" time="0.007">
    </testcase>
    <testcase classname="Grading System Service should delete a grading scale for course" name="Grading System Service should delete a grading scale for course" time="0.01">
    </testcase>
    <testcase classname="Grading System Service should delete a grading scale for exam" name="Grading System Service should delete a grading scale for exam" time="0.009">
    </testcase>
    <testcase classname="Grading System Service should find all grade steps for course" name="Grading System Service should find all grade steps for course" time="0.005">
    </testcase>
    <testcase classname="Grading System Service should find all grade steps for exam" name="Grading System Service should find all grade steps for exam" time="0.005">
    </testcase>
    <testcase classname="Grading System Service should find all grade steps" name="Grading System Service should find all grade steps" time="0.006">
    </testcase>
    <testcase classname="Grading System Service should match a grade step for course to a percentage" name="Grading System Service should match a grade step for course to a percentage" time="0.006">
    </testcase>
    <testcase classname="Grading System Service should match a grade step for exam to a percentage" name="Grading System Service should match a grade step for exam to a percentage" time="0.051">
    </testcase>
    <testcase classname="Grading System Service should match a grade step for to a percentage when no grading scale exists" name="Grading System Service should match a grade step for to a percentage when no grading scale exists" time="0.01">
    </testcase>
    <testcase classname="Grading System Service should match a grade step for to a percentage" name="Grading System Service should match a grade step for to a percentage" time="0.008">
    </testcase>
    <testcase classname="Grading System Service should sort correctly" name="Grading System Service should sort correctly" time="0.005">
    </testcase>
    <testcase classname="Grading System Service should match grade percentage correctly" name="Grading System Service should match grade percentage correctly" time="0.015">
    </testcase>
    <testcase classname="Grading System Service should find matching grade step" name="Grading System Service should find matching grade step" time="0.01">
    </testcase>
    <testcase classname="Grading System Service should find max grade correctly" name="Grading System Service should find max grade correctly" time="0.01">
    </testcase>
    <testcase classname="Grading System Service should set grade points correctly" name="Grading System Service should set grade points correctly" time="0.01">
    </testcase>
    <testcase classname="Grading System Service should properly determine that points are not set" name="Grading System Service should properly determine that points are not set" time="0.015">
    </testcase>
    <testcase classname="Grading System Service should properly determine that points are set" name="Grading System Service should properly determine that points are set" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseGitDiffReport Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:17" time="4.316" tests="9">
    <testcase classname="ProgrammingExerciseGitDiffReport Component Should sort entries" name="ProgrammingExerciseGitDiffReport Component Should sort entries" time="0.289">
    </testcase>
    <testcase classname="ProgrammingExerciseGitDiffReport Component Should set added/removed lines to 1-0" name="ProgrammingExerciseGitDiffReport Component Should set added/removed lines to 1-0" time="0.118">
    </testcase>
    <testcase classname="ProgrammingExerciseGitDiffReport Component Should set added/removed lines to 4-1" name="ProgrammingExerciseGitDiffReport Component Should set added/removed lines to 4-1" time="0.069">
    </testcase>
    <testcase classname="ProgrammingExerciseGitDiffReport Component Should set added/removed lines to 3-2" name="ProgrammingExerciseGitDiffReport Component Should set added/removed lines to 3-2" time="0.091">
    </testcase>
    <testcase classname="ProgrammingExerciseGitDiffReport Component Should set added/removed lines to 2-3" name="ProgrammingExerciseGitDiffReport Component Should set added/removed lines to 2-3" time="0.047">
    </testcase>
    <testcase classname="ProgrammingExerciseGitDiffReport Component Should set added/removed lines to 1-4" name="ProgrammingExerciseGitDiffReport Component Should set added/removed lines to 1-4" time="0.089">
    </testcase>
    <testcase classname="ProgrammingExerciseGitDiffReport Component Should set added/removed lines to 0-1" name="ProgrammingExerciseGitDiffReport Component Should set added/removed lines to 0-1" time="0.07">
    </testcase>
    <testcase classname="ProgrammingExerciseGitDiffReport Component should record for each path whether the diff is ready" name="ProgrammingExerciseGitDiffReport Component should record for each path whether the diff is ready" time="0.069">
    </testcase>
    <testcase classname="ProgrammingExerciseGitDiffReport Component should correctly identify renamed files" name="ProgrammingExerciseGitDiffReport Component should correctly identify renamed files" time="0.063">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseParticipation Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:19" time="2.252" tests="14">
    <testcase classname="ProgrammingExerciseParticipation Service REST calls getLatestResultWithFeedback" name="ProgrammingExerciseParticipation Service REST calls getLatestResultWithFeedback" time="0.033">
    </testcase>
    <testcase classname="ProgrammingExerciseParticipation Service REST calls getLatestResultWithFeedback" name="ProgrammingExerciseParticipation Service REST calls getLatestResultWithFeedback" time="0.012">
    </testcase>
    <testcase classname="ProgrammingExerciseParticipation Service REST calls getStudentParticipationWithLatestResult" name="ProgrammingExerciseParticipation Service REST calls getStudentParticipationWithLatestResult" time="0.004">
    </testcase>
    <testcase classname="ProgrammingExerciseParticipation Service REST calls getStudentParticipationWithAllResults" name="ProgrammingExerciseParticipation Service REST calls getStudentParticipationWithAllResults" time="0.006">
    </testcase>
    <testcase classname="ProgrammingExerciseParticipation Service REST calls checkIfParticipationHasResult" name="ProgrammingExerciseParticipation Service REST calls checkIfParticipationHasResult" time="0.003">
    </testcase>
    <testcase classname="ProgrammingExerciseParticipation Service REST calls resetRepository" name="ProgrammingExerciseParticipation Service REST calls resetRepository" time="0.004">
    </testcase>
    <testcase classname="ProgrammingExerciseParticipation Service REST calls resetRepository" name="ProgrammingExerciseParticipation Service REST calls resetRepository" time="0.007">
    </testcase>
    <testcase classname="ProgrammingExerciseParticipation Service REST calls retrieveCommitHistoryForParticipation" name="ProgrammingExerciseParticipation Service REST calls retrieveCommitHistoryForParticipation" time="0.004">
    </testcase>
    <testcase classname="ProgrammingExerciseParticipation Service REST calls retrieveCommitHistoryForTemplateSolutionOrTests" name="ProgrammingExerciseParticipation Service REST calls retrieveCommitHistoryForTemplateSolutionOrTests" time="0.003">
    </testcase>
    <testcase classname="ProgrammingExerciseParticipation Service REST calls getParticipationRepositoryFilesWithContentAtCommitForCommitDetailsView" name="ProgrammingExerciseParticipation Service REST calls getParticipationRepositoryFilesWithContentAtCommitForCommitDetailsView" time="0.003">
    </testcase>
    <testcase classname="ProgrammingExerciseParticipation Service should make GET request to retrieve commits infos for participation" name="ProgrammingExerciseParticipation Service should make GET request to retrieve commits infos for participation" time="0.005">
    </testcase>
    <testcase classname="ProgrammingExerciseParticipation Service should make GET request to retrieve files with content at commit" name="ProgrammingExerciseParticipation Service should make GET request to retrieve files with content at commit" time="0.004">
    </testcase>
    <testcase classname="ProgrammingExerciseParticipation Service should make GET request to retrieve vcs access log for participation" name="ProgrammingExerciseParticipation Service should make GET request to retrieve vcs access log for participation" time="0.004">
    </testcase>
    <testcase classname="ProgrammingExerciseParticipation Service should make GET request to retrieve vcs access log for the template repository" name="ProgrammingExerciseParticipation Service should make GET request to retrieve vcs access log for the template repository" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="IrisCommonSubSettingsUpdateComponent Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:17" time="4.187" tests="10">
    <testcase classname="IrisCommonSubSettingsUpdateComponent Component child setup works" name="IrisCommonSubSettingsUpdateComponent Component child setup works" time="0.32">
    </testcase>
    <testcase classname="IrisCommonSubSettingsUpdateComponent Component parent setup works" name="IrisCommonSubSettingsUpdateComponent Component parent setup works" time="0.1">
    </testcase>
    <testcase classname="IrisCommonSubSettingsUpdateComponent Component prevents enabling chat settings if the parent chat settings disabled" name="IrisCommonSubSettingsUpdateComponent Component prevents enabling chat settings if the parent chat settings disabled" time="0.098">
    </testcase>
    <testcase classname="IrisCommonSubSettingsUpdateComponent Component prevents enabling settings if the parent chat settings disabled" name="IrisCommonSubSettingsUpdateComponent Component prevents enabling settings if the parent chat settings disabled" time="0.112">
    </testcase>
    <testcase classname="IrisCommonSubSettingsUpdateComponent Component change allowed model" name="IrisCommonSubSettingsUpdateComponent Component change allowed model" time="0.111">
    </testcase>
    <testcase classname="IrisCommonSubSettingsUpdateComponent Component change preferred model" name="IrisCommonSubSettingsUpdateComponent Component change preferred model" time="0.112">
    </testcase>
    <testcase classname="IrisCommonSubSettingsUpdateComponent Component change enabled" name="IrisCommonSubSettingsUpdateComponent Component change enabled" time="0.115">
    </testcase>
    <testcase classname="IrisCommonSubSettingsUpdateComponent Component change inherit allowed models" name="IrisCommonSubSettingsUpdateComponent Component change inherit allowed models" time="0.128">
    </testcase>
    <testcase classname="IrisCommonSubSettingsUpdateComponent Component ngOnChanges works" name="IrisCommonSubSettingsUpdateComponent Component ngOnChanges works" time="0.111">
    </testcase>
    <testcase classname="IrisCommonSubSettingsUpdateComponent Component enable categories" name="IrisCommonSubSettingsUpdateComponent Component enable categories" time="0.104">
    </testcase>
  </testsuite>
  <testsuite name="Exam Navigation Bar Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:17" time="4.998" tests="22">
    <testcase classname="Exam Navigation Bar Component should update the submissions onInit if their CommitState is UNCOMMITTED_CHANGES to isSynced false, if not in initial session" name="Exam Navigation Bar Component should update the submissions onInit if their CommitState is UNCOMMITTED_CHANGES to isSynced false, if not in initial session" time="0.219">
    </testcase>
    <testcase classname="Exam Navigation Bar Component trigger when the exam is about to end" name="Exam Navigation Bar Component trigger when the exam is about to end" time="0.022">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should change the exercise" name="Exam Navigation Bar Component should change the exercise" time="0.019">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should not change the exercise with invalid index" name="Exam Navigation Bar Component should not change the exercise with invalid index" time="0.038">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should tell the type of the selected programming exercise" name="Exam Navigation Bar Component should tell the type of the selected programming exercise" time="0.03">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should tell the type of the selected text exercise" name="Exam Navigation Bar Component should tell the type of the selected text exercise" time="0.034">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should tell the type of the selected modeling exercise" name="Exam Navigation Bar Component should tell the type of the selected modeling exercise" time="0.077">
    </testcase>
    <testcase classname="Exam Navigation Bar Component save the exercise with changeExercise" name="Exam Navigation Bar Component save the exercise with changeExercise" time="0.028">
    </testcase>
    <testcase classname="Exam Navigation Bar Component save the exercise without changeExercise" name="Exam Navigation Bar Component save the exercise without changeExercise" time="0.033">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should hand in the exam early" name="Exam Navigation Bar Component should hand in the exam early" time="0.019">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should set the exercise button status for undefined submission" name="Exam Navigation Bar Component should set the exercise button status for undefined submission" time="0.019">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should set the exercise button status for submitted submission" name="Exam Navigation Bar Component should set the exercise button status for submitted submission" time="0.028">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should set the exercise button status for submitted and synced submission active" name="Exam Navigation Bar Component should set the exercise button status for submitted and synced submission active" time="0.057">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should set the exercise button status for submitted and synced submission not active" name="Exam Navigation Bar Component should set the exercise button status for submitted and synced submission not active" time="0.022">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should get the exercise button tooltip without submission" name="Exam Navigation Bar Component should get the exercise button tooltip without submission" time="0.019">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should get the exercise button tooltip with submitted and synced submission" name="Exam Navigation Bar Component should get the exercise button tooltip with submitted and synced submission" time="0.019">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should get the exercise button tooltip with submitted submission" name="Exam Navigation Bar Component should get the exercise button tooltip with submitted submission" time="0.018">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should get the exercise button tooltip with submission" name="Exam Navigation Bar Component should get the exercise button tooltip with submission" time="0.02">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should get the exercise button tooltip with synced submission" name="Exam Navigation Bar Component should get the exercise button tooltip with synced submission" time="0.04">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should navigate to other Exercise" name="Exam Navigation Bar Component should navigate to other Exercise" time="0.026">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should set exercise button status to synced active if it is the active exercise in the exam timeline view" name="Exam Navigation Bar Component should set exercise button status to synced active if it is the active exercise in the exam timeline view" time="0.019">
    </testcase>
    <testcase classname="Exam Navigation Bar Component should set exercise button status to synced if it is not the active exercise in the exam timeline view" name="Exam Navigation Bar Component should set exercise button status to synced if it is not the active exercise in the exam timeline view" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseUtils" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:21" time="0.98" tests="43">
    <testcase classname="ExerciseUtils getExerciseDueDate() should return no due date if the exercise has no due date" name="ExerciseUtils getExerciseDueDate() should return no due date if the exercise has no due date" time="0.002">
    </testcase>
    <testcase classname="ExerciseUtils getExerciseDueDate() should return the exercise due date if no individual due date exists" name="ExerciseUtils getExerciseDueDate() should return the exercise due date if no individual due date exists" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils getExerciseDueDate() should return the individual due date instead of the exercise one if both exist" name="ExerciseUtils getExerciseDueDate() should return the individual due date instead of the exercise one if both exist" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils hasExerciseDueDatePassed() the due date should not have passed if the exercise has no due date" name="ExerciseUtils hasExerciseDueDatePassed() the due date should not have passed if the exercise has no due date" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils hasExerciseDueDatePassed() the due date should have passed if the exercise due date has passed and no individual due date exists" name="ExerciseUtils hasExerciseDueDatePassed() the due date should have passed if the exercise due date has passed and no individual due date exists" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils hasExerciseDueDatePassed() the due date should not have passed if the individual due date is in the future" name="ExerciseUtils hasExerciseDueDatePassed() the due date should not have passed if the individual due date is in the future" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should determine correctly if the student can practice a quiz" name="ExerciseUtils isStartPracticeAvailable() should determine correctly if the student can practice a quiz" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should determine correctly if the student can practice a quiz" name="ExerciseUtils isStartPracticeAvailable() should determine correctly if the student can practice a quiz" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should determine correctly if the student can practice a quiz" name="ExerciseUtils isStartPracticeAvailable() should determine correctly if the student can practice a quiz" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should determine correctly if the student can practice a programming exercise" name="ExerciseUtils isStartPracticeAvailable() should determine correctly if the student can practice a programming exercise" time="0.002">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should determine correctly if the student can practice a programming exercise" name="ExerciseUtils isStartPracticeAvailable() should determine correctly if the student can practice a programming exercise" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should determine correctly if the student can practice a programming exercise" name="ExerciseUtils isStartPracticeAvailable() should determine correctly if the student can practice a programming exercise" time="0">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should determine correctly if the student can practice a programming exercise" name="ExerciseUtils isStartPracticeAvailable() should determine correctly if the student can practice a programming exercise" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should determine correctly if the student can practice a programming exercise" name="ExerciseUtils isStartPracticeAvailable() should determine correctly if the student can practice a programming exercise" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should not allow practicing for other exercises" name="ExerciseUtils isStartPracticeAvailable() should not allow practicing for other exercises" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should not allow practicing for other exercises" name="ExerciseUtils isStartPracticeAvailable() should not allow practicing for other exercises" time="0.009">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should not allow practicing for other exercises" name="ExerciseUtils isStartPracticeAvailable() should not allow practicing for other exercises" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should not allow practicing for other exercises" name="ExerciseUtils isStartPracticeAvailable() should not allow practicing for other exercises" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" name="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" name="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" name="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" name="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" name="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" time="0.004">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" name="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" name="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" time="0">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" name="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" time="0.002">
    </testcase>
    <testcase classname="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" name="ExerciseUtils isStartPracticeAvailable() should correctly determine if starting an exercise is available" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isResumeExerciseAvailable() should correctly determine if resuming an exercise is available" name="ExerciseUtils isResumeExerciseAvailable() should correctly determine if resuming an exercise is available" time="0">
    </testcase>
    <testcase classname="ExerciseUtils isResumeExerciseAvailable() should correctly determine if resuming an exercise is available" name="ExerciseUtils isResumeExerciseAvailable() should correctly determine if resuming an exercise is available" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isResumeExerciseAvailable() should correctly determine if resuming an exercise is available" name="ExerciseUtils isResumeExerciseAvailable() should correctly determine if resuming an exercise is available" time="0">
    </testcase>
    <testcase classname="ExerciseUtils isResumeExerciseAvailable() should correctly determine if resuming an exercise is available" name="ExerciseUtils isResumeExerciseAvailable() should correctly determine if resuming an exercise is available" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isResumeExerciseAvailable() should correctly determine if resuming an exercise is available" name="ExerciseUtils isResumeExerciseAvailable() should correctly determine if resuming an exercise is available" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils isResumeExerciseAvailable() should correctly determine if resuming an exercise is available" name="ExerciseUtils isResumeExerciseAvailable() should correctly determine if resuming an exercise is available" time="0">
    </testcase>
    <testcase classname="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" name="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" time="0">
    </testcase>
    <testcase classname="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" name="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" name="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" name="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" time="0">
    </testcase>
    <testcase classname="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" name="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" name="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" name="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" time="0">
    </testcase>
    <testcase classname="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" name="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" time="0.001">
    </testcase>
    <testcase classname="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" name="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" time="0">
    </testcase>
    <testcase classname="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" name="ExerciseUtils areManualResultsAllowed() should correctly determine if manual results are allowed" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Lecture Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:21" time="0.942" tests="13">
    <testcase classname="Lecture Service Service methods should create a lecture in the database" name="Lecture Service Service methods should create a lecture in the database" time="0.017">
    </testcase>
    <testcase classname="Lecture Service Service methods should update a lecture in the database" name="Lecture Service Service methods should update a lecture in the database" time="0.006">
    </testcase>
    <testcase classname="Lecture Service Service methods should find a lecture with details in the database" name="Lecture Service Service methods should find a lecture with details in the database" time="0.006">
    </testcase>
    <testcase classname="Lecture Service Service methods should find a lecture with details and with slides in the database" name="Lecture Service Service methods should find a lecture with details and with slides in the database" time="0.005">
    </testcase>
    <testcase classname="Lecture Service Service methods should find a lecture in the database" name="Lecture Service Service methods should find a lecture in the database" time="0.004">
    </testcase>
    <testcase classname="Lecture Service Service methods should invoke query" name="Lecture Service Service methods should invoke query" time="0.007">
    </testcase>
    <testcase classname="Lecture Service Service methods should get all lectures by courseId" name="Lecture Service Service methods should get all lectures by courseId" time="0.004">
    </testcase>
    <testcase classname="Lecture Service Service methods should import lecture" name="Lecture Service Service methods should import lecture" time="0.004">
    </testcase>
    <testcase classname="Lecture Service Service methods should get all lectures with lecture units slides by courseId" name="Lecture Service Service methods should get all lectures with lecture units slides by courseId" time="0.006">
    </testcase>
    <testcase classname="Lecture Service Service methods should delete a lecture in the database" name="Lecture Service Service methods should delete a lecture in the database" time="0.004">
    </testcase>
    <testcase classname="Lecture Service Service methods should convert Dates from server" name="Lecture Service Service methods should convert Dates from server" time="0.02">
    </testcase>
    <testcase classname="Lecture Service Service methods should fetch ingestion state for a course" name="Lecture Service Service methods should fetch ingestion state for a course" time="0.008">
    </testcase>
    <testcase classname="Lecture Service Service methods should send a POST request to ingest lectures and return an OK response" name="Lecture Service Service methods should send a POST request to ingest lectures and return an OK response" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="DataCleanupService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:22" time="0.909" tests="11">
    <testcase classname="DataCleanupService should send DELETE request to delete orphans" name="DataCleanupService should send DELETE request to delete orphans" time="0.018">
    </testcase>
    <testcase classname="DataCleanupService should send DELETE request to delete plagiarism comparisons with date range" name="DataCleanupService should send DELETE request to delete plagiarism comparisons with date range" time="0.005">
    </testcase>
    <testcase classname="DataCleanupService should send DELETE request to delete non-rated results with date range" name="DataCleanupService should send DELETE request to delete non-rated results with date range" time="0.005">
    </testcase>
    <testcase classname="DataCleanupService should send DELETE request to delete old rated results with date range" name="DataCleanupService should send DELETE request to delete old rated results with date range" time="0.005">
    </testcase>
    <testcase classname="DataCleanupService should send GET request to get last executions" name="DataCleanupService should send GET request to get last executions" time="0.004">
    </testcase>
    <testcase classname="DataCleanupService should send GET request to count orphans" name="DataCleanupService should send GET request to count orphans" time="0.004">
    </testcase>
    <testcase classname="DataCleanupService should send GET request to count plagiarism comparisons with date range" name="DataCleanupService should send GET request to count plagiarism comparisons with date range" time="0.004">
    </testcase>
    <testcase classname="DataCleanupService should send GET request to count non-rated results with date range" name="DataCleanupService should send GET request to count non-rated results with date range" time="0.004">
    </testcase>
    <testcase classname="DataCleanupService should send GET request to count old rated results with date range" name="DataCleanupService should send GET request to count old rated results with date range" time="0.004">
    </testcase>
    <testcase classname="DataCleanupService should send DELETE request to delete old submission versions with date range" name="DataCleanupService should send DELETE request to delete old submission versions with date range" time="0.004">
    </testcase>
    <testcase classname="DataCleanupService should send GET request to count old submission versions with date range" name="DataCleanupService should send GET request to count old submission versions with date range" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="HeaderExercisePageWithDetails" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:22" time="2.828" tests="11">
    <testcase classname="HeaderExercisePageWithDetails should initialise badges, icons, and categories" name="HeaderExercisePageWithDetails should initialise badges, icons, and categories" time="0.289">
    </testcase>
    <testcase classname="HeaderExercisePageWithDetails should set the icon according to the exercise due date" name="HeaderExercisePageWithDetails should set the icon according to the exercise due date" time="0.123">
    </testcase>
    <testcase classname="HeaderExercisePageWithDetails should not show an earlier date than the dueDate once over" name="HeaderExercisePageWithDetails should not show an earlier date than the dueDate once over" time="0.165">
    </testcase>
    <testcase classname="HeaderExercisePageWithDetails should determine correct badge for due date" name="HeaderExercisePageWithDetails should determine correct badge for due date" time="0.084">
    </testcase>
    <testcase classname="HeaderExercisePageWithDetails should set the icon according to the exam end date" name="HeaderExercisePageWithDetails should set the icon according to the exam end date" time="0.104">
    </testcase>
    <testcase classname="HeaderExercisePageWithDetails should not set a due date in exam mode as no individual due dates exist" name="HeaderExercisePageWithDetails should not set a due date in exam mode as no individual due dates exist" time="0.082">
    </testcase>
    <testcase classname="HeaderExercisePageWithDetails should count number of submissions correctly" name="HeaderExercisePageWithDetails should count number of submissions correctly" time="0.092">
    </testcase>
    <testcase classname="HeaderExercisePageWithDetails should count number of submissions correctly" name="HeaderExercisePageWithDetails should count number of submissions correctly" time="0.099">
    </testcase>
    <testcase classname="HeaderExercisePageWithDetails should count number of submissions correctly" name="HeaderExercisePageWithDetails should count number of submissions correctly" time="0.081">
    </testcase>
    <testcase classname="HeaderExercisePageWithDetails should count number of submissions correctly" name="HeaderExercisePageWithDetails should count number of submissions correctly" time="0.087">
    </testcase>
    <testcase classname="HeaderExercisePageWithDetails should count number of submissions correctly" name="HeaderExercisePageWithDetails should count number of submissions correctly" time="0.065">
    </testcase>
  </testsuite>
  <testsuite name="EditAttachmentUnitComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:22" time="2.779" tests="4">
    <testcase classname="EditAttachmentUnitComponent should set form data correctly" name="EditAttachmentUnitComponent should set form data correctly" time="0.384">
    </testcase>
    <testcase classname="EditAttachmentUnitComponent should update attachment unit with file change without notification" name="EditAttachmentUnitComponent should update attachment unit with file change without notification" time="0.096">
    </testcase>
    <testcase classname="EditAttachmentUnitComponent should update attachment unit with file change with notification" name="EditAttachmentUnitComponent should update attachment unit with file change with notification" time="0.095">
    </testcase>
    <testcase classname="EditAttachmentUnitComponent should update attachment unit without file change without notification" name="EditAttachmentUnitComponent should update attachment unit without file change without notification" time="0.083">
    </testcase>
  </testsuite>
  <testsuite name="VideoUnitFormComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:22" time="4.734" tests="8">
    <testcase classname="VideoUnitFormComponent should initialize" name="VideoUnitFormComponent should initialize" time="0.708">
    </testcase>
    <testcase classname="VideoUnitFormComponent should not submit a form when name is missing" name="VideoUnitFormComponent should not submit a form when name is missing" time="0.331">
    </testcase>
    <testcase classname="VideoUnitFormComponent should not submit a form when source is missing" name="VideoUnitFormComponent should not submit a form when source is missing" time="0.268">
    </testcase>
    <testcase classname="VideoUnitFormComponent should submit valid form" name="VideoUnitFormComponent should submit valid form" time="0.341">
    </testcase>
    <testcase classname="VideoUnitFormComponent should correctly transform YouTube URL into embeddable format" name="VideoUnitFormComponent should correctly transform YouTube URL into embeddable format" time="0.322">
    </testcase>
    <testcase classname="VideoUnitFormComponent should correctly transform TUM-Live URL without video only into embeddable format" name="VideoUnitFormComponent should correctly transform TUM-Live URL without video only into embeddable format" time="0.262">
    </testcase>
    <testcase classname="VideoUnitFormComponent should correctly set form values in edit mode" name="VideoUnitFormComponent should correctly set form values in edit mode" time="0.295">
    </testcase>
    <testcase classname="VideoUnitFormComponent should emit onCancel event when cancelForm is called" name="VideoUnitFormComponent should emit onCancel event when cancelForm is called" time="0.157">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseExamDiffComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:23" time="4.499" tests="6">
    <testcase classname="ProgrammingExerciseExamDiffComponent should call getDiffReportForSubmissions when loading diff report if previous submission is defined" name="ProgrammingExerciseExamDiffComponent should call getDiffReportForSubmissions when loading diff report if previous submission is defined" time="0.386">
    </testcase>
    <testcase classname="ProgrammingExerciseExamDiffComponent should call getDiffReportForSubmissionWithTemplate when loading diff report if previous submission is undefined" name="ProgrammingExerciseExamDiffComponent should call getDiffReportForSubmissionWithTemplate when loading diff report if previous submission is undefined" time="0.036">
    </testcase>
    <testcase classname="ProgrammingExerciseExamDiffComponent should open the modal when showGitDiff is called" name="ProgrammingExerciseExamDiffComponent should open the modal when showGitDiff is called" time="0.06">
    </testcase>
    <testcase classname="ProgrammingExerciseExamDiffComponent should use reports from cache if available" name="ProgrammingExerciseExamDiffComponent should use reports from cache if available" time="0.046">
    </testcase>
    <testcase classname="ProgrammingExerciseExamDiffComponent should load report if not in cache" name="ProgrammingExerciseExamDiffComponent should load report if not in cache" time="0.039">
    </testcase>
    <testcase classname="ProgrammingExerciseExamDiffComponent should subscribe to CachedRepositoryFilesChange event" name="ProgrammingExerciseExamDiffComponent should subscribe to CachedRepositoryFilesChange event" time="0.073">
    </testcase>
  </testsuite>
  <testsuite name="RedirectToIrisButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:25" time="2.995" tests="12">
    <testcase classname="RedirectToIrisButtonComponent should have default values" name="RedirectToIrisButtonComponent should have default values" time="0.054">
    </testcase>
    <testcase classname="RedirectToIrisButtonComponent should set the correct logo size to TEXT when using IrisLogoComponent" name="RedirectToIrisButtonComponent should set the correct logo size to TEXT when using IrisLogoComponent" time="0.008">
    </testcase>
    <testcase classname="RedirectToIrisButtonComponent should show loading spinner when buttonLoading is true" name="RedirectToIrisButtonComponent should show loading spinner when buttonLoading is true" time="0.015">
    </testcase>
    <testcase classname="RedirectToIrisButtonComponent should be enabled for exercise chats if Iris is activated for the exercise" name="RedirectToIrisButtonComponent should be enabled for exercise chats if Iris is activated for the exercise" time="0.028">
    </testcase>
    <testcase classname="RedirectToIrisButtonComponent should be enabled for lecture chats if Iris is activated for the lecture" name="RedirectToIrisButtonComponent should be enabled for lecture chats if Iris is activated for the lecture" time="0.009">
    </testcase>
    <testcase classname="RedirectToIrisButtonComponent should be enabled for general chat if Iris is activated for the course chat" name="RedirectToIrisButtonComponent should be enabled for general chat if Iris is activated for the course chat" time="0.008">
    </testcase>
    <testcase classname="RedirectToIrisButtonComponent should be disabled for exercise chats if Iris is disabled for the exercise" name="RedirectToIrisButtonComponent should be disabled for exercise chats if Iris is disabled for the exercise" time="0.012">
    </testcase>
    <testcase classname="RedirectToIrisButtonComponent should be disabled for general chats if Iris is disabled for the course chat" name="RedirectToIrisButtonComponent should be disabled for general chats if Iris is disabled for the course chat" time="0.02">
    </testcase>
    <testcase classname="RedirectToIrisButtonComponent should be disabled for lecture chats if Iris is disabled for the lecture" name="RedirectToIrisButtonComponent should be disabled for lecture chats if Iris is disabled for the lecture" time="0.007">
    </testcase>
    <testcase classname="RedirectToIrisButtonComponent should handle errors when retrieving Iris settings" name="RedirectToIrisButtonComponent should handle errors when retrieving Iris settings" time="0.025">
    </testcase>
    <testcase classname="RedirectToIrisButtonComponent should not be displayed for general chats if the Student Course Analytics Dashboard is disabled" name="RedirectToIrisButtonComponent should not be displayed for general chats if the Student Course Analytics Dashboard is disabled" time="0.01">
    </testcase>
    <testcase classname="RedirectToIrisButtonComponent should add the message as payload when redirectToIrisButton is pressed" name="RedirectToIrisButtonComponent should add the message as payload when redirectToIrisButton is pressed" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="MonacoEditorActionQuizIntegration" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:28" time="4.137" tests="15">
    <testcase classname="MonacoEditorActionQuizIntegration MonacoInsertShortAnswerOption should insert text with the default answer option" name="MonacoEditorActionQuizIntegration MonacoInsertShortAnswerOption should insert text with the default answer option" time="0.742">
    </testcase>
    <testcase classname="MonacoEditorActionQuizIntegration MonacoInsertShortAnswerOption should insert the default text for blank option texts" name="MonacoEditorActionQuizIntegration MonacoInsertShortAnswerOption should insert the default text for blank option texts" time="0.061">
    </testcase>
    <testcase classname="MonacoEditorActionQuizIntegration MonacoInsertShortAnswerOption should insert text with the specified spot number" name="MonacoEditorActionQuizIntegration MonacoInsertShortAnswerOption should insert text with the specified spot number" time="0.08">
    </testcase>
    <testcase classname="MonacoEditorActionQuizIntegration MonacoInsertShortAnswerOption should insert text with the specified option text and spot number" name="MonacoEditorActionQuizIntegration MonacoInsertShortAnswerOption should insert text with the specified option text and spot number" time="0.06">
    </testcase>
    <testcase classname="MonacoEditorActionQuizIntegration MonacoInsertShortAnswerOption should insert text with the specified option text" name="MonacoEditorActionQuizIntegration MonacoInsertShortAnswerOption should insert text with the specified option text" time="0.076">
    </testcase>
    <testcase classname="MonacoEditorActionQuizIntegration MonacoInsertShortAnswerOption should insert text after the last option" name="MonacoEditorActionQuizIntegration MonacoInsertShortAnswerOption should insert text after the last option" time="0.077">
    </testcase>
    <testcase classname="MonacoEditorActionQuizIntegration MonacoInsertShortAnswerOption should insert text with more space if the last line is not an option" name="MonacoEditorActionQuizIntegration MonacoInsertShortAnswerOption should insert text with more space if the last line is not an option" time="0.097">
    </testcase>
    <testcase classname="MonacoEditorActionQuizIntegration EditorInsertShortAnswerSpotAction should forward the spot number &amp; selection to the insertShortAnswerOptionAction" name="MonacoEditorActionQuizIntegration EditorInsertShortAnswerSpotAction should forward the spot number &amp; selection to the insertShortAnswerOptionAction" time="0.098">
    </testcase>
    <testcase classname="MonacoEditorActionQuizIntegration EditorInsertShortAnswerSpotAction should insert a spot at the current position (no selection)" name="MonacoEditorActionQuizIntegration EditorInsertShortAnswerSpotAction should insert a spot at the current position (no selection)" time="0.074">
    </testcase>
    <testcase classname="MonacoEditorActionQuizIntegration EditorInsertShortAnswerSpotAction should insert a spot at the current position (with selection)" name="MonacoEditorActionQuizIntegration EditorInsertShortAnswerSpotAction should insert a spot at the current position (with selection)" time="0.086">
    </testcase>
    <testcase classname="MonacoEditorActionQuizIntegration EditorInsertShortAnswerSpotAction should insert a spot and attach an option" name="MonacoEditorActionQuizIntegration EditorInsertShortAnswerSpotAction should insert a spot and attach an option" time="0.051">
    </testcase>
    <testcase classname="MonacoEditorActionQuizIntegration Multiple Choice answer options should insert a wrong MC option" name="MonacoEditorActionQuizIntegration Multiple Choice answer options should insert a wrong MC option" time="0.061">
    </testcase>
    <testcase classname="MonacoEditorActionQuizIntegration Multiple Choice answer options should insert a correct MC option" name="MonacoEditorActionQuizIntegration Multiple Choice answer options should insert a correct MC option" time="0.072">
    </testcase>
    <testcase classname="MonacoEditorActionQuizIntegration Multiple Choice answer options should add an explanation to an answer option" name="MonacoEditorActionQuizIntegration Multiple Choice answer options should add an explanation to an answer option" time="0.068">
    </testcase>
    <testcase classname="MonacoEditorActionQuizIntegration Multiple Choice answer options should add a hint to an answer option" name="MonacoEditorActionQuizIntegration Multiple Choice answer options should add a hint to an answer option" time="0.069">
    </testcase>
  </testsuite>
  <testsuite name="Exam Import Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:27" time="5.174" tests="9">
    <testcase classname="Exam Import Component should correctly open the exercise selection" name="Exam Import Component should correctly open the exercise selection" time="0.449">
    </testcase>
    <testcase classname="Exam Import Component should correctly show an error for the exercise selection, if the server throws an error" name="Exam Import Component should correctly show an error for the exercise selection, if the server throws an error" time="0.124">
    </testcase>
    <testcase classname="Exam Import Component should only perform input of exercise groups if prerequisites are met" name="Exam Import Component should only perform input of exercise groups if prerequisites are met" time="0.161">
    </testcase>
    <testcase classname="Exam Import Component should perform import of exercise groups successfully" name="Exam Import Component should perform import of exercise groups successfully" time="0.206">
    </testcase>
    <testcase classname="Exam Import Component should trigger an alarm for a wrong user input" name="Exam Import Component should trigger an alarm for a wrong user input" time="0.234">
    </testcase>
    <testcase classname="Exam Import Component should perform import of exercise groups AND correctly process conflict from server" name="Exam Import Component should perform import of exercise groups AND correctly process conflict from server" time="0.21">
    </testcase>
    <testcase classname="Exam Import Component should perform import of exercise groups AND correctly process conflict from server" name="Exam Import Component should perform import of exercise groups AND correctly process conflict from server" time="0.153">
    </testcase>
    <testcase classname="Exam Import Component should perform import of exercise groups AND correctly process conflict from server" name="Exam Import Component should perform import of exercise groups AND correctly process conflict from server" time="0.2">
    </testcase>
    <testcase classname="Exam Import Component should perform import of exercise groups AND correctly process arbitrary exception from server" name="Exam Import Component should perform import of exercise groups AND correctly process arbitrary exception from server" time="0.187">
    </testcase>
  </testsuite>
  <testsuite name="QuizExercise Multiple Choice Question Statistic Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:28" time="4.614" tests="8">
    <testcase classname="QuizExercise Multiple Choice Question Statistic Component onInit should call functions on Init" name="QuizExercise Multiple Choice Question Statistic Component onInit should call functions on Init" time="0.138">
    </testcase>
    <testcase classname="QuizExercise Multiple Choice Question Statistic Component onInit should not load Quiz if not authorised" name="QuizExercise Multiple Choice Question Statistic Component onInit should not load Quiz if not authorised" time="0.011">
    </testcase>
    <testcase classname="QuizExercise Multiple Choice Question Statistic Component loadLayout should call functions from loadLayout" name="QuizExercise Multiple Choice Question Statistic Component loadLayout should call functions from loadLayout" time="0.013">
    </testcase>
    <testcase classname="QuizExercise Multiple Choice Question Statistic Component loadData should call functions from loadData" name="QuizExercise Multiple Choice Question Statistic Component loadData should call functions from loadData" time="0.013">
    </testcase>
    <testcase classname="QuizExercise Multiple Choice Question Statistic Component loadData should load solution data in diagram" name="QuizExercise Multiple Choice Question Statistic Component loadData should load solution data in diagram" time="0.009">
    </testcase>
    <testcase classname="QuizExercise Multiple Choice Question Statistic Component loadData should mark option as invalid" name="QuizExercise Multiple Choice Question Statistic Component loadData should mark option as invalid" time="0.009">
    </testcase>
    <testcase classname="QuizExercise Multiple Choice Question Statistic Component loadData should navigate back if the quiz does not contain any questions" name="QuizExercise Multiple Choice Question Statistic Component loadData should navigate back if the quiz does not contain any questions" time="0.011">
    </testcase>
    <testcase classname="QuizExercise Multiple Choice Question Statistic Component loadData should load the layout for the solution" name="QuizExercise Multiple Choice Question Statistic Component loadData should load the layout for the solution" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="ConversationOptionsComponent with oneToOneChat" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:25" time="7.639" tests="42">
    <testcase classname="ConversationOptionsComponent with oneToOneChat should create" name="ConversationOptionsComponent with oneToOneChat should create" time="0.078">
    </testcase>
    <testcase classname="ConversationOptionsComponent with oneToOneChat should remove conversation from favorites when hidden" name="ConversationOptionsComponent with oneToOneChat should remove conversation from favorites when hidden" time="0.063">
    </testcase>
    <testcase classname="ConversationOptionsComponent with oneToOneChat should remove conversation from hidden when favorited" name="ConversationOptionsComponent with oneToOneChat should remove conversation from hidden when favorited" time="0.021">
    </testcase>
    <testcase classname="ConversationOptionsComponent with oneToOneChat should call updateIsFavorite when button is clicked" name="ConversationOptionsComponent with oneToOneChat should call updateIsFavorite when button is clicked" time="0.02">
    </testcase>
    <testcase classname="ConversationOptionsComponent with oneToOneChat should call updateIsHidden when button is clicked" name="ConversationOptionsComponent with oneToOneChat should call updateIsHidden when button is clicked" time="0.014">
    </testcase>
    <testcase classname="ConversationOptionsComponent with oneToOneChat should call updateIsMuted when button is clicked" name="ConversationOptionsComponent with oneToOneChat should call updateIsMuted when button is clicked" time="0.014">
    </testcase>
    <testcase classname="ConversationOptionsComponent with oneToOneChat should open channel overview dialog when button is pressed" name="ConversationOptionsComponent with oneToOneChat should open channel overview dialog when button is pressed" time="0.013">
    </testcase>
    <testcase classname="ConversationOptionsComponent with groupChat should create" name="ConversationOptionsComponent with groupChat should create" time="0.065">
    </testcase>
    <testcase classname="ConversationOptionsComponent with groupChat should remove conversation from favorites when hidden" name="ConversationOptionsComponent with groupChat should remove conversation from favorites when hidden" time="0.044">
    </testcase>
    <testcase classname="ConversationOptionsComponent with groupChat should remove conversation from hidden when favorited" name="ConversationOptionsComponent with groupChat should remove conversation from hidden when favorited" time="0.025">
    </testcase>
    <testcase classname="ConversationOptionsComponent with groupChat should call updateIsFavorite when button is clicked" name="ConversationOptionsComponent with groupChat should call updateIsFavorite when button is clicked" time="0.028">
    </testcase>
    <testcase classname="ConversationOptionsComponent with groupChat should call updateIsHidden when button is clicked" name="ConversationOptionsComponent with groupChat should call updateIsHidden when button is clicked" time="0.019">
    </testcase>
    <testcase classname="ConversationOptionsComponent with groupChat should call updateIsMuted when button is clicked" name="ConversationOptionsComponent with groupChat should call updateIsMuted when button is clicked" time="0.044">
    </testcase>
    <testcase classname="ConversationOptionsComponent with groupChat should open channel overview dialog when button is pressed" name="ConversationOptionsComponent with groupChat should open channel overview dialog when button is pressed" time="0.023">
    </testcase>
    <testcase classname="ConversationOptionsComponent with general channel should create" name="ConversationOptionsComponent with general channel should create" time="0.027">
    </testcase>
    <testcase classname="ConversationOptionsComponent with general channel should remove conversation from favorites when hidden" name="ConversationOptionsComponent with general channel should remove conversation from favorites when hidden" time="0.017">
    </testcase>
    <testcase classname="ConversationOptionsComponent with general channel should remove conversation from hidden when favorited" name="ConversationOptionsComponent with general channel should remove conversation from hidden when favorited" time="0.02">
    </testcase>
    <testcase classname="ConversationOptionsComponent with general channel should call updateIsFavorite when button is clicked" name="ConversationOptionsComponent with general channel should call updateIsFavorite when button is clicked" time="0.015">
    </testcase>
    <testcase classname="ConversationOptionsComponent with general channel should call updateIsHidden when button is clicked" name="ConversationOptionsComponent with general channel should call updateIsHidden when button is clicked" time="0.044">
    </testcase>
    <testcase classname="ConversationOptionsComponent with general channel should call updateIsMuted when button is clicked" name="ConversationOptionsComponent with general channel should call updateIsMuted when button is clicked" time="0.024">
    </testcase>
    <testcase classname="ConversationOptionsComponent with general channel should open channel overview dialog when button is pressed" name="ConversationOptionsComponent with general channel should open channel overview dialog when button is pressed" time="0.025">
    </testcase>
    <testcase classname="ConversationOptionsComponent with exercise channel should create" name="ConversationOptionsComponent with exercise channel should create" time="0.019">
    </testcase>
    <testcase classname="ConversationOptionsComponent with exercise channel should remove conversation from favorites when hidden" name="ConversationOptionsComponent with exercise channel should remove conversation from favorites when hidden" time="0.017">
    </testcase>
    <testcase classname="ConversationOptionsComponent with exercise channel should remove conversation from hidden when favorited" name="ConversationOptionsComponent with exercise channel should remove conversation from hidden when favorited" time="0.06">
    </testcase>
    <testcase classname="ConversationOptionsComponent with exercise channel should call updateIsFavorite when button is clicked" name="ConversationOptionsComponent with exercise channel should call updateIsFavorite when button is clicked" time="0.019">
    </testcase>
    <testcase classname="ConversationOptionsComponent with exercise channel should call updateIsHidden when button is clicked" name="ConversationOptionsComponent with exercise channel should call updateIsHidden when button is clicked" time="0.026">
    </testcase>
    <testcase classname="ConversationOptionsComponent with exercise channel should call updateIsMuted when button is clicked" name="ConversationOptionsComponent with exercise channel should call updateIsMuted when button is clicked" time="0.024">
    </testcase>
    <testcase classname="ConversationOptionsComponent with exercise channel should open channel overview dialog when button is pressed" name="ConversationOptionsComponent with exercise channel should open channel overview dialog when button is pressed" time="0.017">
    </testcase>
    <testcase classname="ConversationOptionsComponent with lecture channel should create" name="ConversationOptionsComponent with lecture channel should create" time="0.016">
    </testcase>
    <testcase classname="ConversationOptionsComponent with lecture channel should remove conversation from favorites when hidden" name="ConversationOptionsComponent with lecture channel should remove conversation from favorites when hidden" time="0.068">
    </testcase>
    <testcase classname="ConversationOptionsComponent with lecture channel should remove conversation from hidden when favorited" name="ConversationOptionsComponent with lecture channel should remove conversation from hidden when favorited" time="0.017">
    </testcase>
    <testcase classname="ConversationOptionsComponent with lecture channel should call updateIsFavorite when button is clicked" name="ConversationOptionsComponent with lecture channel should call updateIsFavorite when button is clicked" time="0.015">
    </testcase>
    <testcase classname="ConversationOptionsComponent with lecture channel should call updateIsHidden when button is clicked" name="ConversationOptionsComponent with lecture channel should call updateIsHidden when button is clicked" time="0.015">
    </testcase>
    <testcase classname="ConversationOptionsComponent with lecture channel should call updateIsMuted when button is clicked" name="ConversationOptionsComponent with lecture channel should call updateIsMuted when button is clicked" time="0.021">
    </testcase>
    <testcase classname="ConversationOptionsComponent with lecture channel should open channel overview dialog when button is pressed" name="ConversationOptionsComponent with lecture channel should open channel overview dialog when button is pressed" time="0.039">
    </testcase>
    <testcase classname="ConversationOptionsComponent with exam channel should create" name="ConversationOptionsComponent with exam channel should create" time="0.017">
    </testcase>
    <testcase classname="ConversationOptionsComponent with exam channel should remove conversation from favorites when hidden" name="ConversationOptionsComponent with exam channel should remove conversation from favorites when hidden" time="0.019">
    </testcase>
    <testcase classname="ConversationOptionsComponent with exam channel should remove conversation from hidden when favorited" name="ConversationOptionsComponent with exam channel should remove conversation from hidden when favorited" time="0.017">
    </testcase>
    <testcase classname="ConversationOptionsComponent with exam channel should call updateIsFavorite when button is clicked" name="ConversationOptionsComponent with exam channel should call updateIsFavorite when button is clicked" time="0.018">
    </testcase>
    <testcase classname="ConversationOptionsComponent with exam channel should call updateIsHidden when button is clicked" name="ConversationOptionsComponent with exam channel should call updateIsHidden when button is clicked" time="0.03">
    </testcase>
    <testcase classname="ConversationOptionsComponent with exam channel should call updateIsMuted when button is clicked" name="ConversationOptionsComponent with exam channel should call updateIsMuted when button is clicked" time="0.017">
    </testcase>
    <testcase classname="ConversationOptionsComponent with exam channel should open channel overview dialog when button is pressed" name="ConversationOptionsComponent with exam channel should open channel overview dialog when button is pressed" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupSessionsTableWrapperTest" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:32" time="2.884" tests="7">
    <testcase classname="TutorialGroupSessionsTableWrapperTest should pass the session to the headers" name="TutorialGroupSessionsTableWrapperTest should pass the session to the headers" time="0.251">
    </testcase>
    <testcase classname="TutorialGroupSessionsTableWrapperTest should return the correct number of columns" name="TutorialGroupSessionsTableWrapperTest should return the correct number of columns" time="0.091">
    </testcase>
    <testcase classname="TutorialGroupSessionTableComponent should initialize" name="TutorialGroupSessionTableComponent should initialize" time="0.084">
    </testcase>
    <testcase classname="TutorialGroupSessionTableComponent should sync next session and upcoming sessions when attendance changed" name="TutorialGroupSessionTableComponent should sync next session and upcoming sessions when attendance changed" time="0.165">
    </testcase>
    <testcase classname="TutorialGroupSessionTableComponent should sync next session and past sessions when attendance changed" name="TutorialGroupSessionTableComponent should sync next session and past sessions when attendance changed" time="0.14">
    </testcase>
    <testcase classname="TutorialGroupSessionTableComponent should split sessions into upcoming and past" name="TutorialGroupSessionTableComponent should split sessions into upcoming and past" time="0.155">
    </testcase>
    <testcase classname="TutorialGroupSessionTableComponent should return the correct number of columns" name="TutorialGroupSessionTableComponent should return the correct number of columns" time="0.094">
    </testcase>
  </testsuite>
  <testsuite name="CourseNotificationPopupOverlayComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:33" time="2.32" tests="14">
    <testcase classname="CourseNotificationPopupOverlayComponent should create" name="CourseNotificationPopupOverlayComponent should create" time="0.172">
    </testcase>
    <testcase classname="CourseNotificationPopupOverlayComponent should add notification when websocket emits one" name="CourseNotificationPopupOverlayComponent should add notification when websocket emits one" time="0.065">
    </testcase>
    <testcase classname="CourseNotificationPopupOverlayComponent should set isExpanded to false when removing the last notification" name="CourseNotificationPopupOverlayComponent should set isExpanded to false when removing the last notification" time="0.08">
    </testcase>
    <testcase classname="CourseNotificationPopupOverlayComponent should handle closeClicked correctly" name="CourseNotificationPopupOverlayComponent should handle closeClicked correctly" time="0.062">
    </testcase>
    <testcase classname="CourseNotificationPopupOverlayComponent should set isExpanded to true when overlayClicked and notifications.length &gt; 1" name="CourseNotificationPopupOverlayComponent should set isExpanded to true when overlayClicked and notifications.length &gt; 1" time="0.071">
    </testcase>
    <testcase classname="CourseNotificationPopupOverlayComponent should not change isExpanded when overlayClicked and notifications.length &lt;= 1" name="CourseNotificationPopupOverlayComponent should not change isExpanded when overlayClicked and notifications.length &lt;= 1" time="0.088">
    </testcase>
    <testcase classname="CourseNotificationPopupOverlayComponent should set isExpanded to false when collapseOverlayClicked" name="CourseNotificationPopupOverlayComponent should set isExpanded to false when collapseOverlayClicked" time="0.046">
    </testcase>
    <testcase classname="CourseNotificationPopupOverlayComponent should do nothing when collapseOverlayClicked and isExpanded is false" name="CourseNotificationPopupOverlayComponent should do nothing when collapseOverlayClicked and isExpanded is false" time="0.071">
    </testcase>
    <testcase classname="CourseNotificationPopupOverlayComponent should unsubscribe from websocket on ngOnDestroy" name="CourseNotificationPopupOverlayComponent should unsubscribe from websocket on ngOnDestroy" time="0.07">
    </testcase>
    <testcase classname="CourseNotificationPopupOverlayComponent should display notifications in the template" name="CourseNotificationPopupOverlayComponent should display notifications in the template" time="0.065">
    </testcase>
    <testcase classname="CourseNotificationPopupOverlayComponent should add d-none class when no notifications are present" name="CourseNotificationPopupOverlayComponent should add d-none class when no notifications are present" time="0.038">
    </testcase>
    <testcase classname="CourseNotificationPopupOverlayComponent should add is-expanded class when isExpanded is true" name="CourseNotificationPopupOverlayComponent should add is-expanded class when isExpanded is true" time="0.052">
    </testcase>
    <testcase classname="CourseNotificationPopupOverlayComponent should trigger overlayClicked when clicking the overlay" name="CourseNotificationPopupOverlayComponent should trigger overlayClicked when clicking the overlay" time="0.055">
    </testcase>
    <testcase classname="CourseNotificationPopupOverlayComponent should trigger collapseOverlayClicked when clicking the collapse button" name="CourseNotificationPopupOverlayComponent should trigger collapseOverlayClicked when clicking the collapse button" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="TextBlockFeedbackEditorComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:33" time="3.54" tests="10">
    <testcase classname="TextBlockFeedbackEditorComponent should create" name="TextBlockFeedbackEditorComponent should create" time="0.484">
    </testcase>
    <testcase classname="TextBlockFeedbackEditorComponent should show delete button for empty feedback only" name="TextBlockFeedbackEditorComponent should show delete button for empty feedback only" time="0.167">
    </testcase>
    <testcase classname="TextBlockFeedbackEditorComponent should call escKeyup when keyEvent" name="TextBlockFeedbackEditorComponent should call escKeyup when keyEvent" time="0.109">
    </testcase>
    <testcase classname="TextBlockFeedbackEditorComponent should show confirmIcon if feedback dismission needs to be confirmed" name="TextBlockFeedbackEditorComponent should show confirmIcon if feedback dismission needs to be confirmed" time="0.213">
    </testcase>
    <testcase classname="TextBlockFeedbackEditorComponent should show link icon when feedback is associated with grading instruction" name="TextBlockFeedbackEditorComponent should show link icon when feedback is associated with grading instruction" time="0.15">
    </testcase>
    <testcase classname="TextBlockFeedbackEditorComponent should not show link icon when feedback is not associated with grading instruction" name="TextBlockFeedbackEditorComponent should not show link icon when feedback is not associated with grading instruction" time="0.167">
    </testcase>
    <testcase classname="TextBlockFeedbackEditorComponent should send assessment event on dismiss button click" name="TextBlockFeedbackEditorComponent should send assessment event on dismiss button click" time="0.179">
    </testcase>
    <testcase classname="TextBlockFeedbackEditorComponent should set correctionStatus of the feedback to undefined on score click" name="TextBlockFeedbackEditorComponent should set correctionStatus of the feedback to undefined on score click" time="0.173">
    </testcase>
    <testcase classname="TextBlockFeedbackEditorComponent should set correctionStatus of the feedback to undefined on connection of feedback with the grading instruction" name="TextBlockFeedbackEditorComponent should set correctionStatus of the feedback to undefined on connection of feedback with the grading instruction" time="0.159">
    </testcase>
    <testcase classname="TextBlockFeedbackEditorComponent should send assessment event if feedback type changed" name="TextBlockFeedbackEditorComponent should send assessment event if feedback type changed" time="0.137">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:34" time="3.246" tests="15">
    <testcase classname="TutorialGroupService getOneOfCourse" name="TutorialGroupService getOneOfCourse" time="0.009">
    </testcase>
    <testcase classname="TutorialGroupService create" name="TutorialGroupService create" time="0.005">
    </testcase>
    <testcase classname="TutorialGroupService update" name="TutorialGroupService update" time="0.004">
    </testcase>
    <testcase classname="TutorialGroupService getAllOfCourse" name="TutorialGroupService getAllOfCourse" time="0.005">
    </testcase>
    <testcase classname="TutorialGroupService deregisterStudent" name="TutorialGroupService deregisterStudent" time="0.004">
    </testcase>
    <testcase classname="TutorialGroupService registerStudent" name="TutorialGroupService registerStudent" time="0.011">
    </testcase>
    <testcase classname="TutorialGroupService delete" name="TutorialGroupService delete" time="0.003">
    </testcase>
    <testcase classname="TutorialGroupService getUniqueLanguageValues" name="TutorialGroupService getUniqueLanguageValues" time="0.005">
    </testcase>
    <testcase classname="TutorialGroupService registerMultipleStudents" name="TutorialGroupService registerMultipleStudents" time="0.006">
    </testcase>
    <testcase classname="TutorialGroupService should export tutorial groups to CSV" name="TutorialGroupService should export tutorial groups to CSV" time="0.006">
    </testcase>
    <testcase classname="TutorialGroupService should export tutorial groups to JSON" name="TutorialGroupService should export tutorial groups to JSON" time="0.007">
    </testcase>
    <testcase classname="TutorialGroupService should get unique language values" name="TutorialGroupService should get unique language values" time="0.004">
    </testcase>
    <testcase classname="TutorialGroupService should import tutorial groups" name="TutorialGroupService should import tutorial groups" time="0.008">
    </testcase>
    <testcase classname="TutorialGroupService should convert tutorial group array dates from server" name="TutorialGroupService should convert tutorial group array dates from server" time="0.04">
    </testcase>
    <testcase classname="TutorialGroupService should convert tutorial group dates from server with sessions" name="TutorialGroupService should convert tutorial group dates from server with sessions" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="LegalDocumentUpdateComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:35" time="4.395" tests="9">
    <testcase classname="LegalDocumentUpdateComponent should show warning on language change with unsaved changes" name="LegalDocumentUpdateComponent should show warning on language change with unsaved changes" time="0.52">
    </testcase>
    <testcase classname="LegalDocumentUpdateComponent should load legal document in German on init" name="LegalDocumentUpdateComponent should load legal document in German on init" time="0.078">
    </testcase>
    <testcase classname="LegalDocumentUpdateComponent should load legal document in German on init" name="LegalDocumentUpdateComponent should load legal document in German on init" time="0.067">
    </testcase>
    <testcase classname="LegalDocumentUpdateComponent should load legal document in selected language on language change" name="LegalDocumentUpdateComponent should load legal document in selected language on language change" time="0.064">
    </testcase>
    <testcase classname="LegalDocumentUpdateComponent should load legal document in selected language on language change" name="LegalDocumentUpdateComponent should load legal document in selected language on language change" time="0.055">
    </testcase>
    <testcase classname="LegalDocumentUpdateComponent should correctly determine unsaved changes" name="LegalDocumentUpdateComponent should correctly determine unsaved changes" time="0.061">
    </testcase>
    <testcase classname="LegalDocumentUpdateComponent should call update legal document service method on update" name="LegalDocumentUpdateComponent should call update legal document service method on update" time="0.077">
    </testcase>
    <testcase classname="LegalDocumentUpdateComponent should call update legal document service method on update" name="LegalDocumentUpdateComponent should call update legal document service method on update" time="0.084">
    </testcase>
    <testcase classname="LegalDocumentUpdateComponent should set the value of the markdown editor when the language is changed while in preview mode" name="LegalDocumentUpdateComponent should set the value of the markdown editor when the language is changed while in preview mode" time="0.071">
    </testcase>
  </testsuite>
  <testsuite name="TeamParticipationTableComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:37" time="2.941" tests="11">
    <testcase classname="TeamParticipationTableComponent Exercises for one team are loaded correctly" name="TeamParticipationTableComponent Exercises for one team are loaded correctly" time="0.199">
    </testcase>
    <testcase classname="TeamParticipationTableComponent Assessment Action &quot;continue&quot; is triggered" name="TeamParticipationTableComponent Assessment Action &quot;continue&quot; is triggered" time="0.01">
    </testcase>
    <testcase classname="TeamParticipationTableComponent Assessment Action &quot;start&quot; is triggered" name="TeamParticipationTableComponent Assessment Action &quot;start&quot; is triggered" time="0.011">
    </testcase>
    <testcase classname="TeamParticipationTableComponent Assessment Action &quot;open&quot; is triggered" name="TeamParticipationTableComponent Assessment Action &quot;open&quot; is triggered" time="0.012">
    </testcase>
    <testcase classname="TeamParticipationTableComponent Navigate to assessment editor when opening exercise submission" name="TeamParticipationTableComponent Navigate to assessment editor when opening exercise submission" time="0.035">
    </testcase>
    <testcase classname="TeamParticipationTableComponent Check enabled assessment button for exercises without due date" name="TeamParticipationTableComponent Check enabled assessment button for exercises without due date" time="0.01">
    </testcase>
    <testcase classname="TeamParticipationTableComponent Check enabled assessment button for exercises with submission and passed due date" name="TeamParticipationTableComponent Check enabled assessment button for exercises with submission and passed due date" time="0.009">
    </testcase>
    <testcase classname="TeamParticipationTableComponent Check disabled assessment button for exercises without submission" name="TeamParticipationTableComponent Check disabled assessment button for exercises without submission" time="0.008">
    </testcase>
    <testcase classname="TeamParticipationTableComponent Check disabled assessment button for exercises before due date as tutor" name="TeamParticipationTableComponent Check disabled assessment button for exercises before due date as tutor" time="0.009">
    </testcase>
    <testcase classname="TeamParticipationTableComponent Check disabled assessment button for programming exercises before due date as instructor" name="TeamParticipationTableComponent Check disabled assessment button for programming exercises before due date as instructor" time="0.01">
    </testcase>
    <testcase classname="TeamParticipationTableComponent Check enabled assessment button for exercises before due date as instructor" name="TeamParticipationTableComponent Check enabled assessment button for exercises before due date as instructor" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="TeamUpdateDialogComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:36" time="3.872" tests="3">
    <testcase classname="TeamUpdateDialogComponent Team Update Dialog can be closed and canceled" name="TeamUpdateDialogComponent Team Update Dialog can be closed and canceled" time="0.411">
    </testcase>
    <testcase classname="TeamUpdateDialogComponent Team Update Dialog can be used to create team" name="TeamUpdateDialogComponent Team Update Dialog can be used to create team" time="0.247">
    </testcase>
    <testcase classname="TeamUpdateDialogComponent Team Update Dialog can be used to update team" name="TeamUpdateDialogComponent Team Update Dialog can be used to update team" time="0.178">
    </testcase>
  </testsuite>
  <testsuite name="PostingHeaderComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:35" time="5.182" tests="17">
    <testcase classname="PostingHeaderComponent should set date information correctly for post of today" name="PostingHeaderComponent should set date information correctly for post of today" time="0.234">
    </testcase>
    <testcase classname="PostingHeaderComponent should not set today flag for posts not created today" name="PostingHeaderComponent should not set today flag for posts not created today" time="0.17">
    </testcase>
    <testcase classname="PostingHeaderComponent should display resolved icon on resolved post header" name="PostingHeaderComponent should display resolved icon on resolved post header" time="0.161">
    </testcase>
    <testcase classname="PostingHeaderComponent should not display resolved icon on unresolved post header" name="PostingHeaderComponent should not display resolved icon on unresolved post header" time="0.109">
    </testcase>
    <testcase classname="PostingHeaderComponent should display relevant icon and tooltip for author authority INSTRUCTOR" name="PostingHeaderComponent should display relevant icon and tooltip for author authority INSTRUCTOR" time="0.128">
    </testcase>
    <testcase classname="PostingHeaderComponent should display relevant icon and tooltip for author authority TUTOR" name="PostingHeaderComponent should display relevant icon and tooltip for author authority TUTOR" time="0.125">
    </testcase>
    <testcase classname="PostingHeaderComponent should display relevant icon and tooltip for author authority USER" name="PostingHeaderComponent should display relevant icon and tooltip for author authority USER" time="0.104">
    </testcase>
    <testcase classname="PostingHeaderComponent should set userAuthorityIcon correctly for role USER" name="PostingHeaderComponent should set userAuthorityIcon correctly for role USER" time="0.132">
    </testcase>
    <testcase classname="PostingHeaderComponent should set userAuthorityIcon correctly for role INSTRUCTOR" name="PostingHeaderComponent should set userAuthorityIcon correctly for role INSTRUCTOR" time="0.131">
    </testcase>
    <testcase classname="PostingHeaderComponent should set userAuthorityIcon correctly for role TUTOR" name="PostingHeaderComponent should set userAuthorityIcon correctly for role TUTOR" time="0.113">
    </testcase>
    <testcase classname="PostingHeaderComponent should set userAuthorityTooltip correctly for role USER" name="PostingHeaderComponent should set userAuthorityTooltip correctly for role USER" time="0.073">
    </testcase>
    <testcase classname="PostingHeaderComponent should set userAuthorityTooltip correctly for role INSTRUCTOR" name="PostingHeaderComponent should set userAuthorityTooltip correctly for role INSTRUCTOR" time="0.093">
    </testcase>
    <testcase classname="PostingHeaderComponent should set userAuthorityTooltip correctly for role TUTOR" name="PostingHeaderComponent should set userAuthorityTooltip correctly for role TUTOR" time="0.082">
    </testcase>
    <testcase classname="PostingHeaderComponent should set isAuthorOfPosting correctly when user is the author" name="PostingHeaderComponent should set isAuthorOfPosting correctly when user is the author" time="0.098">
    </testcase>
    <testcase classname="PostingHeaderComponent should handle undefined posting gracefully" name="PostingHeaderComponent should handle undefined posting gracefully" time="0.125">
    </testcase>
    <testcase classname="PostingHeaderComponent should set date information correctly for post of yesterday" name="PostingHeaderComponent should set date information correctly for post of yesterday" time="0.083">
    </testcase>
    <testcase classname="PostingHeaderComponent should set author information correctly" name="PostingHeaderComponent should set author information correctly" time="0.086">
    </testcase>
  </testsuite>
  <testsuite name="Feedback" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:40" time="1.216" tests="18">
    <testcase classname="Feedback buildFeedbackTextForReview should return the detailed text if no grading instruction is connected to the feedback" name="Feedback buildFeedbackTextForReview should return the detailed text if no grading instruction is connected to the feedback" time="0.011">
    </testcase>
    <testcase classname="Feedback buildFeedbackTextForReview should return the text if no detail text and no grading instruction is connected to the feedback" name="Feedback buildFeedbackTextForReview should return the text if no detail text and no grading instruction is connected to the feedback" time="0.001">
    </testcase>
    <testcase classname="Feedback buildFeedbackTextForReview should ignore the simple text if requested and no grading instruction is set" name="Feedback buildFeedbackTextForReview should ignore the simple text if requested and no grading instruction is set" time="0.001">
    </testcase>
    <testcase classname="Feedback buildFeedbackTextForReview should only return the the grading instruction feedback if no other text is set" name="Feedback buildFeedbackTextForReview should only return the the grading instruction feedback if no other text is set" time="0.001">
    </testcase>
    <testcase classname="Feedback buildFeedbackTextForReview should add grading instruction feedback and detail text and text if all are available" name="Feedback buildFeedbackTextForReview should add grading instruction feedback and detail text and text if all are available" time="0.001">
    </testcase>
    <testcase classname="Feedback static detection functions should detect Static Code Analysis feedback" name="Feedback static detection functions should detect Static Code Analysis feedback" time="0.001">
    </testcase>
    <testcase classname="Feedback static detection functions should detect Submission Policy feedback" name="Feedback static detection functions should detect Submission Policy feedback" time="0.001">
    </testcase>
    <testcase classname="Feedback static detection functions should detect Feedback Suggestion" name="Feedback static detection functions should detect Feedback Suggestion" time="0.001">
    </testcase>
    <testcase classname="Feedback static detection functions should determine Feedback Suggestion Type" name="Feedback static detection functions should determine Feedback Suggestion Type" time="0.001">
    </testcase>
    <testcase classname="Feedback reference extraction functions should extract the file path from the feedback reference" name="Feedback reference extraction functions should extract the file path from the feedback reference" time="0.001">
    </testcase>
    <testcase classname="Feedback reference extraction functions should extract the file path from the feedback reference for file names with an underscore" name="Feedback reference extraction functions should extract the file path from the feedback reference for file names with an underscore" time="0.001">
    </testcase>
    <testcase classname="Feedback reference extraction functions should extract the line number from the feedback reference" name="Feedback reference extraction functions should extract the line number from the feedback reference" time="0.002">
    </testcase>
    <testcase classname="Feedback reference extraction functions should extract the line number from the feedback reference for file names with an underscore" name="Feedback reference extraction functions should extract the line number from the feedback reference for file names with an underscore" time="0.001">
    </testcase>
    <testcase classname="Feedback isTestCaseFeedback should correctly detect manual feedback" name="Feedback isTestCaseFeedback should correctly detect manual feedback" time="0.001">
    </testcase>
    <testcase classname="Feedback isTestCaseFeedback should correctly detect sca feedback" name="Feedback isTestCaseFeedback should correctly detect sca feedback" time="0">
    </testcase>
    <testcase classname="Feedback isTestCaseFeedback should correctly detect submission policy feedback" name="Feedback isTestCaseFeedback should correctly detect submission policy feedback" time="0.001">
    </testcase>
    <testcase classname="Feedback isTestCaseFeedback should correctly detect test case feedback" name="Feedback isTestCaseFeedback should correctly detect test case feedback" time="0.001">
    </testcase>
    <testcase classname="Feedback isTestCaseFeedback should correctly detect non graded automatically generated feedback" name="Feedback isTestCaseFeedback should correctly detect non graded automatically generated feedback" time="0">
    </testcase>
  </testsuite>
  <testsuite name="CourseUsersSelectorComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:40" time="2.625" tests="12">
    <testcase classname="CourseUsersSelectorComponent should create" name="CourseUsersSelectorComponent should create" time="0.144">
    </testcase>
    <testcase classname="CourseUsersSelectorComponent should have host class" name="CourseUsersSelectorComponent should have host class" time="0.017">
    </testcase>
    <testcase classname="CourseUsersSelectorComponent changing connected wrapper should update the component property" name="CourseUsersSelectorComponent changing connected wrapper should update the component property" time="0.024">
    </testcase>
    <testcase classname="CourseUsersSelectorComponent should convert undefined to empty array" name="CourseUsersSelectorComponent should convert undefined to empty array" time="0.017">
    </testcase>
    <testcase classname="CourseUsersSelectorComponent searching, selecting and deleting a user should update the selectedUsers property" name="CourseUsersSelectorComponent searching, selecting and deleting a user should update the selectedUsers property" time="0.103">
    </testcase>
    <testcase classname="CourseUsersSelectorComponent should block the input field and not show delete button" name="CourseUsersSelectorComponent should block the input field and not show delete button" time="0.054">
    </testcase>
    <testcase classname="CourseUsersSelectorComponent should render profile picture for users in dropdown" name="CourseUsersSelectorComponent should render profile picture for users in dropdown" time="0.033">
    </testcase>
    <testcase classname="CourseUsersSelectorComponent changing connected wrapper should update the component property" name="CourseUsersSelectorComponent changing connected wrapper should update the component property" time="0.054">
    </testcase>
    <testcase classname="CourseUsersSelectorComponent should convert undefined to empty array" name="CourseUsersSelectorComponent should convert undefined to empty array" time="0.044">
    </testcase>
    <testcase classname="CourseUsersSelectorComponent searching, selecting and deleting a user should update the selectedUsers property" name="CourseUsersSelectorComponent searching, selecting and deleting a user should update the selectedUsers property" time="0.091">
    </testcase>
    <testcase classname="CourseUsersSelectorComponent should block the input field and not show delete button" name="CourseUsersSelectorComponent should block the input field and not show delete button" time="0.045">
    </testcase>
    <testcase classname="CourseUsersSelectorComponent should render profile picture for users in dropdown" name="CourseUsersSelectorComponent should render profile picture for users in dropdown" time="0.045">
    </testcase>
  </testsuite>
  <testsuite name="Exam Management Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:40" time="4.553" tests="10">
    <testcase classname="Exam Management Component should call find of courseManagementService to get course on init" name="Exam Management Component should call find of courseManagementService to get course on init" time="0.409">
    </testcase>
    <testcase classname="Exam Management Component should call loadAllExamsForCourse on init" name="Exam Management Component should call loadAllExamsForCourse on init" time="0.103">
    </testcase>
    <testcase classname="Exam Management Component should call getLatestIndividualDate on init" name="Exam Management Component should call getLatestIndividualDate on init" time="0.082">
    </testcase>
    <testcase classname="Exam Management Component should call findAllExamsForCourse on examListModification event being fired after registering for exam changes" name="Exam Management Component should call findAllExamsForCourse on examListModification event being fired after registering for exam changes" time="0.147">
    </testcase>
    <testcase classname="Exam Management Component should return false for examHasFinished when component has no exam information" name="Exam Management Component should return false for examHasFinished when component has no exam information" time="0.124">
    </testcase>
    <testcase classname="Exam Management Component should return true for examHasFinished when exam is in the past" name="Exam Management Component should return true for examHasFinished when exam is in the past" time="0.093">
    </testcase>
    <testcase classname="Exam Management Component should return false for examHasFinished when exam is in the future" name="Exam Management Component should return false for examHasFinished when exam is in the future" time="0.127">
    </testcase>
    <testcase classname="Exam Management Component should return exam.id, when item in the exam table is being tracked" name="Exam Management Component should return exam.id, when item in the exam table is being tracked" time="0.144">
    </testcase>
    <testcase classname="Exam Management Component should call sortService when sortRows is called" name="Exam Management Component should call sortService when sortRows is called" time="0.133">
    </testcase>
    <testcase classname="Exam Management Component should open the import modal for exercise groups" name="Exam Management Component should open the import modal for exercise groups" time="0.136">
    </testcase>
  </testsuite>
  <testsuite name="MultipleChoiceQuestionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:42" time="3.197" tests="6">
    <testcase classname="MultipleChoiceQuestionComponent should update rendered question and answer with html when question is set" name="MultipleChoiceQuestionComponent should update rendered question and answer with html when question is set" time="0.539">
    </testcase>
    <testcase classname="MultipleChoiceQuestionComponent should update rendered question and answer with empty strings when question/answer values are undefined" name="MultipleChoiceQuestionComponent should update rendered question and answer with empty strings when question/answer values are undefined" time="0.199">
    </testcase>
    <testcase classname="MultipleChoiceQuestionComponent should return true is if the answer option was selected" name="MultipleChoiceQuestionComponent should return true is if the answer option was selected" time="0.205">
    </testcase>
    <testcase classname="MultipleChoiceQuestionComponent should not toggle anything on disabled click" name="MultipleChoiceQuestionComponent should not toggle anything on disabled click" time="0.145">
    </testcase>
    <testcase classname="MultipleChoiceQuestionComponent should toggle answer options" name="MultipleChoiceQuestionComponent should toggle answer options" time="0.164">
    </testcase>
    <testcase classname="MultipleChoiceQuestionComponent should toggle answer options, but only allow one to be selected for single choice questions" name="MultipleChoiceQuestionComponent should toggle answer options, but only allow one to be selected for single choice questions" time="0.111">
    </testcase>
  </testsuite>
  <testsuite name="LectureUnitService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:45" time="2.65" tests="13">
    <testcase classname="LectureUnitService should receive updated order array" name="LectureUnitService should receive updated order array" time="0.013">
    </testcase>
    <testcase classname="LectureUnitService should get title of associated element" name="LectureUnitService should get title of associated element" time="0.005">
    </testcase>
    <testcase classname="LectureUnitService should get release date of associated element" name="LectureUnitService should get release date of associated element" time="0.005">
    </testcase>
    <testcase classname="LectureUnitService should send a request to the server to get ngx representation of learning path" name="LectureUnitService should send a request to the server to get ngx representation of learning path" time="0.004">
    </testcase>
    <testcase classname="LectureUnitService should set lecture unit as completed" name="LectureUnitService should set lecture unit as completed" time="0.005">
    </testcase>
    <testcase classname="LectureUnitService should set lecture unit as uncompleted" name="LectureUnitService should set lecture unit as uncompleted" time="0.004">
    </testcase>
    <testcase classname="LectureUnitService should not set completion status if already completed" name="LectureUnitService should not set completion status if already completed" time="0.004">
    </testcase>
    <testcase classname="LectureUnitService should not set completion status if not visible" name="LectureUnitService should not set completion status if not visible" time="0.004">
    </testcase>
    <testcase classname="LectureUnitService should get lecture unit by id" name="LectureUnitService should get lecture unit by id" time="0.003">
    </testcase>
    <testcase classname="LectureUnitService should delete lecture unit by id" name="LectureUnitService should delete lecture unit by id" time="0.004">
    </testcase>
    <testcase classname="LectureUnitService should handle empty response body when converting dates from server on response array" name="LectureUnitService should handle empty response body when converting dates from server on response array" time="0.031">
    </testcase>
    <testcase classname="LectureUnitService should fetch the ingestion state for lecture units and return an OK response" name="LectureUnitService should fetch the ingestion state for lecture units and return an OK response" time="0.006">
    </testcase>
    <testcase classname="LectureUnitService should send a POST request to ingest a lecture unit and return an OK response" name="LectureUnitService should send a POST request to ingest a lecture unit and return an OK response" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="MultipleChoiceQuestionEditComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:40" time="8.018" tests="10">
    <testcase classname="MultipleChoiceQuestionEditComponent should initialize with question markdown text" name="MultipleChoiceQuestionEditComponent should initialize with question markdown text" time="2.226">
    </testcase>
    <testcase classname="MultipleChoiceQuestionEditComponent should store scoring type when changed" name="MultipleChoiceQuestionEditComponent should store scoring type when changed" time="0.457">
    </testcase>
    <testcase classname="MultipleChoiceQuestionEditComponent should parse answer options but not question titles" name="MultipleChoiceQuestionEditComponent should parse answer options but not question titles" time="0.365">
    </testcase>
    <testcase classname="MultipleChoiceQuestionEditComponent should parse answer options with question titles" name="MultipleChoiceQuestionEditComponent should parse answer options with question titles" time="0.308">
    </testcase>
    <testcase classname="MultipleChoiceQuestionEditComponent should parse question titles" name="MultipleChoiceQuestionEditComponent should parse question titles" time="0.273">
    </testcase>
    <testcase classname="MultipleChoiceQuestionEditComponent should find no domain actions" name="MultipleChoiceQuestionEditComponent should find no domain actions" time="0.204">
    </testcase>
    <testcase classname="MultipleChoiceQuestionEditComponent should detect changes in markdown" name="MultipleChoiceQuestionEditComponent should detect changes in markdown" time="0.238">
    </testcase>
    <testcase classname="MultipleChoiceQuestionEditComponent should trigger delete button" name="MultipleChoiceQuestionEditComponent should trigger delete button" time="0.023">
    </testcase>
    <testcase classname="MultipleChoiceQuestionEditComponent should parse markdown when preparing for save in edit mode" name="MultipleChoiceQuestionEditComponent should parse markdown when preparing for save in edit mode" time="0.285">
    </testcase>
    <testcase classname="MultipleChoiceQuestionEditComponent should update markdown from the visual component when preparing for save in visual mode" name="MultipleChoiceQuestionEditComponent should update markdown from the visual component when preparing for save in visual mode" time="0.232">
    </testcase>
  </testsuite>
  <testsuite name="PostCreateEditModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:43" time="6.031" tests="6">
    <testcase classname="PostCreateEditModalComponent should init modal with correct context, title and content for post without id" name="PostCreateEditModalComponent should init modal with correct context, title and content for post without id" time="0.624">
    </testcase>
    <testcase classname="PostCreateEditModalComponent should reset context selection on changes" name="PostCreateEditModalComponent should reset context selection on changes" time="0.064">
    </testcase>
    <testcase classname="PostCreateEditModalComponent should invoke metis service with created post in overview" name="PostCreateEditModalComponent should invoke metis service with created post in overview" time="0.133">
    </testcase>
    <testcase classname="PostCreateEditModalComponent should invoke metis service with created announcement in overview" name="PostCreateEditModalComponent should invoke metis service with created announcement in overview" time="0.131">
    </testcase>
    <testcase classname="PostCreateEditModalComponent should invoke metis service with updated post in page section" name="PostCreateEditModalComponent should invoke metis service with updated post in page section" time="0.098">
    </testcase>
    <testcase classname="PostCreateEditModalComponent should invoke the modalService" name="PostCreateEditModalComponent should invoke the modalService" time="0.095">
    </testcase>
  </testsuite>
  <testsuite name="CompetencyFormComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:45" time="4.728" tests="6">
    <testcase classname="CompetencyFormComponent should initialize" name="CompetencyFormComponent should initialize" time="0.628">
    </testcase>
    <testcase classname="CompetencyFormComponent should submit valid form" name="CompetencyFormComponent should submit valid form" time="0.135">
    </testcase>
    <testcase classname="CompetencyFormComponent should correctly set form values in edit mode" name="CompetencyFormComponent should correctly set form values in edit mode" time="0.112">
    </testcase>
    <testcase classname="CompetencyFormComponent should suggest taxonomy when title changes" name="CompetencyFormComponent should suggest taxonomy when title changes" time="0.145">
    </testcase>
    <testcase classname="CompetencyFormComponent should suggest taxonomy when description changes" name="CompetencyFormComponent should suggest taxonomy when description changes" time="0.104">
    </testcase>
    <testcase classname="CompetencyFormComponent validator should verify title is unique" name="CompetencyFormComponent validator should verify title is unique" time="0.125">
    </testcase>
  </testsuite>
  <testsuite name="GradingKeyTableComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:48" time="2.325" tests="6">
    <testcase classname="GradingKeyTableComponent should initialize when grade queryParam is not given" name="GradingKeyTableComponent should initialize when grade queryParam is not given" time="0.156">
    </testcase>
    <testcase classname="GradingKeyTableComponent should initialize when params are in grandparent route" name="GradingKeyTableComponent should initialize when params are in grandparent route" time="0.06">
    </testcase>
    <testcase classname="GradingKeyTableComponent should initialize when params are in parent route" name="GradingKeyTableComponent should initialize when params are in parent route" time="0.067">
    </testcase>
    <testcase classname="GradingKeyTableComponent should initialize when params are in current route" name="GradingKeyTableComponent should initialize when params are in current route" time="0.065">
    </testcase>
    <testcase classname="GradingKeyTableComponent should initialize for bonus grading scale" name="GradingKeyTableComponent should initialize for bonus grading scale" time="0.075">
    </testcase>
    <testcase classname="GradingKeyTableComponent should initialize for courses" name="GradingKeyTableComponent should initialize for courses" time="0.074">
    </testcase>
  </testsuite>
  <testsuite name="TextResultComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:50" time="1.971" tests="7">
    <testcase classname="TextResultComponent should initialize" name="TextResultComponent should initialize" time="0.151">
    </testcase>
    <testcase classname="TextResultComponent should convert text to result blocks" name="TextResultComponent should convert text to result blocks" time="0.076">
    </testcase>
    <testcase classname="TextResultComponent should repeat steps for each credit" name="TextResultComponent should repeat steps for each credit" time="0.043">
    </testcase>
    <testcase classname="TextResultComponent should translate credits" name="TextResultComponent should translate credits" time="0.065">
    </testcase>
    <testcase classname="TextResultComponent should test result block methods" name="TextResultComponent should test result block methods" time="0.035">
    </testcase>
    <testcase classname="TextResultComponent should display the feedback text properly" name="TextResultComponent should display the feedback text properly" time="0.03">
    </testcase>
    <testcase classname="TextResultComponent should mark the subsequent feedback" name="TextResultComponent should mark the subsequent feedback" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseScoresChartComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:50" time="3.342" tests="5">
    <testcase classname="ExerciseScoresChartComponent should initialize" name="ExerciseScoresChartComponent should initialize" time="0.242">
    </testcase>
    <testcase classname="ExerciseScoresChartComponent should load exercise scores and generate chart" name="ExerciseScoresChartComponent should load exercise scores and generate chart" time="0.032">
    </testcase>
    <testcase classname="ExerciseScoresChartComponent should filter exercises correctly" name="ExerciseScoresChartComponent should filter exercises correctly" time="0.036">
    </testcase>
    <testcase classname="ExerciseScoresChartComponent should react correctly if legend entry is clicked" name="ExerciseScoresChartComponent should react correctly if legend entry is clicked" time="0.027">
    </testcase>
    <testcase classname="ExerciseScoresChartComponent should react correct if chart point is clicked" name="ExerciseScoresChartComponent should react correct if chart point is clicked" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="CourseGroupComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:50" time="3.048" tests="13">
    <testcase classname="CourseGroupComponent should initialize" name="CourseGroupComponent should initialize" time="0.438">
    </testcase>
    <testcase classname="CourseGroupComponent searchAllUsers should search users for given login or name" name="CourseGroupComponent searchAllUsers should search users for given login or name" time="0.02">
    </testcase>
    <testcase classname="CourseGroupComponent searchAllUsers should set search no results if search returns no result" name="CourseGroupComponent searchAllUsers should set search no results if search returns no result" time="0.014">
    </testcase>
    <testcase classname="CourseGroupComponent searchAllUsers should return empty if search text is shorter than three characters" name="CourseGroupComponent searchAllUsers should return empty if search text is shorter than three characters" time="0.015">
    </testcase>
    <testcase classname="CourseGroupComponent searchAllUsers should return empty if search fails" name="CourseGroupComponent searchAllUsers should return empty if search fails" time="0.017">
    </testcase>
    <testcase classname="CourseGroupComponent onAutocompleteSelect should add the selected user to course group" name="CourseGroupComponent onAutocompleteSelect should add the selected user to course group" time="0.012">
    </testcase>
    <testcase classname="CourseGroupComponent onAutocompleteSelect should call callback if user is already in the group" name="CourseGroupComponent onAutocompleteSelect should call callback if user is already in the group" time="0.03">
    </testcase>
    <testcase classname="CourseGroupComponent removeFromGroup should given user from group" name="CourseGroupComponent removeFromGroup should given user from group" time="0.039">
    </testcase>
    <testcase classname="CourseGroupComponent removeFromGroup should not do anything if users has no login" name="CourseGroupComponent removeFromGroup should not do anything if users has no login" time="0.013">
    </testcase>
    <testcase classname="CourseGroupComponent searchResultFormatter should format user info into appropriate format" name="CourseGroupComponent searchResultFormatter should format user info into appropriate format" time="0.025">
    </testcase>
    <testcase classname="CourseGroupComponent searchTextFromUser converts a user to a string that can be searched for" name="CourseGroupComponent searchTextFromUser converts a user to a string that can be searched for" time="0.012">
    </testcase>
    <testcase classname="CourseGroupComponent searchTextFromUser should return empty string if user does not have login" name="CourseGroupComponent searchTextFromUser should return empty string if user does not have login" time="0.014">
    </testcase>
    <testcase classname="CourseGroupComponent should generate csv correctly" name="CourseGroupComponent should generate csv correctly" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="ConversationMembersComponent with oneToOneChat" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:49" time="4.438" tests="18">
    <testcase classname="ConversationMembersComponent with oneToOneChat should create" name="ConversationMembersComponent with oneToOneChat should create" time="0.221">
    </testcase>
    <testcase classname="ConversationMembersComponent with oneToOneChat should call searchMembersOfConversation on init with empty search term (searches all)" name="ConversationMembersComponent with oneToOneChat should call searchMembersOfConversation on init with empty search term (searches all)" time="0.158">
    </testcase>
    <testcase classname="ConversationMembersComponent with oneToOneChat should call searchMembersOfConversation on search term change" name="ConversationMembersComponent with oneToOneChat should call searchMembersOfConversation on search term change" time="0.14">
    </testcase>
    <testcase classname="ConversationMembersComponent with oneToOneChat should call searchMembersOfConversation when filter is changed" name="ConversationMembersComponent with oneToOneChat should call searchMembersOfConversation when filter is changed" time="0.14">
    </testcase>
    <testcase classname="ConversationMembersComponent with oneToOneChat should perform search on transition to page 2" name="ConversationMembersComponent with oneToOneChat should perform search on transition to page 2" time="0.149">
    </testcase>
    <testcase classname="ConversationMembersComponent with oneToOneChat should open add users dialog when button is pressed" name="ConversationMembersComponent with oneToOneChat should open add users dialog when button is pressed" time="0.14">
    </testcase>
    <testcase classname="ConversationMembersComponent with groupChat should create" name="ConversationMembersComponent with groupChat should create" time="0.077">
    </testcase>
    <testcase classname="ConversationMembersComponent with groupChat should call searchMembersOfConversation on init with empty search term (searches all)" name="ConversationMembersComponent with groupChat should call searchMembersOfConversation on init with empty search term (searches all)" time="0.169">
    </testcase>
    <testcase classname="ConversationMembersComponent with groupChat should call searchMembersOfConversation on search term change" name="ConversationMembersComponent with groupChat should call searchMembersOfConversation on search term change" time="0.199">
    </testcase>
    <testcase classname="ConversationMembersComponent with groupChat should call searchMembersOfConversation when filter is changed" name="ConversationMembersComponent with groupChat should call searchMembersOfConversation when filter is changed" time="0.189">
    </testcase>
    <testcase classname="ConversationMembersComponent with groupChat should perform search on transition to page 2" name="ConversationMembersComponent with groupChat should perform search on transition to page 2" time="0.145">
    </testcase>
    <testcase classname="ConversationMembersComponent with groupChat should open add users dialog when button is pressed" name="ConversationMembersComponent with groupChat should open add users dialog when button is pressed" time="0.136">
    </testcase>
    <testcase classname="ConversationMembersComponent with channel should create" name="ConversationMembersComponent with channel should create" time="0.057">
    </testcase>
    <testcase classname="ConversationMembersComponent with channel should call searchMembersOfConversation on init with empty search term (searches all)" name="ConversationMembersComponent with channel should call searchMembersOfConversation on init with empty search term (searches all)" time="0.123">
    </testcase>
    <testcase classname="ConversationMembersComponent with channel should call searchMembersOfConversation on search term change" name="ConversationMembersComponent with channel should call searchMembersOfConversation on search term change" time="0.175">
    </testcase>
    <testcase classname="ConversationMembersComponent with channel should call searchMembersOfConversation when filter is changed" name="ConversationMembersComponent with channel should call searchMembersOfConversation when filter is changed" time="0.191">
    </testcase>
    <testcase classname="ConversationMembersComponent with channel should perform search on transition to page 2" name="ConversationMembersComponent with channel should perform search on transition to page 2" time="0.224">
    </testcase>
    <testcase classname="ConversationMembersComponent with channel should open add users dialog when button is pressed" name="ConversationMembersComponent with channel should open add users dialog when button is pressed" time="0.166">
    </testcase>
  </testsuite>
  <testsuite name="SplitPaneHeaderComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:52" time="2.658" tests="17">
    <testcase classname="SplitPaneHeaderComponent resets the active file index on change" name="SplitPaneHeaderComponent resets the active file index on change" time="0.034">
    </testcase>
    <testcase classname="SplitPaneHeaderComponent selects the first file on change" name="SplitPaneHeaderComponent selects the first file on change" time="0.006">
    </testcase>
    <testcase classname="SplitPaneHeaderComponent does not find an active file" name="SplitPaneHeaderComponent does not find an active file" time="0.015">
    </testcase>
    <testcase classname="SplitPaneHeaderComponent returns the active file" name="SplitPaneHeaderComponent returns the active file" time="0.009">
    </testcase>
    <testcase classname="SplitPaneHeaderComponent handles selection of a file" name="SplitPaneHeaderComponent handles selection of a file" time="0.008">
    </testcase>
    <testcase classname="SplitPaneHeaderComponent has no files" name="SplitPaneHeaderComponent has no files" time="0.008">
    </testcase>
    <testcase classname="SplitPaneHeaderComponent has files" name="SplitPaneHeaderComponent has files" time="0.009">
    </testcase>
    <testcase classname="SplitPaneHeaderComponent toggles &quot;show files&quot;" name="SplitPaneHeaderComponent toggles &quot;show files&quot;" time="0.009">
    </testcase>
    <testcase classname="SplitPaneHeaderComponent does not toggle &quot;show files&quot;" name="SplitPaneHeaderComponent does not toggle &quot;show files&quot;" time="0.007">
    </testcase>
    <testcase classname="SplitPaneHeaderComponent should emit selected file through fileSelectedSubject" name="SplitPaneHeaderComponent should emit selected file through fileSelectedSubject" time="0.015">
    </testcase>
    <testcase classname="SplitPaneHeaderComponent should sync file selection when lockFilesEnabled true" name="SplitPaneHeaderComponent should sync file selection when lockFilesEnabled true" time="0.033">
    </testcase>
    <testcase classname="SplitPaneHeaderComponent should not sync file selection when lockFilesEnabled false" name="SplitPaneHeaderComponent should not sync file selection when lockFilesEnabled false" time="0.011">
    </testcase>
    <testcase classname="SplitPaneHeaderComponent should trigger dropdown hover subject on mouseenter on the first file element" name="SplitPaneHeaderComponent should trigger dropdown hover subject on mouseenter on the first file element" time="0.012">
    </testcase>
    <testcase classname="SplitPaneHeaderComponent should create dropdownHoverSubject on ngOnInit" name="SplitPaneHeaderComponent should create dropdownHoverSubject on ngOnInit" time="0.036">
    </testcase>
    <testcase classname="SplitPaneHeaderComponent should update showFiles when hasFiles returns true" name="SplitPaneHeaderComponent should update showFiles when hasFiles returns true" time="0.007">
    </testcase>
    <testcase classname="SplitPaneHeaderComponent should not update showFiles when hasFiles returns false" name="SplitPaneHeaderComponent should not update showFiles when hasFiles returns false" time="0.011">
    </testcase>
    <testcase classname="SplitPaneHeaderComponent should set hoveredFileIdx to -1 if file does not match and getIndexOf returns -1" name="SplitPaneHeaderComponent should set hoveredFileIdx to -1 if file does not match and getIndexOf returns -1" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="QuizExercise Short Answer Question Statistic Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:54" time="4.075" tests="7">
    <testcase classname="QuizExercise Short Answer Question Statistic Component onInit should call functions on Init" name="QuizExercise Short Answer Question Statistic Component onInit should call functions on Init" time="0.164">
    </testcase>
    <testcase classname="QuizExercise Short Answer Question Statistic Component onInit should not load Quiz if not authorised" name="QuizExercise Short Answer Question Statistic Component onInit should not load Quiz if not authorised" time="0.017">
    </testcase>
    <testcase classname="QuizExercise Short Answer Question Statistic Component loadQuiz should call functions from loadQuiz" name="QuizExercise Short Answer Question Statistic Component loadQuiz should call functions from loadQuiz" time="0.027">
    </testcase>
    <testcase classname="QuizExercise Short Answer Question Statistic Component loadLayout should call functions from loadLayout" name="QuizExercise Short Answer Question Statistic Component loadLayout should call functions from loadLayout" time="0.034">
    </testcase>
    <testcase classname="QuizExercise Short Answer Question Statistic Component loadData should call functions from loadData" name="QuizExercise Short Answer Question Statistic Component loadData should call functions from loadData" time="0.051">
    </testcase>
    <testcase classname="QuizExercise Short Answer Question Statistic Component switchSolution should call functions and set values from switchSolution" name="QuizExercise Short Answer Question Statistic Component switchSolution should call functions and set values from switchSolution" time="0.022">
    </testcase>
    <testcase classname="QuizExercise Short Answer Question Statistic Component switchRated should call functions and set values from switchRated" name="QuizExercise Short Answer Question Statistic Component switchRated should call functions and set values from switchRated" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="AttachmentUnitFormComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:53" time="4.643" tests="6">
    <testcase classname="AttachmentUnitFormComponent should initialize" name="AttachmentUnitFormComponent should initialize" time="0.544">
    </testcase>
    <testcase classname="AttachmentUnitFormComponent should correctly set form values in edit mode" name="AttachmentUnitFormComponent should correctly set form values in edit mode" time="0.413">
    </testcase>
    <testcase classname="AttachmentUnitFormComponent should submit valid form" name="AttachmentUnitFormComponent should submit valid form" time="0.546">
    </testcase>
    <testcase classname="AttachmentUnitFormComponent should not submit a form when name is missing" name="AttachmentUnitFormComponent should not submit a form when name is missing" time="0.414">
    </testcase>
    <testcase classname="AttachmentUnitFormComponent calls on file change on changed file" name="AttachmentUnitFormComponent calls on file change on changed file" time="0.329">
    </testcase>
    <testcase classname="AttachmentUnitFormComponent should disable submit button for too big file" name="AttachmentUnitFormComponent should disable submit button for too big file" time="0.286">
    </testcase>
  </testsuite>
  <testsuite name="EditPrerequisiteComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:53" time="4.466" tests="3">
    <testcase classname="EditPrerequisiteComponent should initialize" name="EditPrerequisiteComponent should initialize" time="0.483">
    </testcase>
    <testcase classname="EditPrerequisiteComponent should set form data correctly" name="EditPrerequisiteComponent should set form data correctly" time="0.059">
    </testcase>
    <testcase classname="EditPrerequisiteComponent should send PUT request upon form submission and navigate" name="EditPrerequisiteComponent should send PUT request upon form submission and navigate" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="OnlineUnitFormComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:55" time="4.138" tests="5">
    <testcase classname="OnlineUnitFormComponent should not submit a form when name is missing" name="OnlineUnitFormComponent should not submit a form when name is missing" time="0.511">
    </testcase>
    <testcase classname="OnlineUnitFormComponent should not submit a form when source is missing" name="OnlineUnitFormComponent should not submit a form when source is missing" time="0.2">
    </testcase>
    <testcase classname="OnlineUnitFormComponent should submit valid form" name="OnlineUnitFormComponent should submit valid form" time="0.342">
    </testcase>
    <testcase classname="OnlineUnitFormComponent should correctly set form values in edit mode" name="OnlineUnitFormComponent should correctly set form values in edit mode" time="0.281">
    </testcase>
    <testcase classname="OnlineUnitFormComponent should update when link changes" name="OnlineUnitFormComponent should update when link changes" time="0.241">
    </testcase>
  </testsuite>
  <testsuite name="ImportTableComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:58" time="4.383" tests="10">
    <testcase classname="ImportTableComponent should initialize" name="ImportTableComponent should initialize" time="0.099">
    </testcase>
    <testcase classname="ImportTableComponent should load and display data correctly in table" name="ImportTableComponent should load and display data correctly in table" time="0.098">
    </testcase>
    <testcase classname="ImportTableComponent should set isLoading correctly on data load" name="ImportTableComponent should set isLoading correctly on data load" time="0.031">
    </testcase>
    <testcase classname="ImportTableComponent should search data" name="ImportTableComponent should search data" time="0.33">
    </testcase>
    <testcase classname="ImportTableComponent should select row" name="ImportTableComponent should select row" time="0.087">
    </testcase>
    <testcase classname="ImportTableComponent should set page size" name="ImportTableComponent should set page size" time="0.092">
    </testcase>
    <testcase classname="ImportTableComponent should sort TITLE column ASCENDING" name="ImportTableComponent should sort TITLE column ASCENDING" time="0.073">
    </testcase>
    <testcase classname="ImportTableComponent should sort TITLE column DESCENDING" name="ImportTableComponent should sort TITLE column DESCENDING" time="0.085">
    </testcase>
    <testcase classname="ImportTableComponent should sort ID column DESCENDING" name="ImportTableComponent should sort ID column DESCENDING" time="0.08">
    </testcase>
    <testcase classname="ImportTableComponent should show alert on data load error" name="ImportTableComponent should show alert on data load error" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="ConversationAddUsersFormComponent with groupChat" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:58" time="4.329" tests="16">
    <testcase classname="ConversationAddUsersFormComponent with groupChat should create" name="ConversationAddUsersFormComponent with groupChat should create" time="0.348">
    </testcase>
    <testcase classname="ConversationAddUsersFormComponent with groupChat should allow to switch to group mode only for channels" name="ConversationAddUsersFormComponent with groupChat should allow to switch to group mode only for channels" time="0.12">
    </testcase>
    <testcase classname="ConversationAddUsersFormComponent with groupChat should hide parts of the form depending on which mode is selected" name="ConversationAddUsersFormComponent with groupChat should hide parts of the form depending on which mode is selected" time="0.093">
    </testcase>
    <testcase classname="ConversationAddUsersFormComponent with groupChat should block submit when no user is selected" name="ConversationAddUsersFormComponent with groupChat should block submit when no user is selected" time="0.1">
    </testcase>
    <testcase classname="ConversationAddUsersFormComponent with groupChat should block when too many users are selected" name="ConversationAddUsersFormComponent with groupChat should block when too many users are selected" time="0.066">
    </testcase>
    <testcase classname="ConversationAddUsersFormComponent with groupChat should block when in group mode and no mode is selected" name="ConversationAddUsersFormComponent with groupChat should block when in group mode and no mode is selected" time="0.071">
    </testcase>
    <testcase classname="ConversationAddUsersFormComponent with groupChat should submit valid form in individual mode" name="ConversationAddUsersFormComponent with groupChat should submit valid form in individual mode" time="0.117">
    </testcase>
    <testcase classname="ConversationAddUsersFormComponent with groupChat should submit valid form in group mode" name="ConversationAddUsersFormComponent with groupChat should submit valid form in group mode" time="0.077">
    </testcase>
    <testcase classname="ConversationAddUsersFormComponent with channel should create" name="ConversationAddUsersFormComponent with channel should create" time="0.09">
    </testcase>
    <testcase classname="ConversationAddUsersFormComponent with channel should allow to switch to group mode only for channels" name="ConversationAddUsersFormComponent with channel should allow to switch to group mode only for channels" time="0.093">
    </testcase>
    <testcase classname="ConversationAddUsersFormComponent with channel should hide parts of the form depending on which mode is selected" name="ConversationAddUsersFormComponent with channel should hide parts of the form depending on which mode is selected" time="0.103">
    </testcase>
    <testcase classname="ConversationAddUsersFormComponent with channel should block submit when no user is selected" name="ConversationAddUsersFormComponent with channel should block submit when no user is selected" time="0.1">
    </testcase>
    <testcase classname="ConversationAddUsersFormComponent with channel should block when too many users are selected" name="ConversationAddUsersFormComponent with channel should block when too many users are selected" time="0.103">
    </testcase>
    <testcase classname="ConversationAddUsersFormComponent with channel should block when in group mode and no mode is selected" name="ConversationAddUsersFormComponent with channel should block when in group mode and no mode is selected" time="0.108">
    </testcase>
    <testcase classname="ConversationAddUsersFormComponent with channel should submit valid form in individual mode" name="ConversationAddUsersFormComponent with channel should submit valid form in individual mode" time="0.112">
    </testcase>
    <testcase classname="ConversationAddUsersFormComponent with channel should submit valid form in group mode" name="ConversationAddUsersFormComponent with channel should submit valid form in group mode" time="0.117">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupDetailWrapperTest" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:58" time="5.344" tests="6">
    <testcase classname="TutorialGroupDetailWrapperTest should pass the tutorialGroup to the header" name="TutorialGroupDetailWrapperTest should pass the tutorialGroup to the header" time="0.372">
    </testcase>
    <testcase classname="TutorialGroupDetailComponent should initialize" name="TutorialGroupDetailComponent should initialize" time="0.148">
    </testcase>
    <testcase classname="TutorialGroupDetailComponent should calculate average attendance correctly" name="TutorialGroupDetailComponent should calculate average attendance correctly" time="0.18">
    </testcase>
    <testcase classname="TutorialGroupDetailComponent should calculate average attendance correctly" name="TutorialGroupDetailComponent should calculate average attendance correctly" time="0.131">
    </testcase>
    <testcase classname="TutorialGroupDetailComponent should calculate average attendance correctly" name="TutorialGroupDetailComponent should calculate average attendance correctly" time="0.143">
    </testcase>
    <testcase classname="TutorialGroupDetailComponent should calculate average attendance correctly" name="TutorialGroupDetailComponent should calculate average attendance correctly" time="0.15">
    </testcase>
  </testsuite>
  <testsuite name="Test Run Management Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:02" time="2.828" tests="8">
    <testcase classname="Test Run Management Component onInit should fetch exam with test runs and user on init" name="Test Run Management Component onInit should fetch exam with test runs and user on init" time="0.29">
    </testcase>
    <testcase classname="Test Run Management Component Delete should call delete for test run" name="Test Run Management Component Delete should call delete for test run" time="0.043">
    </testcase>
    <testcase classname="Test Run Management Component Create test runs should not create test run if the exam contains no exercises" name="Test Run Management Component Create test runs should not create test run if the exam contains no exercises" time="0.046">
    </testcase>
    <testcase classname="Test Run Management Component Create test runs should create test run" name="Test Run Management Component Create test runs should create test run" time="0.104">
    </testcase>
    <testcase classname="Test Run Management Component Create test runs should correctly catch error after creating test run" name="Test Run Management Component Create test runs should correctly catch error after creating test run" time="0.071">
    </testcase>
    <testcase classname="Test Run Management Component Assessment of test runs should not be able to assess test run because the logged-in user does not have a test run which is submitted" name="Test Run Management Component Assessment of test runs should not be able to assess test run because the logged-in user does not have a test run which is submitted" time="0.062">
    </testcase>
    <testcase classname="Test Run Management Component Assessment of test runs should be able to assess test run" name="Test Run Management Component Assessment of test runs should be able to assess test run" time="0.038">
    </testcase>
    <testcase classname="Test Run Management Component sort rows should forward request to" name="Test Run Management Component sort rows should forward request to" time="0.073">
    </testcase>
  </testsuite>
  <testsuite name="ImportComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:03" time="2.594" tests="13">
    <testcase classname="ImportComponent should initialize the content" name="ImportComponent should initialize the content" time="0.058">
    </testcase>
    <testcase classname="ImportComponent should initialize the subjects" name="ImportComponent should initialize the subjects" time="0.034">
    </testcase>
    <testcase classname="ImportComponent should set content to paging result on sort" name="ImportComponent should set content to paging result on sort" time="0.047">
    </testcase>
    <testcase classname="ImportComponent should set content to paging result on pageChange" name="ImportComponent should set content to paging result on pageChange" time="0.052">
    </testcase>
    <testcase classname="ImportComponent should set content to paging result on search" name="ImportComponent should set content to paging result on search" time="0.02">
    </testcase>
    <testcase classname="ImportComponent should set content to paging result on sortedColumn change" name="ImportComponent should set content to paging result on sortedColumn change" time="0.038">
    </testcase>
    <testcase classname="ImportComponent should return tracked id" name="ImportComponent should return tracked id" time="0.042">
    </testcase>
    <testcase classname="ImportComponent should close the active modal" name="ImportComponent should close the active modal" time="0.033">
    </testcase>
    <testcase classname="ImportComponent should close the active modal with result" name="ImportComponent should close the active modal with result" time="0.034">
    </testcase>
    <testcase classname="ImportComponent should change the page on active modal" name="ImportComponent should change the page on active modal" time="0.038">
    </testcase>
    <testcase classname="ImportComponent should sort rows with default values" name="ImportComponent should sort rows with default values" time="0.044">
    </testcase>
    <testcase classname="ImportComponent should call createOptions when performing a search request" name="ImportComponent should call createOptions when performing a search request" time="0.027">
    </testcase>
    <testcase classname="ImportComponent should call onSearchResult after performing a search request" name="ImportComponent should call onSearchResult after performing a search request" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="LearningPathLectureUnitComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:18:59" time="6.475" tests="7">
    <testcase classname="LearningPathLectureUnitComponent should initialize" name="LearningPathLectureUnitComponent should initialize" time="1.387">
    </testcase>
    <testcase classname="LearningPathLectureUnitComponent should get lecture unit" name="LearningPathLectureUnitComponent should get lecture unit" time="0.047">
    </testcase>
    <testcase classname="LearningPathLectureUnitComponent should not set current learning object on error" name="LearningPathLectureUnitComponent should not set current learning object on error" time="0.025">
    </testcase>
    <testcase classname="LearningPathLectureUnitComponent should set current learning object completion" name="LearningPathLectureUnitComponent should set current learning object completion" time="0.028">
    </testcase>
    <testcase classname="LearningPathLectureUnitComponent should set loading state correctly" name="LearningPathLectureUnitComponent should set loading state correctly" time="0.047">
    </testcase>
    <testcase classname="LearningPathLectureUnitComponent should show discussion section when communication is enabled" name="LearningPathLectureUnitComponent should show discussion section when communication is enabled" time="0.039">
    </testcase>
    <testcase classname="LearningPathLectureUnitComponent should not show discussion section when communication is disabled" name="LearningPathLectureUnitComponent should not show discussion section when communication is disabled" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="Guided tour integration" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:03" time="4.735" tests="1">
    <testcase classname="Guided tour integration Course Overview Tour should start the course overview guided tour" name="Guided tour integration Course Overview Tour should start the course overview guided tour" time="1.279">
    </testcase>
  </testsuite>
  <testsuite name="EditCompetencyComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:05" time="3.341" tests="3">
    <testcase classname="EditCompetencyComponent should initialize" name="EditCompetencyComponent should initialize" time="0.436">
    </testcase>
    <testcase classname="EditCompetencyComponent should set form data correctly" name="EditCompetencyComponent should set form data correctly" time="0.031">
    </testcase>
    <testcase classname="EditCompetencyComponent should send PUT request upon form submission and navigate" name="EditCompetencyComponent should send PUT request upon form submission and navigate" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="CourseImportStandardizedPrerequisitesComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:06" time="3.92" tests="9">
    <testcase classname="CourseImportStandardizedPrerequisitesComponent should load data" name="CourseImportStandardizedPrerequisitesComponent should load data" time="0.381">
    </testcase>
    <testcase classname="CourseImportStandardizedPrerequisitesComponent should open details" name="CourseImportStandardizedPrerequisitesComponent should open details" time="0.12">
    </testcase>
    <testcase classname="CourseImportStandardizedPrerequisitesComponent should close details" name="CourseImportStandardizedPrerequisitesComponent should close details" time="0.102">
    </testcase>
    <testcase classname="CourseImportStandardizedPrerequisitesComponent should toggle select" name="CourseImportStandardizedPrerequisitesComponent should toggle select" time="0.106">
    </testcase>
    <testcase classname="CourseImportStandardizedPrerequisitesComponent should deselect" name="CourseImportStandardizedPrerequisitesComponent should deselect" time="0.133">
    </testcase>
    <testcase classname="CourseImportStandardizedPrerequisitesComponent should sort" name="CourseImportStandardizedPrerequisitesComponent should sort" time="0.13">
    </testcase>
    <testcase classname="CourseImportStandardizedPrerequisitesComponent should navigate after importing competencies" name="CourseImportStandardizedPrerequisitesComponent should navigate after importing competencies" time="0.103">
    </testcase>
    <testcase classname="CourseImportStandardizedPrerequisitesComponent should cancel" name="CourseImportStandardizedPrerequisitesComponent should cancel" time="0.146">
    </testcase>
    <testcase classname="CourseImportStandardizedPrerequisitesComponent should not deactivate with pending changes" name="CourseImportStandardizedPrerequisitesComponent should not deactivate with pending changes" time="0.147">
    </testcase>
  </testsuite>
  <testsuite name="CourseImportStandardizedCompetenciesComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:06" time="5.104" tests="9">
    <testcase classname="CourseImportStandardizedCompetenciesComponent should load data" name="CourseImportStandardizedCompetenciesComponent should load data" time="0.415">
    </testcase>
    <testcase classname="CourseImportStandardizedCompetenciesComponent should open details" name="CourseImportStandardizedCompetenciesComponent should open details" time="0.156">
    </testcase>
    <testcase classname="CourseImportStandardizedCompetenciesComponent should close details" name="CourseImportStandardizedCompetenciesComponent should close details" time="0.137">
    </testcase>
    <testcase classname="CourseImportStandardizedCompetenciesComponent should toggle select" name="CourseImportStandardizedCompetenciesComponent should toggle select" time="0.246">
    </testcase>
    <testcase classname="CourseImportStandardizedCompetenciesComponent should deselect" name="CourseImportStandardizedCompetenciesComponent should deselect" time="0.295">
    </testcase>
    <testcase classname="CourseImportStandardizedCompetenciesComponent should sort" name="CourseImportStandardizedCompetenciesComponent should sort" time="0.288">
    </testcase>
    <testcase classname="CourseImportStandardizedCompetenciesComponent should navigate after importing competencies" name="CourseImportStandardizedCompetenciesComponent should navigate after importing competencies" time="0.208">
    </testcase>
    <testcase classname="CourseImportStandardizedCompetenciesComponent should cancel" name="CourseImportStandardizedCompetenciesComponent should cancel" time="0.247">
    </testcase>
    <testcase classname="CourseImportStandardizedCompetenciesComponent should not deactivate with pending changes" name="CourseImportStandardizedCompetenciesComponent should not deactivate with pending changes" time="0.08">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseGradingTasksTableComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:09" time="3.677" tests="10">
    <testcase classname="ProgrammingExerciseGradingTasksTableComponent should pass parameters to the task service and configure it" name="ProgrammingExerciseGradingTasksTableComponent should pass parameters to the task service and configure it" time="0.508">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingTasksTableComponent should update tasks through the service and set them in the component" name="ProgrammingExerciseGradingTasksTableComponent should update tasks through the service and set them in the component" time="0.124">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingTasksTableComponent should pass inactive test case toggle to the task service and update the components tasks" name="ProgrammingExerciseGradingTasksTableComponent should pass inactive test case toggle to the task service and update the components tasks" time="0.099">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingTasksTableComponent should pass saving to the service" name="ProgrammingExerciseGradingTasksTableComponent should pass saving to the service" time="0.066">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingTasksTableComponent should pass reset to the task and update tasks" name="ProgrammingExerciseGradingTasksTableComponent should pass reset to the task and update tasks" time="0.123">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingTasksTableComponent should sort by name by default" name="ProgrammingExerciseGradingTasksTableComponent should sort by name by default" time="0.109">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingTasksTableComponent should change sort direction" name="ProgrammingExerciseGradingTasksTableComponent should change sort direction" time="0.091">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingTasksTableComponent should change sort correctly" name="ProgrammingExerciseGradingTasksTableComponent should change sort correctly" time="0.068">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingTasksTableComponent should sort test cases correctly" name="ProgrammingExerciseGradingTasksTableComponent should sort test cases correctly" time="0.099">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingTasksTableComponent should sort task and test names correctly" name="ProgrammingExerciseGradingTasksTableComponent should sort task and test names correctly" time="0.117">
    </testcase>
  </testsuite>
  <testsuite name="ExamParticipationLiveEventsService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:11" time="1.054" tests="6">
    <testcase classname="ExamParticipationLiveEventsService should correctly react to websocket connection state and refetch events for connected=true, wasEverConnectedBefore=true" name="ExamParticipationLiveEventsService should correctly react to websocket connection state and refetch events for connected=true, wasEverConnectedBefore=true" time="0.013">
    </testcase>
    <testcase classname="ExamParticipationLiveEventsService should correctly react to websocket connection state and refetch events for connected=true, wasEverConnectedBefore=false" name="ExamParticipationLiveEventsService should correctly react to websocket connection state and refetch events for connected=true, wasEverConnectedBefore=false" time="0.004">
    </testcase>
    <testcase classname="ExamParticipationLiveEventsService should correctly react to websocket connection state and refetch events for connected=false, wasEverConnectedBefore=true" name="ExamParticipationLiveEventsService should correctly react to websocket connection state and refetch events for connected=false, wasEverConnectedBefore=true" time="0.003">
    </testcase>
    <testcase classname="ExamParticipationLiveEventsService should correctly react to websocket connection state and refetch events for connected=false, wasEverConnectedBefore=false" name="ExamParticipationLiveEventsService should correctly react to websocket connection state and refetch events for connected=false, wasEverConnectedBefore=false" time="0.004">
    </testcase>
    <testcase classname="ExamParticipationLiveEventsService should correctly react to a student exam change and refetch events and subscribe to ws" name="ExamParticipationLiveEventsService should correctly react to a student exam change and refetch events and subscribe to ws" time="0.029">
    </testcase>
    <testcase classname="ExamParticipationLiveEventsService acknowledgeEvent should set the correct timestamp and store it" name="ExamParticipationLiveEventsService acknowledgeEvent should set the correct timestamp and store it" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Test case distribution chart" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:09" time="4.36" tests="9">
    <testcase classname="Test case distribution chart should handle no test cases appropriately" name="Test case distribution chart should handle no test cases appropriately" time="0.107">
    </testcase>
    <testcase classname="Test case distribution chart should process the test cases correctly" name="Test case distribution chart should process the test cases correctly" time="0.015">
    </testcase>
    <testcase classname="Test case distribution chart should compute the relative score correctly" name="Test case distribution chart should compute the relative score correctly" time="0.012">
    </testcase>
    <testcase classname="Test case distribution chart should exclude test cases that are never visible" name="Test case distribution chart should exclude test cases that are never visible" time="0.025">
    </testcase>
    <testcase classname="Test case distribution chart should handle negative weights" name="Test case distribution chart should handle negative weights" time="0.014">
    </testcase>
    <testcase classname="Test case distribution chart should delegate the user correctly if clicked on points chart" name="Test case distribution chart should delegate the user correctly if clicked on points chart" time="0.021">
    </testcase>
    <testcase classname="Test case distribution chart should emit the correct test case id if clicked on weight and bonus chart" name="Test case distribution chart should emit the correct test case id if clicked on weight and bonus chart" time="0.033">
    </testcase>
    <testcase classname="Test case distribution chart should reset table correctly" name="Test case distribution chart should reset table correctly" time="0.023">
    </testcase>
    <testcase classname="Test case distribution chart should update the translation" name="Test case distribution chart should update the translation" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseChatbotButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:10" time="3.892" tests="7">
    <testcase classname="ExerciseChatbotButtonComponent should subscribe to route.params and call chatService.switchTo with exercise mode" name="ExerciseChatbotButtonComponent should subscribe to route.params and call chatService.switchTo with exercise mode" time="0.124">
    </testcase>
    <testcase classname="ExerciseChatbotButtonComponent should subscribe to route.params and call chatService.switchTo with text exercise mode" name="ExerciseChatbotButtonComponent should subscribe to route.params and call chatService.switchTo with text exercise mode" time="0.043">
    </testcase>
    <testcase classname="ExerciseChatbotButtonComponent should close the dialog when destroying the object" name="ExerciseChatbotButtonComponent should close the dialog when destroying the object" time="0.031">
    </testcase>
    <testcase classname="ExerciseChatbotButtonComponent should show new message indicator when chatbot is closed" name="ExerciseChatbotButtonComponent should show new message indicator when chatbot is closed" time="0.073">
    </testcase>
    <testcase classname="ExerciseChatbotButtonComponent should not show new message indicator when chatbot is open" name="ExerciseChatbotButtonComponent should not show new message indicator when chatbot is open" time="0.044">
    </testcase>
    <testcase classname="ExerciseChatbotButtonComponent should open chatbot if irisQuestion is provided in the queryParams" name="ExerciseChatbotButtonComponent should open chatbot if irisQuestion is provided in the queryParams" time="0.028">
    </testcase>
    <testcase classname="ExerciseChatbotButtonComponent should not open the chatbot if no irisQuestion is provided in the queryParams" name="ExerciseChatbotButtonComponent should not open the chatbot if no irisQuestion is provided in the queryParams" time="0.039">
    </testcase>
  </testsuite>
  <testsuite name="CourseNotificationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:13" time="1.984" tests="13">
    <testcase classname="CourseNotificationComponent should create" name="CourseNotificationComponent should create" time="0.174">
    </testcase>
    <testcase classname="CourseNotificationComponent should initialize with the correct service calls" name="CourseNotificationComponent should initialize with the correct service calls" time="0.055">
    </testcase>
    <testcase classname="CourseNotificationComponent should set notification parameters correctly" name="CourseNotificationComponent should set notification parameters correctly" time="0.057">
    </testcase>
    <testcase classname="CourseNotificationComponent should show close button when isShowClose is true" name="CourseNotificationComponent should show close button when isShowClose is true" time="0.04">
    </testcase>
    <testcase classname="CourseNotificationComponent should not show close button when isShowClose is false" name="CourseNotificationComponent should not show close button when isShowClose is false" time="0.065">
    </testcase>
    <testcase classname="CourseNotificationComponent should emit onCloseClicked when close button is clicked" name="CourseNotificationComponent should emit onCloseClicked when close button is clicked" time="0.053">
    </testcase>
    <testcase classname="CourseNotificationComponent should add is-unseen class when isUnseen is true" name="CourseNotificationComponent should add is-unseen class when isUnseen is true" time="0.073">
    </testcase>
    <testcase classname="CourseNotificationComponent should not add is-unseen class when isUnseen is false" name="CourseNotificationComponent should not add is-unseen class when isUnseen is false" time="0.038">
    </testcase>
    <testcase classname="CourseNotificationComponent should show profile picture when author details are present" name="CourseNotificationComponent should show profile picture when author details are present" time="0.049">
    </testcase>
    <testcase classname="CourseNotificationComponent should show icon when author details are not present" name="CourseNotificationComponent should show icon when author details are not present" time="0.075">
    </testcase>
    <testcase classname="CourseNotificationComponent should update notification details when courseNotification input changes" name="CourseNotificationComponent should update notification details when courseNotification input changes" time="0.06">
    </testcase>
    <testcase classname="CourseNotificationComponent should show loading indicator when displayTimeInMilliseconds is defined" name="CourseNotificationComponent should show loading indicator when displayTimeInMilliseconds is defined" time="0.067">
    </testcase>
    <testcase classname="CourseNotificationComponent should not show loading indicator when displayTimeInMilliseconds is undefined" name="CourseNotificationComponent should not show loading indicator when displayTimeInMilliseconds is undefined" time="0.067">
    </testcase>
  </testsuite>
  <testsuite name="SuspiciousBehaviorComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:12" time="2.492" tests="6">
    <testcase classname="SuspiciousBehaviorComponent should set course and exam id onInit" name="SuspiciousBehaviorComponent should set course and exam id onInit" time="0.277">
    </testcase>
    <testcase classname="SuspiciousBehaviorComponent should not make a request onInit" name="SuspiciousBehaviorComponent should not make a request onInit" time="0.08">
    </testcase>
    <testcase classname="SuspiciousBehaviorComponent should make a request on click" name="SuspiciousBehaviorComponent should make a request on click" time="0.121">
    </testcase>
    <testcase classname="SuspiciousBehaviorComponent should set analyzed to true and analyzing to false if the request fails" name="SuspiciousBehaviorComponent should set analyzed to true and analyzing to false if the request fails" time="0.066">
    </testcase>
    <testcase classname="SuspiciousBehaviorComponent should navigate to suspicious sessions on click" name="SuspiciousBehaviorComponent should navigate to suspicious sessions on click" time="0.097">
    </testcase>
    <testcase classname="SuspiciousBehaviorComponent should retrieve plagiarism cases/results onInit" name="SuspiciousBehaviorComponent should retrieve plagiarism cases/results onInit" time="0.093">
    </testcase>
  </testsuite>
  <testsuite name="AttachmentUnitService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:14" time="1.226" tests="8">
    <testcase classname="AttachmentUnitService should find a AttachmentUnit" name="AttachmentUnitService should find a AttachmentUnit" time="0.021">
    </testcase>
    <testcase classname="AttachmentUnitService should create an AttachmentUnit" name="AttachmentUnitService should create an AttachmentUnit" time="0.007">
    </testcase>
    <testcase classname="AttachmentUnitService should update a AttachmentUnit" name="AttachmentUnitService should update a AttachmentUnit" time="0.006">
    </testcase>
    <testcase classname="AttachmentUnitService should create AttachmentUnits" name="AttachmentUnitService should create AttachmentUnits" time="0.008">
    </testcase>
    <testcase classname="AttachmentUnitService should get units information" name="AttachmentUnitService should get units information" time="0.006">
    </testcase>
    <testcase classname="AttachmentUnitService should get removed slides data" name="AttachmentUnitService should get removed slides data" time="0.018">
    </testcase>
    <testcase classname="AttachmentUnitService should upload slides" name="AttachmentUnitService should upload slides" time="0.008">
    </testcase>
    <testcase classname="AttachmentUnitService getAttachmentFile should retrieve a file as Blob for a given course and attachment unit ID" name="AttachmentUnitService getAttachmentFile should retrieve a file as Blob for a given course and attachment unit ID" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Lti13ExerciseLaunchComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:15" time="1.177" tests="8">
    <testcase classname="Lti13ExerciseLaunchComponent onInit fail without state" name="Lti13ExerciseLaunchComponent onInit fail without state" time="0.054">
    </testcase>
    <testcase classname="Lti13ExerciseLaunchComponent onInit fail without token" name="Lti13ExerciseLaunchComponent onInit fail without token" time="0.014">
    </testcase>
    <testcase classname="Lti13ExerciseLaunchComponent onInit no targetLinkUri" name="Lti13ExerciseLaunchComponent onInit no targetLinkUri" time="0.006">
    </testcase>
    <testcase classname="Lti13ExerciseLaunchComponent onInit success to call launch endpoint" name="Lti13ExerciseLaunchComponent onInit success to call launch endpoint" time="0.012">
    </testcase>
    <testcase classname="Lti13ExerciseLaunchComponent onInit launch fails on error" name="Lti13ExerciseLaunchComponent onInit launch fails on error" time="0.016">
    </testcase>
    <testcase classname="Lti13ExerciseLaunchComponent should redirect user to login when 401 error occurs" name="Lti13ExerciseLaunchComponent should redirect user to login when 401 error occurs" time="0.013">
    </testcase>
    <testcase classname="Lti13ExerciseLaunchComponent should redirect user to target link when user is already logged in" name="Lti13ExerciseLaunchComponent should redirect user to target link when user is already logged in" time="0.015">
    </testcase>
    <testcase classname="Lti13ExerciseLaunchComponent should redirect user to target link after user logged in" name="Lti13ExerciseLaunchComponent should redirect user to target link after user logged in" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="ParticipantScoresDistributionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:14" time="4.147" tests="6">
    <testcase classname="ParticipantScoresDistributionComponent should setup default configuration if no grading scale exists" name="ParticipantScoresDistributionComponent should setup default configuration if no grading scale exists" time="0.183">
    </testcase>
    <testcase classname="ParticipantScoresDistributionComponent should setup default configuration if nonbonus grading scale exists" name="ParticipantScoresDistributionComponent should setup default configuration if nonbonus grading scale exists" time="0.099">
    </testcase>
    <testcase classname="ParticipantScoresDistributionComponent should setup default configuration if bonus grading scale exists" name="ParticipantScoresDistributionComponent should setup default configuration if bonus grading scale exists" time="0.047">
    </testcase>
    <testcase classname="ParticipantScoresDistributionComponent should setup default configuration from gradeNames for bonus grades if nonbonus grading scale with bonus exists" name="ParticipantScoresDistributionComponent should setup default configuration from gradeNames for bonus grades if nonbonus grading scale with bonus exists" time="0.02">
    </testcase>
    <testcase classname="ParticipantScoresDistributionComponent should throw when both scores and gradeNames are not given" name="ParticipantScoresDistributionComponent should throw when both scores and gradeNames are not given" time="0.051">
    </testcase>
    <testcase classname="ParticipantScoresDistributionComponent should listen to window resizing" name="ParticipantScoresDistributionComponent should listen to window resizing" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseTitleChannelNameComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:15" time="2.827" tests="6">
    <testcase classname="ExerciseTitleChannelNameComponent should call getExistingExerciseDetailsInCourse on init" name="ExerciseTitleChannelNameComponent should call getExistingExerciseDetailsInCourse on init" time="0.045">
    </testcase>
    <testcase classname="ExerciseTitleChannelNameComponent should hide channel name input if messaging and communication disabled" name="ExerciseTitleChannelNameComponent should hide channel name input if messaging and communication disabled" time="0.007">
    </testcase>
    <testcase classname="ExerciseTitleChannelNameComponent should show channel name input if messaging disabled but communication enabled" name="ExerciseTitleChannelNameComponent should show channel name input if messaging disabled but communication enabled" time="0.008">
    </testcase>
    <testcase classname="ExerciseTitleChannelNameComponent should hide channel name input based on isExamMode and isImport if messaging is enabled" name="ExerciseTitleChannelNameComponent should hide channel name input based on isExamMode and isImport if messaging is enabled" time="0.007">
    </testcase>
    <testcase classname="ExerciseTitleChannelNameComponent should update exercise title and emit event on title change" name="ExerciseTitleChannelNameComponent should update exercise title and emit event on title change" time="0.008">
    </testcase>
    <testcase classname="ExerciseTitleChannelNameComponent should update exercise channel name and emit event on channel name change" name="ExerciseTitleChannelNameComponent should update exercise channel name and emit event on channel name change" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="PdfPreviewEnlargedCanvasComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:16" time="2.531" tests="12">
    <testcase classname="PdfPreviewEnlargedCanvasComponent Keyboard Navigation should navigate through pages using keyboard in enlarged view" name="PdfPreviewEnlargedCanvasComponent Keyboard Navigation should navigate through pages using keyboard in enlarged view" time="0.055">
    </testcase>
    <testcase classname="PdfPreviewEnlargedCanvasComponent Keyboard Navigation should prevent navigation beyond last page" name="PdfPreviewEnlargedCanvasComponent Keyboard Navigation should prevent navigation beyond last page" time="0.009">
    </testcase>
    <testcase classname="PdfPreviewEnlargedCanvasComponent Keyboard Navigation should prevent navigation before first page" name="PdfPreviewEnlargedCanvasComponent Keyboard Navigation should prevent navigation before first page" time="0.009">
    </testcase>
    <testcase classname="PdfPreviewEnlargedCanvasComponent Keyboard Navigation should stop event propagation and navigate pages" name="PdfPreviewEnlargedCanvasComponent Keyboard Navigation should stop event propagation and navigate pages" time="0.011">
    </testcase>
    <testcase classname="PdfPreviewEnlargedCanvasComponent Canvas Rendering should calculate the correct scale factor for horizontal slides" name="PdfPreviewEnlargedCanvasComponent Canvas Rendering should calculate the correct scale factor for horizontal slides" time="0.028">
    </testcase>
    <testcase classname="PdfPreviewEnlargedCanvasComponent Canvas Rendering should calculate the correct scale factor for vertical slides" name="PdfPreviewEnlargedCanvasComponent Canvas Rendering should calculate the correct scale factor for vertical slides" time="0.023">
    </testcase>
    <testcase classname="PdfPreviewEnlargedCanvasComponent Canvas Rendering should resize the canvas based on the given scale factor" name="PdfPreviewEnlargedCanvasComponent Canvas Rendering should resize the canvas based on the given scale factor" time="0.012">
    </testcase>
    <testcase classname="PdfPreviewEnlargedCanvasComponent Canvas Rendering should clear and redraw the canvas with the new dimensions" name="PdfPreviewEnlargedCanvasComponent Canvas Rendering should clear and redraw the canvas with the new dimensions" time="0.019">
    </testcase>
    <testcase classname="PdfPreviewEnlargedCanvasComponent Layout should prevent scrolling when enlarged view is active" name="PdfPreviewEnlargedCanvasComponent Layout should prevent scrolling when enlarged view is active" time="0.027">
    </testcase>
    <testcase classname="PdfPreviewEnlargedCanvasComponent Layout should not update canvas size if not in enlarged view" name="PdfPreviewEnlargedCanvasComponent Layout should not update canvas size if not in enlarged view" time="0.012">
    </testcase>
    <testcase classname="PdfPreviewEnlargedCanvasComponent Enlarged View Management should close the enlarged view if click is outside the canvas within the enlarged container" name="PdfPreviewEnlargedCanvasComponent Enlarged View Management should close the enlarged view if click is outside the canvas within the enlarged container" time="0.032">
    </testcase>
    <testcase classname="PdfPreviewEnlargedCanvasComponent Enlarged View Management should not close the enlarged view if the click is on the canvas itself" name="PdfPreviewEnlargedCanvasComponent Enlarged View Management should not close the enlarged view if the click is on the canvas itself" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="TriggerBuildButtonSpec" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:18" time="2.023" tests="3">
    <testcase classname="TriggerBuildButtonSpec should not show the trigger button if there is no pending submission and no build is running" name="TriggerBuildButtonSpec should not show the trigger button if there is no pending submission and no build is running" time="0.165">
    </testcase>
    <testcase classname="TriggerBuildButtonSpec should be enabled and trigger the build on click if it is provided with a participation including results" name="TriggerBuildButtonSpec should be enabled and trigger the build on click if it is provided with a participation including results" time="0.015">
    </testcase>
    <testcase classname="TriggerBuildButtonSpec should set the latest result correctly to manual" name="TriggerBuildButtonSpec should set the latest result correctly to manual" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Exam Exercise Row Buttons Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:19" time="2.248" tests="8">
    <testcase classname="Exam Exercise Row Buttons Component check exam is over should check exam is over is true" name="Exam Exercise Row Buttons Component check exam is over should check exam is over is true" time="0.105">
    </testcase>
    <testcase classname="Exam Exercise Row Buttons Component check exam is over should check exam is over is false" name="Exam Exercise Row Buttons Component check exam is over should check exam is over is false" time="0.009">
    </testcase>
    <testcase classname="Exam Exercise Row Buttons Component check exercise deletion should delete textExercise" name="Exam Exercise Row Buttons Component check exercise deletion should delete textExercise" time="0.006">
    </testcase>
    <testcase classname="Exam Exercise Row Buttons Component check exercise deletion should delete modelingExercise" name="Exam Exercise Row Buttons Component check exercise deletion should delete modelingExercise" time="0.005">
    </testcase>
    <testcase classname="Exam Exercise Row Buttons Component check exercise deletion should delete fileExercise" name="Exam Exercise Row Buttons Component check exercise deletion should delete fileExercise" time="0.008">
    </testcase>
    <testcase classname="Exam Exercise Row Buttons Component check exercise deletion should delete quizExercise" name="Exam Exercise Row Buttons Component check exercise deletion should delete quizExercise" time="0.024">
    </testcase>
    <testcase classname="Exam Exercise Row Buttons Component check exercise deletion should delete programmingExercise" name="Exam Exercise Row Buttons Component check exercise deletion should delete programmingExercise" time="0.018">
    </testcase>
    <testcase classname="Exam Exercise Row Buttons Component check quiz is being exported should export quiz exercise by id" name="Exam Exercise Row Buttons Component check quiz is being exported should export quiz exercise by id" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="CategorySelectorComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:15" time="6.946" tests="11">
    <testcase classname="CategorySelectorComponent should remove category" name="CategorySelectorComponent should remove category" time="0.495">
    </testcase>
    <testcase classname="CategorySelectorComponent should open color selector" name="CategorySelectorComponent should open color selector" time="0.238">
    </testcase>
    <testcase classname="CategorySelectorComponent should select color for category" name="CategorySelectorComponent should select color for category" time="0.183">
    </testcase>
    <testcase classname="CategorySelectorComponent should create new item on select" name="CategorySelectorComponent should create new item on select" time="0.26">
    </testcase>
    <testcase classname="CategorySelectorComponent should not create new item on select" name="CategorySelectorComponent should not create new item on select" time="0.232">
    </testcase>
    <testcase classname="CategorySelectorComponent should not create duplicate item on add" name="CategorySelectorComponent should not create duplicate item on add" time="0.237">
    </testcase>
    <testcase classname="CategorySelectorComponent should save exiting category on add" name="CategorySelectorComponent should save exiting category on add" time="0.224">
    </testcase>
    <testcase classname="CategorySelectorComponent should create new item on add for existing categories" name="CategorySelectorComponent should create new item on add for existing categories" time="0.267">
    </testcase>
    <testcase classname="CategorySelectorComponent should create new item on add for empty categories" name="CategorySelectorComponent should create new item on add for empty categories" time="0.36">
    </testcase>
    <testcase classname="CategorySelectorComponent should set categories for autocomplete on changes" name="CategorySelectorComponent should set categories for autocomplete on changes" time="0.18">
    </testcase>
    <testcase classname="CategorySelectorComponent should filter categories for autocomplete on changes" name="CategorySelectorComponent should filter categories for autocomplete on changes" time="0.212">
    </testcase>
  </testsuite>
  <testsuite name="ShortAnswerQuestionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:18" time="4.027" tests="7">
    <testcase classname="ShortAnswerQuestionComponent should initialize" name="ShortAnswerQuestionComponent should initialize" time="0.644">
    </testcase>
    <testcase classname="ShortAnswerQuestionComponent should set submitted texts" name="ShortAnswerQuestionComponent should set submitted texts" time="0.085">
    </testcase>
    <testcase classname="ShortAnswerQuestionComponent should show sample solution" name="ShortAnswerQuestionComponent should show sample solution" time="0.047">
    </testcase>
    <testcase classname="ShortAnswerQuestionComponent should toggle show sample solution" name="ShortAnswerQuestionComponent should toggle show sample solution" time="0.088">
    </testcase>
    <testcase classname="ShortAnswerQuestionComponent should get submitted text size for spot" name="ShortAnswerQuestionComponent should get submitted text size for spot" time="0.129">
    </testcase>
    <testcase classname="ShortAnswerQuestionComponent should get sample solution size for spot" name="ShortAnswerQuestionComponent should get sample solution size for spot" time="0.07">
    </testcase>
    <testcase classname="ShortAnswerQuestionComponent should get background color for input field" name="ShortAnswerQuestionComponent should get background color for input field" time="0.096">
    </testcase>
  </testsuite>
  <testsuite name="Course Management Tab Bar Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:20" time="3.935" tests="6">
    <testcase classname="Course Management Tab Bar Component should register changes in course and notify courseAccessStorageService on init" name="Course Management Tab Bar Component should register changes in course and notify courseAccessStorageService on init" time="0.355">
    </testcase>
    <testcase classname="Course Management Tab Bar Component should destroy event subscriber onDestroy" name="Course Management Tab Bar Component should destroy event subscriber onDestroy" time="0.075">
    </testcase>
    <testcase classname="Course Management Tab Bar Component should broadcast course modification on delete" name="Course Management Tab Bar Component should broadcast course modification on delete" time="0.101">
    </testcase>
    <testcase classname="Course Management Tab Bar Component should correctly highlight tutorial link" name="Course Management Tab Bar Component should correctly highlight tutorial link" time="0.141">
    </testcase>
    <testcase classname="Course Management Tab Bar Component should correctly highlight assessment link" name="Course Management Tab Bar Component should correctly highlight assessment link" time="0.15">
    </testcase>
    <testcase classname="Course Management Tab Bar Component should correctly display control buttons" name="Course Management Tab Bar Component should correctly display control buttons" time="0.186">
    </testcase>
  </testsuite>
  <testsuite name="Exercise Update Warning Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:22" time="2.325" tests="17">
    <testcase classname="Exercise Update Warning Service should set instructionDeleted as true" name="Exercise Update Warning Service should set instructionDeleted as true" time="0.008">
    </testcase>
    <testcase classname="Exercise Update Warning Service should set instructionDeleted as true when gradingCriteria is undefined" name="Exercise Update Warning Service should set instructionDeleted as true when gradingCriteria is undefined" time="0.005">
    </testcase>
    <testcase classname="Exercise Update Warning Service should set creditChanged as true" name="Exercise Update Warning Service should set creditChanged as true" time="0.004">
    </testcase>
    <testcase classname="Exercise Update Warning Service should set usageCountChanged as true" name="Exercise Update Warning Service should set usageCountChanged as true" time="0.002">
    </testcase>
    <testcase classname="Exercise Update Warning Service should correctly ask user about exercise without release date" name="Exercise Update Warning Service should correctly ask user about exercise without release date" time="0.561">
    </testcase>
    <testcase classname="Exercise Update Warning Service should correctly ask user about exercise without release date" name="Exercise Update Warning Service should correctly ask user about exercise without release date" time="0.01">
    </testcase>
    <testcase classname="Exercise Update Warning Service should correctly ask user about exercise without release date" name="Exercise Update Warning Service should correctly ask user about exercise without release date" time="0.005">
    </testcase>
    <testcase classname="Exercise Update Warning Service should correctly ask user about exercise without release date" name="Exercise Update Warning Service should correctly ask user about exercise without release date" time="0.004">
    </testcase>
    <testcase classname="Exercise Update Warning Service should correctly ask user about exercise without release date" name="Exercise Update Warning Service should correctly ask user about exercise without release date" time="0.003">
    </testcase>
    <testcase classname="Exercise Update Warning Service should correctly ask user about exercise without release date" name="Exercise Update Warning Service should correctly ask user about exercise without release date" time="0.011">
    </testcase>
    <testcase classname="Exercise Update Warning Service should correctly ask user about exercise without release date" name="Exercise Update Warning Service should correctly ask user about exercise without release date" time="0.04">
    </testcase>
    <testcase classname="Exercise Update Warning Service should correctly ask user about exercise without release date" name="Exercise Update Warning Service should correctly ask user about exercise without release date" time="0.004">
    </testcase>
    <testcase classname="Exercise Update Warning Service should not check in test course" name="Exercise Update Warning Service should not check in test course" time="0.013">
    </testcase>
    <testcase classname="Exercise Update Warning Service should not check releaseDate but grading criteria in exam" name="Exercise Update Warning Service should not check releaseDate but grading criteria in exam" time="0.021">
    </testcase>
    <testcase classname="Exercise Update Warning Service should not check releaseDate in Exam" name="Exercise Update Warning Service should not check releaseDate in Exam" time="0.004">
    </testcase>
    <testcase classname="Exercise Update Warning Service should loadExercise and not open warning modal" name="Exercise Update Warning Service should loadExercise and not open warning modal" time="0.005">
    </testcase>
    <testcase classname="Exercise Update Warning Service should loadExercise and open warning model" name="Exercise Update Warning Service should loadExercise and open warning model" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingAssessmentRepoExportDialogComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:21" time="3.187" tests="8">
    <testcase classname="ProgrammingAssessmentRepoExportDialogComponent test initialization" name="ProgrammingAssessmentRepoExportDialogComponent test initialization" time="0.304">
    </testcase>
    <testcase classname="ProgrammingAssessmentRepoExportDialogComponent Exercise service should find the correct programming exercise" name="ProgrammingAssessmentRepoExportDialogComponent Exercise service should find the correct programming exercise" time="0.102">
    </testcase>
    <testcase classname="ProgrammingAssessmentRepoExportDialogComponent Export a repo by participations should download a zipped file" name="ProgrammingAssessmentRepoExportDialogComponent Export a repo by participations should download a zipped file" time="0.082">
    </testcase>
    <testcase classname="ProgrammingAssessmentRepoExportDialogComponent Export a repo by participant identifiers should download a zipped file" name="ProgrammingAssessmentRepoExportDialogComponent Export a repo by participant identifiers should download a zipped file" time="0.111">
    </testcase>
    <testcase classname="ProgrammingAssessmentRepoExportDialogComponent Should not change the ExportOptions during export" name="ProgrammingAssessmentRepoExportDialogComponent Should not change the ExportOptions during export" time="0.053">
    </testcase>
    <testcase classname="ProgrammingAssessmentRepoExportDialogComponent Export of multiple repos download multiple files" name="ProgrammingAssessmentRepoExportDialogComponent Export of multiple repos download multiple files" time="0.07">
    </testcase>
    <testcase classname="ProgrammingAssessmentRepoExportDialogComponent Export a repo with excludePracticeSubmissions as true should call exportReposByParticipations with correct options" name="ProgrammingAssessmentRepoExportDialogComponent Export a repo with excludePracticeSubmissions as true should call exportReposByParticipations with correct options" time="0.052">
    </testcase>
    <testcase classname="ProgrammingAssessmentRepoExportDialogComponent Export a repo with excludePracticeSubmissions as true should call exportReposByParticipantIdentifiers with correct options" name="ProgrammingAssessmentRepoExportDialogComponent Export a repo with excludePracticeSubmissions as true should call exportReposByParticipantIdentifiers with correct options" time="0.059">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseInstructionInstructorAnalysis" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:24" time="2.3" tests="3">
    <testcase classname="ProgrammingExerciseInstructionInstructorAnalysis Component tests should display the received analysis from the service" name="ProgrammingExerciseInstructionInstructorAnalysis Component tests should display the received analysis from the service" time="0.145">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructionInstructorAnalysis Component tests Analysis service integration test should not render if no test cases were provided" name="ProgrammingExerciseInstructionInstructorAnalysis Component tests Analysis service integration test should not render if no test cases were provided" time="0.021">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructionInstructorAnalysis Component tests Analysis service integration test should render warnings on missing, invalid and repeated test cases" name="ProgrammingExerciseInstructionInstructorAnalysis Component tests Analysis service integration test should render warnings on missing, invalid and repeated test cases" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="CodeEditorTutorAssessmentInlineFeedbackComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:24" time="2.38" tests="12">
    <testcase classname="CodeEditorTutorAssessmentInlineFeedbackComponent should update feedback and emit to parent" name="CodeEditorTutorAssessmentInlineFeedbackComponent should update feedback and emit to parent" time="0.201">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentInlineFeedbackComponent should enable edit feedback and emit to parent" name="CodeEditorTutorAssessmentInlineFeedbackComponent should enable edit feedback and emit to parent" time="0.009">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentInlineFeedbackComponent should cancel feedback and emit to parent" name="CodeEditorTutorAssessmentInlineFeedbackComponent should cancel feedback and emit to parent" time="0.014">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentInlineFeedbackComponent should delete feedback and emit to parent" name="CodeEditorTutorAssessmentInlineFeedbackComponent should delete feedback and emit to parent" time="0.014">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentInlineFeedbackComponent should update feedback with SGI and emit to parent" name="CodeEditorTutorAssessmentInlineFeedbackComponent should update feedback with SGI and emit to parent" time="0.018">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentInlineFeedbackComponent should count feedback with one credit as positive" name="CodeEditorTutorAssessmentInlineFeedbackComponent should count feedback with one credit as positive" time="0.009">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentInlineFeedbackComponent should display the feedback text properly" name="CodeEditorTutorAssessmentInlineFeedbackComponent should display the feedback text properly" time="0.008">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentInlineFeedbackComponent should escape special characters" name="CodeEditorTutorAssessmentInlineFeedbackComponent should escape special characters" time="0.013">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentInlineFeedbackComponent should not display credits and icons for non-graded feedback suggestions" name="CodeEditorTutorAssessmentInlineFeedbackComponent should not display credits and icons for non-graded feedback suggestions" time="0.057">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentInlineFeedbackComponent should display credits and icons for graded feedback" name="CodeEditorTutorAssessmentInlineFeedbackComponent should display credits and icons for graded feedback" time="0.021">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentInlineFeedbackComponent should use the correct translation key for non-graded feedback" name="CodeEditorTutorAssessmentInlineFeedbackComponent should use the correct translation key for non-graded feedback" time="0.032">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentInlineFeedbackComponent should use the correct translation key for graded feedback" name="CodeEditorTutorAssessmentInlineFeedbackComponent should use the correct translation key for graded feedback" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="TextUnitFormComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:22" time="4.567" tests="6">
    <testcase classname="TextUnitFormComponent should initialize" name="TextUnitFormComponent should initialize" time="0.747">
    </testcase>
    <testcase classname="TextUnitFormComponent should take markdown from cache" name="TextUnitFormComponent should take markdown from cache" time="0.376">
    </testcase>
    <testcase classname="TextUnitFormComponent should submit valid form" name="TextUnitFormComponent should submit valid form" time="0.31">
    </testcase>
    <testcase classname="TextUnitFormComponent should be invalid if name is not set and valid if set" name="TextUnitFormComponent should be invalid if name is not set and valid if set" time="0.217">
    </testcase>
    <testcase classname="TextUnitFormComponent should update local storage on markdown change" name="TextUnitFormComponent should update local storage on markdown change" time="0.237">
    </testcase>
    <testcase classname="TextUnitFormComponent should correctly set form values in edit mode" name="TextUnitFormComponent should correctly set form values in edit mode" time="0.253">
    </testcase>
  </testsuite>
  <testsuite name="ExamChecklistExerciseGroupTableComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:24" time="2.819" tests="3">
    <testcase classname="ExamChecklistExerciseGroupTableComponent test onChanges should set properties false" name="ExamChecklistExerciseGroupTableComponent test onChanges should set properties false" time="0.164">
    </testcase>
    <testcase classname="ExamChecklistExerciseGroupTableComponent test onChanges should set properties true" name="ExamChecklistExerciseGroupTableComponent test onChanges should set properties true" time="0.074">
    </testcase>
    <testcase classname="ExamChecklistExerciseGroupTableComponent test onChanges should reset group variant columns first" name="ExamChecklistExerciseGroupTableComponent test onChanges should reset group variant columns first" time="0.061">
    </testcase>
  </testsuite>
  <testsuite name="ChannelsOverviewDialogComponent for general channels" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:27" time="3.774" tests="13">
    <testcase classname="ChannelsOverviewDialogComponent for general channels should create" name="ChannelsOverviewDialogComponent for general channels should create" time="0.299">
    </testcase>
    <testcase classname="ChannelsOverviewDialogComponent for general channels should call register user when channel action is register" name="ChannelsOverviewDialogComponent for general channels should call register user when channel action is register" time="0.125">
    </testcase>
    <testcase classname="ChannelsOverviewDialogComponent for general channels should call deregister user when channel action is deregister" name="ChannelsOverviewDialogComponent for general channels should call deregister user when channel action is deregister" time="0.098">
    </testcase>
    <testcase classname="ChannelsOverviewDialogComponent for general channels should close modal when channel action view is performed" name="ChannelsOverviewDialogComponent for general channels should close modal when channel action view is performed" time="0.138">
    </testcase>
    <testcase classname="ChannelsOverviewDialogComponent for exercise channels should create" name="ChannelsOverviewDialogComponent for exercise channels should create" time="0.085">
    </testcase>
    <testcase classname="ChannelsOverviewDialogComponent for exercise channels should call register user when channel action is register" name="ChannelsOverviewDialogComponent for exercise channels should call register user when channel action is register" time="0.128">
    </testcase>
    <testcase classname="ChannelsOverviewDialogComponent for exercise channels should call deregister user when channel action is deregister" name="ChannelsOverviewDialogComponent for exercise channels should call deregister user when channel action is deregister" time="0.114">
    </testcase>
    <testcase classname="ChannelsOverviewDialogComponent for lecture channels should create" name="ChannelsOverviewDialogComponent for lecture channels should create" time="0.096">
    </testcase>
    <testcase classname="ChannelsOverviewDialogComponent for lecture channels should call register user when channel action is register" name="ChannelsOverviewDialogComponent for lecture channels should call register user when channel action is register" time="0.106">
    </testcase>
    <testcase classname="ChannelsOverviewDialogComponent for lecture channels should call deregister user when channel action is deregister" name="ChannelsOverviewDialogComponent for lecture channels should call deregister user when channel action is deregister" time="0.109">
    </testcase>
    <testcase classname="ChannelsOverviewDialogComponent for exam channels should create" name="ChannelsOverviewDialogComponent for exam channels should create" time="0.101">
    </testcase>
    <testcase classname="ChannelsOverviewDialogComponent for exam channels should call register user when channel action is register" name="ChannelsOverviewDialogComponent for exam channels should call register user when channel action is register" time="0.149">
    </testcase>
    <testcase classname="ChannelsOverviewDialogComponent for exam channels should call deregister user when channel action is deregister" name="ChannelsOverviewDialogComponent for exam channels should call deregister user when channel action is deregister" time="0.101">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupFreePeriodsManagementComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:27" time="5.018" tests="4">
    <testcase classname="TutorialGroupFreePeriodsManagementComponent should initialize" name="TutorialGroupFreePeriodsManagementComponent should initialize" time="0.313">
    </testcase>
    <testcase classname="TutorialGroupFreePeriodsManagementComponent should open the create free day dialog when the respective button is clicked" name="TutorialGroupFreePeriodsManagementComponent should open the create free day dialog when the respective button is clicked" time="0.118">
    </testcase>
    <testcase classname="TutorialGroupFreePeriodsManagementComponent should load all free periods and sort by start date ascending" name="TutorialGroupFreePeriodsManagementComponent should load all free periods and sort by start date ascending" time="0.109">
    </testcase>
    <testcase classname="TutorialGroupFreePeriodsManagementComponent should display three rows for three free periods" name="TutorialGroupFreePeriodsManagementComponent should display three rows for three free periods" time="0.163">
    </testcase>
  </testsuite>
  <testsuite name="ConversationDetailDialogComponent with oneToOneChat" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:27" time="4.654" tests="21">
    <testcase classname="ConversationDetailDialogComponent with oneToOneChat should create" name="ConversationDetailDialogComponent with oneToOneChat should create" time="0.404">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with oneToOneChat should not show the settings tab for one-to-one chats" name="ConversationDetailDialogComponent with oneToOneChat should not show the settings tab for one-to-one chats" time="0.075">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with oneToOneChat should react correctly to events from members tab" name="ConversationDetailDialogComponent with oneToOneChat should react correctly to events from members tab" time="0.108">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with oneToOneChat should react correctly to events from info tab" name="ConversationDetailDialogComponent with oneToOneChat should react correctly to events from info tab" time="0.073">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with oneToOneChat should react correctly to events from settings tab" name="ConversationDetailDialogComponent with oneToOneChat should react correctly to events from settings tab" time="0.077">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with oneToOneChat should mark changes and close the dialog on privacy/archival/channelDeleted/leave events" name="ConversationDetailDialogComponent with oneToOneChat should mark changes and close the dialog on privacy/archival/channelDeleted/leave events" time="0.07">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with oneToOneChat should emit userNameClicked event when onUserNameClicked is called" name="ConversationDetailDialogComponent with oneToOneChat should emit userNameClicked event when onUserNameClicked is called" time="0.08">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with groupChat should create" name="ConversationDetailDialogComponent with groupChat should create" time="0.132">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with groupChat should not show the settings tab for one-to-one chats" name="ConversationDetailDialogComponent with groupChat should not show the settings tab for one-to-one chats" time="0.078">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with groupChat should react correctly to events from members tab" name="ConversationDetailDialogComponent with groupChat should react correctly to events from members tab" time="0.163">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with groupChat should react correctly to events from info tab" name="ConversationDetailDialogComponent with groupChat should react correctly to events from info tab" time="0.087">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with groupChat should react correctly to events from settings tab" name="ConversationDetailDialogComponent with groupChat should react correctly to events from settings tab" time="0.095">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with groupChat should mark changes and close the dialog on privacy/archival/channelDeleted/leave events" name="ConversationDetailDialogComponent with groupChat should mark changes and close the dialog on privacy/archival/channelDeleted/leave events" time="0.089">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with groupChat should emit userNameClicked event when onUserNameClicked is called" name="ConversationDetailDialogComponent with groupChat should emit userNameClicked event when onUserNameClicked is called" time="0.117">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with channel should create" name="ConversationDetailDialogComponent with channel should create" time="0.093">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with channel should not show the settings tab for one-to-one chats" name="ConversationDetailDialogComponent with channel should not show the settings tab for one-to-one chats" time="0.099">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with channel should react correctly to events from members tab" name="ConversationDetailDialogComponent with channel should react correctly to events from members tab" time="0.095">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with channel should react correctly to events from info tab" name="ConversationDetailDialogComponent with channel should react correctly to events from info tab" time="0.095">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with channel should react correctly to events from settings tab" name="ConversationDetailDialogComponent with channel should react correctly to events from settings tab" time="0.091">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with channel should mark changes and close the dialog on privacy/archival/channelDeleted/leave events" name="ConversationDetailDialogComponent with channel should mark changes and close the dialog on privacy/archival/channelDeleted/leave events" time="0.071">
    </testcase>
    <testcase classname="ConversationDetailDialogComponent with channel should emit userNameClicked event when onUserNameClicked is called" name="ConversationDetailDialogComponent with channel should emit userNameClicked event when onUserNameClicked is called" time="0.072">
    </testcase>
  </testsuite>
  <testsuite name="VcsAccessTokensSettingsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:31" time="2.764" tests="8">
    <testcase classname="VcsAccessTokensSettingsComponent should cancel token creation" name="VcsAccessTokensSettingsComponent should cancel token creation" time="0.469">
    </testcase>
    <testcase classname="VcsAccessTokensSettingsComponent should fail token creation with invalid date" name="VcsAccessTokensSettingsComponent should fail token creation with invalid date" time="0.066">
    </testcase>
    <testcase classname="VcsAccessTokensSettingsComponent should handle failed token creation" name="VcsAccessTokensSettingsComponent should handle failed token creation" time="0.074">
    </testcase>
    <testcase classname="VcsAccessTokensSettingsComponent should create new vcs access token" name="VcsAccessTokensSettingsComponent should create new vcs access token" time="0.14">
    </testcase>
    <testcase classname="VcsAccessTokensSettingsComponent should delete vcs access token" name="VcsAccessTokensSettingsComponent should delete vcs access token" time="0.039">
    </testcase>
    <testcase classname="VcsAccessTokensSettingsComponent should handle error when delete vcs access token fails" name="VcsAccessTokensSettingsComponent should handle error when delete vcs access token fails" time="0.015">
    </testcase>
    <testcase classname="VcsAccessTokensSettingsComponent should set wasCopied to true and back to false after 3 seconds on successful copy" name="VcsAccessTokensSettingsComponent should set wasCopied to true and back to false after 3 seconds on successful copy" time="0.011">
    </testcase>
    <testcase classname="VcsAccessTokensSettingsComponent should not change wasCopied if copy is unsuccessful" name="VcsAccessTokensSettingsComponent should not change wasCopied if copy is unsuccessful" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="FileUploadExercise Management Detail Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:27" time="5.927" tests="3">
    <testcase classname="FileUploadExercise Management Detail Component should load all on init" name="FileUploadExercise Management Detail Component should load all on init" time="0.828">
    </testcase>
    <testcase classname="FileUploadExercise Management Detail Component onInit with course exercise should call load on init and be not in exam mode" name="FileUploadExercise Management Detail Component onInit with course exercise should call load on init and be not in exam mode" time="0.077">
    </testcase>
    <testcase classname="FileUploadExercise Management Detail Component onInit with exam exercise should call load on init and be in exam mode" name="FileUploadExercise Management Detail Component onInit with exam exercise should call load on init and be in exam mode" time="0.09">
    </testcase>
  </testsuite>
  <testsuite name="BuildAgentsService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:34" time="1.084" tests="13">
    <testcase classname="BuildAgentsService should return build agents" name="BuildAgentsService should return build agents" time="0.01">
    </testcase>
    <testcase classname="BuildAgentsService should return build agent details" name="BuildAgentsService should return build agent details" time="0.005">
    </testcase>
    <testcase classname="BuildAgentsService should handle get build agent details error" name="BuildAgentsService should handle get build agent details error" time="0.036">
    </testcase>
    <testcase classname="BuildAgentsService should pause build agent" name="BuildAgentsService should pause build agent" time="0.005">
    </testcase>
    <testcase classname="BuildAgentsService should resume build agent" name="BuildAgentsService should resume build agent" time="0.004">
    </testcase>
    <testcase classname="BuildAgentsService should pause all build agents" name="BuildAgentsService should pause all build agents" time="0.023">
    </testcase>
    <testcase classname="BuildAgentsService should resume all build agents" name="BuildAgentsService should resume all build agents" time="0.004">
    </testcase>
    <testcase classname="BuildAgentsService should handle pause build agent error" name="BuildAgentsService should handle pause build agent error" time="0.005">
    </testcase>
    <testcase classname="BuildAgentsService should handle resume build agent error" name="BuildAgentsService should handle resume build agent error" time="0.011">
    </testcase>
    <testcase classname="BuildAgentsService should handle pause all build agents error" name="BuildAgentsService should handle pause all build agents error" time="0.021">
    </testcase>
    <testcase classname="BuildAgentsService should handle resume all build agents error" name="BuildAgentsService should handle resume all build agents error" time="0.017">
    </testcase>
    <testcase classname="BuildAgentsService should clear distributed data" name="BuildAgentsService should clear distributed data" time="0.013">
    </testcase>
    <testcase classname="BuildAgentsService should handle clear distributed data error" name="BuildAgentsService should handle clear distributed data error" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="CourseFaqs" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:32" time="3.646" tests="7">
    <testcase classname="CourseFaqs should initialize" name="CourseFaqs should initialize" time="0.291">
    </testcase>
    <testcase classname="CourseFaqs should fetch faqs when initialized" name="CourseFaqs should fetch faqs when initialized" time="0.074">
    </testcase>
    <testcase classname="CourseFaqs should toggle filter correctly" name="CourseFaqs should toggle filter correctly" time="0.092">
    </testcase>
    <testcase classname="CourseFaqs should search through already filtered array" name="CourseFaqs should search through already filtered array" time="0.07">
    </testcase>
    <testcase classname="CourseFaqs should catch error if no categories are found" name="CourseFaqs should catch error if no categories are found" time="0.093">
    </testcase>
    <testcase classname="CourseFaqs should call sortService when sortRows is called" name="CourseFaqs should call sortService when sortRows is called" time="0.114">
    </testcase>
    <testcase classname="CourseFaqs should scroll and focus on the faq element with given id" name="CourseFaqs should scroll and focus on the faq element with given id" time="0.072">
    </testcase>
  </testsuite>
  <testsuite name="TreeviewItemComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:33" time="2.522" tests="12">
    <testcase classname="TreeviewItemComponent item should not have element with class &quot;treeview-item&quot; if no item provided" name="TreeviewItemComponent item should not have element with class &quot;treeview-item&quot; if no item provided" time="0.08">
    </testcase>
    <testcase classname="TreeviewItemComponent item should have element with class &quot;treeview-item&quot; if binding item" name="TreeviewItemComponent item should have element with class &quot;treeview-item&quot; if binding item" time="0.014">
    </testcase>
    <testcase classname="TreeviewItemComponent template should render &quot;Parent 1&quot;, &quot;Child 1&quot; &amp; &quot;Child 2&quot; with checked" name="TreeviewItemComponent template should render &quot;Parent 1&quot;, &quot;Child 1&quot; &amp; &quot;Child 2&quot; with checked" time="0.054">
    </testcase>
    <testcase classname="TreeviewItemComponent template toggle collapse/expand should not render children" name="TreeviewItemComponent template toggle collapse/expand should not render children" time="0.039">
    </testcase>
    <testcase classname="TreeviewItemComponent template uncheck &quot;Parent 1&quot; should un-check &quot;Child 1&quot; &amp; &quot;Child 2&quot;" name="TreeviewItemComponent template uncheck &quot;Parent 1&quot; should un-check &quot;Child 1&quot; &amp; &quot;Child 2&quot;" time="0.046">
    </testcase>
    <testcase classname="TreeviewItemComponent template uncheck &quot;Parent 1&quot; should raise event checkedChange" name="TreeviewItemComponent template uncheck &quot;Parent 1&quot; should raise event checkedChange" time="0.074">
    </testcase>
    <testcase classname="TreeviewItemComponent template un-check &quot;Child 1&quot; should uncheck &quot;Parent 1&quot;" name="TreeviewItemComponent template un-check &quot;Child 1&quot; should uncheck &quot;Parent 1&quot;" time="0.043">
    </testcase>
    <testcase classname="TreeviewItemComponent template un-check &quot;Child 1&quot; should raise event checkedChange" name="TreeviewItemComponent template un-check &quot;Child 1&quot; should raise event checkedChange" time="0.033">
    </testcase>
    <testcase classname="TreeviewItemComponent template un-check &quot;Child 1&quot; un-check &quot;Child 2&quot; should keep &quot;Parent 1&quot; checked" name="TreeviewItemComponent template un-check &quot;Child 1&quot; un-check &quot;Child 2&quot; should keep &quot;Parent 1&quot; checked" time="0.04">
    </testcase>
    <testcase classname="TreeviewItemComponent template un-check &quot;Child 1&quot; un-check &quot;Child 2&quot; should raise event checkedChange" name="TreeviewItemComponent template un-check &quot;Child 1&quot; un-check &quot;Child 2&quot; should raise event checkedChange" time="0.101">
    </testcase>
    <testcase classname="TreeviewItemComponent template un-check &quot;Child 1&quot; check &quot;Child 1&quot; should not check &quot;Parent 1&quot;" name="TreeviewItemComponent template un-check &quot;Child 1&quot; check &quot;Child 1&quot; should not check &quot;Parent 1&quot;" time="0.076">
    </testcase>
    <testcase classname="TreeviewItemComponent template un-check &quot;Child 1&quot; check &quot;Child 1&quot; should raise event checkedChange" name="TreeviewItemComponent template un-check &quot;Child 1&quot; check &quot;Child 1&quot; should raise event checkedChange" time="0.051">
    </testcase>
  </testsuite>
  <testsuite name="TextblockAssessmentCardComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:32" time="4.702" tests="9">
    <testcase classname="TextblockAssessmentCardComponent should create" name="TextblockAssessmentCardComponent should create" time="0.33">
    </testcase>
    <testcase classname="TextblockAssessmentCardComponent cannot be selected in readOnly mode" name="TextblockAssessmentCardComponent cannot be selected in readOnly mode" time="0.116">
    </testcase>
    <testcase classname="TextblockAssessmentCardComponent should autofocus" name="TextblockAssessmentCardComponent should autofocus" time="0.098">
    </testcase>
    <testcase classname="TextblockAssessmentCardComponent should show text block" name="TextblockAssessmentCardComponent should show text block" time="0.134">
    </testcase>
    <testcase classname="TextblockAssessmentCardComponent should only show Feedback Editor if Feedback is set" name="TextblockAssessmentCardComponent should only show Feedback Editor if Feedback is set" time="0.165">
    </testcase>
    <testcase classname="TextblockAssessmentCardComponent should delete feedback" name="TextblockAssessmentCardComponent should delete feedback" time="0.161">
    </testcase>
    <testcase classname="TextblockAssessmentCardComponent should delete feedback but not emit delete event when textblock is undeletable" name="TextblockAssessmentCardComponent should delete feedback but not emit delete event when textblock is undeletable" time="0.185">
    </testcase>
    <testcase classname="TextblockAssessmentCardComponent should send assessment event when selecting automatic text block" name="TextblockAssessmentCardComponent should send assessment event when selecting automatic text block" time="0.244">
    </testcase>
    <testcase classname="TextblockAssessmentCardComponent should not send assessment event when selecting text block that is unselectable" name="TextblockAssessmentCardComponent should not send assessment event when selecting text block that is unselectable" time="0.162">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseResetDialogComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:35" time="2.136" tests="14">
    <testcase classname="ProgrammingExerciseResetDialogComponent should close the modal dialog" name="ProgrammingExerciseResetDialogComponent should close the modal dialog" time="0.153">
    </testcase>
    <testcase classname="ProgrammingExerciseResetDialogComponent resetProgrammingExercise should make the correct service call and call handleResetResponse()" name="ProgrammingExerciseResetDialogComponent resetProgrammingExercise should make the correct service call and call handleResetResponse()" time="0.008">
    </testcase>
    <testcase classname="ProgrammingExerciseResetDialogComponent handleResetResponse should show the correct success message and dismiss the active modal" name="ProgrammingExerciseResetDialogComponent handleResetResponse should show the correct success message and dismiss the active modal" time="0.007">
    </testcase>
    <testcase classname="ProgrammingExerciseResetDialogComponent handleResetResponse should not be called when there is an error in the reset response" name="ProgrammingExerciseResetDialogComponent handleResetResponse should not be called when there is an error in the reset response" time="0.015">
    </testcase>
    <testcase classname="ProgrammingExerciseResetDialogComponent canSubmit should return true when confirmation text is filled correctly and at least one option is selected" name="ProgrammingExerciseResetDialogComponent canSubmit should return true when confirmation text is filled correctly and at least one option is selected" time="0.009">
    </testcase>
    <testcase classname="ProgrammingExerciseResetDialogComponent canSubmit should return false when confirmation text is empty" name="ProgrammingExerciseResetDialogComponent canSubmit should return false when confirmation text is empty" time="0.008">
    </testcase>
    <testcase classname="ProgrammingExerciseResetDialogComponent canSubmit should return false when confirmation text is not filled correctly" name="ProgrammingExerciseResetDialogComponent canSubmit should return false when confirmation text is not filled correctly" time="0.017">
    </testcase>
    <testcase classname="ProgrammingExerciseResetDialogComponent canSubmit should return false when confirmation text is filled correctly, but no option is selected" name="ProgrammingExerciseResetDialogComponent canSubmit should return false when confirmation text is filled correctly, but no option is selected" time="0.008">
    </testcase>
    <testcase classname="ProgrammingExerciseResetDialogComponent canSubmit should return false when reset is in progress" name="ProgrammingExerciseResetDialogComponent canSubmit should return false when reset is in progress" time="0.007">
    </testcase>
    <testcase classname="ProgrammingExerciseResetDialogComponent hasSelectedOptions should return false when all options are set to false" name="ProgrammingExerciseResetDialogComponent hasSelectedOptions should return false when all options are set to false" time="0.008">
    </testcase>
    <testcase classname="ProgrammingExerciseResetDialogComponent hasSelectedOptions should return true when deleteBuildPlans is set to true" name="ProgrammingExerciseResetDialogComponent hasSelectedOptions should return true when deleteBuildPlans is set to true" time="0.008">
    </testcase>
    <testcase classname="ProgrammingExerciseResetDialogComponent hasSelectedOptions should return true when deleteRepositories is set to true" name="ProgrammingExerciseResetDialogComponent hasSelectedOptions should return true when deleteRepositories is set to true" time="0.007">
    </testcase>
    <testcase classname="ProgrammingExerciseResetDialogComponent hasSelectedOptions should return true when deleteParticipationsSubmissionsAndResults is set to true" name="ProgrammingExerciseResetDialogComponent hasSelectedOptions should return true when deleteParticipationsSubmissionsAndResults is set to true" time="0.024">
    </testcase>
    <testcase classname="ProgrammingExerciseResetDialogComponent hasSelectedOptions should return true when recreateBuildPlans is set to true" name="ProgrammingExerciseResetDialogComponent hasSelectedOptions should return true when recreateBuildPlans is set to true" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="TextExercise Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:37" time="1.033" tests="10">
    <testcase classname="TextExercise Service Service methods should find an element" name="TextExercise Service Service methods should find an element" time="0.022">
    </testcase>
    <testcase classname="TextExercise Service Service methods should create a TextExercise" name="TextExercise Service Service methods should create a TextExercise" time="0.006">
    </testcase>
    <testcase classname="TextExercise Service Service methods should update a TextExercise" name="TextExercise Service Service methods should update a TextExercise" time="0.006">
    </testcase>
    <testcase classname="TextExercise Service Service methods should return a list of TextExercise" name="TextExercise Service Service methods should return a list of TextExercise" time="0.005">
    </testcase>
    <testcase classname="TextExercise Service Service methods should delete a TextExercise" name="TextExercise Service Service methods should delete a TextExercise" time="0.004">
    </testcase>
    <testcase classname="TextExercise Service Service methods should calculate and return tutor efforts" name="TextExercise Service Service methods should calculate and return tutor efforts" time="0.023">
    </testcase>
    <testcase classname="TextExercise Service Service methods should import a text exercise" name="TextExercise Service Service methods should import a text exercise" time="0.005">
    </testcase>
    <testcase classname="TextExercise Service Service methods should re-evaluate and update a text exercise" name="TextExercise Service Service methods should re-evaluate and update a text exercise" time="0.004">
    </testcase>
    <testcase classname="TextExercise Service Service methods should check plagiarism" name="TextExercise Service Service methods should check plagiarism" time="0.003">
    </testcase>
    <testcase classname="TextExercise Service Service methods should get plagiarism result" name="TextExercise Service Service methods should get plagiarism result" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="CreateExerciseUnitComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:36" time="2.183" tests="2">
    <testcase classname="CreateExerciseUnitComponent should initialize" name="CreateExerciseUnitComponent should initialize" time="0.214">
    </testcase>
    <testcase classname="CreateExerciseUnitComponent should send POST requests for selected course exercises" name="CreateExerciseUnitComponent should send POST requests for selected course exercises" time="0.107">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingFeedbackItemService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:38" time="0.774" tests="10">
    <testcase classname="ProgrammingFeedbackItemService should create submission policy feedback item" name="ProgrammingFeedbackItemService should create submission policy feedback item" time="0.021">
    </testcase>
    <testcase classname="ProgrammingFeedbackItemService should create SCA feedback item" name="ProgrammingFeedbackItemService should create SCA feedback item" time="0.006">
    </testcase>
    <testcase classname="ProgrammingFeedbackItemService should create SCA feedback item with details" name="ProgrammingFeedbackItemService should create SCA feedback item with details" time="0.003">
    </testcase>
    <testcase classname="ProgrammingFeedbackItemService should create automatic feedback item" name="ProgrammingFeedbackItemService should create automatic feedback item" time="0.004">
    </testcase>
    <testcase classname="ProgrammingFeedbackItemService should create grading instruction feedback item" name="ProgrammingFeedbackItemService should create grading instruction feedback item" time="0.003">
    </testcase>
    <testcase classname="ProgrammingFeedbackItemService should set automatic feedback item title according to positive" name="ProgrammingFeedbackItemService should set automatic feedback item title according to positive" time="0.004">
    </testcase>
    <testcase classname="ProgrammingFeedbackItemService should show a replacement title if automatic feedback is neither positive nor negative" name="ProgrammingFeedbackItemService should show a replacement title if automatic feedback is neither positive nor negative" time="0.009">
    </testcase>
    <testcase classname="ProgrammingFeedbackItemService should create automatic feedback item with details" name="ProgrammingFeedbackItemService should create automatic feedback item with details" time="0.007">
    </testcase>
    <testcase classname="ProgrammingFeedbackItemService should handle not executed tests" name="ProgrammingFeedbackItemService should handle not executed tests" time="0.007">
    </testcase>
    <testcase classname="ProgrammingFeedbackItemService should handle automatic feedback with missing positive attribute" name="ProgrammingFeedbackItemService should handle automatic feedback with missing positive attribute" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="TutorEffortStatisticsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:35" time="4.652" tests="10">
    <testcase classname="TutorEffortStatisticsComponent should call loadTutorEfforts and calculateTutorEffort on init" name="TutorEffortStatisticsComponent should call loadTutorEfforts and calculateTutorEffort on init" time="0.132">
    </testcase>
    <testcase classname="TutorEffortStatisticsComponent should call loadTutorEfforts" name="TutorEffortStatisticsComponent should call loadTutorEfforts" time="0.018">
    </testcase>
    <testcase classname="TutorEffortStatisticsComponent should check tutor effort response handler with non-empty input" name="TutorEffortStatisticsComponent should check tutor effort response handler with non-empty input" time="0.036">
    </testcase>
    <testcase classname="TutorEffortStatisticsComponent should check tutor effort response handler with empty input" name="TutorEffortStatisticsComponent should check tutor effort response handler with empty input" time="0.048">
    </testcase>
    <testcase classname="TutorEffortStatisticsComponent should call loadNumberOfTutorsInvolved" name="TutorEffortStatisticsComponent should call loadNumberOfTutorsInvolved" time="0.022">
    </testcase>
    <testcase classname="TutorEffortStatisticsComponent should call distributeEffortToSets" name="TutorEffortStatisticsComponent should call distributeEffortToSets" time="0.031">
    </testcase>
    <testcase classname="TutorEffortStatisticsComponent should show the table headers if tutor efforts list is not empty" name="TutorEffortStatisticsComponent should show the table headers if tutor efforts list is not empty" time="0.133">
    </testcase>
    <testcase classname="TutorEffortStatisticsComponent should show the no data message if tutor efforts list is empty" name="TutorEffortStatisticsComponent should show the no data message if tutor efforts list is empty" time="0.024">
    </testcase>
    <testcase classname="TutorEffortStatisticsComponent should delegate the user correctly" name="TutorEffortStatisticsComponent should delegate the user correctly" time="0.02">
    </testcase>
    <testcase classname="TutorEffortStatisticsComponent should compute the correct medians" name="TutorEffortStatisticsComponent should compute the correct medians" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="AdminImportStandardizedCompetenciesComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:38" time="3.003" tests="13">
    <testcase classname="AdminImportStandardizedCompetenciesComponent should show error for invalid files" name="AdminImportStandardizedCompetenciesComponent should show error for invalid files" time="0.25">
    </testcase>
    <testcase classname="AdminImportStandardizedCompetenciesComponent should show error for invalid files" name="AdminImportStandardizedCompetenciesComponent should show error for invalid files" time="0.013">
    </testcase>
    <testcase classname="AdminImportStandardizedCompetenciesComponent should show error for invalid files" name="AdminImportStandardizedCompetenciesComponent should show error for invalid files" time="0.016">
    </testcase>
    <testcase classname="AdminImportStandardizedCompetenciesComponent should not show error for valid file" name="AdminImportStandardizedCompetenciesComponent should not show error for valid file" time="0.018">
    </testcase>
    <testcase classname="AdminImportStandardizedCompetenciesComponent should not set import data for invalid json" name="AdminImportStandardizedCompetenciesComponent should not set import data for invalid json" time="0.016">
    </testcase>
    <testcase classname="AdminImportStandardizedCompetenciesComponent should not set import data for invalid json" name="AdminImportStandardizedCompetenciesComponent should not set import data for invalid json" time="0.022">
    </testcase>
    <testcase classname="AdminImportStandardizedCompetenciesComponent should not set import data for invalid json" name="AdminImportStandardizedCompetenciesComponent should not set import data for invalid json" time="0.071">
    </testcase>
    <testcase classname="AdminImportStandardizedCompetenciesComponent should set import data" name="AdminImportStandardizedCompetenciesComponent should set import data" time="0.025">
    </testcase>
    <testcase classname="AdminImportStandardizedCompetenciesComponent should navigate on successful competency import" name="AdminImportStandardizedCompetenciesComponent should navigate on successful competency import" time="0.013">
    </testcase>
    <testcase classname="AdminImportStandardizedCompetenciesComponent should cancel" name="AdminImportStandardizedCompetenciesComponent should cancel" time="0.024">
    </testcase>
    <testcase classname="AdminImportStandardizedCompetenciesComponent should toggle collapse" name="AdminImportStandardizedCompetenciesComponent should toggle collapse" time="0.013">
    </testcase>
    <testcase classname="AdminImportStandardizedCompetenciesComponent should open details" name="AdminImportStandardizedCompetenciesComponent should open details" time="0.018">
    </testcase>
    <testcase classname="AdminImportStandardizedCompetenciesComponent should close details" name="AdminImportStandardizedCompetenciesComponent should close details" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="Markdown Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:40" time="1.206" tests="10">
    <testcase classname="Markdown Service should return correct parsed exercise hint and explanation for MC questions" name="Markdown Service should return correct parsed exercise hint and explanation for MC questions" time="0.007">
    </testcase>
    <testcase classname="Markdown Service should return correct parsed exercise hint and explanation for SA questions" name="Markdown Service should return correct parsed exercise hint and explanation for SA questions" time="0.005">
    </testcase>
    <testcase classname="Markdown Service should return sanitized markdown for undefined input" name="Markdown Service should return sanitized markdown for undefined input" time="0.001">
    </testcase>
    <testcase classname="Markdown Service should return sanitized markdown for html input" name="Markdown Service should return sanitized markdown for html input" time="0.112">
    </testcase>
    <testcase classname="Markdown Service formulaCompatibilityPlugin converts block formulas to inline formulas" name="Markdown Service formulaCompatibilityPlugin converts block formulas to inline formulas" time="0.022">
    </testcase>
    <testcase classname="Markdown Service formulaCompatibilityPlugin converts block formulas to inline formulas" name="Markdown Service formulaCompatibilityPlugin converts block formulas to inline formulas" time="0.006">
    </testcase>
    <testcase classname="Markdown Service formulaCompatibilityPlugin converts block formulas to inline formulas" name="Markdown Service formulaCompatibilityPlugin converts block formulas to inline formulas" time="0.01">
    </testcase>
    <testcase classname="Markdown Service formulaCompatibilityPlugin does not convert block formulas without surrounding text" name="Markdown Service formulaCompatibilityPlugin does not convert block formulas without surrounding text" time="0.012">
    </testcase>
    <testcase classname="Markdown Service formulaCompatibilityPlugin converts double-backslash LaTeX begin and end tags" name="Markdown Service formulaCompatibilityPlugin converts double-backslash LaTeX begin and end tags" time="0.033">
    </testcase>
    <testcase classname="Markdown Service formulaCompatibilityPlugin handles multiple formulas in the same text" name="Markdown Service formulaCompatibilityPlugin handles multiple formulas in the same text" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="ConversationService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:39" time="3.106" tests="10">
    <testcase classname="ConversationService searchMembersOfConversation" name="ConversationService searchMembersOfConversation" time="0.01">
    </testcase>
    <testcase classname="ConversationService getConversationsOfUser" name="ConversationService getConversationsOfUser" time="0.004">
    </testcase>
    <testcase classname="ConversationService updateIsFavorite" name="ConversationService updateIsFavorite" time="0.005">
    </testcase>
    <testcase classname="ConversationService updateIsHidden" name="ConversationService updateIsHidden" time="0.004">
    </testcase>
    <testcase classname="ConversationService updateIsMuted" name="ConversationService updateIsMuted" time="0.004">
    </testcase>
    <testcase classname="ConversationService markAsRead" name="ConversationService markAsRead" time="0.005">
    </testcase>
    <testcase classname="ConversationService acceptCodeOfConduct" name="ConversationService acceptCodeOfConduct" time="0.008">
    </testcase>
    <testcase classname="ConversationService checkIsCodeOfConductAccepted" name="ConversationService checkIsCodeOfConductAccepted" time="0.005">
    </testcase>
    <testcase classname="ConversationService getResponsibleUsersForCodeOfConduct" name="ConversationService getResponsibleUsersForCodeOfConduct" time="0.003">
    </testcase>
    <testcase classname="ConversationService should return the correct conversation name" name="ConversationService should return the correct conversation name" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="ThemeService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:41" time="1.587" tests="5">
    <testcase classname="ThemeService applies theme changes correctly" name="ThemeService applies theme changes correctly" time="0.235">
    </testcase>
    <testcase classname="ThemeService restores stored theme correctly" name="ThemeService restores stored theme correctly" time="0.084">
    </testcase>
    <testcase classname="ThemeService applies dark OS preferences" name="ThemeService applies dark OS preferences" time="0.121">
    </testcase>
    <testcase classname="ThemeService applies light OS preferences" name="ThemeService applies light OS preferences" time="0.124">
    </testcase>
    <testcase classname="ThemeService does print correctly" name="ThemeService does print correctly" time="0.216">
    </testcase>
  </testsuite>
  <testsuite name="Submission Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:41" time="1.292" tests="6">
    <testcase classname="Submission Service should delete an existing submission" name="Submission Service should delete an existing submission" time="0.03">
    </testcase>
    <testcase classname="Submission Service should find all submissions of a given participation" name="Submission Service should find all submissions of a given participation" time="0.014">
    </testcase>
    <testcase classname="Submission Service should get test run submission for a given exercise" name="Submission Service should get test run submission for a given exercise" time="0.054">
    </testcase>
    <testcase classname="Submission Service should handle feedback correction round tag" name="Submission Service should handle feedback correction round tag" time="0.007">
    </testcase>
    <testcase classname="Submission Service should convert results date from server" name="Submission Service should convert results date from server" time="0.011">
    </testcase>
    <testcase classname="Submission Service should get submissions with complaints for tutor" name="Submission Service should get submissions with complaints for tutor" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="FileService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:42" time="1.349" tests="9">
    <testcase classname="FileService getFile should return a file" name="FileService getFile should return a file" time="0.016">
    </testcase>
    <testcase classname="FileService getFile should return a file with unique name" name="FileService getFile should return a file with unique name" time="0.005">
    </testcase>
    <testcase classname="FileService getTemplateFile should fetch the template file without project type" name="FileService getTemplateFile should fetch the template file without project type" time="0.006">
    </testcase>
    <testcase classname="FileService getTemplateFile should fetch the template file with project type" name="FileService getTemplateFile should fetch the template file with project type" time="0.007">
    </testcase>
    <testcase classname="FileService downloadMergedFile should download the merged PDF file" name="FileService downloadMergedFile should download the merged PDF file" time="0.011">
    </testcase>
    <testcase classname="FileService getTemplateCodeOfConduct should fetch the template code of conduct" name="FileService getTemplateCodeOfConduct should fetch the template code of conduct" time="0.011">
    </testcase>
    <testcase classname="FileService downloadFile should open a new window with the normalized URL" name="FileService downloadFile should open a new window with the normalized URL" time="0.011">
    </testcase>
    <testcase classname="FileService downloadFileByAttachmentName should open a new window with the normalized URL and attachment name" name="FileService downloadFileByAttachmentName should open a new window with the normalized URL and attachment name" time="0.008">
    </testcase>
    <testcase classname="FileService replaceAttachmentPrefixAndUnderscores should replace the prefix and underscores in a file name" name="FileService replaceAttachmentPrefixAndUnderscores should replace the prefix and underscores in a file name" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="CourseTutorialGroupsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:38" time="5.055" tests="4">
    <testcase classname="CourseTutorialGroupsComponent should initialize" name="CourseTutorialGroupsComponent should initialize" time="0.492">
    </testcase>
    <testcase classname="CourseTutorialGroupsComponent should load tutorial groups from service if they are not available in the cache and update the cache" name="CourseTutorialGroupsComponent should load tutorial groups from service if they are not available in the cache and update the cache" time="0.162">
    </testcase>
    <testcase classname="CourseTutorialGroupsComponent should not load tutorial groups from service if they are available in the cache" name="CourseTutorialGroupsComponent should not load tutorial groups from service if they are available in the cache" time="0.225">
    </testcase>
    <testcase classname="CourseTutorialGroupsComponent should toggle isCollapsed and call setSidebarCollapseState with the correct arguments" name="CourseTutorialGroupsComponent should toggle isCollapsed and call setSidebarCollapseState with the correct arguments" time="0.131">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupsExportButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:43" time="2.165" tests="9">
    <testcase classname="TutorialGroupsExportButtonComponent should create" name="TutorialGroupsExportButtonComponent should create" time="0.115">
    </testcase>
    <testcase classname="TutorialGroupsExportButtonComponent should open the export dialog when the button is clicked" name="TutorialGroupsExportButtonComponent should open the export dialog when the button is clicked" time="0.026">
    </testcase>
    <testcase classname="TutorialGroupsExportButtonComponent should select all fields when toggleSelectAll is called" name="TutorialGroupsExportButtonComponent should select all fields when toggleSelectAll is called" time="0.03">
    </testcase>
    <testcase classname="TutorialGroupsExportButtonComponent should deselect all fields when toggleSelectAll is called twice" name="TutorialGroupsExportButtonComponent should deselect all fields when toggleSelectAll is called twice" time="0.028">
    </testcase>
    <testcase classname="TutorialGroupsExportButtonComponent should update selected fields on field selection change" name="TutorialGroupsExportButtonComponent should update selected fields on field selection change" time="0.031">
    </testcase>
    <testcase classname="TutorialGroupsExportButtonComponent should export CSV successfully" name="TutorialGroupsExportButtonComponent should export CSV successfully" time="0.05">
    </testcase>
    <testcase classname="TutorialGroupsExportButtonComponent should handle CSV export error" name="TutorialGroupsExportButtonComponent should handle CSV export error" time="0.014">
    </testcase>
    <testcase classname="TutorialGroupsExportButtonComponent should export JSON successfully" name="TutorialGroupsExportButtonComponent should export JSON successfully" time="0.023">
    </testcase>
    <testcase classname="TutorialGroupsExportButtonComponent should handle JSON export error" name="TutorialGroupsExportButtonComponent should handle JSON export error" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="Submission Policy Update Form Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:43" time="3.01" tests="8">
    <testcase classname="Submission Policy Update Form Component should set policy object on exercise" name="Submission Policy Update Form Component should set policy object on exercise" time="0.388">
    </testcase>
    <testcase classname="Submission Policy Update Form Component should set submission limit correctly for all policy types" name="Submission Policy Update Form Component should set submission limit correctly for all policy types" time="0.151">
    </testcase>
    <testcase classname="Submission Policy Update Form Component should set exceeding penalty correctly for submission penalty type" name="Submission Policy Update Form Component should set exceeding penalty correctly for submission penalty type" time="0.086">
    </testcase>
    <testcase classname="Submission Policy Update Form Component should display correct input fields when penalty policy (lock repo) is already set" name="Submission Policy Update Form Component should display correct input fields when penalty policy (lock repo) is already set" time="0.091">
    </testcase>
    <testcase classname="Submission Policy Update Form Component should display correct input fields when penalty policy is already set" name="Submission Policy Update Form Component should display correct input fields when penalty policy is already set" time="0.141">
    </testcase>
    <testcase classname="Submission Policy Update Form Component should display correct input fields when set policy is broken" name="Submission Policy Update Form Component should display correct input fields when set policy is broken" time="0.055">
    </testcase>
    <testcase classname="Submission Policy Update Form Component should not be invalid when no policy is undefined" name="Submission Policy Update Form Component should not be invalid when no policy is undefined" time="0.066">
    </testcase>
    <testcase classname="Submission Policy Update Form Component should not be invalid when no policy is of type none" name="Submission Policy Update Form Component should not be invalid when no policy is of type none" time="0.094">
    </testcase>
  </testsuite>
  <testsuite name="CourseDetailLineChartComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:43" time="4.006" tests="8">
    <testcase classname="CourseDetailLineChartComponent should initialize" name="CourseDetailLineChartComponent should initialize" time="0.112">
    </testcase>
    <testcase classname="CourseDetailLineChartComponent should show lettering if course did not start yet" name="CourseDetailLineChartComponent should show lettering if course did not start yet" time="0.013">
    </testcase>
    <testcase classname="CourseDetailLineChartComponent should show only 2 weeks if start date is 1 week ago" name="CourseDetailLineChartComponent should show only 2 weeks if start date is 1 week ago" time="0.011">
    </testcase>
    <testcase classname="CourseDetailLineChartComponent should adapt labels if end date is passed" name="CourseDetailLineChartComponent should adapt labels if end date is passed" time="0.012">
    </testcase>
    <testcase classname="CourseDetailLineChartComponent should adapt if course phase is smaller than 4 weeks" name="CourseDetailLineChartComponent should adapt if course phase is smaller than 4 weeks" time="0.011">
    </testcase>
    <testcase classname="CourseDetailLineChartComponent should limit the next view if start date is reached" name="CourseDetailLineChartComponent should limit the next view if start date is reached" time="0.036">
    </testcase>
    <testcase classname="CourseDetailLineChartComponent should create lifetime overview" name="CourseDetailLineChartComponent should create lifetime overview" time="0.03">
    </testcase>
    <testcase classname="CourseDetailLineChartComponent should create an empty chart if no students are registered yet" name="CourseDetailLineChartComponent should create an empty chart if no students are registered yet" time="0.047">
    </testcase>
  </testsuite>
  <testsuite name="EditOnlineUnitComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:44" time="4.307" tests="3">
    <testcase classname="EditOnlineUnitComponent should initialize" name="EditOnlineUnitComponent should initialize" time="0.417">
    </testcase>
    <testcase classname="EditOnlineUnitComponent should set form data correctly" name="EditOnlineUnitComponent should set form data correctly" time="0.098">
    </testcase>
    <testcase classname="EditOnlineUnitComponent should send PUT request upon form submission and navigate" name="EditOnlineUnitComponent should send PUT request upon form submission and navigate" time="0.078">
    </testcase>
  </testsuite>
  <testsuite name="LinkPreviewComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:45" time="3.441" tests="11">
    <testcase classname="LinkPreviewComponent should create" name="LinkPreviewComponent should create" time="0.157">
    </testcase>
    <testcase classname="LinkPreviewComponent should render link preview when linkPreview is provided" name="LinkPreviewComponent should render link preview when linkPreview is provided" time="0.069">
    </testcase>
    <testcase classname="LinkPreviewComponent should render link preview without image when multiple links are provided" name="LinkPreviewComponent should render link preview without image when multiple links are provided" time="0.041">
    </testcase>
    <testcase classname="LinkPreviewComponent should not render link preview when linkPreview is not provided" name="LinkPreviewComponent should not render link preview when linkPreview is not provided" time="0.063">
    </testcase>
    <testcase classname="LinkPreviewComponent should render loading spinner when linkPreview is not loaded and showLoadingsProgress is true" name="LinkPreviewComponent should render loading spinner when linkPreview is not loaded and showLoadingsProgress is true" time="0.057">
    </testcase>
    <testcase classname="LinkPreviewComponent should not render loading spinner when linkPreview is loaded" name="LinkPreviewComponent should not render loading spinner when linkPreview is loaded" time="0.056">
    </testcase>
    <testcase classname="LinkPreviewComponent should not render loading spinner when showLoadingsProgress is false" name="LinkPreviewComponent should not render loading spinner when showLoadingsProgress is false" time="0.06">
    </testcase>
    <testcase classname="LinkPreviewComponent should not render error message when hasError is false" name="LinkPreviewComponent should not render error message when hasError is false" time="0.073">
    </testcase>
    <testcase classname="LinkPreviewComponent should initialize isAuthorOfOriginalPost" name="LinkPreviewComponent should initialize isAuthorOfOriginalPost" time="0.044">
    </testcase>
    <testcase classname="LinkPreviewComponent should remove link preview from message" name="LinkPreviewComponent should remove link preview from message" time="0.055">
    </testcase>
    <testcase classname="LinkPreviewComponent should remove link preview from reply" name="LinkPreviewComponent should remove link preview from reply" time="0.061">
    </testcase>
  </testsuite>
  <testsuite name="CourseOverviewGuard" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:47" time="3.622" tests="13">
    <testcase classname="CourseOverviewGuard canActivate should return false if courseId is not present" name="CourseOverviewGuard canActivate should return false if courseId is not present" time="0.056">
    </testcase>
    <testcase classname="CourseOverviewGuard canActivate should return true if course is fetched from server" name="CourseOverviewGuard canActivate should return true if course is fetched from server" time="0.013">
    </testcase>
    <testcase classname="CourseOverviewGuard handleReturn should return true if type is lectures and course has lectures" name="CourseOverviewGuard handleReturn should return true if type is lectures and course has lectures" time="0.01">
    </testcase>
    <testcase classname="CourseOverviewGuard handleReturn should return true if type is exams and course has visible exams" name="CourseOverviewGuard handleReturn should return true if type is exams and course has visible exams" time="0.007">
    </testcase>
    <testcase classname="CourseOverviewGuard handleReturn should return false if type is exams and course has no visible exams" name="CourseOverviewGuard handleReturn should return false if type is exams and course has no visible exams" time="0.116">
    </testcase>
    <testcase classname="CourseOverviewGuard handleReturn should return true if type is competencies and course has competencies" name="CourseOverviewGuard handleReturn should return true if type is competencies and course has competencies" time="0.043">
    </testcase>
    <testcase classname="CourseOverviewGuard handleReturn should return true if type is competencies and course has prerequisits" name="CourseOverviewGuard handleReturn should return true if type is competencies and course has prerequisits" time="0.006">
    </testcase>
    <testcase classname="CourseOverviewGuard handleReturn should return true if type is tutorial-groups and course has tutorial groups" name="CourseOverviewGuard handleReturn should return true if type is tutorial-groups and course has tutorial groups" time="0.015">
    </testcase>
    <testcase classname="CourseOverviewGuard handleReturn should return true if type is dashboard and course has studentCourseAnalyticsDashboardEnabled" name="CourseOverviewGuard handleReturn should return true if type is dashboard and course has studentCourseAnalyticsDashboardEnabled" time="0.028">
    </testcase>
    <testcase classname="CourseOverviewGuard handleReturn should return true if type is faq and course has faqEnabled" name="CourseOverviewGuard handleReturn should return true if type is faq and course has faqEnabled" time="0.015">
    </testcase>
    <testcase classname="CourseOverviewGuard handleReturn should return true if type is learning-path and course has learningPathsEnabled" name="CourseOverviewGuard handleReturn should return true if type is learning-path and course has learningPathsEnabled" time="0.016">
    </testcase>
    <testcase classname="CourseOverviewGuard handleReturn should return false if type is unknown" name="CourseOverviewGuard handleReturn should return false if type is unknown" time="0.011">
    </testcase>
    <testcase classname="CourseOverviewGuard handleReturn should navigate to exercises if type is unknown" name="CourseOverviewGuard handleReturn should navigate to exercises if type is unknown" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="DataExportConfirmationDialogComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:47" time="3.164" tests="6">
    <testcase classname="DataExportConfirmationDialogComponent should initialize dialog correctly" name="DataExportConfirmationDialogComponent should initialize dialog correctly" time="0.265">
    </testcase>
    <testcase classname="DataExportConfirmationDialogComponent should correctly enable and disable request button" name="DataExportConfirmationDialogComponent should correctly enable and disable request button" time="0.131">
    </testcase>
    <testcase classname="DataExportConfirmationDialogComponent should handle dialog error events correctly" name="DataExportConfirmationDialogComponent should handle dialog error events correctly" time="0.092">
    </testcase>
    <testcase classname="DataExportConfirmationDialogComponent should set the correct translation strings and values on checkbox change" name="DataExportConfirmationDialogComponent should set the correct translation strings and values on checkbox change" time="0.094">
    </testcase>
    <testcase classname="DataExportConfirmationDialogComponent should set the correct translation strings and values on checkbox change" name="DataExportConfirmationDialogComponent should set the correct translation strings and values on checkbox change" time="0.09">
    </testcase>
    <testcase classname="DataExportConfirmationDialogComponent should emit correct even when clicking confirm button" name="DataExportConfirmationDialogComponent should emit correct even when clicking confirm button" time="0.066">
    </testcase>
  </testsuite>
  <testsuite name="QuizExercise Lifecycle Buttons Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:49" time="1.924" tests="9">
    <testcase classname="QuizExercise Lifecycle Buttons Component should open quiz for practice" name="QuizExercise Lifecycle Buttons Component should open quiz for practice" time="0.022">
    </testcase>
    <testcase classname="QuizExercise Lifecycle Buttons Component should not open quiz for practice on error" name="QuizExercise Lifecycle Buttons Component should not open quiz for practice on error" time="0.009">
    </testcase>
    <testcase classname="QuizExercise Lifecycle Buttons Component should start quiz" name="QuizExercise Lifecycle Buttons Component should start quiz" time="0.022">
    </testcase>
    <testcase classname="QuizExercise Lifecycle Buttons Component should not start quiz on error" name="QuizExercise Lifecycle Buttons Component should not start quiz on error" time="0.015">
    </testcase>
    <testcase classname="QuizExercise Lifecycle Buttons Component should end quiz" name="QuizExercise Lifecycle Buttons Component should end quiz" time="0.009">
    </testcase>
    <testcase classname="QuizExercise Lifecycle Buttons Component should add quiz batch" name="QuizExercise Lifecycle Buttons Component should add quiz batch" time="0.01">
    </testcase>
    <testcase classname="QuizExercise Lifecycle Buttons Component should start quiz batch" name="QuizExercise Lifecycle Buttons Component should start quiz batch" time="0.009">
    </testcase>
    <testcase classname="QuizExercise Lifecycle Buttons Component should make quiz visible" name="QuizExercise Lifecycle Buttons Component should make quiz visible" time="0.006">
    </testcase>
    <testcase classname="QuizExercise Lifecycle Buttons Component should not make quiz visible on error" name="QuizExercise Lifecycle Buttons Component should not make quiz visible on error" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="QuizExercise Generator" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:51" time="1.368" tests="5">
    <testcase classname="QuizExercise Generator generateDragAndDropExercise for Class Diagram" name="QuizExercise Generator generateDragAndDropExercise for Class Diagram" time="0.148">
    </testcase>
    <testcase classname="QuizExercise Generator computeDropLocation with totalSize x and y coordinates" name="QuizExercise Generator computeDropLocation with totalSize x and y coordinates" time="0.008">
    </testcase>
    <testcase classname="QuizExercise Generator computeDropLocation without totalSize x and y coordinates" name="QuizExercise Generator computeDropLocation without totalSize x and y coordinates" time="0.005">
    </testcase>
    <testcase classname="QuizExercise Generator computeDropLocation with negative element location coordinates" name="QuizExercise Generator computeDropLocation with negative element location coordinates" time="0.002">
    </testcase>
    <testcase classname="QuizExercise Generator generateDragAndDropItemForElement" name="QuizExercise Generator generateDragAndDropItemForElement" time="0.064">
    </testcase>
  </testsuite>
  <testsuite name="CourseManagementComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:48" time="4.43" tests="3">
    <testcase classname="CourseManagementComponent should initialize" name="CourseManagementComponent should initialize" time="0.542">
    </testcase>
    <testcase classname="CourseManagementComponent should correctly sort unique semester names" name="CourseManagementComponent should correctly sort unique semester names" time="0.032">
    </testcase>
    <testcase classname="CourseManagementComponent should correctly sort courses into semesters" name="CourseManagementComponent should correctly sort courses into semesters" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="SubmissionResultStatusComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:50" time="5.378" tests="31">
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if it is uninitialized" name="SubmissionResultStatusComponent ngOnChanges should determine if it is uninitialized" time="0.27">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if it is uninitialized" name="SubmissionResultStatusComponent ngOnChanges should determine if it is uninitialized" time="0.035">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if it is uninitialized" name="SubmissionResultStatusComponent ngOnChanges should determine if it is uninitialized" time="0.067">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if it is uninitialized" name="SubmissionResultStatusComponent ngOnChanges should determine if it is uninitialized" time="0.057">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if it is uninitialized" name="SubmissionResultStatusComponent ngOnChanges should determine if it is uninitialized" time="0.087">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if it is uninitialized" name="SubmissionResultStatusComponent ngOnChanges should determine if it is uninitialized" time="0.064">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if quiz is not started" name="SubmissionResultStatusComponent ngOnChanges should determine if quiz is not started" time="0.029">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if quiz is not started" name="SubmissionResultStatusComponent ngOnChanges should determine if quiz is not started" time="0.042">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if quiz is not started" name="SubmissionResultStatusComponent ngOnChanges should determine if quiz is not started" time="0.039">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if quiz is not started" name="SubmissionResultStatusComponent ngOnChanges should determine if quiz is not started" time="0.061">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if missed due date" name="SubmissionResultStatusComponent ngOnChanges should determine if missed due date" time="0.051">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if missed due date" name="SubmissionResultStatusComponent ngOnChanges should determine if missed due date" time="0.054">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if missed due date" name="SubmissionResultStatusComponent ngOnChanges should determine if missed due date" time="0.038">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if missed due date" name="SubmissionResultStatusComponent ngOnChanges should determine if missed due date" time="0.066">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if missed due date" name="SubmissionResultStatusComponent ngOnChanges should determine if missed due date" time="0.042">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if it is notSubmitted" name="SubmissionResultStatusComponent ngOnChanges should determine if it is notSubmitted" time="0.023">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if it is notSubmitted" name="SubmissionResultStatusComponent ngOnChanges should determine if it is notSubmitted" time="0.096">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if it is notSubmitted" name="SubmissionResultStatusComponent ngOnChanges should determine if it is notSubmitted" time="0.057">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if it is notSubmitted" name="SubmissionResultStatusComponent ngOnChanges should determine if it is notSubmitted" time="0.04">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if it is notSubmitted" name="SubmissionResultStatusComponent ngOnChanges should determine if it is notSubmitted" time="0.062">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" name="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" time="0.031">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" name="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" time="0.06">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" name="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" time="0.062">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" name="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" time="0.039">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" name="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" time="0.051">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" name="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" time="0.084">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" name="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" time="0.047">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" name="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" time="0.043">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" name="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" time="0.04">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" name="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" time="0.043">
    </testcase>
    <testcase classname="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" name="SubmissionResultStatusComponent ngOnChanges should determine if results should be shown" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="CourseExercisesComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:50" time="5.586" tests="6">
    <testcase classname="CourseExercisesComponent should initialize" name="CourseExercisesComponent should initialize" time="0.446">
    </testcase>
    <testcase classname="CourseExercisesComponent should display sidebar when course is provided" name="CourseExercisesComponent should display sidebar when course is provided" time="0.15">
    </testcase>
    <testcase classname="CourseExercisesComponent should toggle sidebar visibility based on isCollapsed property" name="CourseExercisesComponent should toggle sidebar visibility based on isCollapsed property" time="0.2">
    </testcase>
    <testcase classname="CourseExercisesComponent should toggle isNavbarCollapsed when toggleCollapseState is called" name="CourseExercisesComponent should toggle isNavbarCollapsed when toggleCollapseState is called" time="0.166">
    </testcase>
    <testcase classname="CourseExercisesComponent should display &quot;Please Select an Exercise&quot; when no exercise is selected" name="CourseExercisesComponent should display &quot;Please Select an Exercise&quot; when no exercise is selected" time="0.148">
    </testcase>
    <testcase classname="CourseExercisesComponent should display the exercise details when an exercise is selected" name="CourseExercisesComponent should display the exercise details when an exercise is selected" time="0.104">
    </testcase>
  </testsuite>
  <testsuite name="Exam Resolve" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:56" time="2.573" tests="7">
    <testcase classname="Exam Resolve should fetch the exam if courseId and examId are given" name="Exam Resolve should fetch the exam if courseId and examId are given" time="0.011">
    </testcase>
    <testcase classname="Exam Resolve should create a new exam if courseId and/or examId are not given" name="Exam Resolve should create a new exam if courseId and/or examId are not given" time="0.017">
    </testcase>
    <testcase classname="Exam Resolve should fetch the exam for an import" name="Exam Resolve should fetch the exam for an import" time="0.004">
    </testcase>
    <testcase classname="Exam Group Resolve should fetch the exercise group if courseId, examId and exerciseGroupId are given" name="Exam Group Resolve should fetch the exercise group if courseId, examId and exerciseGroupId are given" time="0.004">
    </testcase>
    <testcase classname="Exam Group Resolve should create a new exam group if courseId, examId and/or examGroupId are not given" name="Exam Group Resolve should create a new exam group if courseId, examId and/or examGroupId are not given" time="0.007">
    </testcase>
    <testcase classname="Student Exam Resolve should fetch the student exam if courseId, examId and studentExamId are given" name="Student Exam Resolve should fetch the student exam if courseId, examId and studentExamId are given" time="0.024">
    </testcase>
    <testcase classname="Student Exam Resolve should create a new student exam if courseId and/or examId and/or studentExamId are not given" name="Student Exam Resolve should create a new student exam if courseId and/or examId and/or studentExamId are not given" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Course Management Detail Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:53" time="5.83" tests="4">
    <testcase classname="Course Management Detail Component should call registerChangeInCourses on init" name="Course Management Detail Component should call registerChangeInCourses on init" time="0.69">
    </testcase>
    <testcase classname="Course Management Detail Component should destroy event subscriber onDestroy" name="Course Management Detail Component should destroy event subscriber onDestroy" time="0.05">
    </testcase>
    <testcase classname="Course Management Detail Component should return correct course-details with different settings enabled" name="Course Management Detail Component should return correct course-details with different settings enabled" time="0.048">
    </testcase>
    <testcase classname="Course Management Detail Component should return correct course-details with different settings enabled" name="Course Management Detail Component should return correct course-details with different settings enabled" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="Exercise detail common actions Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:57" time="2.729" tests="4">
    <testcase classname="Exercise detail common actions Component should be ok" name="Exercise detail common actions Component should be ok" time="0.129">
    </testcase>
    <testcase classname="Exercise detail common actions Component should get the correct edit routes for non exam exercise" name="Exercise detail common actions Component should get the correct edit routes for non exam exercise" time="0.07">
    </testcase>
    <testcase classname="Exercise detail common actions Component should get the correct edit routes for exam exercise" name="Exercise detail common actions Component should get the correct edit routes for exam exercise" time="0.055">
    </testcase>
    <testcase classname="Exercise detail common actions Component should call event manager on delete exercises" name="Exercise detail common actions Component should call event manager on delete exercises" time="0.044">
    </testcase>
  </testsuite>
  <testsuite name="ChannelService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:59" time="0.837" tests="14">
    <testcase classname="ChannelService getChannelsOfCourse" name="ChannelService getChannelsOfCourse" time="0.006">
    </testcase>
    <testcase classname="ChannelService getPublicChannelsOfCourse" name="ChannelService getPublicChannelsOfCourse" time="0.004">
    </testcase>
    <testcase classname="ChannelService delete" name="ChannelService delete" time="0.002">
    </testcase>
    <testcase classname="ChannelService create" name="ChannelService create" time="0.003">
    </testcase>
    <testcase classname="ChannelService getChannelOfLecture" name="ChannelService getChannelOfLecture" time="0.014">
    </testcase>
    <testcase classname="ChannelService getChannelOfExercise" name="ChannelService getChannelOfExercise" time="0.005">
    </testcase>
    <testcase classname="ChannelService update" name="ChannelService update" time="0.004">
    </testcase>
    <testcase classname="ChannelService archive" name="ChannelService archive" time="0.004">
    </testcase>
    <testcase classname="ChannelService unarchive" name="ChannelService unarchive" time="0.004">
    </testcase>
    <testcase classname="ChannelService deregisterUsersFromChannel" name="ChannelService deregisterUsersFromChannel" time="0.003">
    </testcase>
    <testcase classname="ChannelService registersUsersToChannel" name="ChannelService registersUsersToChannel" time="0.004">
    </testcase>
    <testcase classname="ChannelService grantChannelModeratorRole" name="ChannelService grantChannelModeratorRole" time="0.004">
    </testcase>
    <testcase classname="ChannelService revokeChannelModeratorRole" name="ChannelService revokeChannelModeratorRole" time="0.003">
    </testcase>
    <testcase classname="ChannelService toggleChannelPrivacy" name="ChannelService toggleChannelPrivacy" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackAnalysisService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:00" time="1.759" tests="5">
    <testcase classname="FeedbackAnalysisService search should retrieve feedback details for a given exercise with concatenatedFeedbackIds" name="FeedbackAnalysisService search should retrieve feedback details for a given exercise with concatenatedFeedbackIds" time="0.018">
    </testcase>
    <testcase classname="FeedbackAnalysisService getMaxCount should retrieve the max count for an exercise" name="FeedbackAnalysisService getMaxCount should retrieve the max count for an exercise" time="0.007">
    </testcase>
    <testcase classname="FeedbackAnalysisService getParticipationForFeedbackDetailText should retrieve paginated participation details for up to 5 feedback details" name="FeedbackAnalysisService getParticipationForFeedbackDetailText should retrieve paginated participation details for up to 5 feedback details" time="0.032">
    </testcase>
    <testcase classname="FeedbackAnalysisService getParticipationForFeedbackDetailText should handle less than 5 feedback details gracefully" name="FeedbackAnalysisService getParticipationForFeedbackDetailText should handle less than 5 feedback details gracefully" time="0.008">
    </testcase>
    <testcase classname="FeedbackAnalysisService createChannel should send a POST request to create a feedback-specific channel and return the created channel DTO" name="FeedbackAnalysisService createChannel should send a POST request to create a feedback-specific channel and return the created channel DTO" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="EditTextUnitComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:19:53" time="9.177" tests="3">
    <testcase classname="EditTextUnitComponent should initialize" name="EditTextUnitComponent should initialize" time="1.651">
    </testcase>
    <testcase classname="EditTextUnitComponent should set form data correctly" name="EditTextUnitComponent should set form data correctly" time="2.399">
    </testcase>
    <testcase classname="EditTextUnitComponent should send PUT request upon form submission and navigate" name="EditTextUnitComponent should send PUT request upon form submission and navigate" time="1.184">
    </testcase>
  </testsuite>
  <testsuite name="ModelingExercise Management Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:00" time="3.011" tests="9">
    <testcase classname="ModelingExercise Management Component should call loadExercises on init" name="ModelingExercise Management Component should call loadExercises on init" time="0.137">
    </testcase>
    <testcase classname="ModelingExercise Management Component should delete exercise" name="ModelingExercise Management Component should delete exercise" time="0.021">
    </testcase>
    <testcase classname="ModelingExercise Management Component should return exercise id" name="ModelingExercise Management Component should return exercise id" time="0.008">
    </testcase>
    <testcase classname="ModelingExercise Management Component ModelingExercise Search Exercises should show all exercises" name="ModelingExercise Management Component ModelingExercise Search Exercises should show all exercises" time="0.011">
    </testcase>
    <testcase classname="ModelingExercise Management Component ModelingExercise Search Exercises should show no exercises" name="ModelingExercise Management Component ModelingExercise Search Exercises should show no exercises" time="0.009">
    </testcase>
    <testcase classname="ModelingExercise Management Component should return items id when tracked" name="ModelingExercise Management Component should return items id when tracked" time="0.019">
    </testcase>
    <testcase classname="ModelingExercise Management Component should delete the given exercise" name="ModelingExercise Management Component should delete the given exercise" time="0.036">
    </testcase>
    <testcase classname="ModelingExercise Management Component should sort rows" name="ModelingExercise Management Component should sort rows" time="0.026">
    </testcase>
    <testcase classname="ModelingExercise Management Component should have working selection" name="ModelingExercise Management Component should have working selection" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="ImportCourseCompetenciesComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:02" time="2.336" tests="10">
    <testcase classname="ImportCourseCompetenciesComponent should initialize" name="ImportCourseCompetenciesComponent should initialize" time="0.217">
    </testcase>
    <testcase classname="ImportCourseCompetenciesComponent should initialize values correctly" name="ImportCourseCompetenciesComponent should initialize values correctly" time="0.015">
    </testcase>
    <testcase classname="ImportCourseCompetenciesComponent should cancel" name="ImportCourseCompetenciesComponent should cancel" time="0.109">
    </testcase>
    <testcase classname="ImportCourseCompetenciesComponent should deactivate correctly" name="ImportCourseCompetenciesComponent should deactivate correctly" time="0.007">
    </testcase>
    <testcase classname="ImportCourseCompetenciesComponent should perform search on search change" name="ImportCourseCompetenciesComponent should perform search on search change" time="0.023">
    </testcase>
    <testcase classname="ImportCourseCompetenciesComponent should perform search on filter change" name="ImportCourseCompetenciesComponent should perform search on filter change" time="0.027">
    </testcase>
    <testcase classname="ImportCourseCompetenciesComponent should sort selected" name="ImportCourseCompetenciesComponent should sort selected" time="0.018">
    </testcase>
    <testcase classname="ImportCourseCompetenciesComponent should add competencies to selected" name="ImportCourseCompetenciesComponent should add competencies to selected" time="0.024">
    </testcase>
    <testcase classname="ImportCourseCompetenciesComponent should remove competencies from selected" name="ImportCourseCompetenciesComponent should remove competencies from selected" time="0.011">
    </testcase>
    <testcase classname="ImportCourseCompetenciesComponent should not deactivate with pending changes" name="ImportCourseCompetenciesComponent should not deactivate with pending changes" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="LearningPathApiService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:03" time="2.416" tests="15">
    <testcase classname="LearningPathApiService should get learning path for current user" name="LearningPathApiService should get learning path for current user" time="0.014">
    </testcase>
    <testcase classname="LearningPathApiService should get learning path navigation" name="LearningPathApiService should get learning path navigation" time="0.003">
    </testcase>
    <testcase classname="LearningPathApiService should get relative learning path navigation" name="LearningPathApiService should get relative learning path navigation" time="0.003">
    </testcase>
    <testcase classname="LearningPathApiService should start learning path for current user" name="LearningPathApiService should start learning path for current user" time="0.004">
    </testcase>
    <testcase classname="LearningPathApiService should get learning path navigation overview" name="LearningPathApiService should get learning path navigation overview" time="0.004">
    </testcase>
    <testcase classname="LearningPathApiService should generate learning path for current user" name="LearningPathApiService should generate learning path for current user" time="0.004">
    </testcase>
    <testcase classname="LearningPathApiService should get learning path competency graph" name="LearningPathApiService should get learning path competency graph" time="0.004">
    </testcase>
    <testcase classname="LearningPathApiService should get learning path instructor competency graph" name="LearningPathApiService should get learning path instructor competency graph" time="0.005">
    </testcase>
    <testcase classname="LearningPathApiService should get learning path competencies" name="LearningPathApiService should get learning path competencies" time="0.003">
    </testcase>
    <testcase classname="LearningPathApiService should get learning path competency learning objects" name="LearningPathApiService should get learning path competency learning objects" time="0.003">
    </testcase>
    <testcase classname="LearningPathApiService should get learning paths configuration" name="LearningPathApiService should get learning paths configuration" time="0.004">
    </testcase>
    <testcase classname="LearningPathApiService should get learning path health status" name="LearningPathApiService should get learning path health status" time="0.003">
    </testcase>
    <testcase classname="LearningPathApiService should put enable learning paths" name="LearningPathApiService should put enable learning paths" time="0.004">
    </testcase>
    <testcase classname="LearningPathApiService should generate missing learning paths" name="LearningPathApiService should generate missing learning paths" time="0.005">
    </testcase>
    <testcase classname="LearningPathApiService should get learning path information" name="LearningPathApiService should get learning path information" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExamSummaryComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:01" time="4.315" tests="5">
    <testcase classname="ProgrammingExamSummaryComponent should initialize" name="ProgrammingExamSummaryComponent should initialize" time="0.465">
    </testcase>
    <testcase classname="ProgrammingExamSummaryComponent should set commitUrl" name="ProgrammingExamSummaryComponent should set commitUrl" time="0.015">
    </testcase>
    <testcase classname="ProgrammingExamSummaryComponent should show result if present and results are published" name="ProgrammingExamSummaryComponent should show result if present and results are published" time="0.051">
    </testcase>
    <testcase classname="ProgrammingExamSummaryComponent should not show results if not yet published" name="ProgrammingExamSummaryComponent should not show results if not yet published" time="0.034">
    </testcase>
    <testcase classname="ProgrammingExamSummaryComponent should display code button" name="ProgrammingExamSummaryComponent should display code button" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Build Plan Editor" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:00" time="6.397" tests="8">
    <testcase classname="Build Plan Editor should not submit a build plan if none is loaded" name="Build Plan Editor should not submit a build plan if none is loaded" time="0.292">
    </testcase>
    <testcase classname="Build Plan Editor should update the build plan on submit" name="Build Plan Editor should update the build plan on submit" time="0.072">
    </testcase>
    <testcase classname="Build Plan Editor should update the build plan text on editor text changes" name="Build Plan Editor should update the build plan text on editor text changes" time="0.054">
    </testcase>
    <testcase classname="Build Plan Editor should load the exercise on init" name="Build Plan Editor should load the exercise on init" time="0.085">
    </testcase>
    <testcase classname="Build Plan Editor should load the build plan after the editor is initialized" name="Build Plan Editor should load the build plan after the editor is initialized" time="0.117">
    </testcase>
    <testcase classname="Build Plan Editor should show an error message if fetching the build plan failed" name="Build Plan Editor should show an error message if fetching the build plan failed" time="0.068">
    </testcase>
    <testcase classname="Build Plan Editor should show an error message if fetching the build plan failed" name="Build Plan Editor should show an error message if fetching the build plan failed" time="0.076">
    </testcase>
    <testcase classname="Build Plan Editor should update the tab size" name="Build Plan Editor should update the tab size" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="Plagiarism Header Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:05" time="2.195" tests="10">
    <testcase classname="Plagiarism Header Component should confirm a plagiarism" name="Plagiarism Header Component should confirm a plagiarism" time="0.113">
    </testcase>
    <testcase classname="Plagiarism Header Component should deny a plagiarism" name="Plagiarism Header Component should deny a plagiarism" time="0.032">
    </testcase>
    <testcase classname="Plagiarism Header Component should disable deny button if plagiarism status is denied or loading" name="Plagiarism Header Component should disable deny button if plagiarism status is denied or loading" time="0.087">
    </testcase>
    <testcase classname="Plagiarism Header Component should open a confirmation popup to deny a plagiarism if it is changing from confirmed to denied" name="Plagiarism Header Component should open a confirmation popup to deny a plagiarism if it is changing from confirmed to denied" time="0.053">
    </testcase>
    <testcase classname="Plagiarism Header Component should update the plagiarism status" name="Plagiarism Header Component should update the plagiarism status" time="0.058">
    </testcase>
    <testcase classname="Plagiarism Header Component should emit when expanding left split view pane" name="Plagiarism Header Component should emit when expanding left split view pane" time="0.057">
    </testcase>
    <testcase classname="Plagiarism Header Component should emit when expanding right split view pane" name="Plagiarism Header Component should emit when expanding right split view pane" time="0.041">
    </testcase>
    <testcase classname="Plagiarism Header Component should emit when resetting the split panes" name="Plagiarism Header Component should emit when resetting the split panes" time="0.042">
    </testcase>
    <testcase classname="Plagiarism Header Component should display team mode disabled help icon when teamMode is enabled" name="Plagiarism Header Component should display team mode disabled help icon when teamMode is enabled" time="0.079">
    </testcase>
    <testcase classname="Plagiarism Header Component should hide team mode disabled help icon when teamMode is disabled" name="Plagiarism Header Component should hide team mode disabled help icon when teamMode is disabled" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="DataExportComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:06" time="2.551" tests="8">
    <testcase classname="DataExportComponent should store the current user on init" name="DataExportComponent should store the current user on init" time="0.257">
    </testcase>
    <testcase classname="DataExportComponent should call data export service when data export is requested" name="DataExportComponent should call data export service when data export is requested" time="0.099">
    </testcase>
    <testcase classname="DataExportComponent should call alert service when requesting fails" name="DataExportComponent should call alert service when requesting fails" time="0.073">
    </testcase>
    <testcase classname="DataExportComponent should call data export service when data export is downloaded" name="DataExportComponent should call data export service when data export is downloaded" time="0.046">
    </testcase>
    <testcase classname="DataExportComponent should execute correct checks on init" name="DataExportComponent should execute correct checks on init" time="0.059">
    </testcase>
    <testcase classname="DataExportComponent should execute correct checks on init" name="DataExportComponent should execute correct checks on init" time="0.032">
    </testcase>
    <testcase classname="DataExportComponent should call data export service when data export for another user is requested" name="DataExportComponent should call data export service when data export for another user is requested" time="0.049">
    </testcase>
    <testcase classname="DataExportComponent should call alert service when requesting for another user fails" name="DataExportComponent should call alert service when requesting for another user fails" time="0.055">
    </testcase>
  </testsuite>
  <testsuite name="LearningPathStudentNavComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:06" time="3.226" tests="8">
    <testcase classname="LearningPathStudentNavComponent should load initial learning path navigation" name="LearningPathStudentNavComponent should load initial learning path navigation" time="0.262">
    </testcase>
    <testcase classname="LearningPathStudentNavComponent should show progress bar percentage" name="LearningPathStudentNavComponent should show progress bar percentage" time="0.067">
    </testcase>
    <testcase classname="LearningPathStudentNavComponent should set learningPathProgress correctly" name="LearningPathStudentNavComponent should set learningPathProgress correctly" time="0.062">
    </testcase>
    <testcase classname="LearningPathStudentNavComponent should set learning objects correctly" name="LearningPathStudentNavComponent should set learning objects correctly" time="0.083">
    </testcase>
    <testcase classname="LearningPathStudentNavComponent should navigate with next button" name="LearningPathStudentNavComponent should navigate with next button" time="0.07">
    </testcase>
    <testcase classname="LearningPathStudentNavComponent should navigate with previous button" name="LearningPathStudentNavComponent should navigate with previous button" time="0.108">
    </testcase>
    <testcase classname="LearningPathStudentNavComponent should set current to previous unit on complete button" name="LearningPathStudentNavComponent should set current to previous unit on complete button" time="0.131">
    </testcase>
    <testcase classname="LearningPathStudentNavComponent should show navigation overview on click" name="LearningPathStudentNavComponent should show navigation overview on click" time="0.129">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseEditCheckoutDirectoriesComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:10" time="2.369" tests="6">
    <testcase classname="ProgrammingExerciseEditCheckoutDirectoriesComponent should create" name="ProgrammingExerciseEditCheckoutDirectoriesComponent should create" time="0.157">
    </testcase>
    <testcase classname="ProgrammingExerciseEditCheckoutDirectoriesComponent reset should set editable and input fields correctly" name="ProgrammingExerciseEditCheckoutDirectoriesComponent reset should set editable and input fields correctly" time="0.038">
    </testcase>
    <testcase classname="ProgrammingExerciseEditCheckoutDirectoriesComponent should update fields correctly" name="ProgrammingExerciseEditCheckoutDirectoriesComponent should update fields correctly" time="0.067">
    </testcase>
    <testcase classname="ProgrammingExerciseEditCheckoutDirectoriesComponent should correctly check if values are unique" name="ProgrammingExerciseEditCheckoutDirectoriesComponent should correctly check if values are unique" time="0.044">
    </testcase>
    <testcase classname="ProgrammingExerciseEditCheckoutDirectoriesComponent should should reset values correctly when buildconfig is null" name="ProgrammingExerciseEditCheckoutDirectoriesComponent should should reset values correctly when buildconfig is null" time="0.081">
    </testcase>
    <testcase classname="ProgrammingExerciseEditCheckoutDirectoriesComponent should set values to their defaults if no buildConfig of submissionBuildPlan available" name="ProgrammingExerciseEditCheckoutDirectoriesComponent should set values to their defaults if no buildConfig of submissionBuildPlan available" time="0.066">
    </testcase>
  </testsuite>
  <testsuite name="EditVideoUnitComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:09" time="3.866" tests="3">
    <testcase classname="EditVideoUnitComponent should initialize" name="EditVideoUnitComponent should initialize" time="0.457">
    </testcase>
    <testcase classname="EditVideoUnitComponent should set form data correctly" name="EditVideoUnitComponent should set form data correctly" time="0.1">
    </testcase>
    <testcase classname="EditVideoUnitComponent should send PUT request upon form submission and navigate" name="EditVideoUnitComponent should send PUT request upon form submission and navigate" time="0.061">
    </testcase>
  </testsuite>
  <testsuite name="CourseLectures" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:07" time="5.729" tests="2">
    <testcase classname="CourseLectures should initialize" name="CourseLectures should initialize" time="0.811">
    </testcase>
    <testcase classname="CourseLectures should sort correctly" name="CourseLectures should sort correctly" time="0.203">
    </testcase>
  </testsuite>
  <testsuite name="LearningPathStudentPageComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:06" time="7.733" tests="7">
    <testcase classname="LearningPathStudentPageComponent should get learning path" name="LearningPathStudentPageComponent should get learning path" time="1.281">
    </testcase>
    <testcase classname="LearningPathStudentPageComponent should show navigation when learning path has been started" name="LearningPathStudentPageComponent should show navigation when learning path has been started" time="0.053">
    </testcase>
    <testcase classname="LearningPathStudentPageComponent should show error when learning path could not be loaded" name="LearningPathStudentPageComponent should show error when learning path could not be loaded" time="0.037">
    </testcase>
    <testcase classname="LearningPathStudentPageComponent should set isLoading correctly during learning path load" name="LearningPathStudentPageComponent should set isLoading correctly during learning path load" time="0.027">
    </testcase>
    <testcase classname="LearningPathStudentPageComponent should generate learning path on start when not found" name="LearningPathStudentPageComponent should generate learning path on start when not found" time="0.058">
    </testcase>
    <testcase classname="LearningPathStudentPageComponent should set learning path to started" name="LearningPathStudentPageComponent should set learning path to started" time="0.027">
    </testcase>
    <testcase classname="LearningPathStudentPageComponent should set isLoading correctly during learning path start" name="LearningPathStudentPageComponent should set isLoading correctly during learning path start" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="VirtualScrollComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:13" time="1.308" tests="7">
    <testcase classname="VirtualScrollComponent should initialize correctly" name="VirtualScrollComponent should initialize correctly" time="0.051">
    </testcase>
    <testcase classname="VirtualScrollComponent should set originalItems to empty array if undefined value is passed into the component" name="VirtualScrollComponent should set originalItems to empty array if undefined value is passed into the component" time="0.012">
    </testcase>
    <testcase classname="VirtualScrollComponent should initialize DOM tree with items" name="VirtualScrollComponent should initialize DOM tree with items" time="0.011">
    </testcase>
    <testcase classname="VirtualScrollComponent should set forceReloadChange flag to true when user navigates to specific post" name="VirtualScrollComponent should set forceReloadChange flag to true when user navigates to specific post" time="0.006">
    </testcase>
    <testcase classname="VirtualScrollComponent should update rendered DOM tree items correctly" name="VirtualScrollComponent should update rendered DOM tree items correctly" time="0.006">
    </testcase>
    <testcase classname="VirtualScrollComponent should not unintentionally scroll on clicking the text area of posting markdown editor component" name="VirtualScrollComponent should not unintentionally scroll on clicking the text area of posting markdown editor component" time="0.006">
    </testcase>
    <testcase classname="VirtualScrollComponent should perform virtual scroll on scroll event and update the DOM tree" name="VirtualScrollComponent should perform virtual scroll on scroll event and update the DOM tree" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="ModelingSubmission Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:14" time="1.03" tests="9">
    <testcase classname="ModelingSubmission Service should find an element" name="ModelingSubmission Service should find an element" time="0.019">
    </testcase>
    <testcase classname="ModelingSubmission Service should create a ModelingSubmission" name="ModelingSubmission Service should create a ModelingSubmission" time="0.005">
    </testcase>
    <testcase classname="ModelingSubmission Service should update a ModelingSubmission" name="ModelingSubmission Service should update a ModelingSubmission" time="0.003">
    </testcase>
    <testcase classname="ModelingSubmission Service should get submissions without correction round" name="ModelingSubmission Service should get submissions without correction round" time="0.003">
    </testcase>
    <testcase classname="ModelingSubmission Service should get submissions with correction round" name="ModelingSubmission Service should get submissions with correction round" time="0.004">
    </testcase>
    <testcase classname="ModelingSubmission Service should getSubmissionWithoutAssessment" name="ModelingSubmission Service should getSubmissionWithoutAssessment" time="0.005">
    </testcase>
    <testcase classname="ModelingSubmission Service should getLatestSubmissionForModelingEditor" name="ModelingSubmission Service should getLatestSubmissionForModelingEditor" time="0.003">
    </testcase>
    <testcase classname="ModelingSubmission Service should get submissions with results for participation" name="ModelingSubmission Service should get submissions with results for participation" time="0.004">
    </testcase>
    <testcase classname="ModelingSubmission Service should get submission without lock" name="ModelingSubmission Service should get submission without lock" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="ComplaintsFormComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:15" time="1.379" tests="9">
    <testcase classname="ComplaintsFormComponent should initialize with correct values for exam complaints" name="ComplaintsFormComponent should initialize with correct values for exam complaints" time="0.121">
    </testcase>
    <testcase classname="ComplaintsFormComponent should initialize with correct values for course complaints" name="ComplaintsFormComponent should initialize with correct values for course complaints" time="0.015">
    </testcase>
    <testcase classname="ComplaintsFormComponent should initialize with correct values for course complaints for team exercises" name="ComplaintsFormComponent should initialize with correct values for course complaints for team exercises" time="0.009">
    </testcase>
    <testcase classname="ComplaintsFormComponent should submit after complaint creation" name="ComplaintsFormComponent should submit after complaint creation" time="0.021">
    </testcase>
    <testcase classname="ComplaintsFormComponent should throw unknown error after complaint creation" name="ComplaintsFormComponent should throw unknown error after complaint creation" time="0.008">
    </testcase>
    <testcase classname="ComplaintsFormComponent should throw known error after complaint creation" name="ComplaintsFormComponent should throw known error after complaint creation" time="0.012">
    </testcase>
    <testcase classname="ComplaintsFormComponent should throw exceeded complaint text error after complaint creation" name="ComplaintsFormComponent should throw exceeded complaint text error after complaint creation" time="0.009">
    </testcase>
    <testcase classname="ComplaintsFormComponent text area should have the correct max length" name="ComplaintsFormComponent text area should have the correct max length" time="0.024">
    </testcase>
    <testcase classname="ComplaintsFormComponent submit complaint button should be disabled" name="ComplaintsFormComponent submit complaint button should be disabled" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="ExamStartInformationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:14" time="2.473" tests="13">
    <testcase classname="ExamStartInformationComponent should initialize with the correct start date" name="ExamStartInformationComponent should initialize with the correct start date" time="0.142">
    </testcase>
    <testcase classname="ExamStartInformationComponent should return undefined if the exam is not set" name="ExamStartInformationComponent should return undefined if the exam is not set" time="0.035">
    </testcase>
    <testcase classname="ExamStartInformationComponent should initialize total points of the exam correctly" name="ExamStartInformationComponent should initialize total points of the exam correctly" time="0.066">
    </testcase>
    <testcase classname="ExamStartInformationComponent should give total working time in minutes" name="ExamStartInformationComponent should give total working time in minutes" time="0.031">
    </testcase>
    <testcase classname="ExamStartInformationComponent should initialize module number of the exam correctly" name="ExamStartInformationComponent should initialize module number of the exam correctly" time="0.042">
    </testcase>
    <testcase classname="ExamStartInformationComponent should initialize course name of the exam correctly" name="ExamStartInformationComponent should initialize course name of the exam correctly" time="0.093">
    </testcase>
    <testcase classname="ExamStartInformationComponent should initialize examiner of the exam correctly" name="ExamStartInformationComponent should initialize examiner of the exam correctly" time="0.048">
    </testcase>
    <testcase classname="ExamStartInformationComponent should initialize number of exercises of the exam correctly" name="ExamStartInformationComponent should initialize number of exercises of the exam correctly" time="0.059">
    </testcase>
    <testcase classname="ExamStartInformationComponent should initialize examined student of the exam correctly" name="ExamStartInformationComponent should initialize examined student of the exam correctly" time="0.034">
    </testcase>
    <testcase classname="ExamStartInformationComponent should initialize start date of the exam correctly" name="ExamStartInformationComponent should initialize start date of the exam correctly" time="0.08">
    </testcase>
    <testcase classname="ExamStartInformationComponent should initialize start date of the test exam correctly" name="ExamStartInformationComponent should initialize start date of the test exam correctly" time="0.06">
    </testcase>
    <testcase classname="ExamStartInformationComponent should initialize end date of the test exam correctly" name="ExamStartInformationComponent should initialize end date of the test exam correctly" time="0.03">
    </testcase>
    <testcase classname="ExamStartInformationComponent should create all information boxes if all information of the exam are set" name="ExamStartInformationComponent should create all information boxes if all information of the exam are set" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="TextExercise Management Detail Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:14" time="5.655" tests="2">
    <testcase classname="TextExercise Management Detail Component onInit with course exercise should call load on init and be not in exam mode" name="TextExercise Management Detail Component onInit with course exercise should call load on init and be not in exam mode" time="0.977">
    </testcase>
    <testcase classname="TextExercise Management Detail Component onInit with exam exercise should call load on init and be in exam mode" name="TextExercise Management Detail Component onInit with exam exercise should call load on init and be in exam mode" time="0.072">
    </testcase>
  </testsuite>
  <testsuite name="CourseManagementCardComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:12" time="8.364" tests="7">
    <testcase classname="CourseManagementCardComponent should correctly categorize past, current, and future exercises and update statisticsPerExercise" name="CourseManagementCardComponent should correctly categorize past, current, and future exercises and update statisticsPerExercise" time="0.837">
    </testcase>
    <testcase classname="CourseManagementCardComponent should only display the latest five past exercises" name="CourseManagementCardComponent should only display the latest five past exercises" time="0.35">
    </testcase>
    <testcase classname="CourseManagementCardComponent should set courseColor as soon as course is set" name="CourseManagementCardComponent should set courseColor as soon as course is set" time="0.167">
    </testcase>
    <testcase classname="CourseManagementCardComponent should use default color if the course does not have a color" name="CourseManagementCardComponent should use default color if the course does not have a color" time="0.187">
    </testcase>
    <testcase classname="CourseManagementCardComponent should not display loading spinner if courseWithExercises and courseStatistics are defined" name="CourseManagementCardComponent should not display loading spinner if courseWithExercises and courseStatistics are defined" time="0.153">
    </testcase>
    <testcase classname="CourseManagementCardComponent should display loading spinner if courseWithExercises is undefined" name="CourseManagementCardComponent should display loading spinner if courseWithExercises is undefined" time="0.121">
    </testcase>
    <testcase classname="CourseManagementCardComponent should display loading spinner if courseStatistics is undefined" name="CourseManagementCardComponent should display loading spinner if courseStatistics is undefined" time="0.199">
    </testcase>
  </testsuite>
  <testsuite name="SCA category distribution chart" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:17" time="4.737" tests="6">
    <testcase classname="SCA category distribution chart should process the categories correctly" name="SCA category distribution chart should process the categories correctly" time="0.115">
    </testcase>
    <testcase classname="SCA category distribution chart should handle negative penalties" name="SCA category distribution chart should handle negative penalties" time="0.019">
    </testcase>
    <testcase classname="SCA category distribution chart should update the translation" name="SCA category distribution chart should update the translation" time="0.016">
    </testcase>
    <testcase classname="SCA category distribution chart test chart interaction should delegate the user correctly" name="SCA category distribution chart test chart interaction should delegate the user correctly" time="0.025">
    </testcase>
    <testcase classname="SCA category distribution chart test chart interaction should emit the correct test case id" name="SCA category distribution chart test chart interaction should emit the correct test case id" time="0.018">
    </testcase>
    <testcase classname="SCA category distribution chart test chart interaction should reset the table correctly" name="SCA category distribution chart test chart interaction should reset the table correctly" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="ExamChecklistComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:16" time="5.752" tests="4">
    <testcase classname="ExamChecklistComponent should count mandatory exercises correctly" name="ExamChecklistComponent should count mandatory exercises correctly" time="0.74">
    </testcase>
    <testcase classname="ExamChecklistComponent should set exam checklist correctly" name="ExamChecklistComponent should set exam checklist correctly" time="0.275">
    </testcase>
    <testcase classname="ExamChecklistComponent should set existsUnassessedQuizzes correctly" name="ExamChecklistComponent should set existsUnassessedQuizzes correctly" time="0.371">
    </testcase>
    <testcase classname="ExamChecklistComponent should set existsUnsubmittedExercises correctly" name="ExamChecklistComponent should set existsUnsubmittedExercises correctly" time="0.275">
    </testcase>
  </testsuite>
  <testsuite name="RatingComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:22" time="1.76" tests="12">
    <testcase classname="RatingComponent should get rating" name="RatingComponent should get rating" time="0.065">
    </testcase>
    <testcase classname="RatingComponent should return due to missing result" name="RatingComponent should return due to missing result" time="0.02">
    </testcase>
    <testcase classname="RatingComponent should return due to missing participation" name="RatingComponent should return due to missing participation" time="0.023">
    </testcase>
    <testcase classname="RatingComponent should create new local rating" name="RatingComponent should create new local rating" time="0.032">
    </testcase>
    <testcase classname="RatingComponent should set rating received from server" name="RatingComponent should set rating received from server" time="0.025">
    </testcase>
    <testcase classname="RatingComponent should call loadRating on ngOnInit" name="RatingComponent should call loadRating on ngOnInit" time="0.037">
    </testcase>
    <testcase classname="RatingComponent should not set rating if result participation is not defined" name="RatingComponent should not set rating if result participation is not defined" time="0.023">
    </testcase>
    <testcase classname="RatingComponent should call loadRating when result changes" name="RatingComponent should call loadRating when result changes" time="0.025">
    </testcase>
    <testcase classname="RatingComponent should not call loadRating if result ID remains the same" name="RatingComponent should not call loadRating if result ID remains the same" time="0.021">
    </testcase>
    <testcase classname="RatingComponent OnRate should return" name="RatingComponent OnRate should return" time="0.028">
    </testcase>
    <testcase classname="RatingComponent OnRate should create new rating" name="RatingComponent OnRate should create new rating" time="0.067">
    </testcase>
    <testcase classname="RatingComponent OnRate should update rating" name="RatingComponent OnRate should update rating" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="QuizExamSummaryComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:21" time="2.667" tests="2">
    <testcase classname="QuizExamSummaryComponent should initialize" name="QuizExamSummaryComponent should initialize" time="0.519">
    </testcase>
    <testcase classname="QuizExamSummaryComponent should initialize the solution dictionaries correctly" name="QuizExamSummaryComponent should initialize the solution dictionaries correctly" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="CourseNotificationWebsocketService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:23" time="0.977" tests="7">
    <testcase classname="CourseNotificationWebsocketService should be created" name="CourseNotificationWebsocketService should be created" time="0.014">
    </testcase>
    <testcase classname="CourseNotificationWebsocketService should subscribe to courses on initialization" name="CourseNotificationWebsocketService should subscribe to courses on initialization" time="0.004">
    </testcase>
    <testcase classname="CourseNotificationWebsocketService should not resubscribe to same course twice" name="CourseNotificationWebsocketService should not resubscribe to same course twice" time="0.003">
    </testcase>
    <testcase classname="CourseNotificationWebsocketService should handle incoming notifications and pass them to the notification service" name="CourseNotificationWebsocketService should handle incoming notifications and pass them to the notification service" time="0.019">
    </testcase>
    <testcase classname="CourseNotificationWebsocketService should emit received notifications via websocketNotification$ observable" name="CourseNotificationWebsocketService should emit received notifications via websocketNotification$ observable" time="0.004">
    </testcase>
    <testcase classname="CourseNotificationWebsocketService should do nothing when courses list is undefined" name="CourseNotificationWebsocketService should do nothing when courses list is undefined" time="0.004">
    </testcase>
    <testcase classname="CourseNotificationWebsocketService should handle courses without IDs properly" name="CourseNotificationWebsocketService should handle courses without IDs properly" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="SshUserSettingsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:21" time="3.343" tests="9">
    <testcase classname="SshUserSettingsComponent should initialize view for adding new keys and save new key" name="SshUserSettingsComponent should initialize view for adding new keys and save new key" time="0.126">
    </testcase>
    <testcase classname="SshUserSettingsComponent should initialize view for adding new keys and fail saving key" name="SshUserSettingsComponent should initialize view for adding new keys and fail saving key" time="0.009">
    </testcase>
    <testcase classname="SshUserSettingsComponent should initialize key details view with key loaded" name="SshUserSettingsComponent should initialize key details view with key loaded" time="0.007">
    </testcase>
    <testcase classname="SshUserSettingsComponent should detect Windows" name="SshUserSettingsComponent should detect Windows" time="0.006">
    </testcase>
    <testcase classname="SshUserSettingsComponent should detect MacOS" name="SshUserSettingsComponent should detect MacOS" time="0.006">
    </testcase>
    <testcase classname="SshUserSettingsComponent should detect Linux" name="SshUserSettingsComponent should detect Linux" time="0.006">
    </testcase>
    <testcase classname="SshUserSettingsComponent should detect Android" name="SshUserSettingsComponent should detect Android" time="0.009">
    </testcase>
    <testcase classname="SshUserSettingsComponent should detect iOS" name="SshUserSettingsComponent should detect iOS" time="0.01">
    </testcase>
    <testcase classname="SshUserSettingsComponent should return Unknown for unrecognized OS" name="SshUserSettingsComponent should return Unknown for unrecognized OS" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Plagiarism Cases Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:23" time="0.761" tests="11">
    <testcase classname="Plagiarism Cases Service should get plagiarism cases for course for instructor" name="Plagiarism Cases Service should get plagiarism cases for course for instructor" time="0.013">
    </testcase>
    <testcase classname="Plagiarism Cases Service should get plagiarism case for course for instructor" name="Plagiarism Cases Service should get plagiarism case for course for instructor" time="0.004">
    </testcase>
    <testcase classname="Plagiarism Cases Service should save plagiarism case verdict" name="Plagiarism Cases Service should save plagiarism case verdict" time="0.004">
    </testcase>
    <testcase classname="Plagiarism Cases Service should get plagiarism case for course and exercise for student" name="Plagiarism Cases Service should get plagiarism case for course and exercise for student" time="0.003">
    </testcase>
    <testcase classname="Plagiarism Cases Service should get plagiarism cases for course and multiple exercises for student" name="Plagiarism Cases Service should get plagiarism cases for course and multiple exercises for student" time="0.003">
    </testcase>
    <testcase classname="Plagiarism Cases Service should get plagiarism case for course for student" name="Plagiarism Cases Service should get plagiarism case for course for student" time="0.003">
    </testcase>
    <testcase classname="Plagiarism Cases Service should get plagiarism comparison for split view" name="Plagiarism Cases Service should get plagiarism comparison for split view" time="0.004">
    </testcase>
    <testcase classname="Plagiarism Cases Service should update plagiarism comparison status" name="Plagiarism Cases Service should update plagiarism comparison status" time="0.004">
    </testcase>
    <testcase classname="Plagiarism Cases Service should clean up plagiarism" name="Plagiarism Cases Service should clean up plagiarism" time="0.003">
    </testcase>
    <testcase classname="Plagiarism Cases Service should make GET request to retrieve number of plagiarism cases" name="Plagiarism Cases Service should make GET request to retrieve number of plagiarism cases" time="0.004">
    </testcase>
    <testcase classname="Plagiarism Cases Service should make GET request to retrieve number of plagiarism cases" name="Plagiarism Cases Service should make GET request to retrieve number of plagiarism cases" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Team Submission Sync Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:24" time="0.978" tests="3">
    <testcase classname="Team Submission Sync Component ngOnInit should work correctly" name="Team Submission Sync Component ngOnInit should work correctly" time="0.042">
    </testcase>
    <testcase classname="Team Submission Sync Component should handle submission patch payloads." name="Team Submission Sync Component should handle submission patch payloads." time="0.016">
    </testcase>
    <testcase classname="Team Submission Sync Component should properly send submission patches." name="Team Submission Sync Component should properly send submission patches." time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Attachment Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:25" time="0.902" tests="9">
    <testcase classname="Attachment Service Service methods should create an attachment in the database" name="Attachment Service Service methods should create an attachment in the database" time="0.03">
    </testcase>
    <testcase classname="Attachment Service Service methods should create an attachment in the database with file File {}" name="Attachment Service Service methods should create an attachment in the database with file File {}" time="0.009">
    </testcase>
    <testcase classname="Attachment Service Service methods should create an attachment in the database with file undefined" name="Attachment Service Service methods should create an attachment in the database with file undefined" time="0.004">
    </testcase>
    <testcase classname="Attachment Service Service methods should find an attachment in the database" name="Attachment Service Service methods should find an attachment in the database" time="0.009">
    </testcase>
    <testcase classname="Attachment Service Service methods should invoke query" name="Attachment Service Service methods should invoke query" time="0.004">
    </testcase>
    <testcase classname="Attachment Service Service methods should get all attachments by lectureId" name="Attachment Service Service methods should get all attachments by lectureId" time="0.005">
    </testcase>
    <testcase classname="Attachment Service Service methods should delete an attachment in the database" name="Attachment Service Service methods should delete an attachment in the database" time="0.004">
    </testcase>
    <testcase classname="Attachment Service Service methods should convert attachment date from server" name="Attachment Service Service methods should convert attachment date from server" time="0.005">
    </testcase>
    <testcase classname="Attachment Service getAttachmentFile should retrieve a file as Blob for a given course and attachment ID" name="Attachment Service getAttachmentFile should retrieve a file as Blob for a given course and attachment ID" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExercise Docker Image" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:24" time="2.005" tests="6">
    <testcase classname="ProgrammingExercise Docker Image should update build values" name="ProgrammingExercise Docker Image should update build values" time="0.09">
    </testcase>
    <testcase classname="ProgrammingExercise Docker Image should set profile values" name="ProgrammingExercise Docker Image should set profile values" time="0.026">
    </testcase>
    <testcase classname="ProgrammingExercise Docker Image should update network flag value" name="ProgrammingExercise Docker Image should update network flag value" time="0.012">
    </testcase>
    <testcase classname="ProgrammingExercise Docker Image should parse docker flags correctly" name="ProgrammingExercise Docker Image should parse docker flags correctly" time="0.036">
    </testcase>
    <testcase classname="ProgrammingExercise Docker Image should parse existing docker flags" name="ProgrammingExercise Docker Image should parse existing docker flags" time="0.015">
    </testcase>
    <testcase classname="ProgrammingExercise Docker Image should set supported languages" name="ProgrammingExercise Docker Image should set supported languages" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseInformationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:23" time="3.295" tests="6">
    <testcase classname="ProgrammingExerciseInformationComponent should initialize" name="ProgrammingExerciseInformationComponent should initialize" time="0.435">
    </testcase>
    <testcase classname="ProgrammingExerciseInformationComponent should should calculate Form Sections correctly" name="ProgrammingExerciseInformationComponent should should calculate Form Sections correctly" time="0.013">
    </testcase>
    <testcase classname="ProgrammingExerciseInformationComponent should update checkout directories" name="ProgrammingExerciseInformationComponent should update checkout directories" time="0.016">
    </testcase>
    <testcase classname="ProgrammingExerciseInformationComponent shortName generation effect should use name from import" name="ProgrammingExerciseInformationComponent shortName generation effect should use name from import" time="0.098">
    </testcase>
    <testcase classname="ProgrammingExerciseInformationComponent shortName generation effect should derive shortname from title" name="ProgrammingExerciseInformationComponent shortName generation effect should derive shortname from title" time="0.203">
    </testcase>
    <testcase classname="ProgrammingExerciseInformationComponent shortName generation effect should derive shortname from title when directly derived shortname is already taken" name="ProgrammingExerciseInformationComponent shortName generation effect should derive shortname from title when directly derived shortname is already taken" time="0.17">
    </testcase>
  </testsuite>
  <testsuite name="CommitsInfoComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:24" time="3.539" tests="5">
    <testcase classname="CommitsInfoComponent should call participation service to retrieve commits onInit if no commits are passed as input, group commits by push, and sort the grouped commits descending by timestamp" name="CommitsInfoComponent should call participation service to retrieve commits onInit if no commits are passed as input, group commits by push, and sort the grouped commits descending by timestamp" time="0.227">
    </testcase>
    <testcase classname="CommitsInfoComponent should do nothing onInit if commits are passed as input" name="CommitsInfoComponent should do nothing onInit if commits are passed as input" time="0.016">
    </testcase>
    <testcase classname="CommitsInfoComponent should correctly return commit url" name="CommitsInfoComponent should correctly return commit url" time="0.016">
    </testcase>
    <testcase classname="CommitsInfoComponent should set localVC to true if active profiles contains localVc" name="CommitsInfoComponent should set localVC to true if active profiles contains localVc" time="0.017">
    </testcase>
    <testcase classname="CommitsInfoComponent should set localVC to false if active profiles does not contain localVc" name="CommitsInfoComponent should set localVC to false if active profiles does not contain localVc" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Edit LTI Configuration Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:26" time="3.101" tests="3">
    <testcase classname="Edit LTI Configuration Component should initialize" name="Edit LTI Configuration Component should initialize" time="0.509">
    </testcase>
    <testcase classname="Edit LTI Configuration Component should save and navigate" name="Edit LTI Configuration Component should save and navigate" time="0.189">
    </testcase>
    <testcase classname="Edit LTI Configuration Component should handle save failure and display error" name="Edit LTI Configuration Component should handle save failure and display error" time="0.202">
    </testcase>
  </testsuite>
  <testsuite name="UnreferencedFeedbackComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:26" time="3.484" tests="9">
    <testcase classname="UnreferencedFeedbackComponent should validate feedback" name="UnreferencedFeedbackComponent should validate feedback" time="0.416">
    </testcase>
    <testcase classname="UnreferencedFeedbackComponent should add unreferenced feedback" name="UnreferencedFeedbackComponent should add unreferenced feedback" time="0.056">
    </testcase>
    <testcase classname="UnreferencedFeedbackComponent should update unreferenced feedback" name="UnreferencedFeedbackComponent should update unreferenced feedback" time="0.027">
    </testcase>
    <testcase classname="UnreferencedFeedbackComponent should add unreferenced feedback if it does not exist when updating" name="UnreferencedFeedbackComponent should add unreferenced feedback if it does not exist when updating" time="0.036">
    </testcase>
    <testcase classname="UnreferencedFeedbackComponent should delete unreferenced feedback" name="UnreferencedFeedbackComponent should delete unreferenced feedback" time="0.035">
    </testcase>
    <testcase classname="UnreferencedFeedbackComponent should add unreferenced feedback on dropping assessment instruction" name="UnreferencedFeedbackComponent should add unreferenced feedback on dropping assessment instruction" time="0.032">
    </testcase>
    <testcase classname="UnreferencedFeedbackComponent should convert an accepted feedback suggestion to a marked manual feedback" name="UnreferencedFeedbackComponent should convert an accepted feedback suggestion to a marked manual feedback" time="0.06">
    </testcase>
    <testcase classname="UnreferencedFeedbackComponent should only replace feedback on drop, not add another one" name="UnreferencedFeedbackComponent should only replace feedback on drop, not add another one" time="0.028">
    </testcase>
    <testcase classname="UnreferencedFeedbackComponent should remove discarded suggestions" name="UnreferencedFeedbackComponent should remove discarded suggestions" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="FinishedBuildsFilterModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:27" time="3.148" tests="5">
    <testcase classname="FinishedBuildsFilterModalComponent should create" name="FinishedBuildsFilterModalComponent should create" time="0.373">
    </testcase>
    <testcase classname="FinishedBuildsFilterModalComponent should return correct build agent addresses" name="FinishedBuildsFilterModalComponent should return correct build agent addresses" time="0.073">
    </testcase>
    <testcase classname="FinishedBuildsFilterModalComponent should return correct number of filters applied" name="FinishedBuildsFilterModalComponent should return correct number of filters applied" time="0.072">
    </testcase>
    <testcase classname="FinishedBuildsFilterModalComponent should save filter in local storage" name="FinishedBuildsFilterModalComponent should save filter in local storage" time="0.059">
    </testcase>
    <testcase classname="FinishedBuildsFilterModalComponent should validate correctly" name="FinishedBuildsFilterModalComponent should validate correctly" time="0.099">
    </testcase>
  </testsuite>
  <testsuite name="CreateTutorialGroupFreePeriodComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:29" time="3.255" tests="6">
    <testcase classname="CreateTutorialGroupFreePeriodComponent should initialize" name="CreateTutorialGroupFreePeriodComponent should initialize" time="0.196">
    </testcase>
    <testcase classname="CreateTutorialGroupFreePeriodComponent should send POST request upon form submission and close modal" name="CreateTutorialGroupFreePeriodComponent should send POST request upon form submission and close modal" time="0.048">
    </testcase>
    <testcase classname="CreateTutorialGroupFreePeriodComponent should throw an error when date and alternativeDate are undefined" name="CreateTutorialGroupFreePeriodComponent should throw an error when date and alternativeDate are undefined" time="0.047">
    </testcase>
    <testcase classname="CreateTutorialGroupFreePeriodComponent should correctly combine date and time for freePeriods+" name="CreateTutorialGroupFreePeriodComponent should correctly combine date and time for freePeriods+" time="0.029">
    </testcase>
    <testcase classname="CreateTutorialGroupFreePeriodComponent should correctly combine date and time for freeDay" name="CreateTutorialGroupFreePeriodComponent should correctly combine date and time for freeDay" time="0.055">
    </testcase>
    <testcase classname="CreateTutorialGroupFreePeriodComponent should correctly combine date and time for freePeriodWithinDay" name="CreateTutorialGroupFreePeriodComponent should correctly combine date and time for freePeriodWithinDay" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="EditTutorialGroupFreePeriodComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:28" time="4.798" tests="5">
    <testcase classname="EditTutorialGroupFreePeriodComponent should initialize" name="EditTutorialGroupFreePeriodComponent should initialize" time="0.225">
    </testcase>
    <testcase classname="EditTutorialGroupFreePeriodComponent should set form data correctly for editing free days" name="EditTutorialGroupFreePeriodComponent should set form data correctly for editing free days" time="0.035">
    </testcase>
    <testcase classname="EditTutorialGroupFreePeriodComponent should set form data correctly for editing free periods" name="EditTutorialGroupFreePeriodComponent should set form data correctly for editing free periods" time="0.129">
    </testcase>
    <testcase classname="EditTutorialGroupFreePeriodComponent should set form data correctly for editing free periods within a day" name="EditTutorialGroupFreePeriodComponent should set form data correctly for editing free periods within a day" time="0.144">
    </testcase>
    <testcase classname="EditTutorialGroupFreePeriodComponent should send PUT request upon form submission and navigate" name="EditTutorialGroupFreePeriodComponent should send PUT request upon form submission and navigate" time="0.067">
    </testcase>
  </testsuite>
  <testsuite name="CreatePrerequisite" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:29" time="4.167" tests="5">
    <testcase classname="CreatePrerequisite should initialize" name="CreatePrerequisite should initialize" time="0.621">
    </testcase>
    <testcase classname="CreatePrerequisite should set lecture units" name="CreatePrerequisite should set lecture units" time="0.097">
    </testcase>
    <testcase classname="CreatePrerequisite should set empty array of lecture units if lecture has none" name="CreatePrerequisite should set empty array of lecture units if lecture has none" time="0.051">
    </testcase>
    <testcase classname="CreatePrerequisite should send POST request upon form submission and navigate" name="CreatePrerequisite should send POST request upon form submission and navigate" time="0.061">
    </testcase>
    <testcase classname="CreatePrerequisite should not create competency if title is missing" name="CreatePrerequisite should not create competency if title is missing" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="Quiz Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:33" time="1.77" tests="2">
    <testcase classname="Quiz Service shuffles order of Answer options" name="Quiz Service shuffles order of Answer options" time="0.026">
    </testcase>
    <testcase classname="Quiz Service switches order of Quiz Questions" name="Quiz Service switches order of Quiz Questions" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="ComplaintResponseService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:34" time="1.251" tests="11">
    <testcase classname="ComplaintResponseService should correctly calculate complaint lock status" name="ComplaintResponseService should correctly calculate complaint lock status" time="0.016">
    </testcase>
    <testcase classname="ComplaintResponseService should correctly calculate complaint lock status" name="ComplaintResponseService should correctly calculate complaint lock status" time="0.009">
    </testcase>
    <testcase classname="ComplaintResponseService should correctly calculate complaint lock status" name="ComplaintResponseService should correctly calculate complaint lock status" time="0.005">
    </testcase>
    <testcase classname="ComplaintResponseService should correctly calculate complaint lock status" name="ComplaintResponseService should correctly calculate complaint lock status" time="0.005">
    </testcase>
    <testcase classname="ComplaintResponseService should correctly calculate complaint lock status" name="ComplaintResponseService should correctly calculate complaint lock status" time="0.005">
    </testcase>
    <testcase classname="ComplaintResponseService should correctly calculate complaint lock status" name="ComplaintResponseService should correctly calculate complaint lock status" time="0.032">
    </testcase>
    <testcase classname="ComplaintResponseService should correctly calculate complaint lock status" name="ComplaintResponseService should correctly calculate complaint lock status" time="0.012">
    </testcase>
    <testcase classname="ComplaintResponseService should call refreshLock" name="ComplaintResponseService should call refreshLock" time="0.008">
    </testcase>
    <testcase classname="ComplaintResponseService should call removeLock" name="ComplaintResponseService should call removeLock" time="0.021">
    </testcase>
    <testcase classname="ComplaintResponseService should call createLock" name="ComplaintResponseService should call createLock" time="0.019">
    </testcase>
    <testcase classname="ComplaintResponseService should call resolveComplaint" name="ComplaintResponseService should call resolveComplaint" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="AuditsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:33" time="2.205" tests="10">
    <testcase classname="AuditsComponent today function should set toDate to current date" name="AuditsComponent today function should set toDate to current date" time="0.082">
    </testcase>
    <testcase classname="AuditsComponent today function if current day is last day of month then should set toDate to first day of next month" name="AuditsComponent today function if current day is last day of month then should set toDate to first day of next month" time="0.024">
    </testcase>
    <testcase classname="AuditsComponent today function if current day is not last day of month then should set toDate to next day of current month" name="AuditsComponent today function if current day is not last day of month then should set toDate to next day of current month" time="0.012">
    </testcase>
    <testcase classname="AuditsComponent previousMonth function should set fromDate to previous month" name="AuditsComponent previousMonth function should set fromDate to previous month" time="0.015">
    </testcase>
    <testcase classname="AuditsComponent previousMonth function if current month is January then should set fromDate to previous year last month" name="AuditsComponent previousMonth function if current month is January then should set fromDate to previous year last month" time="0.016">
    </testcase>
    <testcase classname="AuditsComponent previousMonth function if current month is not January then should set fromDate to current year previous month" name="AuditsComponent previousMonth function if current month is not January then should set fromDate to current year previous month" time="0.014">
    </testcase>
    <testcase classname="AuditsComponent By default, on init should set all default values correctly" name="AuditsComponent By default, on init should set all default values correctly" time="0.027">
    </testcase>
    <testcase classname="AuditsComponent onInit should call load all on init" name="AuditsComponent onInit should call load all on init" time="0.011">
    </testcase>
    <testcase classname="AuditsComponent Create sort object should sort only by id asc" name="AuditsComponent Create sort object should sort only by id asc" time="0.008">
    </testcase>
    <testcase classname="AuditsComponent Create sort object should sort by timestamp asc then by id" name="AuditsComponent Create sort object should sort by timestamp asc then by id" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="SidebarAccordionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:30" time="5.814" tests="8">
    <testcase classname="SidebarAccordionComponent should toggle collapse state for a group" name="SidebarAccordionComponent should toggle collapse state for a group" time="0.39">
    </testcase>
    <testcase classname="SidebarAccordionComponent should toggle collapse state when group header is clicked" name="SidebarAccordionComponent should toggle collapse state when group header is clicked" time="0.187">
    </testcase>
    <testcase classname="SidebarAccordionComponent should call expandAll when searchValue changes to a non-empty string" name="SidebarAccordionComponent should call expandAll when searchValue changes to a non-empty string" time="0.074">
    </testcase>
    <testcase classname="SidebarAccordionComponent should call expandAll when filter is active" name="SidebarAccordionComponent should call expandAll when filter is active" time="0.077">
    </testcase>
    <testcase classname="SidebarAccordionComponent should correctly call setStoredCollapseState when searchValue is cleared" name="SidebarAccordionComponent should correctly call setStoredCollapseState when searchValue is cleared" time="0.161">
    </testcase>
    <testcase classname="SidebarAccordionComponent should correctly add the d-none class when searchValue is set" name="SidebarAccordionComponent should correctly add the d-none class when searchValue is set" time="0.149">
    </testcase>
    <testcase classname="SidebarAccordionComponent should expand the group containing the selected item" name="SidebarAccordionComponent should expand the group containing the selected item" time="0.073">
    </testcase>
    <testcase classname="SidebarAccordionComponent should calculate unread messages of each group correctly" name="SidebarAccordionComponent should calculate unread messages of each group correctly" time="0.077">
    </testcase>
  </testsuite>
  <testsuite name="Registered Students Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:35" time="3.853" tests="4">
    <testcase classname="Registered Students Component should initialize" name="Registered Students Component should initialize" time="0.52">
    </testcase>
    <testcase classname="Registered Students Component OnInit should load tutorial group" name="Registered Students Component OnInit should load tutorial group" time="0.359">
    </testcase>
    <testcase classname="Registered Students Component handleUsersSizeChange should change user size to given number" name="Registered Students Component handleUsersSizeChange should change user size to given number" time="0.25">
    </testcase>
    <testcase classname="Registered Students Component exportFileName should return course title concatenated with tutorial group title" name="Registered Students Component exportFileName should return course title concatenated with tutorial group title" time="0.272">
    </testcase>
  </testsuite>
  <testsuite name="KnowledgeAreaEditComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:34" time="4.905" tests="13">
    <testcase classname="KnowledgeAreaEditComponent should set form values to knowledgeArea" name="KnowledgeAreaEditComponent should set form values to knowledgeArea" time="0.572">
    </testcase>
    <testcase classname="KnowledgeAreaEditComponent should disable/enable when setting edit mode" name="KnowledgeAreaEditComponent should disable/enable when setting edit mode" time="0.139">
    </testcase>
    <testcase classname="KnowledgeAreaEditComponent should save" name="KnowledgeAreaEditComponent should save" time="0.115">
    </testcase>
    <testcase classname="KnowledgeAreaEditComponent should cancel and close" name="KnowledgeAreaEditComponent should cancel and close" time="0.114">
    </testcase>
    <testcase classname="KnowledgeAreaEditComponent should cancel and close" name="KnowledgeAreaEditComponent should cancel and close" time="0.117">
    </testcase>
    <testcase classname="KnowledgeAreaEditComponent should delete" name="KnowledgeAreaEditComponent should delete" time="0.114">
    </testcase>
    <testcase classname="KnowledgeAreaEditComponent should close" name="KnowledgeAreaEditComponent should close" time="0.164">
    </testcase>
    <testcase classname="KnowledgeAreaEditComponent should open new knowledge area" name="KnowledgeAreaEditComponent should open new knowledge area" time="0.107">
    </testcase>
    <testcase classname="KnowledgeAreaEditComponent should open new competency" name="KnowledgeAreaEditComponent should open new competency" time="0.085">
    </testcase>
    <testcase classname="KnowledgeAreaEditComponent should update description" name="KnowledgeAreaEditComponent should update description" time="0.121">
    </testcase>
    <testcase classname="KnowledgeAreaEditComponent should not allow circular dependencies" name="KnowledgeAreaEditComponent should not allow circular dependencies" time="0.144">
    </testcase>
    <testcase classname="KnowledgeAreaEditComponent should not allow circular dependencies" name="KnowledgeAreaEditComponent should not allow circular dependencies" time="0.161">
    </testcase>
    <testcase classname="KnowledgeAreaEditComponent should not allow circular dependencies" name="KnowledgeAreaEditComponent should not allow circular dependencies" time="0.121">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupRowButtonsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:37" time="3.309" tests="4">
    <testcase classname="TutorialGroupRowButtonsComponent should open the session management dialog when the respective button is clicked" name="TutorialGroupRowButtonsComponent should open the session management dialog when the respective button is clicked" time="0.134">
    </testcase>
    <testcase classname="TutorialGroupRowButtonsComponent should open the registrations dialog when the respective button is clicked" name="TutorialGroupRowButtonsComponent should open the registrations dialog when the respective button is clicked" time="0.024">
    </testcase>
    <testcase classname="TutorialGroupRowButtonsComponent should navigate to edit" name="TutorialGroupRowButtonsComponent should navigate to edit" time="0.017">
    </testcase>
    <testcase classname="TutorialGroupRowButtonsComponent should call delete and emit deleted event" name="TutorialGroupRowButtonsComponent should call delete and emit deleted event" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="AnswerPostCreateEditModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:35" time="4.718" tests="9">
    <testcase classname="AnswerPostCreateEditModalComponent should init modal with correct content and title for answer post with id" name="AnswerPostCreateEditModalComponent should init modal with correct content and title for answer post with id" time="0.621">
    </testcase>
    <testcase classname="AnswerPostCreateEditModalComponent should init modal with correct content and title for answer post without id" name="AnswerPostCreateEditModalComponent should init modal with correct content and title for answer post without id" time="0.067">
    </testcase>
    <testcase classname="AnswerPostCreateEditModalComponent should invoke create embedded view" name="AnswerPostCreateEditModalComponent should invoke create embedded view" time="0.056">
    </testcase>
    <testcase classname="AnswerPostCreateEditModalComponent should invoke clear embedded view" name="AnswerPostCreateEditModalComponent should invoke clear embedded view" time="0.069">
    </testcase>
    <testcase classname="AnswerPostCreateEditModalComponent should invoke updatePosting when confirming" name="AnswerPostCreateEditModalComponent should invoke updatePosting when confirming" time="0.053">
    </testcase>
    <testcase classname="AnswerPostCreateEditModalComponent should invoke createPosting when confirming without posting id" name="AnswerPostCreateEditModalComponent should invoke createPosting when confirming without posting id" time="0.12">
    </testcase>
    <testcase classname="AnswerPostCreateEditModalComponent should invoke metis service with created answer post" name="AnswerPostCreateEditModalComponent should invoke metis service with created answer post" time="0.059">
    </testcase>
    <testcase classname="AnswerPostCreateEditModalComponent should invoke metis service with updated answer post" name="AnswerPostCreateEditModalComponent should invoke metis service with updated answer post" time="0.078">
    </testcase>
    <testcase classname="AnswerPostCreateEditModalComponent should update content when posting content changed" name="AnswerPostCreateEditModalComponent should update content when posting content changed" time="0.087">
    </testcase>
  </testsuite>
  <testsuite name="GuidedTourUtils" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:40" time="0.871" tests="21">
    <testcase classname="GuidedTourUtils clickOnElement should clickOnElement" name="GuidedTourUtils clickOnElement should clickOnElement" time="0.013">
    </testcase>
    <testcase classname="GuidedTourUtils calculateLeftOffset should calculateLeftOffset" name="GuidedTourUtils calculateLeftOffset should calculateLeftOffset" time="0.001">
    </testcase>
    <testcase classname="GuidedTourUtils calculateTopOffset should calculateTopOffset" name="GuidedTourUtils calculateTopOffset should calculateTopOffset" time="0.007">
    </testcase>
    <testcase classname="GuidedTourUtils isElementInViewPortHorizontally should isElementInViewPortHorizontally" name="GuidedTourUtils isElementInViewPortHorizontally should isElementInViewPortHorizontally" time="0">
    </testcase>
    <testcase classname="GuidedTourUtils isElementInViewPortHorizontally should isElementInViewPortHorizontally for bottom left" name="GuidedTourUtils isElementInViewPortHorizontally should isElementInViewPortHorizontally for bottom left" time="0.006">
    </testcase>
    <testcase classname="GuidedTourUtils isElementInViewPortHorizontally should isElementInViewPortHorizontally for left" name="GuidedTourUtils isElementInViewPortHorizontally should isElementInViewPortHorizontally for left" time="0.003">
    </testcase>
    <testcase classname="GuidedTourUtils isElementInViewPortHorizontally should isElementInViewPortHorizontally for top right" name="GuidedTourUtils isElementInViewPortHorizontally should isElementInViewPortHorizontally for top right" time="0.001">
    </testcase>
    <testcase classname="GuidedTourUtils isElementInViewPortHorizontally should isElementInViewPortHorizontally for bottom right" name="GuidedTourUtils isElementInViewPortHorizontally should isElementInViewPortHorizontally for bottom right" time="0.005">
    </testcase>
    <testcase classname="GuidedTourUtils isElementInViewPortHorizontally should isElementInViewPortHorizontally for right" name="GuidedTourUtils isElementInViewPortHorizontally should isElementInViewPortHorizontally for right" time="0.001">
    </testcase>
    <testcase classname="GuidedTourUtils determineUrlMatching should match with empty pageUrl" name="GuidedTourUtils determineUrlMatching should match with empty pageUrl" time="0.001">
    </testcase>
    <testcase classname="GuidedTourUtils determineUrlMatching should match with empty pageUrl but with params" name="GuidedTourUtils determineUrlMatching should match with empty pageUrl but with params" time="0.001">
    </testcase>
    <testcase classname="GuidedTourUtils determineUrlMatching should match empty with pageUrl" name="GuidedTourUtils determineUrlMatching should match empty with pageUrl" time="0.001">
    </testcase>
    <testcase classname="GuidedTourUtils determineUrlMatching should match" name="GuidedTourUtils determineUrlMatching should match" time="0.001">
    </testcase>
    <testcase classname="GuidedTourUtils determineUrlMatching should match more" name="GuidedTourUtils determineUrlMatching should match more" time="0">
    </testcase>
    <testcase classname="GuidedTourUtils determineUrlMatching should match with params in tourStepUrl" name="GuidedTourUtils determineUrlMatching should match with params in tourStepUrl" time="0.001">
    </testcase>
    <testcase classname="GuidedTourUtils getUrlParams should get params" name="GuidedTourUtils getUrlParams should get params" time="0.001">
    </testcase>
    <testcase classname="GuidedTourUtils getUrlParams should get no params if not existing" name="GuidedTourUtils getUrlParams should get no params if not existing" time="0">
    </testcase>
    <testcase classname="GuidedTourUtils checkPageUrlEnding should checkPageUrlEnding with empty pageUrl" name="GuidedTourUtils checkPageUrlEnding should checkPageUrlEnding with empty pageUrl" time="0.001">
    </testcase>
    <testcase classname="GuidedTourUtils checkPageUrlEnding should checkPageUrlEnding with empty matchingUrl" name="GuidedTourUtils checkPageUrlEnding should checkPageUrlEnding with empty matchingUrl" time="0.006">
    </testcase>
    <testcase classname="GuidedTourUtils checkPageUrlEnding should checkPageUrlEnding with identical Urls with params" name="GuidedTourUtils checkPageUrlEnding should checkPageUrlEnding with identical Urls with params" time="0.018">
    </testcase>
    <testcase classname="GuidedTourUtils checkPageUrlEnding should checkPageUrlEnding with same urls without matching params" name="GuidedTourUtils checkPageUrlEnding should checkPageUrlEnding with same urls without matching params" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Modeling Assessment Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:40" time="3.003" tests="5">
    <testcase classname="Modeling Assessment Service Service methods methods returning a result should save an assessment" name="Modeling Assessment Service Service methods methods returning a result should save an assessment" time="0.028">
    </testcase>
    <testcase classname="Modeling Assessment Service Service methods methods returning a result should submit an assessment" name="Modeling Assessment Service Service methods methods returning a result should submit an assessment" time="0.015">
    </testcase>
    <testcase classname="Modeling Assessment Service Service methods methods returning a result should get an assessment" name="Modeling Assessment Service Service methods methods returning a result should get an assessment" time="0.015">
    </testcase>
    <testcase classname="Modeling Assessment Service Service methods methods returning a result should update assessment after complaint" name="Modeling Assessment Service Service methods methods returning a result should update assessment after complaint" time="0.008">
    </testcase>
    <testcase classname="Modeling Assessment Service Service methods methods not returning a result should cancel Assessment" name="Modeling Assessment Service Service methods methods not returning a result should cancel Assessment" time="0.065">
    </testcase>
  </testsuite>
  <testsuite name="User Settings Directive" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:41" time="2.677" tests="3">
    <testcase classname="User Settings Directive Service methods with Category Notification Settings test loadSettings should call userSettingsService to load Settings" name="User Settings Directive Service methods with Category Notification Settings test loadSettings should call userSettingsService to load Settings" time="0.024">
    </testcase>
    <testcase classname="User Settings Directive Service methods with Category Notification Settings test loadSettings should handle error correctly when loading fails" name="User Settings Directive Service methods with Category Notification Settings test loadSettings should handle error correctly when loading fails" time="0.019">
    </testcase>
    <testcase classname="User Settings Directive Service methods with Category Notification Settings test savingSettings should call userSettingsService to save Settings" name="User Settings Directive Service methods with Category Notification Settings test savingSettings should call userSettingsService to save Settings" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="AssessmentLocksComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:40" time="3.123" tests="5">
    <testcase classname="AssessmentLocksComponent should call getAllLockedSubmissions on init" name="AssessmentLocksComponent should call getAllLockedSubmissions on init" time="0.164">
    </testcase>
    <testcase classname="AssessmentLocksComponent should release lock for programming exercise" name="AssessmentLocksComponent should release lock for programming exercise" time="0.086">
    </testcase>
    <testcase classname="AssessmentLocksComponent should release lock for modeling exercise" name="AssessmentLocksComponent should release lock for modeling exercise" time="0.057">
    </testcase>
    <testcase classname="AssessmentLocksComponent should release lock for text exercise" name="AssessmentLocksComponent should release lock for text exercise" time="0.087">
    </testcase>
    <testcase classname="AssessmentLocksComponent should release lock for the file upload exercise" name="AssessmentLocksComponent should release lock for the file upload exercise" time="0.069">
    </testcase>
  </testsuite>
  <testsuite name="JhiResetRepoButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:40" time="3.241" tests="11">
    <testcase classname="JhiResetRepoButtonComponent should initialize correctly" name="JhiResetRepoButtonComponent should initialize correctly" time="0.152">
    </testcase>
    <testcase classname="JhiResetRepoButtonComponent should show button for correct configurations" name="JhiResetRepoButtonComponent should show button for correct configurations" time="0.059">
    </testcase>
    <testcase classname="JhiResetRepoButtonComponent should show button for correct configurations" name="JhiResetRepoButtonComponent should show button for correct configurations" time="0.056">
    </testcase>
    <testcase classname="JhiResetRepoButtonComponent should show button for correct configurations" name="JhiResetRepoButtonComponent should show button for correct configurations" time="0.06">
    </testcase>
    <testcase classname="JhiResetRepoButtonComponent should show button for correct configurations" name="JhiResetRepoButtonComponent should show button for correct configurations" time="0.037">
    </testcase>
    <testcase classname="JhiResetRepoButtonComponent should show button for correct configurations" name="JhiResetRepoButtonComponent should show button for correct configurations" time="0.033">
    </testcase>
    <testcase classname="JhiResetRepoButtonComponent should show button for correct configurations" name="JhiResetRepoButtonComponent should show button for correct configurations" time="0.046">
    </testcase>
    <testcase classname="JhiResetRepoButtonComponent should reset repository correctly" name="JhiResetRepoButtonComponent should reset repository correctly" time="0.059">
    </testcase>
    <testcase classname="JhiResetRepoButtonComponent should reset repository correctly" name="JhiResetRepoButtonComponent should reset repository correctly" time="0.037">
    </testcase>
    <testcase classname="JhiResetRepoButtonComponent should reset repository correctly" name="JhiResetRepoButtonComponent should reset repository correctly" time="0.06">
    </testcase>
    <testcase classname="JhiResetRepoButtonComponent should reset repository correctly" name="JhiResetRepoButtonComponent should reset repository correctly" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="CreateAttachmentUnitComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:43" time="2.809" tests="1">
    <testcase classname="CreateAttachmentUnitComponent should upload file, send POST for attachment and post for attachment unit" name="CreateAttachmentUnitComponent should upload file, send POST for attachment and post for attachment unit" time="0.343">
    </testcase>
  </testsuite>
  <testsuite name="PostingSummaryComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:43" time="3.708" tests="14">
    <testcase classname="PostingSummaryComponent should create" name="PostingSummaryComponent should create" time="0.529">
    </testcase>
    <testcase classname="PostingSummaryComponent Input handling should handle post input" name="PostingSummaryComponent Input handling should handle post input" time="0.13">
    </testcase>
    <testcase classname="PostingSummaryComponent Input handling should handle undefined post" name="PostingSummaryComponent Input handling should handle undefined post" time="0.081">
    </testcase>
    <testcase classname="PostingSummaryComponent PostingType detection should detect answer post" name="PostingSummaryComponent PostingType detection should detect answer post" time="0.06">
    </testcase>
    <testcase classname="PostingSummaryComponent PostingType detection should detect non-answer post" name="PostingSummaryComponent PostingType detection should detect non-answer post" time="0.079">
    </testcase>
    <testcase classname="PostingSummaryComponent Date handling should detect post from today" name="PostingSummaryComponent Date handling should detect post from today" time="0.059">
    </testcase>
    <testcase classname="PostingSummaryComponent Date handling should detect post not from today" name="PostingSummaryComponent Date handling should detect post not from today" time="0.102">
    </testcase>
    <testcase classname="PostingSummaryComponent Event emissions should emit status change" name="PostingSummaryComponent Event emissions should emit status change" time="0.062">
    </testcase>
    <testcase classname="PostingSummaryComponent Event emissions should emit navigation event with post" name="PostingSummaryComponent Event emissions should emit navigation event with post" time="0.055">
    </testcase>
    <testcase classname="PostingSummaryComponent Event emissions should not emit navigation event when post is undefined" name="PostingSummaryComponent Event emissions should not emit navigation event when post is undefined" time="0.12">
    </testcase>
    <testcase classname="PostingSummaryComponent Template rendering should render author name" name="PostingSummaryComponent Template rendering should render author name" time="0.07">
    </testcase>
    <testcase classname="PostingSummaryComponent Template rendering should render conversation title" name="PostingSummaryComponent Template rendering should render conversation title" time="0.097">
    </testcase>
    <testcase classname="PostingSummaryComponent Template rendering should show saved post options when enabled" name="PostingSummaryComponent Template rendering should show saved post options when enabled" time="0.094">
    </testcase>
    <testcase classname="PostingSummaryComponent Template rendering should not show saved post options when disabled" name="PostingSummaryComponent Template rendering should not show saved post options when disabled" time="0.084">
    </testcase>
  </testsuite>
  <testsuite name="CourseExerciseRowComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:44" time="4.411" tests="1">
    <testcase classname="CourseExerciseRowComponent should display the score" name="CourseExerciseRowComponent should display the score" time="0.82">
    </testcase>
  </testsuite>
  <testsuite name="Register Component Tests" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:47" time="1.734" tests="6">
    <testcase classname="Register Component Tests RegisterComponent should ensure the two passwords entered match" name="Register Component Tests RegisterComponent should ensure the two passwords entered match" time="0.203">
    </testcase>
    <testcase classname="Register Component Tests RegisterComponent should update success to true after creating an account" name="Register Component Tests RegisterComponent should update success to true after creating an account" time="0.01">
    </testcase>
    <testcase classname="Register Component Tests RegisterComponent should notify of user existence upon 400/login already in use" name="Register Component Tests RegisterComponent should notify of user existence upon 400/login already in use" time="0.008">
    </testcase>
    <testcase classname="Register Component Tests RegisterComponent should notify of email existence upon 400/email address already in use" name="Register Component Tests RegisterComponent should notify of email existence upon 400/email address already in use" time="0.014">
    </testcase>
    <testcase classname="Register Component Tests RegisterComponent should notify of generic error" name="Register Component Tests RegisterComponent should notify of generic error" time="0.011">
    </testcase>
    <testcase classname="Register Component Tests RegisterComponent should focus login input if login is defined" name="Register Component Tests RegisterComponent should focus login input if login is defined" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="CreateCompetency" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:44" time="4.628" tests="5">
    <testcase classname="CreateCompetency should initialize" name="CreateCompetency should initialize" time="0.514">
    </testcase>
    <testcase classname="CreateCompetency should set lecture units" name="CreateCompetency should set lecture units" time="0.034">
    </testcase>
    <testcase classname="CreateCompetency should set empty array of lecture units if lecture has none" name="CreateCompetency should set empty array of lecture units if lecture has none" time="0.039">
    </testcase>
    <testcase classname="CreateCompetency should send POST request upon form submission and navigate" name="CreateCompetency should send POST request upon form submission and navigate" time="0.068">
    </testcase>
    <testcase classname="CreateCompetency should not create competency if title is missing" name="CreateCompetency should not create competency if title is missing" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="ChannelsCreateDialogComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:46" time="2.541" tests="9">
    <testcase classname="ChannelsCreateDialogComponent should create" name="ChannelsCreateDialogComponent should create" time="0.196">
    </testcase>
    <testcase classname="ChannelsCreateDialogComponent should initialize the dialog correctly" name="ChannelsCreateDialogComponent should initialize the dialog correctly" time="0.06">
    </testcase>
    <testcase classname="ChannelsCreateDialogComponent clicking close button in modal header should dismiss the modal" name="ChannelsCreateDialogComponent clicking close button in modal header should dismiss the modal" time="0.054">
    </testcase>
    <testcase classname="ChannelsCreateDialogComponent should change channel type when channel type is changed in channel form" name="ChannelsCreateDialogComponent should change channel type when channel type is changed in channel form" time="0.077">
    </testcase>
    <testcase classname="ChannelsCreateDialogComponent should change channel announcement type when channel announcement type is changed in channel form" name="ChannelsCreateDialogComponent should change channel announcement type when channel announcement type is changed in channel form" time="0.069">
    </testcase>
    <testcase classname="ChannelsCreateDialogComponent should change channel scope type when channel scope type is changed in channel form" name="ChannelsCreateDialogComponent should change channel scope type when channel scope type is changed in channel form" time="0.088">
    </testcase>
    <testcase classname="ChannelsCreateDialogComponent should close modal with the channel to create when form is submitted" name="ChannelsCreateDialogComponent should close modal with the channel to create when form is submitted" time="0.075">
    </testcase>
    <testcase classname="ChannelsCreateDialogComponent should call createChannel with correct data" name="ChannelsCreateDialogComponent should call createChannel with correct data" time="0.108">
    </testcase>
    <testcase classname="ChannelsCreateDialogComponent should close modal when createChannel is called" name="ChannelsCreateDialogComponent should close modal when createChannel is called" time="0.088">
    </testcase>
  </testsuite>
  <testsuite name="Assessment Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:48" time="0.713" tests="18">
    <testcase classname="Assessment Service isAllowedToModifyFeedback should show during assessment" name="Assessment Service isAllowedToModifyFeedback should show during assessment" time="0.004">
    </testcase>
    <testcase classname="Assessment Service isAllowedToModifyFeedback should show during assessment" name="Assessment Service isAllowedToModifyFeedback should show during assessment" time="0">
    </testcase>
    <testcase classname="Assessment Service isAllowedToModifyFeedback should hide after assessment without complaint" name="Assessment Service isAllowedToModifyFeedback should hide after assessment without complaint" time="0">
    </testcase>
    <testcase classname="Assessment Service isAllowedToModifyFeedback should hide after assessment without complaint" name="Assessment Service isAllowedToModifyFeedback should hide after assessment without complaint" time="0.001">
    </testcase>
    <testcase classname="Assessment Service isAllowedToModifyFeedback should show correctly after assessment with complaint" name="Assessment Service isAllowedToModifyFeedback should show correctly after assessment with complaint" time="0">
    </testcase>
    <testcase classname="Assessment Service isAllowedToModifyFeedback should show correctly after assessment with complaint" name="Assessment Service isAllowedToModifyFeedback should show correctly after assessment with complaint" time="0.003">
    </testcase>
    <testcase classname="Assessment Service isAllowedToModifyFeedback should hide for feedback requests" name="Assessment Service isAllowedToModifyFeedback should hide for feedback requests" time="0.001">
    </testcase>
    <testcase classname="Assessment Service isAllowedToModifyFeedback should hide for feedback requests" name="Assessment Service isAllowedToModifyFeedback should hide for feedback requests" time="0.001">
    </testcase>
    <testcase classname="Assessment Service isAllowedToModifyFeedback should hide if no complaint is set" name="Assessment Service isAllowedToModifyFeedback should hide if no complaint is set" time="0.004">
    </testcase>
    <testcase classname="Assessment Service isAllowedToModifyFeedback should hide if no complaint is set" name="Assessment Service isAllowedToModifyFeedback should hide if no complaint is set" time="0.001">
    </testcase>
    <testcase classname="Assessment Service isAllowedToModifyFeedback should show if no complaint is set and the assessment is still running" name="Assessment Service isAllowedToModifyFeedback should show if no complaint is set and the assessment is still running" time="0.001">
    </testcase>
    <testcase classname="Assessment Service isAllowedToModifyFeedback should show if no complaint is set and the assessment is still running" name="Assessment Service isAllowedToModifyFeedback should show if no complaint is set and the assessment is still running" time="0.001">
    </testcase>
    <testcase classname="Assessment Service isAllowedToRespondToComplaintAction should allow if is assessor in teammode" name="Assessment Service isAllowedToRespondToComplaintAction should allow if is assessor in teammode" time="0.001">
    </testcase>
    <testcase classname="Assessment Service isAllowedToRespondToComplaintAction should not allow if is not assessor in teammode" name="Assessment Service isAllowedToRespondToComplaintAction should not allow if is not assessor in teammode" time="0.001">
    </testcase>
    <testcase classname="Assessment Service isAllowedToRespondToComplaintAction should allow for assessor if on a test run" name="Assessment Service isAllowedToRespondToComplaintAction should allow for assessor if on a test run" time="0.001">
    </testcase>
    <testcase classname="Assessment Service isAllowedToRespondToComplaintAction should allow if assessor is not defined on individual exercises" name="Assessment Service isAllowedToRespondToComplaintAction should allow if assessor is not defined on individual exercises" time="0.004">
    </testcase>
    <testcase classname="Assessment Service isAllowedToRespondToComplaintAction should allow correctly for complaint" name="Assessment Service isAllowedToRespondToComplaintAction should allow correctly for complaint" time="0.001">
    </testcase>
    <testcase classname="Assessment Service isAllowedToRespondToComplaintAction should allow correctly for feedback request" name="Assessment Service isAllowedToRespondToComplaintAction should allow correctly for feedback request" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AdminStandardizedCompetencyService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:49" time="1.147" tests="8">
    <testcase classname="AdminStandardizedCompetencyService should create competency" name="AdminStandardizedCompetencyService should create competency" time="0.023">
    </testcase>
    <testcase classname="AdminStandardizedCompetencyService should update competency" name="AdminStandardizedCompetencyService should update competency" time="0.007">
    </testcase>
    <testcase classname="AdminStandardizedCompetencyService should delete competency" name="AdminStandardizedCompetencyService should delete competency" time="0.007">
    </testcase>
    <testcase classname="AdminStandardizedCompetencyService should create knowledge area" name="AdminStandardizedCompetencyService should create knowledge area" time="0.006">
    </testcase>
    <testcase classname="AdminStandardizedCompetencyService should update knowledge area" name="AdminStandardizedCompetencyService should update knowledge area" time="0.006">
    </testcase>
    <testcase classname="AdminStandardizedCompetencyService should delete knowledge area" name="AdminStandardizedCompetencyService should delete knowledge area" time="0.008">
    </testcase>
    <testcase classname="AdminStandardizedCompetencyService should import competencies" name="AdminStandardizedCompetencyService should import competencies" time="0.007">
    </testcase>
    <testcase classname="AdminStandardizedCompetencyService should export competencies" name="AdminStandardizedCompetencyService should export competencies" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Team Config Form Group Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:48" time="2.401" tests="12">
    <testcase classname="Team Config Form Group Component should set config correctly onNgInit with given input" name="Team Config Form Group Component should set config correctly onNgInit with given input" time="0.186">
    </testcase>
    <testcase classname="Team Config Form Group Component should set config correctly onNgInit without given input" name="Team Config Form Group Component should set config correctly onNgInit without given input" time="0.043">
    </testcase>
    <testcase classname="Team Config Form Group Component should emit valid changes correctly" name="Team Config Form Group Component should emit valid changes correctly" time="0.026">
    </testcase>
    <testcase classname="Team Config Form Group Component should set config to undefined when exercise mode changed to INDIVIDUAL" name="Team Config Form Group Component should set config to undefined when exercise mode changed to INDIVIDUAL" time="0.025">
    </testcase>
    <testcase classname="Team Config Form Group Component should apply config when exercise mode changed to TEAM" name="Team Config Form Group Component should apply config when exercise mode changed to TEAM" time="0.035">
    </testcase>
    <testcase classname="Team Config Form Group Component should not change maxTeamSize if the new value for minTeamSize is lower" name="Team Config Form Group Component should not change maxTeamSize if the new value for minTeamSize is lower" time="0.038">
    </testcase>
    <testcase classname="Team Config Form Group Component should change maxTeamSize if the new value for minTeamSize is greater" name="Team Config Form Group Component should change maxTeamSize if the new value for minTeamSize is greater" time="0.034">
    </testcase>
    <testcase classname="Team Config Form Group Component should not change minTeamSize if the new value for maxTeamSize is greater" name="Team Config Form Group Component should not change minTeamSize if the new value for maxTeamSize is greater" time="0.027">
    </testcase>
    <testcase classname="Team Config Form Group Component should change maxTeamSize if the new value for maxTeamSize is lower" name="Team Config Form Group Component should change maxTeamSize if the new value for maxTeamSize is lower" time="0.025">
    </testcase>
    <testcase classname="Team Config Form Group Component exercise mode should be editable for existing non-exam exercise" name="Team Config Form Group Component exercise mode should be editable for existing non-exam exercise" time="0.03">
    </testcase>
    <testcase classname="Team Config Form Group Component exercise mode should be editable for existing exam exercise" name="Team Config Form Group Component exercise mode should be editable for existing exam exercise" time="0.019">
    </testcase>
    <testcase classname="Team Config Form Group Component exercise mode should be non-editable for non-exam and imported exercise" name="Team Config Form Group Component exercise mode should be non-editable for non-exam and imported exercise" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="StandardizedCompetencyFilterPageComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:50" time="2.668" tests="4">
    <testcase classname="StandardizedCompetencyFilterPageComponent should initialize" name="StandardizedCompetencyFilterPageComponent should initialize" time="0.02">
    </testcase>
    <testcase classname="StandardizedCompetencyFilterPageComponent should filter by knowledge area" name="StandardizedCompetencyFilterPageComponent should filter by knowledge area" time="0.009">
    </testcase>
    <testcase classname="StandardizedCompetencyFilterPageComponent should filter by title" name="StandardizedCompetencyFilterPageComponent should filter by title" time="0.014">
    </testcase>
    <testcase classname="StandardizedCompetencyFilterPageComponent should initialize data structures" name="StandardizedCompetencyFilterPageComponent should initialize data structures" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupSessionRowButtonsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:53" time="2.272" tests="4">
    <testcase classname="TutorialGroupSessionRowButtonsComponent should initialize" name="TutorialGroupSessionRowButtonsComponent should initialize" time="0.084">
    </testcase>
    <testcase classname="TutorialGroupSessionRowButtonsComponent should open the edit dialog when the respective button is clicked" name="TutorialGroupSessionRowButtonsComponent should open the edit dialog when the respective button is clicked" time="0.018">
    </testcase>
    <testcase classname="TutorialGroupSessionRowButtonsComponent should open the cancellation / activation dialog when the respective button is clicked" name="TutorialGroupSessionRowButtonsComponent should open the cancellation / activation dialog when the respective button is clicked" time="0.02">
    </testcase>
    <testcase classname="TutorialGroupSessionRowButtonsComponent should call delete and emit deleted event" name="TutorialGroupSessionRowButtonsComponent should call delete and emit deleted event" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="QuizExercise Drag And Drop Question Statistic Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:51" time="4.282" tests="4">
    <testcase classname="QuizExercise Drag And Drop Question Statistic Component onInit should call functions on Init" name="QuizExercise Drag And Drop Question Statistic Component onInit should call functions on Init" time="0.178">
    </testcase>
    <testcase classname="QuizExercise Drag And Drop Question Statistic Component onInit should not load Quiz if not authorised" name="QuizExercise Drag And Drop Question Statistic Component onInit should not load Quiz if not authorised" time="0.014">
    </testcase>
    <testcase classname="QuizExercise Drag And Drop Question Statistic Component loadLayout should call functions from loadLayout" name="QuizExercise Drag And Drop Question Statistic Component loadLayout should call functions from loadLayout" time="0.01">
    </testcase>
    <testcase classname="QuizExercise Drag And Drop Question Statistic Component loadData should call functions from loadData" name="QuizExercise Drag And Drop Question Statistic Component loadData should call functions from loadData" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="EditTutorialGroupComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:48" time="6.969" tests="3">
    <testcase classname="EditTutorialGroupComponent should initialize" name="EditTutorialGroupComponent should initialize" time="1.611">
    </testcase>
    <testcase classname="EditTutorialGroupComponent should set form data correctly" name="EditTutorialGroupComponent should set form data correctly" time="0.465">
    </testcase>
    <testcase classname="EditTutorialGroupComponent should send PUT request upon form submission and navigate" name="EditTutorialGroupComponent should send PUT request upon form submission and navigate" time="0.372">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupsManagementComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:49" time="6.775" tests="4">
    <testcase classname="TutorialGroupsManagementComponent should initialize" name="TutorialGroupsManagementComponent should initialize" time="0.35">
    </testcase>
    <testcase classname="TutorialGroupsManagementComponent should get all tutorial groups for course" name="TutorialGroupsManagementComponent should get all tutorial groups for course" time="0.08">
    </testcase>
    <testcase classname="TutorialGroupsManagementComponent should get all tutorial groups for course if import is done" name="TutorialGroupsManagementComponent should get all tutorial groups for course if import is done" time="0.2">
    </testcase>
    <testcase classname="TutorialGroupsManagementComponent should complete export when export button is clicked" name="TutorialGroupsManagementComponent should complete export when export button is clicked" time="0.183">
    </testcase>
  </testsuite>
  <testsuite name="LearningPathsStateComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:55" time="2.48" tests="7">
    <testcase classname="LearningPathsStateComponent should load learning path health status" name="LearningPathsStateComponent should load learning path health status" time="0.105">
    </testcase>
    <testcase classname="LearningPathsStateComponent should set isLoading correctly" name="LearningPathsStateComponent should set isLoading correctly" time="0.011">
    </testcase>
    <testcase classname="LearningPathsStateComponent should show error when loading fails" name="LearningPathsStateComponent should show error when loading fails" time="0.024">
    </testcase>
    <testcase classname="LearningPathsStateComponent should navigate to competencies page on NO_COMPETENCIES status" name="LearningPathsStateComponent should navigate to competencies page on NO_COMPETENCIES status" time="0.017">
    </testcase>
    <testcase classname="LearningPathsStateComponent should navigate to competencies page on NO_RELATIONS status" name="LearningPathsStateComponent should navigate to competencies page on NO_RELATIONS status" time="0.022">
    </testcase>
    <testcase classname="LearningPathsStateComponent should generate missing learning paths" name="LearningPathsStateComponent should generate missing learning paths" time="0.018">
    </testcase>
    <testcase classname="LearningPathsStateComponent should show error when generating missing learning paths fails" name="LearningPathsStateComponent should show error when generating missing learning paths fails" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="ConversationAddUsersDialogComponent with groupChat" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:55" time="2.599" tests="4">
    <testcase classname="ConversationAddUsersDialogComponent with groupChat should create" name="ConversationAddUsersDialogComponent with groupChat should create" time="0.303">
    </testcase>
    <testcase classname="ConversationAddUsersDialogComponent with groupChat should call the correct service depending on conversation type when form is submitted" name="ConversationAddUsersDialogComponent with groupChat should call the correct service depending on conversation type when form is submitted" time="0.09">
    </testcase>
    <testcase classname="ConversationAddUsersDialogComponent with channel should create" name="ConversationAddUsersDialogComponent with channel should create" time="0.109">
    </testcase>
    <testcase classname="ConversationAddUsersDialogComponent with channel should call the correct service depending on conversation type when form is submitted" name="ConversationAddUsersDialogComponent with channel should call the correct service depending on conversation type when form is submitted" time="0.094">
    </testcase>
  </testsuite>
  <testsuite name="TeamsImportFromFileFormComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:57" time="1.688" tests="8">
    <testcase classname="TeamsImportFromFileFormComponent importing file should convert and call teamsChanged with converted teams" name="TeamsImportFromFileFormComponent importing file should convert and call teamsChanged with converted teams" time="0.051">
    </testcase>
    <testcase classname="TeamsImportFromFileFormComponent generateFileReader should return file reader when called" name="TeamsImportFromFileFormComponent generateFileReader should return file reader when called" time="0.009">
    </testcase>
    <testcase classname="TeamsImportFromFileFormComponent onFileLoadImport should parse json file and send converted teams" name="TeamsImportFromFileFormComponent onFileLoadImport should parse json file and send converted teams" time="0.014">
    </testcase>
    <testcase classname="TeamsImportFromFileFormComponent onFileLoadImport should parse csv file and send converted teams" name="TeamsImportFromFileFormComponent onFileLoadImport should parse csv file and send converted teams" time="0.011">
    </testcase>
    <testcase classname="TeamsImportFromFileFormComponent setImportFile should set import file correctly" name="TeamsImportFromFileFormComponent setImportFile should set import file correctly" time="0.024">
    </testcase>
    <testcase classname="TeamsImportFromFileFormComponent setImportFile should set import file correctly for empty file" name="TeamsImportFromFileFormComponent setImportFile should set import file correctly for empty file" time="0.007">
    </testcase>
    <testcase classname="TeamsImportFromFileFormComponent convertTeams should convert file teams correctly" name="TeamsImportFromFileFormComponent convertTeams should convert file teams correctly" time="0.007">
    </testcase>
    <testcase classname="TeamsImportFromFileFormComponent Invalid team name throws exception should throw error" name="TeamsImportFromFileFormComponent Invalid team name throws exception should throw error" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="ExamScoresAverageScoresGraphComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:56" time="3.831" tests="5">
    <testcase classname="ExamScoresAverageScoresGraphComponent should set ngx data objects and bar colors correctly" name="ExamScoresAverageScoresGraphComponent should set ngx data objects and bar colors correctly" time="0.251">
    </testcase>
    <testcase classname="ExamScoresAverageScoresGraphComponent test exercise navigation should navigate if event is valid" name="ExamScoresAverageScoresGraphComponent test exercise navigation should navigate if event is valid" time="0.101">
    </testcase>
    <testcase classname="ExamScoresAverageScoresGraphComponent test exercise navigation should not navigate if exercise id is missing" name="ExamScoresAverageScoresGraphComponent test exercise navigation should not navigate if exercise id is missing" time="0.122">
    </testcase>
    <testcase classname="ExamScoresAverageScoresGraphComponent test exercise navigation should not navigate if exercise type is missing" name="ExamScoresAverageScoresGraphComponent test exercise navigation should not navigate if exercise type is missing" time="0.061">
    </testcase>
    <testcase classname="ExamScoresAverageScoresGraphComponent should look up absolute value" name="ExamScoresAverageScoresGraphComponent should look up absolute value" time="0.06">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupSessionsManagement" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:58" time="2.686" tests="2">
    <testcase classname="TutorialGroupSessionsManagement should initialize" name="TutorialGroupSessionsManagement should initialize" time="0.335">
    </testcase>
    <testcase classname="TutorialGroupSessionsManagement should open create session dialog" name="TutorialGroupSessionsManagement should open create session dialog" time="0.133">
    </testcase>
  </testsuite>
  <testsuite name="LearningPathNavigationService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:00" time="1.058" tests="7">
    <testcase classname="LearningPathNavigationService should load initial learning path navigation" name="LearningPathNavigationService should load initial learning path navigation" time="0.019">
    </testcase>
    <testcase classname="LearningPathNavigationService should load relative learning path navigation" name="LearningPathNavigationService should load relative learning path navigation" time="0.008">
    </testcase>
    <testcase classname="LearningPathNavigationService should complete learning path" name="LearningPathNavigationService should complete learning path" time="0.007">
    </testcase>
    <testcase classname="LearningPathNavigationService should call alert service on learning path loading fail" name="LearningPathNavigationService should call alert service on learning path loading fail" time="0.016">
    </testcase>
    <testcase classname="LearningPathNavigationService should call alert service on relative learning path loading fail" name="LearningPathNavigationService should call alert service on relative learning path loading fail" time="0.004">
    </testcase>
    <testcase classname="LearningPathNavigationService should set current learning object completion to true" name="LearningPathNavigationService should set current learning object completion to true" time="0.004">
    </testcase>
    <testcase classname="LearningPathNavigationService should set current learning object completion to false" name="LearningPathNavigationService should set current learning object completion to false" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="LtiConfigurationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:58" time="4.409" tests="7">
    <testcase classname="LtiConfigurationComponent should create" name="LtiConfigurationComponent should create" time="0.358">
    </testcase>
    <testcase classname="LtiConfigurationComponent should initialize and load LTI platforms" name="LtiConfigurationComponent should initialize and load LTI platforms" time="0.169">
    </testcase>
    <testcase classname="LtiConfigurationComponent should generate URLs correctly" name="LtiConfigurationComponent should generate URLs correctly" time="0.182">
    </testcase>
    <testcase classname="LtiConfigurationComponent should sort platforms" name="LtiConfigurationComponent should sort platforms" time="0.262">
    </testcase>
    <testcase classname="LtiConfigurationComponent should delete an LTI platform and navigate" name="LtiConfigurationComponent should delete an LTI platform and navigate" time="0.305">
    </testcase>
    <testcase classname="LtiConfigurationComponent should handle navigation on transition" name="LtiConfigurationComponent should handle navigation on transition" time="0.212">
    </testcase>
    <testcase classname="LtiConfigurationComponent should handle errors on deleting LTI platform" name="LtiConfigurationComponent should handle errors on deleting LTI platform" time="0.211">
    </testcase>
  </testsuite>
  <testsuite name="ProblemStatementComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:20:58" time="4.057" tests="7">
    <testcase classname="ProblemStatementComponent should render problem statement when exercise is available" name="ProblemStatementComponent should render problem statement when exercise is available" time="0.184">
    </testcase>
    <testcase classname="ProblemStatementComponent should render problem statement when exercise is available by getting from services" name="ProblemStatementComponent should render problem statement when exercise is available by getting from services" time="0.056">
    </testcase>
    <testcase classname="ProblemStatementComponent isProgrammingExercise should return true if exercise type is PROGRAMMING" name="ProblemStatementComponent isProgrammingExercise should return true if exercise type is PROGRAMMING" time="0.019">
    </testcase>
    <testcase classname="ProblemStatementComponent isProgrammingExercise should return false if exercise type is not PROGRAMMING" name="ProblemStatementComponent isProgrammingExercise should return false if exercise type is not PROGRAMMING" time="0.015">
    </testcase>
    <testcase classname="ProblemStatementComponent isProgrammingExercise should return false if exercise is not defined" name="ProblemStatementComponent isProgrammingExercise should return false if exercise is not defined" time="0.015">
    </testcase>
    <testcase classname="ProblemStatementComponent should render programming exercise instructions when exercise is a programming exercise and participation and exercise are available" name="ProblemStatementComponent should render programming exercise instructions when exercise is a programming exercise and participation and exercise are available" time="0.016">
    </testcase>
    <testcase classname="ProblemStatementComponent should not render programming exercise instructions when exercise is not a programming exercise" name="ProblemStatementComponent should not render programming exercise instructions when exercise is not a programming exercise" time="0.072">
    </testcase>
  </testsuite>
  <testsuite name="EntityTitleService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:01" time="2.052" tests="23">
    <testcase classname="EntityTitleService returns a title that was set immediately" name="EntityTitleService returns a title that was set immediately" time="0.014">
    </testcase>
    <testcase classname="EntityTitleService fires a request to fetch the title after 3 seconds" name="EntityTitleService fires a request to fetch the title after 3 seconds" time="0.006">
    </testcase>
    <testcase classname="EntityTitleService fires a request to fetch the title after 3 seconds" name="EntityTitleService fires a request to fetch the title after 3 seconds" time="0.004">
    </testcase>
    <testcase classname="EntityTitleService fires a request to fetch the title after 3 seconds" name="EntityTitleService fires a request to fetch the title after 3 seconds" time="0.004">
    </testcase>
    <testcase classname="EntityTitleService fires a request to fetch the title after 3 seconds" name="EntityTitleService fires a request to fetch the title after 3 seconds" time="0.004">
    </testcase>
    <testcase classname="EntityTitleService fires a request to fetch the title after 3 seconds" name="EntityTitleService fires a request to fetch the title after 3 seconds" time="0.004">
    </testcase>
    <testcase classname="EntityTitleService fires a request to fetch the title after 3 seconds" name="EntityTitleService fires a request to fetch the title after 3 seconds" time="0.005">
    </testcase>
    <testcase classname="EntityTitleService waits for a title to be set if not present and does not fire the request if it arrives within 3 seconds" name="EntityTitleService waits for a title to be set if not present and does not fire the request if it arrives within 3 seconds" time="0.004">
    </testcase>
    <testcase classname="EntityTitleService captures an exception if invalid parameters are supplied to getTitle" name="EntityTitleService captures an exception if invalid parameters are supplied to getTitle" time="0.004">
    </testcase>
    <testcase classname="EntityTitleService captures an exception if invalid parameters are supplied to getTitle" name="EntityTitleService captures an exception if invalid parameters are supplied to getTitle" time="0.026">
    </testcase>
    <testcase classname="EntityTitleService captures an exception if invalid parameters are supplied to getTitle" name="EntityTitleService captures an exception if invalid parameters are supplied to getTitle" time="0.003">
    </testcase>
    <testcase classname="EntityTitleService captures an exception if invalid parameters are supplied to getTitle" name="EntityTitleService captures an exception if invalid parameters are supplied to getTitle" time="0.003">
    </testcase>
    <testcase classname="EntityTitleService captures an exception if invalid parameters are supplied to setTitle" name="EntityTitleService captures an exception if invalid parameters are supplied to setTitle" time="0.003">
    </testcase>
    <testcase classname="EntityTitleService captures an exception if invalid parameters are supplied to setTitle" name="EntityTitleService captures an exception if invalid parameters are supplied to setTitle" time="0.004">
    </testcase>
    <testcase classname="EntityTitleService captures an exception if invalid parameters are supplied to setTitle" name="EntityTitleService captures an exception if invalid parameters are supplied to setTitle" time="0.003">
    </testcase>
    <testcase classname="EntityTitleService captures an exception if invalid parameters are supplied to setTitle" name="EntityTitleService captures an exception if invalid parameters are supplied to setTitle" time="0.003">
    </testcase>
    <testcase classname="EntityTitleService captures an exception if invalid parameters are supplied to setTitle" name="EntityTitleService captures an exception if invalid parameters are supplied to setTitle" time="0.003">
    </testcase>
    <testcase classname="EntityTitleService captures an exception if invalid parameters are supplied to setTitle" name="EntityTitleService captures an exception if invalid parameters are supplied to setTitle" time="0.003">
    </testcase>
    <testcase classname="EntityTitleService captures an exception if invalid parameters are supplied to setTitle" name="EntityTitleService captures an exception if invalid parameters are supplied to setTitle" time="0.004">
    </testcase>
    <testcase classname="EntityTitleService captures an exception if invalid parameters are supplied to setTitle" name="EntityTitleService captures an exception if invalid parameters are supplied to setTitle" time="0.003">
    </testcase>
    <testcase classname="EntityTitleService sets the exercise group title for students during an exam" name="EntityTitleService sets the exercise group title for students during an exam" time="0.003">
    </testcase>
    <testcase classname="EntityTitleService sets the exercise title for tutors and more privileged users" name="EntityTitleService sets the exercise title for tutors and more privileged users" time="0.003">
    </testcase>
    <testcase classname="EntityTitleService sets the exercise title for course exercises" name="EntityTitleService sets the exercise title for course exercises" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="JhiStartPracticeModeButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:01" time="2.159" tests="2">
    <testcase classname="JhiStartPracticeModeButtonComponent should reflect the correct participation state for practice mode with no graded participation" name="JhiStartPracticeModeButtonComponent should reflect the correct participation state for practice mode with no graded participation" time="0.156">
    </testcase>
    <testcase classname="JhiStartPracticeModeButtonComponent should reflect the correct participation state for practice mode with graded participation" name="JhiStartPracticeModeButtonComponent should reflect the correct participation state for practice mode with graded participation" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="Submission Export Dialog Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:03" time="3.46" tests="5">
    <testcase classname="Submission Export Dialog Component should initialize" name="Submission Export Dialog Component should initialize" time="0.238">
    </testcase>
    <testcase classname="Submission Export Dialog Component should handle export response" name="Submission Export Dialog Component should handle export response" time="0.046">
    </testcase>
    <testcase classname="Submission Export Dialog Component should clear dialog" name="Submission Export Dialog Component should clear dialog" time="0.015">
    </testcase>
    <testcase classname="Submission Export Dialog Component Exporting Submission should export submission" name="Submission Export Dialog Component Exporting Submission should export submission" time="0.022">
    </testcase>
    <testcase classname="Submission Export Dialog Component Exporting Submission should handle error exporting submission for unsupported exercise types" name="Submission Export Dialog Component Exporting Submission should handle error exporting submission for unsupported exercise types" time="0.052">
    </testcase>
  </testsuite>
  <testsuite name="LearningPathsConfigurationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:03" time="3.72" tests="6">
    <testcase classname="LearningPathsConfigurationComponent should load learning paths configuration" name="LearningPathsConfigurationComponent should load learning paths configuration" time="0.09">
    </testcase>
    <testcase classname="LearningPathsConfigurationComponent should show error on load learning paths configuration" name="LearningPathsConfigurationComponent should show error on load learning paths configuration" time="0.044">
    </testcase>
    <testcase classname="LearningPathsConfigurationComponent should set isLoading correctly" name="LearningPathsConfigurationComponent should set isLoading correctly" time="0.012">
    </testcase>
    <testcase classname="LearningPathsConfigurationComponent should enable edit mode" name="LearningPathsConfigurationComponent should enable edit mode" time="0.019">
    </testcase>
    <testcase classname="LearningPathsConfigurationComponent should toggle include all graded exercises" name="LearningPathsConfigurationComponent should toggle include all graded exercises" time="0.02">
    </testcase>
    <testcase classname="LearningPathsConfigurationComponent should save learning paths configuration" name="LearningPathsConfigurationComponent should save learning paths configuration" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="ExamLiveEventComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:06" time="1.551" tests="7">
    <testcase classname="ExamLiveEventComponent should display the correct event type and author" name="ExamLiveEventComponent should display the correct event type and author" time="0.148">
    </testcase>
    <testcase classname="ExamLiveEventComponent should display the attendance check event" name="ExamLiveEventComponent should display the attendance check event" time="0.027">
    </testcase>
    <testcase classname="ExamLiveEventComponent should display exam-wide announcement text when event is of type EXAM_WIDE_ANNOUNCEMENT" name="ExamLiveEventComponent should display exam-wide announcement text when event is of type EXAM_WIDE_ANNOUNCEMENT" time="0.015">
    </testcase>
    <testcase classname="ExamLiveEventComponent should display working time update when event is of type WORKING_TIME_UPDATE" name="ExamLiveEventComponent should display working time update when event is of type WORKING_TIME_UPDATE" time="0.015">
    </testcase>
    <testcase classname="ExamLiveEventComponent should display problem statement update when event is of type PROBLEM_STATEMENT_UPDATE" name="ExamLiveEventComponent should display problem statement update when event is of type PROBLEM_STATEMENT_UPDATE" time="0.024">
    </testcase>
    <testcase classname="ExamLiveEventComponent should emit event when acknowledge button is clicked" name="ExamLiveEventComponent should emit event when acknowledge button is clicked" time="0.027">
    </testcase>
    <testcase classname="ExamLiveEventComponent should emit event when navigate to exercise button is clicked" name="ExamLiveEventComponent should emit event when navigate to exercise button is clicked" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Example Submission Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:03" time="5.103" tests="6">
    <testcase classname="Example Submission Component should initialize the component" name="Example Submission Component should initialize the component" time="0.277">
    </testcase>
    <testcase classname="Example Submission Component should delete an example submission" name="Example Submission Component should delete an example submission" time="0.11">
    </testcase>
    <testcase classname="Example Submission Component should catch an error on delete" name="Example Submission Component should catch an error on delete" time="0.128">
    </testcase>
    <testcase classname="Example Submission Component should get the submission size" name="Example Submission Component should get the submission size" time="0.055">
    </testcase>
    <testcase classname="Example Submission Component should not open import modal" name="Example Submission Component should not open import modal" time="0.085">
    </testcase>
    <testcase classname="Example Submission Component should close open modals on component destroy" name="Example Submission Component should close open modals on component destroy" time="0.077">
    </testcase>
  </testsuite>
  <testsuite name="SidebarCardDirective" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:03" time="5.751" tests="10">
    <testcase classname="SidebarCardDirective directive and viewContainerRef should be defined" name="SidebarCardDirective directive and viewContainerRef should be defined" time="0.035">
    </testcase>
    <testcase classname="SidebarCardDirective should create SidebarCardSmallComponent when size is &quot;S&quot;" name="SidebarCardDirective should create SidebarCardSmallComponent when size is &quot;S&quot;" time="0.079">
    </testcase>
    <testcase classname="SidebarCardDirective should create SidebarCardSmallComponent when size is &quot;M&quot;" name="SidebarCardDirective should create SidebarCardSmallComponent when size is &quot;M&quot;" time="0.039">
    </testcase>
    <testcase classname="SidebarCardDirective should create SidebarCardSmallComponent when size is &quot;L&quot;" name="SidebarCardDirective should create SidebarCardSmallComponent when size is &quot;L&quot;" time="0.039">
    </testcase>
    <testcase classname="SidebarCardDirective should remove the correct prefix from the name when groupKey is in channelTypes" name="SidebarCardDirective should remove the correct prefix from the name when groupKey is in channelTypes" time="0.017">
    </testcase>
    <testcase classname="SidebarCardDirective should not remove the prefix if groupKey is not in channelTypes" name="SidebarCardDirective should not remove the prefix if groupKey is not in channelTypes" time="0.031">
    </testcase>
    <testcase classname="SidebarCardDirective should not remove the prefix if name does not start with any of the prefixes" name="SidebarCardDirective should not remove the prefix if name does not start with any of the prefixes" time="0.015">
    </testcase>
    <testcase classname="SidebarCardDirective should handle empty name input" name="SidebarCardDirective should handle empty name input" time="0.018">
    </testcase>
    <testcase classname="SidebarCardDirective should handle undefined name input" name="SidebarCardDirective should handle undefined name input" time="0.02">
    </testcase>
    <testcase classname="SidebarCardDirective should handle null name input" name="SidebarCardDirective should handle null name input" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="TeamComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:07" time="3.014" tests="6">
    <testcase classname="TeamComponent ngOnInit should set team and exercise from services and call find on exerciseService to retreive exercise" name="TeamComponent ngOnInit should set team and exercise from services and call find on exerciseService to retreive exercise" time="0.422">
    </testcase>
    <testcase classname="TeamComponent ngOnInit should call alert service error when exercise service fails" name="TeamComponent ngOnInit should call alert service error when exercise service fails" time="0.01">
    </testcase>
    <testcase classname="TeamComponent ngOnInit should call alert service error when team service fails" name="TeamComponent ngOnInit should call alert service error when team service fails" time="0.021">
    </testcase>
    <testcase classname="TeamComponent ngOnInit with team owner should set team owner true if user is team owner" name="TeamComponent ngOnInit with team owner should set team owner true if user is team owner" time="0.033">
    </testcase>
    <testcase classname="TeamComponent onTeamUpdate should update team to given team" name="TeamComponent onTeamUpdate should update team to given team" time="0.015">
    </testcase>
    <testcase classname="TeamComponent onTeamDelete should go to teams overview on delete" name="TeamComponent onTeamDelete should go to teams overview on delete" time="0.161">
    </testcase>
  </testsuite>
  <testsuite name="DeleteDialogComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:08" time="2.392" tests="3">
    <testcase classname="DeleteDialogComponent Dialog is correctly initialized" name="DeleteDialogComponent Dialog is correctly initialized" time="0.3">
    </testcase>
    <testcase classname="DeleteDialogComponent Form properly checked before submission" name="DeleteDialogComponent Form properly checked before submission" time="0.149">
    </testcase>
    <testcase classname="DeleteDialogComponent Error dialog events are correctly handled" name="DeleteDialogComponent Error dialog events are correctly handled" time="0.15">
    </testcase>
  </testsuite>
  <testsuite name="Round" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:10" time="0.971" tests="20">
    <testcase classname="Round Decimal length" name="Round Decimal length" time="0.002">
    </testcase>
    <testcase classname="Round Turning points" name="Round Turning points" time="0.002">
    </testcase>
    <testcase classname="Round Other" name="Round Other" time="0.019">
    </testcase>
    <testcase classname="Round should return NaN" name="Round should return NaN" time="0.001">
    </testcase>
    <testcase classname="Rounding of scores RoundScore" name="Rounding of scores RoundScore" time="0.002">
    </testcase>
    <testcase classname="Rounding of scores RoundScorePercent" name="Rounding of scores RoundScorePercent" time="0.006">
    </testcase>
    <testcase classname="stringifyIgnoringFields should ignore nothing" name="stringifyIgnoringFields should ignore nothing" time="0.001">
    </testcase>
    <testcase classname="stringifyIgnoringFields should ignore fields" name="stringifyIgnoringFields should ignore fields" time="0.001">
    </testcase>
    <testcase classname="average should return an average of 0 for an empty array" name="average should return an average of 0 for an empty array" time="0">
    </testcase>
    <testcase classname="average should return the average for a non-empty array" name="average should return the average for a non-empty array" time="0.001">
    </testcase>
    <testcase classname="Range should return the correct string representation" name="Range should return the correct string representation" time="0">
    </testcase>
    <testcase classname="getAsMutableObject should return immutable object as mutable object" name="getAsMutableObject should return immutable object as mutable object" time="0.001">
    </testcase>
    <testcase classname="isExamExercise should return true if course is not set" name="isExamExercise should return true if course is not set" time="0.001">
    </testcase>
    <testcase classname="isExamExercise should return false if course is set" name="isExamExercise should return false if course is set" time="0.001">
    </testcase>
    <testcase classname="roundUpToNextMultiple should round up to multiple of 5 if value is closer to lower multiple" name="roundUpToNextMultiple should round up to multiple of 5 if value is closer to lower multiple" time="0.001">
    </testcase>
    <testcase classname="roundUpToNextMultiple should round up to multiple of 5 if value is right underneath next multiple" name="roundUpToNextMultiple should round up to multiple of 5 if value is right underneath next multiple" time="0.001">
    </testcase>
    <testcase classname="roundUpToNextMultiple should round down to multiple of 5 if value is over next multiple" name="roundUpToNextMultiple should round down to multiple of 5 if value is over next multiple" time="0">
    </testcase>
    <testcase classname="roundUpToNextMultiple should return value is it is a multiple" name="roundUpToNextMultiple should return value is it is a multiple" time="0.001">
    </testcase>
    <testcase classname="roundUpToNextMultiple should round up to multiple of 1" name="roundUpToNextMultiple should round up to multiple of 1" time="0.001">
    </testcase>
    <testcase classname="removeSpecialCharacters should remove special characters" name="removeSpecialCharacters should remove special characters" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CleanupOperationModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:09" time="2.298" tests="5">
    <testcase classname="CleanupOperationModalComponent should initialize and fetch counts on init" name="CleanupOperationModalComponent should initialize and fetch counts on init" time="0.139">
    </testcase>
    <testcase classname="CleanupOperationModalComponent should execute cleanup operation successfully" name="CleanupOperationModalComponent should execute cleanup operation successfully" time="0.116">
    </testcase>
    <testcase classname="CleanupOperationModalComponent should handle error during cleanup operation" name="CleanupOperationModalComponent should handle error during cleanup operation" time="0.052">
    </testcase>
    <testcase classname="CleanupOperationModalComponent should close the modal" name="CleanupOperationModalComponent should close the modal" time="0.049">
    </testcase>
    <testcase classname="CleanupOperationModalComponent should compute hasEntriesToDelete correctly" name="CleanupOperationModalComponent should compute hasEntriesToDelete correctly" time="0.054">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseGradingService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:11" time="0.782" tests="4">
    <testcase classname="ProgrammingExerciseGradingService should fetch the test cases via REST call if there is nothing stored yet for a given exercise" name="ProgrammingExerciseGradingService should fetch the test cases via REST call if there is nothing stored yet for a given exercise" time="0.015">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingService should reuse the same subject when there already is a connection established and not call the REST endpoint" name="ProgrammingExerciseGradingService should reuse the same subject when there already is a connection established and not call the REST endpoint" time="0.007">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingService should notify subscribers on new test case value" name="ProgrammingExerciseGradingService should notify subscribers on new test case value" time="0.003">
    </testcase>
    <testcase classname="ProgrammingExerciseGradingService should reuse locally saved test cases if they exist and not send two rest requests" name="ProgrammingExerciseGradingService should reuse locally saved test cases if they exist and not send two rest requests" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="ReactingUsersOnPostingsPipe" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:11" time="1.399" tests="7">
    <testcase classname="ReactingUsersOnPostingsPipe should return string for one user that is not &quot;you&quot;" name="ReactingUsersOnPostingsPipe should return string for one user that is not &quot;you&quot;" time="0.03">
    </testcase>
    <testcase classname="ReactingUsersOnPostingsPipe should return string for one user that is &quot;you&quot;" name="ReactingUsersOnPostingsPipe should return string for one user that is &quot;you&quot;" time="0.007">
    </testcase>
    <testcase classname="ReactingUsersOnPostingsPipe should return string for two users that do not include &quot;you&quot;" name="ReactingUsersOnPostingsPipe should return string for two users that do not include &quot;you&quot;" time="0.007">
    </testcase>
    <testcase classname="ReactingUsersOnPostingsPipe should return string for two users that do include &quot;you&quot;" name="ReactingUsersOnPostingsPipe should return string for two users that do include &quot;you&quot;" time="0.007">
    </testcase>
    <testcase classname="ReactingUsersOnPostingsPipe should return string for three users that do include &quot;you&quot; and separate the first two users with comma" name="ReactingUsersOnPostingsPipe should return string for three users that do include &quot;you&quot; and separate the first two users with comma" time="0.005">
    </testcase>
    <testcase classname="ReactingUsersOnPostingsPipe should trim list of reacting users but always include &quot;you" name="ReactingUsersOnPostingsPipe should trim list of reacting users but always include &quot;you" time="0.036">
    </testcase>
    <testcase classname="ReactingUsersOnPostingsPipe should trigger update of reacting users on language change" name="ReactingUsersOnPostingsPipe should trigger update of reacting users on language change" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="ReEvaluateMultipleChoiceQuestionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:08" time="7.344" tests="14">
    <testcase classname="ReEvaluateMultipleChoiceQuestionComponent should initialize component" name="ReEvaluateMultipleChoiceQuestionComponent should initialize component" time="0.629">
    </testcase>
    <testcase classname="ReEvaluateMultipleChoiceQuestionComponent should react to button presses move-up" name="ReEvaluateMultipleChoiceQuestionComponent should react to button presses move-up" time="0.289">
    </testcase>
    <testcase classname="ReEvaluateMultipleChoiceQuestionComponent should react to button presses move-down" name="ReEvaluateMultipleChoiceQuestionComponent should react to button presses move-down" time="0.382">
    </testcase>
    <testcase classname="ReEvaluateMultipleChoiceQuestionComponent should react to button presses delete" name="ReEvaluateMultipleChoiceQuestionComponent should react to button presses delete" time="0.302">
    </testcase>
    <testcase classname="ReEvaluateMultipleChoiceQuestionComponent should react to button presses reset" name="ReEvaluateMultipleChoiceQuestionComponent should react to button presses reset" time="0.315">
    </testcase>
    <testcase classname="ReEvaluateMultipleChoiceQuestionComponent should delete an answer" name="ReEvaluateMultipleChoiceQuestionComponent should delete an answer" time="0.183">
    </testcase>
    <testcase classname="ReEvaluateMultipleChoiceQuestionComponent should reset an answer" name="ReEvaluateMultipleChoiceQuestionComponent should reset an answer" time="0.187">
    </testcase>
    <testcase classname="ReEvaluateMultipleChoiceQuestionComponent should invalidate answers" name="ReEvaluateMultipleChoiceQuestionComponent should invalidate answers" time="0.171">
    </testcase>
    <testcase classname="ReEvaluateMultipleChoiceQuestionComponent should react to answer option changes" name="ReEvaluateMultipleChoiceQuestionComponent should react to answer option changes" time="0.2">
    </testcase>
    <testcase classname="ReEvaluateMultipleChoiceQuestionComponent should react to question changes" name="ReEvaluateMultipleChoiceQuestionComponent should react to question changes" time="0.367">
    </testcase>
    <testcase classname="ReEvaluateMultipleChoiceQuestionComponent should get question text" name="ReEvaluateMultipleChoiceQuestionComponent should get question text" time="0.291">
    </testcase>
    <testcase classname="ReEvaluateMultipleChoiceQuestionComponent should change answer isCorrect to true if text is set to correct" name="ReEvaluateMultipleChoiceQuestionComponent should change answer isCorrect to true if text is set to correct" time="0.301">
    </testcase>
    <testcase classname="ReEvaluateMultipleChoiceQuestionComponent should change answer isCorrect to false if text is set to wrong" name="ReEvaluateMultipleChoiceQuestionComponent should change answer isCorrect to false if text is set to wrong" time="0.319">
    </testcase>
    <testcase classname="ReEvaluateMultipleChoiceQuestionComponent should not change answer isCorrect if text is not set to either correct or wrong" name="ReEvaluateMultipleChoiceQuestionComponent should not change answer isCorrect if text is not set to either correct or wrong" time="0.31">
    </testcase>
  </testsuite>
  <testsuite name="StudentExamDetailTableRowComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:12" time="4.76" tests="2">
    <testcase classname="StudentExamDetailTableRowComponent should return the right icon based on exercise type" name="StudentExamDetailTableRowComponent should return the right icon based on exercise type" time="0.273">
    </testcase>
    <testcase classname="StudentExamDetailTableRowComponent should route to modeling submission" name="StudentExamDetailTableRowComponent should route to modeling submission" time="0.215">
    </testcase>
  </testsuite>
  <testsuite name="Post Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:16" time="1.034" tests="9">
    <testcase classname="Post Service Service methods should create a Post" name="Post Service Service methods should create a Post" time="0.016">
    </testcase>
    <testcase classname="Post Service Service methods should update a Post" name="Post Service Service methods should update a Post" time="0.024">
    </testcase>
    <testcase classname="Post Service Service methods should pin a Post" name="Post Service Service methods should pin a Post" time="0.009">
    </testcase>
    <testcase classname="Post Service Service methods should archive a Post" name="Post Service Service methods should archive a Post" time="0.007">
    </testcase>
    <testcase classname="Post Service Service methods should delete a Post" name="Post Service Service methods should delete a Post" time="0.004">
    </testcase>
    <testcase classname="Post Service Service methods should return all student posts for a course" name="Post Service Service methods should return all student posts for a course" time="0.004">
    </testcase>
    <testcase classname="Post Service Service methods should use /posts endpoints if plagiarismCaseId is provided in the postContextFilter" name="Post Service Service methods should use /posts endpoints if plagiarismCaseId is provided in the postContextFilter" time="0.005">
    </testcase>
    <testcase classname="Post Service Service methods should use /messages endpoints if course-wide channel ids are provided" name="Post Service Service methods should use /messages endpoints if course-wide channel ids are provided" time="0.006">
    </testcase>
    <testcase classname="Post Service Service methods should get source posts by IDs" name="Post Service Service methods should get source posts by IDs" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="LectureDetailComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:11" time="7.403" tests="6">
    <testcase classname="LectureDetailComponent should initialize lecture when ngOnInit is called" name="LectureDetailComponent should initialize lecture when ngOnInit is called" time="0.693">
    </testcase>
    <testcase classname="LectureDetailComponent should have the correct icons initialized" name="LectureDetailComponent should have the correct icons initialized" time="0.039">
    </testcase>
    <testcase classname="LectureDetailComponent should have correct lecture-details" name="LectureDetailComponent should have correct lecture-details" time="0.096">
    </testcase>
    <testcase classname="LectureDetailComponent should call the service to ingest lectures when ingestLecturesInPyris is called" name="LectureDetailComponent should call the service to ingest lectures when ingestLecturesInPyris is called" time="0.049">
    </testcase>
    <testcase classname="LectureDetailComponent should log error when error occurs" name="LectureDetailComponent should log error when error occurs" time="0.094">
    </testcase>
    <testcase classname="LectureDetailComponent should set lectureIngestionEnabled based on service response" name="LectureDetailComponent should set lectureIngestionEnabled based on service response" time="0.07">
    </testcase>
  </testsuite>
  <testsuite name="SavedPostsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:16" time="3.222" tests="9">
    <testcase classname="SavedPostsComponent should create" name="SavedPostsComponent should create" time="0.35">
    </testcase>
    <testcase classname="SavedPostsComponent Initialization should fetch saved posts successfully" name="SavedPostsComponent Initialization should fetch saved posts successfully" time="0.048">
    </testcase>
    <testcase classname="SavedPostsComponent Initialization should handle empty response" name="SavedPostsComponent Initialization should handle empty response" time="0.051">
    </testcase>
    <testcase classname="SavedPostsComponent Initialization should handle error response" name="SavedPostsComponent Initialization should handle error response" time="0.033">
    </testcase>
    <testcase classname="SavedPostsComponent Change post status should update post status and add to hidden posts" name="SavedPostsComponent Change post status should update post status and add to hidden posts" time="0.05">
    </testcase>
    <testcase classname="SavedPostsComponent Navigation should emit post when navigating" name="SavedPostsComponent Navigation should emit post when navigating" time="0.044">
    </testcase>
    <testcase classname="SavedPostsComponent Template interaction should show empty notice when no posts are available" name="SavedPostsComponent Template interaction should show empty notice when no posts are available" time="0.034">
    </testcase>
    <testcase classname="SavedPostsComponent Template interaction should not show empty notice when posts are available" name="SavedPostsComponent Template interaction should not show empty notice when posts are available" time="0.03">
    </testcase>
    <testcase classname="SavedPostsComponent Template interaction should show delete post notice when archived is selected" name="SavedPostsComponent Template interaction should show delete post notice when archived is selected" time="0.082">
    </testcase>
  </testsuite>
  <testsuite name="CourseNotificationSettingService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:19" time="0.816" tests="6">
    <testcase classname="CourseNotificationSettingService should be created" name="CourseNotificationSettingService should be created" time="0.02">
    </testcase>
    <testcase classname="CourseNotificationSettingService getSettingInfo should make GET request to fetch notification settings" name="CourseNotificationSettingService getSettingInfo should make GET request to fetch notification settings" time="0.012">
    </testcase>
    <testcase classname="CourseNotificationSettingService setSettingPreset should make PUT request to set notification preset" name="CourseNotificationSettingService setSettingPreset should make PUT request to set notification preset" time="0.009">
    </testcase>
    <testcase classname="CourseNotificationSettingService setSettingSpecification should make PUT request with transformed specifications" name="CourseNotificationSettingService setSettingSpecification should make PUT request with transformed specifications" time="0.012">
    </testcase>
    <testcase classname="CourseNotificationSettingService transformNotificationSettingSpecificationToRequestBody should transform an array of specifications to a record by typeId" name="CourseNotificationSettingService transformNotificationSettingSpecificationToRequestBody should transform an array of specifications to a record by typeId" time="0.007">
    </testcase>
    <testcase classname="CourseNotificationSettingService transformNotificationSettingSpecificationToRequestBody should handle empty specifications array" name="CourseNotificationSettingService transformNotificationSettingSpecificationToRequestBody should handle empty specifications array" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseDetailDirective" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:13" time="7.159" tests="10">
    <testcase classname="ExerciseDetailDirective should not create component for NotShownDetails detail &quot;false&quot;" name="ExerciseDetailDirective should not create component for NotShownDetails detail &quot;false&quot;" time="0.041">
    </testcase>
    <testcase classname="ExerciseDetailDirective should not create component for NotShownDetails detail &quot;undefined&quot;" name="ExerciseDetailDirective should not create component for NotShownDetails detail &quot;undefined&quot;" time="0.015">
    </testcase>
    <testcase classname="ExerciseDetailDirective should create component for ShownDetails should create TextDetail component" name="ExerciseDetailDirective should create component for ShownDetails should create TextDetail component" time="0.051">
    </testcase>
    <testcase classname="ExerciseDetailDirective should create component for ShownDetails should create DateDetail component" name="ExerciseDetailDirective should create component for ShownDetails should create DateDetail component" time="0.034">
    </testcase>
    <testcase classname="ExerciseDetailDirective should create component for ShownDetails should create LinkDetail component" name="ExerciseDetailDirective should create component for ShownDetails should create LinkDetail component" time="0.032">
    </testcase>
    <testcase classname="ExerciseDetailDirective should create component for ShownDetails should create BooleanDetail component" name="ExerciseDetailDirective should create component for ShownDetails should create BooleanDetail component" time="0.03">
    </testcase>
    <testcase classname="ExerciseDetailDirective should create component for ShownDetails should create ProgrammingRepositoryButtonsDetailComponent component" name="ExerciseDetailDirective should create component for ShownDetails should create ProgrammingRepositoryButtonsDetailComponent component" time="0.115">
    </testcase>
    <testcase classname="ExerciseDetailDirective should create component for ShownDetails should create ProgrammingAuxiliaryRepositoryButtonsDetailComponent component" name="ExerciseDetailDirective should create component for ShownDetails should create ProgrammingAuxiliaryRepositoryButtonsDetailComponent component" time="0.056">
    </testcase>
    <testcase classname="ExerciseDetailDirective should create component for ShownDetails should create ProgrammingTestStatusDetail component" name="ExerciseDetailDirective should create component for ShownDetails should create ProgrammingTestStatusDetail component" time="0.14">
    </testcase>
    <testcase classname="ExerciseDetailDirective should create component for ShownDetails should create ProgrammingDiffReportDetail component" name="ExerciseDetailDirective should create component for ShownDetails should create ProgrammingDiffReportDetail component" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="ModelingExercise Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:19" time="1.232" tests="7">
    <testcase classname="ModelingExercise Service should find an element" name="ModelingExercise Service should find an element" time="0.013">
    </testcase>
    <testcase classname="ModelingExercise Service should create a ModelingExercise" name="ModelingExercise Service should create a ModelingExercise" time="0.009">
    </testcase>
    <testcase classname="ModelingExercise Service should update a ModelingExercise" name="ModelingExercise Service should update a ModelingExercise" time="0.005">
    </testcase>
    <testcase classname="ModelingExercise Service should delete a ModelingExercise" name="ModelingExercise Service should delete a ModelingExercise" time="0.005">
    </testcase>
    <testcase classname="ModelingExercise Service should convert model to pdf" name="ModelingExercise Service should convert model to pdf" time="0.004">
    </testcase>
    <testcase classname="ModelingExercise Service should re-evaluate and update a modelling exercise" name="ModelingExercise Service should re-evaluate and update a modelling exercise" time="0.008">
    </testcase>
    <testcase classname="ModelingExercise Service should import a modeling exercise" name="ModelingExercise Service should import a modeling exercise" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="Plagiarism Cases Student View Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:18" time="3.666" tests="4">
    <testcase classname="Plagiarism Cases Student View Component should set plagiarism case on initialization" name="Plagiarism Cases Student View Component should set plagiarism case on initialization" time="0.927">
    </testcase>
    <testcase classname="Plagiarism Cases Student View Component should set isAfterDueDate" name="Plagiarism Cases Student View Component should set isAfterDueDate" time="0.008">
    </testcase>
    <testcase classname="Plagiarism Cases Student View Component should unset isAfterDueDate" name="Plagiarism Cases Student View Component should unset isAfterDueDate" time="0.008">
    </testcase>
    <testcase classname="Plagiarism Cases Student View Component should load plagiarism case on route update" name="Plagiarism Cases Student View Component should load plagiarism case on route update" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="EditTutorialGroupsConfigurationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:21" time="2.711" tests="3">
    <testcase classname="EditTutorialGroupsConfigurationComponent should initialize" name="EditTutorialGroupsConfigurationComponent should initialize" time="0.313">
    </testcase>
    <testcase classname="EditTutorialGroupsConfigurationComponent should set form data correctly" name="EditTutorialGroupsConfigurationComponent should set form data correctly" time="0.058">
    </testcase>
    <testcase classname="EditTutorialGroupsConfigurationComponent should send PUT request upon form submission and navigate" name="EditTutorialGroupsConfigurationComponent should send PUT request upon form submission and navigate" time="0.123">
    </testcase>
  </testsuite>
  <testsuite name="System Notification Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:23" time="1.083" tests="2">
    <testcase classname="System Notification Component should get system notifications, display active ones on init, and schedule changes correctly" name="System Notification Component should get system notifications, display active ones on init, and schedule changes correctly" time="0.074">
    </testcase>
    <testcase classname="System Notification Component should connect to ws on init and update notifications to new array of notifications received through it" name="System Notification Component should connect to ws on init and update notifications to new array of notifications received through it" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="The CsvExportRowBuilder" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:22" time="2.653" tests="13">
    <testcase classname="The CsvExportRowBuilder should set a string" name="The CsvExportRowBuilder should set a string" time="0.002">
    </testcase>
    <testcase classname="The CsvExportRowBuilder should set an empty string instead of undefined" name="The CsvExportRowBuilder should set an empty string instead of undefined" time="0.001">
    </testcase>
    <testcase classname="The CsvExportRowBuilder should convert numbers to their localized format" name="The CsvExportRowBuilder should convert numbers to their localized format" time="0.001">
    </testcase>
    <testcase classname="The CsvExportRowBuilder should convert percentage numbers to their localized format" name="The CsvExportRowBuilder should convert percentage numbers to their localized format" time="0.001">
    </testcase>
    <testcase classname="The CsvExportRowBuilder should return a hyphen for NaN values" name="The CsvExportRowBuilder should return a hyphen for NaN values" time="0.001">
    </testcase>
    <testcase classname="The CsvExportRowBuilder Test the CsvExportRowBuilder with a comma as a decimal separator should convert numbers to their localized format" name="The CsvExportRowBuilder Test the CsvExportRowBuilder with a comma as a decimal separator should convert numbers to their localized format" time="0.002">
    </testcase>
    <testcase classname="The CsvExportRowBuilder Test the CsvExportRowBuilder with a comma as a decimal separator should convert percentage numbers to their localized format" name="The CsvExportRowBuilder Test the CsvExportRowBuilder with a comma as a decimal separator should convert percentage numbers to their localized format" time="0.001">
    </testcase>
    <testcase classname="The CsvExportRowBuilder Test the CsvExportRowBuilder with a specific accuracyOfScores should convert numbers to their localized format respecting the accuracyOfScores" name="The CsvExportRowBuilder Test the CsvExportRowBuilder with a specific accuracyOfScores should convert numbers to their localized format respecting the accuracyOfScores" time="0.002">
    </testcase>
    <testcase classname="The CsvExportRowBuilder Test the CsvExportRowBuilder with a specific accuracyOfScores should convert percentage numbers to their localized format" name="The CsvExportRowBuilder Test the CsvExportRowBuilder with a specific accuracyOfScores should convert percentage numbers to their localized format" time="0.001">
    </testcase>
    <testcase classname="The CsvExportRowBuilder should trim all user values when storing them" name="The CsvExportRowBuilder should trim all user values when storing them" time="0.008">
    </testcase>
    <testcase classname="The CsvExportRowBuilder should allow for empty student information" name="The CsvExportRowBuilder should allow for empty student information" time="0.001">
    </testcase>
    <testcase classname="The CsvExportRowBuilder should set the exercise type points" name="The CsvExportRowBuilder should set the exercise type points" time="0.001">
    </testcase>
    <testcase classname="The CsvExportRowBuilder should set the exercise type score" name="The CsvExportRowBuilder should set the exercise type score" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="LtiConfigurationService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:25" time="1.135" tests="6">
    <testcase classname="LtiConfigurationService should return all lti platforms" name="LtiConfigurationService should return all lti platforms" time="0.03">
    </testcase>
    <testcase classname="LtiConfigurationService should update lti platform" name="LtiConfigurationService should update lti platform" time="0.007">
    </testcase>
    <testcase classname="LtiConfigurationService should send a delete a lti response" name="LtiConfigurationService should send a delete a lti response" time="0.02">
    </testcase>
    <testcase classname="LtiConfigurationService should add new lti platform" name="LtiConfigurationService should add new lti platform" time="0.017">
    </testcase>
    <testcase classname="LtiConfigurationService should query with different sorting parameters" name="LtiConfigurationService should query with different sorting parameters" time="0.005">
    </testcase>
    <testcase classname="LtiConfigurationService should handle errors when querying LTI platforms" name="LtiConfigurationService should handle errors when querying LTI platforms" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="CreateTextUnitComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:21" time="5.302" tests="2">
    <testcase classname="CreateTextUnitComponent should initialize" name="CreateTextUnitComponent should initialize" time="1.456">
    </testcase>
    <testcase classname="CreateTextUnitComponent should send POST request upon form submission and navigate" name="CreateTextUnitComponent should send POST request upon form submission and navigate" time="0.591">
    </testcase>
  </testsuite>
  <testsuite name="IdeSettingsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:25" time="3.265" tests="5">
    <testcase classname="IdeSettingsComponent should load predefined IDEs and IDE preferences on init" name="IdeSettingsComponent should load predefined IDEs and IDE preferences on init" time="0.081">
    </testcase>
    <testcase classname="IdeSettingsComponent should add a programming language and update the lists" name="IdeSettingsComponent should add a programming language and update the lists" time="0.012">
    </testcase>
    <testcase classname="IdeSettingsComponent should change the IDE for a programming language" name="IdeSettingsComponent should change the IDE for a programming language" time="0.013">
    </testcase>
    <testcase classname="IdeSettingsComponent should remove a programming language and update the lists" name="IdeSettingsComponent should remove a programming language and update the lists" time="0.017">
    </testcase>
    <testcase classname="IdeSettingsComponent should check if the IDE is assigned to a programming language" name="IdeSettingsComponent should check if the IDE is assigned to a programming language" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="UserRouteAccessService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:20" time="8.098" tests="5">
    <testcase classname="UserRouteAccessService should create alert and prefill username for existing LTI users" name="UserRouteAccessService should create alert and prefill username for existing LTI users" time="1.615">
    </testcase>
    <testcase classname="UserRouteAccessService should not create alert and not prefill username for new LTI users" name="UserRouteAccessService should not create alert and not prefill username for new LTI users" time="0.028">
    </testcase>
    <testcase classname="UserRouteAccessService should return true if authorities are omitted" name="UserRouteAccessService should return true if authorities are omitted" time="0.013">
    </testcase>
    <testcase classname="UserRouteAccessService should return false if it does not have authority" name="UserRouteAccessService should return false if it does not have authority" time="0.013">
    </testcase>
    <testcase classname="UserRouteAccessService should store url if identity is undefined" name="UserRouteAccessService should store url if identity is undefined" time="0.039">
    </testcase>
  </testsuite>
  <testsuite name="CreateVideoUnitComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:26" time="2.618" tests="2">
    <testcase classname="CreateVideoUnitComponent should initialize" name="CreateVideoUnitComponent should initialize" time="0.278">
    </testcase>
    <testcase classname="CreateVideoUnitComponent should send POST request upon form submission and navigate" name="CreateVideoUnitComponent should send POST request upon form submission and navigate" time="0.063">
    </testcase>
  </testsuite>
  <testsuite name="LearningPathInstructorPageComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:26" time="3.038" tests="7">
    <testcase classname="LearningPathInstructorPageComponent should load course" name="LearningPathInstructorPageComponent should load course" time="0.155">
    </testcase>
    <testcase classname="LearningPathInstructorPageComponent should show error on load course" name="LearningPathInstructorPageComponent should show error on load course" time="0.462">
    </testcase>
    <testcase classname="LearningPathInstructorPageComponent should set isLoading correctly on course loading" name="LearningPathInstructorPageComponent should set isLoading correctly on course loading" time="0.014">
    </testcase>
    <testcase classname="LearningPathInstructorPageComponent should show enable learning paths button if not enabled" name="LearningPathInstructorPageComponent should show enable learning paths button if not enabled" time="0.011">
    </testcase>
    <testcase classname="LearningPathInstructorPageComponent should enable learning paths" name="LearningPathInstructorPageComponent should enable learning paths" time="0.024">
    </testcase>
    <testcase classname="LearningPathInstructorPageComponent should show error on enable learning paths" name="LearningPathInstructorPageComponent should show error on enable learning paths" time="0.031">
    </testcase>
    <testcase classname="LearningPathInstructorPageComponent should set isLoading correctly on enable learning paths" name="LearningPathInstructorPageComponent should set isLoading correctly on enable learning paths" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="TextExamSubmissionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:28" time="2.11" tests="8">
    <testcase classname="TextExamSubmissionComponent should initialize" name="TextExamSubmissionComponent should initialize" time="0.224">
    </testcase>
    <testcase classname="TextExamSubmissionComponent should initialize with empty answer" name="TextExamSubmissionComponent should initialize with empty answer" time="0.048">
    </testcase>
    <testcase classname="TextExamSubmissionComponent should return the negation of student submission isSynced value" name="TextExamSubmissionComponent should return the negation of student submission isSynced value" time="0.016">
    </testcase>
    <testcase classname="TextExamSubmissionComponent should update text of the submission" name="TextExamSubmissionComponent should update text of the submission" time="0.019">
    </testcase>
    <testcase classname="TextExamSubmissionComponent should update problem statement of the exercise" name="TextExamSubmissionComponent should update problem statement of the exercise" time="0.033">
    </testcase>
    <testcase classname="TextExamSubmissionComponent should trigger text editor events" name="TextExamSubmissionComponent should trigger text editor events" time="0.049">
    </testcase>
    <testcase classname="TextExamSubmissionComponent should update the answer if the submission version changes" name="TextExamSubmissionComponent should update the answer if the submission version changes" time="0.015">
    </testcase>
    <testcase classname="TextExamSubmissionComponent should call triggerSave if save exercise button is clicked" name="TextExamSubmissionComponent should call triggerSave if save exercise button is clicked" time="0.05">
    </testcase>
  </testsuite>
  <testsuite name="Organization Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:29" time="1.209" tests="11">
    <testcase classname="Organization Service should return an Organization" name="Organization Service should return an Organization" time="0.01">
    </testcase>
    <testcase classname="Organization Service should return an Organization with Users and Courses" name="Organization Service should return an Organization with Users and Courses" time="0.005">
    </testcase>
    <testcase classname="Organization Service should return all organizations" name="Organization Service should return all organizations" time="0.023">
    </testcase>
    <testcase classname="Organization Service should return number of users and courses of organization" name="Organization Service should return number of users and courses of organization" time="0.011">
    </testcase>
    <testcase classname="Organization Service should return all Organizations a course is assigned to" name="Organization Service should return all Organizations a course is assigned to" time="0.013">
    </testcase>
    <testcase classname="Organization Service should return all Organizations a user is assigned to" name="Organization Service should return all Organizations a user is assigned to" time="0.007">
    </testcase>
    <testcase classname="Organization Service should add a new Organization" name="Organization Service should add a new Organization" time="0.012">
    </testcase>
    <testcase classname="Organization Service should update an Organization" name="Organization Service should update an Organization" time="0.011">
    </testcase>
    <testcase classname="Organization Service should delete an Organization" name="Organization Service should delete an Organization" time="0.007">
    </testcase>
    <testcase classname="Organization Service should add a user to an Organization" name="Organization Service should add a user to an Organization" time="0.01">
    </testcase>
    <testcase classname="Organization Service should delete a user from an Organization" name="Organization Service should delete a user from an Organization" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="MetricsModalThreadsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:29" time="2.49" tests="8">
    <testcase classname="MetricsModalThreadsComponent onInit counts all thread types" name="MetricsModalThreadsComponent onInit counts all thread types" time="0.219">
    </testcase>
    <testcase classname="MetricsModalThreadsComponent background class computes correct bg-* class based on thread state" name="MetricsModalThreadsComponent background class computes correct bg-* class based on thread state" time="0.009">
    </testcase>
    <testcase classname="MetricsModalThreadsComponent filters threads based on selected thread state when selected thread state is undefined, nothing is filtered out" name="MetricsModalThreadsComponent filters threads based on selected thread state when selected thread state is undefined, nothing is filtered out" time="0.008">
    </testcase>
    <testcase classname="MetricsModalThreadsComponent filters threads based on selected thread state when selected a specific thread state, only threads with specific thread state are returned" name="MetricsModalThreadsComponent filters threads based on selected thread state when selected a specific thread state, only threads with specific thread state are returned" time="0.009">
    </testcase>
    <testcase classname="MetricsModalThreadsComponent filters threads based on filter text when filter is undefined, nothing is filtered out" name="MetricsModalThreadsComponent filters threads based on filter text when filter is undefined, nothing is filtered out" time="0.033">
    </testcase>
    <testcase classname="MetricsModalThreadsComponent filters threads based on filter text when filter is entered, only matching results are returned" name="MetricsModalThreadsComponent filters threads based on filter text when filter is entered, only matching results are returned" time="0.013">
    </testcase>
    <testcase classname="MetricsModalThreadsComponent filters both on thread state and filter text" name="MetricsModalThreadsComponent filters both on thread state and filter text" time="0.008">
    </testcase>
    <testcase classname="MetricsModalThreadsComponent on dismiss calls activeModal.dismiss()" name="MetricsModalThreadsComponent on dismiss calls activeModal.dismiss()" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="ExamExerciseUpdateHighlighterComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:32" time="1.378" tests="4">
    <testcase classname="ExamExerciseUpdateHighlighterComponent should update problem statement" name="ExamExerciseUpdateHighlighterComponent should update problem statement" time="0.114">
    </testcase>
    <testcase classname="ExamExerciseUpdateHighlighterComponent should highlight differences" name="ExamExerciseUpdateHighlighterComponent should highlight differences" time="0.024">
    </testcase>
    <testcase classname="ExamExerciseUpdateHighlighterComponent should display different problem statement after toggle method is called" name="ExamExerciseUpdateHighlighterComponent should display different problem statement after toggle method is called" time="0.062">
    </testcase>
    <testcase classname="ExamExerciseUpdateHighlighterComponent ExamExerciseUpdateHighlighterComponent for programming exercises should not highlight differences for programming exercise" name="ExamExerciseUpdateHighlighterComponent ExamExerciseUpdateHighlighterComponent for programming exercises should not highlight differences for programming exercise" time="0.047">
    </testcase>
  </testsuite>
  <testsuite name="GitDiffFilePanelComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:30" time="2.883" tests="7">
    <testcase classname="GitDiffFilePanelComponent Should extract file path" name="GitDiffFilePanelComponent Should extract file path" time="0.212">
    </testcase>
    <testcase classname="GitDiffFilePanelComponent Should set added/removed lines to 1-0" name="GitDiffFilePanelComponent Should set added/removed lines to 1-0" time="0.123">
    </testcase>
    <testcase classname="GitDiffFilePanelComponent Should set added/removed lines to 4-1" name="GitDiffFilePanelComponent Should set added/removed lines to 4-1" time="0.141">
    </testcase>
    <testcase classname="GitDiffFilePanelComponent Should set added/removed lines to 3-2" name="GitDiffFilePanelComponent Should set added/removed lines to 3-2" time="0.05">
    </testcase>
    <testcase classname="GitDiffFilePanelComponent Should set added/removed lines to 2-3" name="GitDiffFilePanelComponent Should set added/removed lines to 2-3" time="0.078">
    </testcase>
    <testcase classname="GitDiffFilePanelComponent Should set added/removed lines to 1-4" name="GitDiffFilePanelComponent Should set added/removed lines to 1-4" time="0.078">
    </testcase>
    <testcase classname="GitDiffFilePanelComponent Should set added/removed lines to 0-1" name="GitDiffFilePanelComponent Should set added/removed lines to 0-1" time="0.081">
    </testcase>
  </testsuite>
  <testsuite name="QuizExercise Management Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:29" time="4.668" tests="7">
    <testcase classname="QuizExercise Management Component should call loadExercises on init" name="QuizExercise Management Component should call loadExercises on init" time="0.25">
    </testcase>
    <testcase classname="QuizExercise Management Component should delete multiple quizzes" name="QuizExercise Management Component should delete multiple quizzes" time="0.019">
    </testcase>
    <testcase classname="QuizExercise Management Component should return quiz id" name="QuizExercise Management Component should return quiz id" time="0.016">
    </testcase>
    <testcase classname="QuizExercise Management Component QuizExercise Search Exercises should show all exercises" name="QuizExercise Management Component QuizExercise Search Exercises should show all exercises" time="0.011">
    </testcase>
    <testcase classname="QuizExercise Management Component QuizExercise Search Exercises should show no exercises" name="QuizExercise Management Component QuizExercise Search Exercises should show no exercises" time="0.009">
    </testcase>
    <testcase classname="QuizExercise Management Component should have working selection" name="QuizExercise Management Component should have working selection" time="0.009">
    </testcase>
    <testcase classname="QuizExercise Management Component should load one" name="QuizExercise Management Component should load one" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="TitleChannelNameComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:30" time="3.683" tests="14">
    <testcase classname="TitleChannelNameComponent should create" name="TitleChannelNameComponent should create" time="0.136">
    </testcase>
    <testcase classname="TitleChannelNameComponent should display title and channel name input fields with correct content" name="TitleChannelNameComponent should display title and channel name input fields with correct content" time="0.067">
    </testcase>
    <testcase classname="TitleChannelNameComponent should only display title input field if channel name is hidden" name="TitleChannelNameComponent should only display title input field if channel name is hidden" time="0.059">
    </testcase>
    <testcase classname="TitleChannelNameComponent should update channel name on title change" name="TitleChannelNameComponent should update channel name on title change" time="0.06">
    </testcase>
    <testcase classname="TitleChannelNameComponent init prefix if undefined" name="TitleChannelNameComponent init prefix if undefined" time="0.081">
    </testcase>
    <testcase classname="TitleChannelNameComponent init channel name based on prefix and title" name="TitleChannelNameComponent init channel name based on prefix and title" time="0.037">
    </testcase>
    <testcase classname="TitleChannelNameComponent init channel name based on prefix if title is undefined" name="TitleChannelNameComponent init channel name based on prefix if title is undefined" time="0.068">
    </testcase>
    <testcase classname="TitleChannelNameComponent remove special characters and trailing hyphens from channel name on init with non-empty title" name="TitleChannelNameComponent remove special characters and trailing hyphens from channel name on init with non-empty title" time="0.039">
    </testcase>
    <testcase classname="TitleChannelNameComponent don&apos;t remove trailing hyphens from channel name on init with empty title" name="TitleChannelNameComponent don&apos;t remove trailing hyphens from channel name on init with empty title" time="0.042">
    </testcase>
    <testcase classname="TitleChannelNameComponent don&apos;t remove trailing hyphens from channel name on init with undefined title" name="TitleChannelNameComponent don&apos;t remove trailing hyphens from channel name on init with undefined title" time="0.059">
    </testcase>
    <testcase classname="TitleChannelNameComponent remove trailing hyphens from channel name on title edit" name="TitleChannelNameComponent remove trailing hyphens from channel name on title edit" time="0.053">
    </testcase>
    <testcase classname="TitleChannelNameComponent don&apos;t remove trailing hyphens from channel name on title edit if title empty" name="TitleChannelNameComponent don&apos;t remove trailing hyphens from channel name on title edit if title empty" time="0.049">
    </testcase>
    <testcase classname="TitleChannelNameComponent don&apos;t remove trailing hyphens from channel name on channel name edit" name="TitleChannelNameComponent don&apos;t remove trailing hyphens from channel name on channel name edit" time="0.089">
    </testcase>
    <testcase classname="TitleChannelNameComponent don&apos;t init channel name if not allowed" name="TitleChannelNameComponent don&apos;t init channel name if not allowed" time="0.063">
    </testcase>
  </testsuite>
  <testsuite name="FileUploadExercise Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:34" time="1.726" tests="7">
    <testcase classname="FileUploadExercise Service should find an element" name="FileUploadExercise Service should find an element" time="0.033">
    </testcase>
    <testcase classname="FileUploadExercise Service should create a FileUploadExercise" name="FileUploadExercise Service should create a FileUploadExercise" time="0.019">
    </testcase>
    <testcase classname="FileUploadExercise Service should update a FileUploadExercise" name="FileUploadExercise Service should update a FileUploadExercise" time="0.01">
    </testcase>
    <testcase classname="FileUploadExercise Service should import a file upload exercise" name="FileUploadExercise Service should import a file upload exercise" time="0.01">
    </testcase>
    <testcase classname="FileUploadExercise Service should return a list of FileUploadExercise" name="FileUploadExercise Service should return a list of FileUploadExercise" time="0.017">
    </testcase>
    <testcase classname="FileUploadExercise Service should delete a FileUploadExercise" name="FileUploadExercise Service should delete a FileUploadExercise" time="0.037">
    </testcase>
    <testcase classname="FileUploadExercise Service should update and re-evaluate a FileUploadExercise" name="FileUploadExercise Service should update and re-evaluate a FileUploadExercise" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Programming Exercise Group Cell Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:34" time="2.548" tests="5">
    <testcase classname="Programming Exercise Group Cell Component sets buildPlanURLs correctly" name="Programming Exercise Group Cell Component sets buildPlanURLs correctly" time="0.122">
    </testcase>
    <testcase classname="Programming Exercise Group Cell Component should display short name" name="Programming Exercise Group Cell Component should display short name" time="0.011">
    </testcase>
    <testcase classname="Programming Exercise Group Cell Component should display respository url" name="Programming Exercise Group Cell Component should display respository url" time="0.016">
    </testcase>
    <testcase classname="Programming Exercise Group Cell Component should display editor mode flags" name="Programming Exercise Group Cell Component should display editor mode flags" time="0.023">
    </testcase>
    <testcase classname="Programming Exercise Group Cell Component should download the repository" name="Programming Exercise Group Cell Component should download the repository" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="IrisCourseSettingsUpdateComponent Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:33" time="3.784" tests="5">
    <testcase classname="IrisCourseSettingsUpdateComponent Component should create IrisCourseSettingsUpdateComponent" name="IrisCourseSettingsUpdateComponent Component should create IrisCourseSettingsUpdateComponent" time="0.318">
    </testcase>
    <testcase classname="IrisCourseSettingsUpdateComponent Component Setup works correctly" name="IrisCourseSettingsUpdateComponent Component Setup works correctly" time="0.152">
    </testcase>
    <testcase classname="IrisCourseSettingsUpdateComponent Component Can deactivate correctly" name="IrisCourseSettingsUpdateComponent Component Can deactivate correctly" time="0.097">
    </testcase>
    <testcase classname="IrisCourseSettingsUpdateComponent Component Saves settings correctly" name="IrisCourseSettingsUpdateComponent Component Saves settings correctly" time="0.118">
    </testcase>
    <testcase classname="IrisCourseSettingsUpdateComponent Component Fills the settings if they are empty" name="IrisCourseSettingsUpdateComponent Component Fills the settings if they are empty" time="0.131">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupSessionRowComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:36" time="1.904" tests="3">
    <testcase classname="TutorialGroupSessionRowComponent should display session canceled button when sessions are cancelled" name="TutorialGroupSessionRowComponent should display session canceled button when sessions are cancelled" time="0.202">
    </testcase>
    <testcase classname="TutorialGroupSessionRowComponent should save attendance count when input is changed" name="TutorialGroupSessionRowComponent should save attendance count when input is changed" time="0.079">
    </testcase>
    <testcase classname="TutorialGroupSessionRowComponent should reset attendance count when server call fails" name="TutorialGroupSessionRowComponent should reset attendance count when server call fails" time="0.088">
    </testcase>
  </testsuite>
  <testsuite name="LearningPathsTableComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:33" time="5.158" tests="6">
    <testcase classname="LearningPathsTableComponent should load learning paths" name="LearningPathsTableComponent should load learning paths" time="0.356">
    </testcase>
    <testcase classname="LearningPathsTableComponent should open competency graph modal" name="LearningPathsTableComponent should open competency graph modal" time="0.382">
    </testcase>
    <testcase classname="LearningPathsTableComponent should change page" name="LearningPathsTableComponent should change page" time="0.046">
    </testcase>
    <testcase classname="LearningPathsTableComponent should search for learning paths when the search term changes" name="LearningPathsTableComponent should search for learning paths when the search term changes" time="0.7">
    </testcase>
    <testcase classname="LearningPathsTableComponent should show error message when loading learning paths fails" name="LearningPathsTableComponent should show error message when loading learning paths fails" time="0.064">
    </testcase>
    <testcase classname="LearningPathsTableComponent should set isLoading correctly" name="LearningPathsTableComponent should set isLoading correctly" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="ChannelFormComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:37" time="2.642" tests="7">
    <testcase classname="ChannelFormComponent should create" name="ChannelFormComponent should create" time="0.232">
    </testcase>
    <testcase classname="ChannelFormComponent should block submit when channel name is missing" name="ChannelFormComponent should block submit when channel name is missing" time="0.213">
    </testcase>
    <testcase classname="ChannelFormComponent should block submit when channel name pattern is invalid" name="ChannelFormComponent should block submit when channel name pattern is invalid" time="0.272">
    </testcase>
    <testcase classname="ChannelFormComponent should not block submit when description is missing" name="ChannelFormComponent should not block submit when description is missing" time="0.16">
    </testcase>
    <testcase classname="ChannelFormComponent should block submit when description is too long" name="ChannelFormComponent should block submit when description is too long" time="0.158">
    </testcase>
    <testcase classname="ChannelFormComponent should submit valid form" name="ChannelFormComponent should submit valid form" time="0.112">
    </testcase>
    <testcase classname="ChannelFormComponent should emit channel type change event when channel type is changed" name="ChannelFormComponent should emit channel type change event when channel type is changed" time="0.142">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackDetailChannelModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:38" time="2.935" tests="7">
    <testcase classname="FeedbackDetailChannelModalComponent should initialize form and inputs" name="FeedbackDetailChannelModalComponent should initialize form and inputs" time="0.145">
    </testcase>
    <testcase classname="FeedbackDetailChannelModalComponent should call activeModal.close when closeModal is triggered" name="FeedbackDetailChannelModalComponent should call activeModal.close when closeModal is triggered" time="0.025">
    </testcase>
    <testcase classname="FeedbackDetailChannelModalComponent should call activeModal.dismiss when dismissModal is triggered" name="FeedbackDetailChannelModalComponent should call activeModal.dismiss when dismissModal is triggered" time="0.07">
    </testcase>
    <testcase classname="FeedbackDetailChannelModalComponent should open confirmation modal and emit formSubmitted on successful confirmation" name="FeedbackDetailChannelModalComponent should open confirmation modal and emit formSubmitted on successful confirmation" time="0.04">
    </testcase>
    <testcase classname="FeedbackDetailChannelModalComponent should call handleModal and proceed if confirmed" name="FeedbackDetailChannelModalComponent should call handleModal and proceed if confirmed" time="0.047">
    </testcase>
    <testcase classname="FeedbackDetailChannelModalComponent should not proceed if modal is dismissed" name="FeedbackDetailChannelModalComponent should not proceed if modal is dismissed" time="0.031">
    </testcase>
    <testcase classname="FeedbackDetailChannelModalComponent should not open confirmation modal if form is invalid" name="FeedbackDetailChannelModalComponent should not open confirmation modal if form is invalid" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExercise Edit Selected Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:38" time="2.968" tests="2">
    <testcase classname="ProgrammingExercise Edit Selected Component saveAll should update each selected exercise" name="ProgrammingExercise Edit Selected Component saveAll should update each selected exercise" time="0.271">
    </testcase>
    <testcase classname="ProgrammingExercise Edit Selected Component saveAll should display error and not close modal" name="ProgrammingExercise Edit Selected Component saveAll should display error and not close modal" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="CourseRegistrationButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:40" time="2.139" tests="7">
    <testcase classname="CourseRegistrationButtonComponent should disable unenrollment button when confirmation input is invalid" name="CourseRegistrationButtonComponent should disable unenrollment button when confirmation input is invalid" time="0.121">
    </testcase>
    <testcase classname="CourseRegistrationButtonComponent should enable unenrollment button when confirmation input is valid" name="CourseRegistrationButtonComponent should enable unenrollment button when confirmation input is valid" time="0.044">
    </testcase>
    <testcase classname="CourseRegistrationButtonComponent should alert success after unenrollment" name="CourseRegistrationButtonComponent should alert success after unenrollment" time="0.051">
    </testcase>
    <testcase classname="CourseRegistrationButtonComponent should navigate home after unenrollment" name="CourseRegistrationButtonComponent should navigate home after unenrollment" time="0.068">
    </testcase>
    <testcase classname="CourseRegistrationButtonComponent should alert error after unsuccessful unenrollment" name="CourseRegistrationButtonComponent should alert error after unsuccessful unenrollment" time="0.049">
    </testcase>
    <testcase classname="CourseRegistrationButtonComponent should report student can enroll again for valid" name="CourseRegistrationButtonComponent should report student can enroll again for valid" time="0.067">
    </testcase>
    <testcase classname="CourseRegistrationButtonComponent should not report student can enroll again for invalid" name="CourseRegistrationButtonComponent should not report student can enroll again for invalid" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="QuizQuestionListEditComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:37" time="4.765" tests="9">
    <testcase classname="QuizQuestionListEditComponent should add multiple choice question to quizQuestions and emit onQuestionAdded Output" name="QuizQuestionListEditComponent should add multiple choice question to quizQuestions and emit onQuestionAdded Output" time="1.431">
    </testcase>
    <testcase classname="QuizQuestionListEditComponent should add drag and drop question to quizQuestions and emit onQuestionAdded Output" name="QuizQuestionListEditComponent should add drag and drop question to quizQuestions and emit onQuestionAdded Output" time="0.066">
    </testcase>
    <testcase classname="QuizQuestionListEditComponent should add short answer question to quizQuestions and emit onQuestionAdded Output" name="QuizQuestionListEditComponent should add short answer question to quizQuestions and emit onQuestionAdded Output" time="0.08">
    </testcase>
    <testcase classname="QuizQuestionListEditComponent should toggle show hide existing questions flag" name="QuizQuestionListEditComponent should toggle show hide existing questions flag" time="0.072">
    </testcase>
    <testcase classname="QuizQuestionListEditComponent should add existing quiz questions to quizQuestions and toggle show hide existing questions flag" name="QuizQuestionListEditComponent should add existing quiz questions to quizQuestions and toggle show hide existing questions flag" time="0.049">
    </testcase>
    <testcase classname="QuizQuestionListEditComponent should emit onQuestionUpdated Output" name="QuizQuestionListEditComponent should emit onQuestionUpdated Output" time="0.076">
    </testcase>
    <testcase classname="QuizQuestionListEditComponent should delete question and emit onQuestionUpdated Output" name="QuizQuestionListEditComponent should delete question and emit onQuestionUpdated Output" time="0.101">
    </testcase>
    <testcase classname="QuizQuestionListEditComponent should add file" name="QuizQuestionListEditComponent should add file" time="0.078">
    </testcase>
    <testcase classname="QuizQuestionListEditComponent should remove file" name="QuizQuestionListEditComponent should remove file" time="0.069">
    </testcase>
  </testsuite>
  <testsuite name="WorkingTimeControlComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:41" time="1.222" tests="9">
    <testcase classname="WorkingTimeControlComponent should parse working time seconds to duration" name="WorkingTimeControlComponent should parse working time seconds to duration" time="0.096">
    </testcase>
    <testcase classname="WorkingTimeControlComponent should ignore relative working time extension when exam is not present" name="WorkingTimeControlComponent should ignore relative working time extension when exam is not present" time="0.012">
    </testcase>
    <testcase classname="WorkingTimeControlComponent should parse working time seconds to relative working time extension" name="WorkingTimeControlComponent should parse working time seconds to relative working time extension" time="0.015">
    </testcase>
    <testcase classname="WorkingTimeControlComponent should not show relative working time extension when exam is not present" name="WorkingTimeControlComponent should not show relative working time extension when exam is not present" time="0.011">
    </testcase>
    <testcase classname="WorkingTimeControlComponent should not show relative working time if `relative` is false" name="WorkingTimeControlComponent should not show relative working time if `relative` is false" time="0.013">
    </testcase>
    <testcase classname="WorkingTimeControlComponent should show relative working time if exam is present and `relative` is true" name="WorkingTimeControlComponent should show relative working time if exam is present and `relative` is true" time="0.016">
    </testcase>
    <testcase classname="WorkingTimeControlComponent should disable inputs when `disabled` is true" name="WorkingTimeControlComponent should disable inputs when `disabled` is true" time="0.03">
    </testcase>
    <testcase classname="WorkingTimeControlComponent should update the percent difference when the absolute working time changes" name="WorkingTimeControlComponent should update the percent difference when the absolute working time changes" time="0.018">
    </testcase>
    <testcase classname="WorkingTimeControlComponent should update the absolute working time when changing the percent difference" name="WorkingTimeControlComponent should update the absolute working time when changing the percent difference" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="CreateOnlineUnitComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:41" time="3.049" tests="1">
    <testcase classname="CreateOnlineUnitComponent should send POST request upon form submission and navigate" name="CreateOnlineUnitComponent should send POST request upon form submission and navigate" time="0.271">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupFreePeriodRowButtonsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:42" time="2.878" tests="3">
    <testcase classname="TutorialGroupFreePeriodRowButtonsComponent should initialize" name="TutorialGroupFreePeriodRowButtonsComponent should initialize" time="0.082">
    </testcase>
    <testcase classname="TutorialGroupFreePeriodRowButtonsComponent should open the edit free day dialog when the respective button is clicked" name="TutorialGroupFreePeriodRowButtonsComponent should open the edit free day dialog when the respective button is clicked" time="0.029">
    </testcase>
    <testcase classname="TutorialGroupFreePeriodRowButtonsComponent should call delete and emit deleted event" name="TutorialGroupFreePeriodRowButtonsComponent should call delete and emit deleted event" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="CompetencyCardComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:42" time="2.936" tests="7">
    <testcase classname="CompetencyCardComponent should calculate correct progress, confidence and mastery" name="CompetencyCardComponent should calculate correct progress, confidence and mastery" time="0.157">
    </testcase>
    <testcase classname="CompetencyCardComponent should display competency as mastered" name="CompetencyCardComponent should display competency as mastered" time="0.074">
    </testcase>
    <testcase classname="CompetencyCardComponent should display optional badge for optional competency" name="CompetencyCardComponent should display optional badge for optional competency" time="0.101">
    </testcase>
    <testcase classname="CompetencyCardComponent should not display optional badge for non-optional competency" name="CompetencyCardComponent should not display optional badge for non-optional competency" time="0.072">
    </testcase>
    <testcase classname="CompetencyCardComponent should detect if due date is passed" name="CompetencyCardComponent should detect if due date is passed" time="0.089">
    </testcase>
    <testcase classname="CompetencyCardComponent should have [ngClass] resolve to correct date badge" name="CompetencyCardComponent should have [ngClass] resolve to correct date badge" time="0.067">
    </testcase>
    <testcase classname="CompetencyCardComponent should have [ngClass] resolve to correct date badge" name="CompetencyCardComponent should have [ngClass] resolve to correct date badge" time="0.066">
    </testcase>
  </testsuite>
  <testsuite name="CourseCompetencies" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:42" time="4.498" tests="2">
    <testcase classname="CourseCompetencies should initialize" name="CourseCompetencies should initialize" time="0.245">
    </testcase>
    <testcase classname="CourseCompetencies should load prerequisites and competencies (with associated progress) and display a card for each of them" name="CourseCompetencies should load prerequisites and competencies (with associated progress) and display a card for each of them" time="0.109">
    </testcase>
  </testsuite>
  <testsuite name="CourseRegistrationDetailComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:45" time="2.419" tests="6">
    <testcase classname="CourseRegistrationDetailComponent should parse the courseId from the route" name="CourseRegistrationDetailComponent should parse the courseId from the route" time="0.105">
    </testcase>
    <testcase classname="CourseRegistrationDetailComponent should load the course using findOneForRegistration" name="CourseRegistrationDetailComponent should load the course using findOneForRegistration" time="0.048">
    </testcase>
    <testcase classname="CourseRegistrationDetailComponent should have a function isCourseFullyAccessible that returns true if the for-dashboard endpoint returns a 200" name="CourseRegistrationDetailComponent should have a function isCourseFullyAccessible that returns true if the for-dashboard endpoint returns a 200" time="0.02">
    </testcase>
    <testcase classname="CourseRegistrationDetailComponent should have a function isCourseFullyAccessible that returns false if the for-dashboard endpoint returns a 403" name="CourseRegistrationDetailComponent should have a function isCourseFullyAccessible that returns false if the for-dashboard endpoint returns a 403" time="0.018">
    </testcase>
    <testcase classname="CourseRegistrationDetailComponent should redirect to the course page if the dashboard version is fully accessible" name="CourseRegistrationDetailComponent should redirect to the course page if the dashboard version is fully accessible" time="0.019">
    </testcase>
    <testcase classname="CourseRegistrationDetailComponent should not redirect to the course page if the dashboard version is not fully accessible" name="CourseRegistrationDetailComponent should not redirect to the course page if the dashboard version is not fully accessible" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="CreateTutorialGroupsConfigurationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:45" time="2.093" tests="2">
    <testcase classname="CreateTutorialGroupsConfigurationComponent should initialize" name="CreateTutorialGroupsConfigurationComponent should initialize" time="0.187">
    </testcase>
    <testcase classname="CreateTutorialGroupsConfigurationComponent should send POST request upon form submission and navigate" name="CreateTutorialGroupsConfigurationComponent should send POST request upon form submission and navigate" time="0.039">
    </testcase>
  </testsuite>
  <testsuite name="Example Submission Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:47" time="1.482" tests="5">
    <testcase classname="Example Submission Service Service methods should create an example submission" name="Example Submission Service Service methods should create an example submission" time="0.066">
    </testcase>
    <testcase classname="Example Submission Service Service methods should update an example submission" name="Example Submission Service Service methods should update an example submission" time="0.018">
    </testcase>
    <testcase classname="Example Submission Service Service methods should delete an example submission" name="Example Submission Service Service methods should delete an example submission" time="0.017">
    </testcase>
    <testcase classname="Example Submission Service Service methods should return an example submission" name="Example Submission Service Service methods should return an example submission" time="0.02">
    </testcase>
    <testcase classname="Example Submission Service Service methods should import an example submission" name="Example Submission Service Service methods should import an example submission" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="SavedPostService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:47" time="2.398" tests="10">
    <testcase classname="SavedPostService should create" name="SavedPostService should create" time="0.01">
    </testcase>
    <testcase classname="SavedPostService Save post should save a post if given a Post model" name="SavedPostService Save post should save a post if given a Post model" time="0.027">
    </testcase>
    <testcase classname="SavedPostService Save post should save an answer if given AnswerPost model" name="SavedPostService Save post should save an answer if given AnswerPost model" time="0.004">
    </testcase>
    <testcase classname="SavedPostService Remove saved post should remove a post when provided with Post model" name="SavedPostService Remove saved post should remove a post when provided with Post model" time="0.003">
    </testcase>
    <testcase classname="SavedPostService Remove saved post should remove a answer when provided with AnswerPost model" name="SavedPostService Remove saved post should remove a answer when provided with AnswerPost model" time="0.003">
    </testcase>
    <testcase classname="SavedPostService Update saved post should update post status to PROGRESS if provided with Post model and PROGRESS" name="SavedPostService Update saved post should update post status to PROGRESS if provided with Post model and PROGRESS" time="0.003">
    </testcase>
    <testcase classname="SavedPostService Update saved post should update answer post status to COMPLETED if provided with AnswerPost model and COMPLETED" name="SavedPostService Update saved post should update answer post status to COMPLETED if provided with AnswerPost model and COMPLETED" time="0.004">
    </testcase>
    <testcase classname="SavedPostService Fetch saved posts should fetch saved posts and convert dates accordingly" name="SavedPostService Fetch saved posts should fetch saved posts and convert dates accordingly" time="0.005">
    </testcase>
    <testcase classname="SavedPostService Conversions of posts should convert posting to Post type" name="SavedPostService Conversions of posts should convert posting to Post type" time="0.003">
    </testcase>
    <testcase classname="SavedPostService Conversions of posts should convert posting to AnswerPost type" name="SavedPostService Conversions of posts should convert posting to AnswerPost type" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="ExamLiveEventsOverlayComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:49" time="2.08" tests="6">
    <testcase classname="ExamLiveEventsOverlayComponent should initialize unacknowledgedEvents and events based on observed events" name="ExamLiveEventsOverlayComponent should initialize unacknowledgedEvents and events based on observed events" time="0.176">
    </testcase>
    <testcase classname="ExamLiveEventsOverlayComponent should acknowledge an event" name="ExamLiveEventsOverlayComponent should acknowledge an event" time="0.018">
    </testcase>
    <testcase classname="ExamLiveEventsOverlayComponent should acknowledge all events" name="ExamLiveEventsOverlayComponent should acknowledge all events" time="0.011">
    </testcase>
    <testcase classname="ExamLiveEventsOverlayComponent should close overlay" name="ExamLiveEventsOverlayComponent should close overlay" time="0.008">
    </testcase>
    <testcase classname="ExamLiveEventsOverlayComponent should update events to display based on unacknowledgedEvents" name="ExamLiveEventsOverlayComponent should update events to display based on unacknowledgedEvents" time="0.006">
    </testcase>
    <testcase classname="ExamLiveEventsOverlayComponent should navigate to an exercise and acknowledge an event" name="ExamLiveEventsOverlayComponent should navigate to an exercise and acknowledge an event" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="ModelingExercise Management Detail Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:45" time="6.421" tests="2">
    <testcase classname="ModelingExercise Management Detail Component should load exercise on init" name="ModelingExercise Management Detail Component should load exercise on init" time="0.715">
    </testcase>
    <testcase classname="ModelingExercise Management Detail Component should destroy event manager on destroy" name="ModelingExercise Management Detail Component should destroy event manager on destroy" time="0.06">
    </testcase>
  </testsuite>
  <testsuite name="ManageAssessmentButtonsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:50" time="2.03" tests="9">
    <testcase classname="ManageAssessmentButtonsComponent should correctly initialize correctionRoundIndices" name="ManageAssessmentButtonsComponent should correctly initialize correctionRoundIndices" time="0.149">
    </testcase>
    <testcase classname="ManageAssessmentButtonsComponent should correctly initialize correctionRoundIndices" name="ManageAssessmentButtonsComponent should correctly initialize correctionRoundIndices" time="0.09">
    </testcase>
    <testcase classname="ManageAssessmentButtonsComponent should correctly initialize correctionRoundIndices" name="ManageAssessmentButtonsComponent should correctly initialize correctionRoundIndices" time="0.107">
    </testcase>
    <testcase classname="ManageAssessmentButtonsComponent newManualResultAllowed should not allow new manual results for quiz exercises" name="ManageAssessmentButtonsComponent newManualResultAllowed should not allow new manual results for quiz exercises" time="0.069">
    </testcase>
    <testcase classname="ManageAssessmentButtonsComponent newManualResultAllowed should not allow new manual results for practice mode exercise" name="ManageAssessmentButtonsComponent newManualResultAllowed should not allow new manual results for practice mode exercise" time="0.081">
    </testcase>
    <testcase classname="ManageAssessmentButtonsComponent newManualResultAllowed should allow new manual results for exam test runs" name="ManageAssessmentButtonsComponent newManualResultAllowed should allow new manual results for exam test runs" time="0.065">
    </testcase>
    <testcase classname="ManageAssessmentButtonsComponent newManualResultAllowed should allow new manual results for programming exercises with manual assessment" name="ManageAssessmentButtonsComponent newManualResultAllowed should allow new manual results for programming exercises with manual assessment" time="0.067">
    </testcase>
    <testcase classname="ManageAssessmentButtonsComponent getCorrectionRoundForAssessmentLink should increment the correction round if an accepted complaint is present" name="ManageAssessmentButtonsComponent getCorrectionRoundForAssessmentLink should increment the correction round if an accepted complaint is present" time="0.087">
    </testcase>
    <testcase classname="ManageAssessmentButtonsComponent getCorrectionRoundForAssessmentLink should not increment the correction round if the complaint did not get answered" name="ManageAssessmentButtonsComponent getCorrectionRoundForAssessmentLink should not increment the correction round if the complaint did not get answered" time="0.091">
    </testcase>
  </testsuite>
  <testsuite name="Edit Course LTI Configuration Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:47" time="5.114" tests="3">
    <testcase classname="Edit Course LTI Configuration Component should initialize" name="Edit Course LTI Configuration Component should initialize" time="1.176">
    </testcase>
    <testcase classname="Edit Course LTI Configuration Component OnInit should load course with online course configuration" name="Edit Course LTI Configuration Component OnInit should load course with online course configuration" time="0.22">
    </testcase>
    <testcase classname="Edit Course LTI Configuration Component should save upon form submission and navigate" name="Edit Course LTI Configuration Component should save upon form submission and navigate" time="0.2">
    </testcase>
  </testsuite>
  <testsuite name="DeleteUsersButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:52" time="1.569" tests="7">
    <testcase classname="DeleteUsersButtonComponent loadUserList List of users" name="DeleteUsersButtonComponent loadUserList List of users" time="0.034">
    </testcase>
    <testcase classname="DeleteUsersButtonComponent loadUserList Nothing to delete message" name="DeleteUsersButtonComponent loadUserList Nothing to delete message" time="0.02">
    </testcase>
    <testcase classname="DeleteUsersButtonComponent loadUserList Error response" name="DeleteUsersButtonComponent loadUserList Error response" time="0.008">
    </testcase>
    <testcase classname="DeleteUsersButtonComponent openDeleteDialog calls method" name="DeleteUsersButtonComponent openDeleteDialog calls method" time="0.007">
    </testcase>
    <testcase classname="DeleteUsersButtonComponent onConfirm Users to delete" name="DeleteUsersButtonComponent onConfirm Users to delete" time="0.008">
    </testcase>
    <testcase classname="DeleteUsersButtonComponent onConfirm Error response" name="DeleteUsersButtonComponent onConfirm Error response" time="0.011">
    </testcase>
    <testcase classname="DeleteUsersButtonComponent onConfirm Empty users list" name="DeleteUsersButtonComponent onConfirm Empty users list" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Team Exercise Search Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:53" time="1.836" tests="11">
    <testcase classname="Team Exercise Search Component formats the search result with release date" name="Team Exercise Search Component formats the search result with release date" time="0.019">
    </testcase>
    <testcase classname="Team Exercise Search Component formats the search result without release date" name="Team Exercise Search Component formats the search result without release date" time="0.007">
    </testcase>
    <testcase classname="Team Exercise Search Component onAutocompleteSelect" name="Team Exercise Search Component onAutocompleteSelect" time="0.007">
    </testcase>
    <testcase classname="Team Exercise Search Component searchInputFormatter" name="Team Exercise Search Component searchInputFormatter" time="0.021">
    </testcase>
    <testcase classname="Team Exercise Search Component searchMatchesExercise with exact term" name="Team Exercise Search Component searchMatchesExercise with exact term" time="0.01">
    </testcase>
    <testcase classname="Team Exercise Search Component searchMatchesExercise with lowercase term" name="Team Exercise Search Component searchMatchesExercise with lowercase term" time="0.02">
    </testcase>
    <testcase classname="Team Exercise Search Component searchMatchesExercise with partial term start" name="Team Exercise Search Component searchMatchesExercise with partial term start" time="0.008">
    </testcase>
    <testcase classname="Team Exercise Search Component searchMatchesExercise with partial term end" name="Team Exercise Search Component searchMatchesExercise with partial term end" time="0.008">
    </testcase>
    <testcase classname="Team Exercise Search Component searchMatchesExercise without whitespace" name="Team Exercise Search Component searchMatchesExercise without whitespace" time="0.01">
    </testcase>
    <testcase classname="Team Exercise Search Component searchMatchesExercise with incorrect searchTerm" name="Team Exercise Search Component searchMatchesExercise with incorrect searchTerm" time="0.009">
    </testcase>
    <testcase classname="Team Exercise Search Component successfully loads the exercise options" name="Team Exercise Search Component successfully loads the exercise options" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="ApollonDiagramList Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:52" time="2.299" tests="6">
    <testcase classname="ApollonDiagramList Component ngOnInit" name="ApollonDiagramList Component ngOnInit" time="0.129">
    </testcase>
    <testcase classname="ApollonDiagramList Component delete" name="ApollonDiagramList Component delete" time="0.012">
    </testcase>
    <testcase classname="ApollonDiagramList Component openCreateDiagramDialog" name="ApollonDiagramList Component openCreateDiagramDialog" time="0.01">
    </testcase>
    <testcase classname="ApollonDiagramList Component getTitleForApollonDiagram" name="ApollonDiagramList Component getTitleForApollonDiagram" time="0.01">
    </testcase>
    <testcase classname="ApollonDiagramList Component handleOpenDialogClick" name="ApollonDiagramList Component handleOpenDialogClick" time="0.013">
    </testcase>
    <testcase classname="ApollonDiagramList Component handleCloseDiagramClick" name="ApollonDiagramList Component handleCloseDiagramClick" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupsConfigurationFormComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:54" time="2.897" tests="5">
    <testcase classname="TutorialGroupsConfigurationFormComponent should initialize" name="TutorialGroupsConfigurationFormComponent should initialize" time="0.313">
    </testcase>
    <testcase classname="TutorialGroupsConfigurationFormComponent should correctly set form values in edit mode" name="TutorialGroupsConfigurationFormComponent should correctly set form values in edit mode" time="0.153">
    </testcase>
    <testcase classname="TutorialGroupsConfigurationFormComponent should show channel deletion warning when channel option is disabled in edit mode" name="TutorialGroupsConfigurationFormComponent should show channel deletion warning when channel option is disabled in edit mode" time="0.233">
    </testcase>
    <testcase classname="TutorialGroupsConfigurationFormComponent should submit valid form" name="TutorialGroupsConfigurationFormComponent should submit valid form" time="0.153">
    </testcase>
    <testcase classname="TutorialGroupsConfigurationFormComponent should block submit when required property is missing" name="TutorialGroupsConfigurationFormComponent should block submit when required property is missing" time="0.111">
    </testcase>
  </testsuite>
  <testsuite name="HeaderParticipationPage" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:51" time="5.898" tests="6">
    <testcase classname="HeaderParticipationPage should set the status badge" name="HeaderParticipationPage should set the status badge" time="0.37">
    </testcase>
    <testcase classname="HeaderParticipationPage should always publish the results for regular exercises" name="HeaderParticipationPage should always publish the results for regular exercises" time="0.139">
    </testcase>
    <testcase classname="HeaderParticipationPage should only publish the results for exam exercises after the publishing date" name="HeaderParticipationPage should only publish the results for exam exercises after the publishing date" time="0.112">
    </testcase>
    <testcase classname="HeaderParticipationPage should not apply changes if no exercise is set" name="HeaderParticipationPage should not apply changes if no exercise is set" time="0.066">
    </testcase>
    <testcase classname="HeaderParticipationPage should display achieved points accordingly" name="HeaderParticipationPage should display achieved points accordingly" time="0.038">
    </testcase>
    <testcase classname="HeaderParticipationPage should select the result with later completion date even if its id is lower" name="HeaderParticipationPage should select the result with later completion date even if its id is lower" time="0.064">
    </testcase>
  </testsuite>
  <testsuite name="ExamStudentsAttendanceCheckComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:55" time="2.795" tests="4">
    <testcase classname="ExamStudentsAttendanceCheckComponent should initialize" name="ExamStudentsAttendanceCheckComponent should initialize" time="0.195">
    </testcase>
    <testcase classname="ExamStudentsAttendanceCheckComponent should test on error" name="ExamStudentsAttendanceCheckComponent should test on error" time="0.087">
    </testcase>
    <testcase classname="ExamStudentsAttendanceCheckComponent should test on sort" name="ExamStudentsAttendanceCheckComponent should test on sort" time="0.101">
    </testcase>
    <testcase classname="ExamStudentsAttendanceCheckComponent should call exam management service" name="ExamStudentsAttendanceCheckComponent should call exam management service" time="0.15">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseFeedbackSuggestionOptionsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:55" time="2.949" tests="9">
    <testcase classname="ExerciseFeedbackSuggestionOptionsComponent should create" name="ExerciseFeedbackSuggestionOptionsComponent should create" time="0.111">
    </testcase>
    <testcase classname="ExerciseFeedbackSuggestionOptionsComponent should initialize with available modules" name="ExerciseFeedbackSuggestionOptionsComponent should initialize with available modules" time="0.016">
    </testcase>
    <testcase classname="ExerciseFeedbackSuggestionOptionsComponent should set isAthenaEnabled$ with the result from athenaService" name="ExerciseFeedbackSuggestionOptionsComponent should set isAthenaEnabled$ with the result from athenaService" time="0.036">
    </testcase>
    <testcase classname="ExerciseFeedbackSuggestionOptionsComponent should disable input controls for programming exercises with automatic assessment type or read-only" name="ExerciseFeedbackSuggestionOptionsComponent should disable input controls for programming exercises with automatic assessment type or read-only" time="0.015">
    </testcase>
    <testcase classname="ExerciseFeedbackSuggestionOptionsComponent should disable input controls if due date has passed" name="ExerciseFeedbackSuggestionOptionsComponent should disable input controls if due date has passed" time="0.009">
    </testcase>
    <testcase classname="ExerciseFeedbackSuggestionOptionsComponent should return grey color for checkbox label style for automatic programming exercises" name="ExerciseFeedbackSuggestionOptionsComponent should return grey color for checkbox label style for automatic programming exercises" time="0.019">
    </testcase>
    <testcase classname="ExerciseFeedbackSuggestionOptionsComponent should return an empty object for checkbox label style for non-automatic programming exercises" name="ExerciseFeedbackSuggestionOptionsComponent should return an empty object for checkbox label style for non-automatic programming exercises" time="0.012">
    </testcase>
    <testcase classname="ExerciseFeedbackSuggestionOptionsComponent should toggle feedback suggestions and set the module for programming exercises" name="ExerciseFeedbackSuggestionOptionsComponent should toggle feedback suggestions and set the module for programming exercises" time="0.012">
    </testcase>
    <testcase classname="ExerciseFeedbackSuggestionOptionsComponent should toggle feedback requests and set the module for text exercises" name="ExerciseFeedbackSuggestionOptionsComponent should toggle feedback requests and set the module for text exercises" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Submission Policy Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:57" time="1.212" tests="7">
    <testcase classname="Submission Policy Service Invoke submission policy service methods should add submission policy to exercise" name="Submission Policy Service Invoke submission policy service methods should add submission policy to exercise" time="0.023">
    </testcase>
    <testcase classname="Submission Policy Service Invoke submission policy service methods should update submission policy of exercise" name="Submission Policy Service Invoke submission policy service methods should update submission policy of exercise" time="0.007">
    </testcase>
    <testcase classname="Submission Policy Service Invoke submission policy service methods should get submission policy from exercise" name="Submission Policy Service Invoke submission policy service methods should get submission policy from exercise" time="0.007">
    </testcase>
    <testcase classname="Submission Policy Service Invoke submission policy service methods should get submission policy from exercise" name="Submission Policy Service Invoke submission policy service methods should get submission policy from exercise" time="0.006">
    </testcase>
    <testcase classname="Submission Policy Service Invoke submission policy service methods should issue delete request" name="Submission Policy Service Invoke submission policy service methods should issue delete request" time="0.006">
    </testcase>
    <testcase classname="Submission Policy Service Invoke submission policy service methods should issue enable request" name="Submission Policy Service Invoke submission policy service methods should issue enable request" time="0.007">
    </testcase>
    <testcase classname="Submission Policy Service Invoke submission policy service methods should issue disable request" name="Submission Policy Service Invoke submission policy service methods should issue disable request" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Directive: SortByDirective" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:58" time="1.485" tests="6">
    <testcase classname="Directive: SortByDirective should initialize predicate, order, icon when initial component predicate is _score" name="Directive: SortByDirective should initialize predicate, order, icon when initial component predicate is _score" time="0.091">
    </testcase>
    <testcase classname="Directive: SortByDirective should initialize predicate, order, icon when initial component predicate differs from column predicate" name="Directive: SortByDirective should initialize predicate, order, icon when initial component predicate differs from column predicate" time="0.027">
    </testcase>
    <testcase classname="Directive: SortByDirective should initialize predicate, order, icon when initial component predicate is same as column predicate" name="Directive: SortByDirective should initialize predicate, order, icon when initial component predicate is same as column predicate" time="0.018">
    </testcase>
    <testcase classname="Directive: SortByDirective should initialize predicate, order, icon when initial component predicate is _score and user clicks on column header" name="Directive: SortByDirective should initialize predicate, order, icon when initial component predicate is _score and user clicks on column header" time="0.022">
    </testcase>
    <testcase classname="Directive: SortByDirective should update component predicate, order, icon when user clicks on column header" name="Directive: SortByDirective should update component predicate, order, icon when user clicks on column header" time="0.042">
    </testcase>
    <testcase classname="Directive: SortByDirective should update component predicate, order, icon when user double clicks on column header" name="Directive: SortByDirective should update component predicate, order, icon when user double clicks on column header" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackFilterModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:57" time="2.965" tests="9">
    <testcase classname="FeedbackFilterModalComponent should initialize filters correctly" name="FeedbackFilterModalComponent should initialize filters correctly" time="0.112">
    </testcase>
    <testcase classname="FeedbackFilterModalComponent should call localStorage store when applying filters" name="FeedbackFilterModalComponent should call localStorage store when applying filters" time="0.044">
    </testcase>
    <testcase classname="FeedbackFilterModalComponent should clear filters and reset them correctly" name="FeedbackFilterModalComponent should clear filters and reset them correctly" time="0.027">
    </testcase>
    <testcase classname="FeedbackFilterModalComponent should update filters when checkboxes change for tasks" name="FeedbackFilterModalComponent should update filters when checkboxes change for tasks" time="0.019">
    </testcase>
    <testcase classname="FeedbackFilterModalComponent should update filters when checkboxes change for errorCategories" name="FeedbackFilterModalComponent should update filters when checkboxes change for errorCategories" time="0.028">
    </testcase>
    <testcase classname="FeedbackFilterModalComponent should update filters when checkboxes change for occurrence" name="FeedbackFilterModalComponent should update filters when checkboxes change for occurrence" time="0.016">
    </testcase>
    <testcase classname="FeedbackFilterModalComponent should remove the value from filters when checkbox is unchecked for tasks" name="FeedbackFilterModalComponent should remove the value from filters when checkbox is unchecked for tasks" time="0.032">
    </testcase>
    <testcase classname="FeedbackFilterModalComponent should remove the value from filters when checkbox is unchecked for errorCategories" name="FeedbackFilterModalComponent should remove the value from filters when checkbox is unchecked for errorCategories" time="0.025">
    </testcase>
    <testcase classname="FeedbackFilterModalComponent should dismiss modal when closeModal is called" name="FeedbackFilterModalComponent should dismiss modal when closeModal is called" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="TextAssessmentAnalytics Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:58" time="2.371" tests="6">
    <testcase classname="TextAssessmentAnalytics Service should send assessment event if artemis analytics is enabled" name="TextAssessmentAnalytics Service should send assessment event if artemis analytics is enabled" time="0.013">
    </testcase>
    <testcase classname="TextAssessmentAnalytics Service should not send assessment event if artemis analytics is enabled" name="TextAssessmentAnalytics Service should not send assessment event if artemis analytics is enabled" time="0.004">
    </testcase>
    <testcase classname="TextAssessmentAnalytics Service should not send assessment event if on example submission path" name="TextAssessmentAnalytics Service should not send assessment event if on example submission path" time="0.007">
    </testcase>
    <testcase classname="TextAssessmentAnalytics Service should subscribe to route parameters if artemis analytics is enabled" name="TextAssessmentAnalytics Service should subscribe to route parameters if artemis analytics is enabled" time="0.005">
    </testcase>
    <testcase classname="TextAssessmentAnalytics Service should display error when submitting event to the server" name="TextAssessmentAnalytics Service should display error when submitting event to the server" time="0.005">
    </testcase>
    <testcase classname="TextAssessmentAnalytics Service should not subscribe to route parameters if artemis analytics is disabled" name="TextAssessmentAnalytics Service should not subscribe to route parameters if artemis analytics is disabled" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="FileUploadExerciseManagementResolve" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:00" time="1.216" tests="5">
    <testcase classname="FileUploadExerciseManagementResolve should process empty params correctly" name="FileUploadExerciseManagementResolve should process empty params correctly" time="0.033">
    </testcase>
    <testcase classname="FileUploadExerciseManagementResolve should process exercise ID correctly" name="FileUploadExerciseManagementResolve should process exercise ID correctly" time="0.009">
    </testcase>
    <testcase classname="FileUploadExerciseManagementResolve should process course ID without exam ID and exercise Group ID correctly" name="FileUploadExerciseManagementResolve should process course ID without exam ID and exercise Group ID correctly" time="0.009">
    </testcase>
    <testcase classname="FileUploadExerciseManagementResolve should process course ID with exam ID and without exercise Group ID correctly" name="FileUploadExerciseManagementResolve should process course ID with exam ID and without exercise Group ID correctly" time="0.01">
    </testcase>
    <testcase classname="FileUploadExerciseManagementResolve should process course ID with exam ID and exercise Group ID correctly" name="FileUploadExerciseManagementResolve should process course ID with exam ID and exercise Group ID correctly" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="SystemNotificationManagementUpdateComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:58" time="3.244" tests="8">
    <testcase classname="SystemNotificationManagementUpdateComponent should initialize" name="SystemNotificationManagementUpdateComponent should initialize" time="0.264">
    </testcase>
    <testcase classname="SystemNotificationManagementUpdateComponent navigate back if cancel is clicked" name="SystemNotificationManagementUpdateComponent navigate back if cancel is clicked" time="0.076">
    </testcase>
    <testcase classname="SystemNotificationManagementUpdateComponent should update / create if save is clicked" name="SystemNotificationManagementUpdateComponent should update / create if save is clicked" time="0.104">
    </testcase>
    <testcase classname="SystemNotificationManagementUpdateComponent should require required fields" name="SystemNotificationManagementUpdateComponent should require required fields" time="0.07">
    </testcase>
    <testcase classname="SystemNotificationManagementUpdateComponent should require required fields" name="SystemNotificationManagementUpdateComponent should require required fields" time="0.101">
    </testcase>
    <testcase classname="SystemNotificationManagementUpdateComponent should require required fields" name="SystemNotificationManagementUpdateComponent should require required fields" time="0.088">
    </testcase>
    <testcase classname="SystemNotificationManagementUpdateComponent should require required fields" name="SystemNotificationManagementUpdateComponent should require required fields" time="0.079">
    </testcase>
    <testcase classname="SystemNotificationManagementUpdateComponent should ensure that notification date is before expire date" name="SystemNotificationManagementUpdateComponent should ensure that notification date is before expire date" time="0.074">
    </testcase>
  </testsuite>
  <testsuite name="CourseRegistrationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:00" time="2.389" tests="7">
    <testcase classname="CourseRegistrationComponent should show registrable courses" name="CourseRegistrationComponent should show registrable courses" time="0.204">
    </testcase>
    <testcase classname="CourseRegistrationComponent should be able to remove courses from its list" name="CourseRegistrationComponent should be able to remove courses from its list" time="0.05">
    </testcase>
    <testcase classname="CourseRegistrationComponent should filter registrable courses based on search term" name="CourseRegistrationComponent should filter registrable courses based on search term" time="0.047">
    </testcase>
    <testcase classname="CourseRegistrationComponent should sort registrable courses by title in ascending order" name="CourseRegistrationComponent should sort registrable courses by title in ascending order" time="0.069">
    </testcase>
    <testcase classname="CourseRegistrationComponent should sort registrable courses by title in descending order" name="CourseRegistrationComponent should sort registrable courses by title in descending order" time="0.046">
    </testcase>
    <testcase classname="CourseRegistrationComponent should sort registrable courses by semester in ascending order" name="CourseRegistrationComponent should sort registrable courses by semester in ascending order" time="0.075">
    </testcase>
    <testcase classname="CourseRegistrationComponent should sort registrable courses by semester in descending order" name="CourseRegistrationComponent should sort registrable courses by semester in descending order" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="StandardizedCompetencyEditComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:21:59" time="3.368" tests="9">
    <testcase classname="StandardizedCompetencyEditComponent should initialize" name="StandardizedCompetencyEditComponent should initialize" time="0.487">
    </testcase>
    <testcase classname="StandardizedCompetencyEditComponent should set form values to competency" name="StandardizedCompetencyEditComponent should set form values to competency" time="0.097">
    </testcase>
    <testcase classname="StandardizedCompetencyEditComponent should disable/enable when setting edit mode" name="StandardizedCompetencyEditComponent should disable/enable when setting edit mode" time="0.116">
    </testcase>
    <testcase classname="StandardizedCompetencyEditComponent should save" name="StandardizedCompetencyEditComponent should save" time="0.069">
    </testcase>
    <testcase classname="StandardizedCompetencyEditComponent should cancel and close" name="StandardizedCompetencyEditComponent should cancel and close" time="0.081">
    </testcase>
    <testcase classname="StandardizedCompetencyEditComponent should cancel and close" name="StandardizedCompetencyEditComponent should cancel and close" time="0.081">
    </testcase>
    <testcase classname="StandardizedCompetencyEditComponent should delete" name="StandardizedCompetencyEditComponent should delete" time="0.081">
    </testcase>
    <testcase classname="StandardizedCompetencyEditComponent should close" name="StandardizedCompetencyEditComponent should close" time="0.091">
    </testcase>
    <testcase classname="StandardizedCompetencyEditComponent should update description" name="StandardizedCompetencyEditComponent should update description" time="0.122">
    </testcase>
  </testsuite>
  <testsuite name="CourseSettingCategoryDirective" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:02" time="1.319" tests="8">
    <testcase classname="CourseSettingCategoryDirective should create an instance" name="CourseSettingCategoryDirective should create an instance" time="0.034">
    </testcase>
    <testcase classname="CourseSettingCategoryDirective should set courseId from route params and call onCourseIdAvailable" name="CourseSettingCategoryDirective should set courseId from route params and call onCourseIdAvailable" time="0.008">
    </testcase>
    <testcase classname="CourseSettingCategoryDirective should get course from storage service on init" name="CourseSettingCategoryDirective should get course from storage service on init" time="0.008">
    </testcase>
    <testcase classname="CourseSettingCategoryDirective should subscribe to course updates" name="CourseSettingCategoryDirective should subscribe to course updates" time="0.009">
    </testcase>
    <testcase classname="CourseSettingCategoryDirective should unsubscribe from observables when destroyed" name="CourseSettingCategoryDirective should unsubscribe from observables when destroyed" time="0.041">
    </testcase>
    <testcase classname="CourseSettingCategoryDirective should handle undefined parent route gracefully" name="CourseSettingCategoryDirective should handle undefined parent route gracefully" time="0.019">
    </testcase>
    <testcase classname="CourseSettingCategoryDirective should handle route parameter changes" name="CourseSettingCategoryDirective should handle route parameter changes" time="0.011">
    </testcase>
    <testcase classname="CourseSettingCategoryDirective should handle null course from storage service" name="CourseSettingCategoryDirective should handle null course from storage service" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Course LTI Configuration Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:01" time="3.416" tests="4">
    <testcase classname="Course LTI Configuration Component should initialize" name="Course LTI Configuration Component should initialize" time="0.496">
    </testcase>
    <testcase classname="Course LTI Configuration Component OnInit should load course and exercises" name="Course LTI Configuration Component OnInit should load course and exercises" time="0.184">
    </testcase>
    <testcase classname="Course LTI Configuration Component should display exercises in exercise tab" name="Course LTI Configuration Component should display exercises in exercise tab" time="0.276">
    </testcase>
    <testcase classname="Course LTI Configuration Component should call sortService when sortRows is called" name="Course LTI Configuration Component should call sortService when sortRows is called" time="0.099">
    </testcase>
  </testsuite>
  <testsuite name="External Submission Dialog" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:02" time="3.969" tests="5">
    <testcase classname="External Submission Dialog should get initial result on init" name="External Submission Dialog should get initial result on init" time="0.18">
    </testcase>
    <testcase classname="External Submission Dialog should dismiss the modal on clear" name="External Submission Dialog should dismiss the modal on clear" time="0.014">
    </testcase>
    <testcase classname="External Submission Dialog should save feedback correctly" name="External Submission Dialog should save feedback correctly" time="0.043">
    </testcase>
    <testcase classname="External Submission Dialog should set isSaving to false on saveError" name="External Submission Dialog should set isSaving to false on saveError" time="0.098">
    </testcase>
    <testcase classname="External Submission Dialog should add a new feedback on pushFeedback and remove last on popFeedback" name="External Submission Dialog should add a new feedback on pushFeedback and remove last on popFeedback" time="0.045">
    </testcase>
  </testsuite>
  <testsuite name="MetricsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:04" time="3.429" tests="4">
    <testcase classname="MetricsComponent refresh should call refresh on init" name="MetricsComponent refresh should call refresh on init" time="0.58">
    </testcase>
    <testcase classname="MetricsComponent should call refresh on init" name="MetricsComponent should call refresh on init" time="0.084">
    </testcase>
    <testcase classname="MetricsComponent metricsKeyExists method should work correctly" name="MetricsComponent metricsKeyExists method should work correctly" time="0.059">
    </testcase>
    <testcase classname="MetricsComponent metricsKeyExistsAndObjectNotEmpty method should work correctly" name="MetricsComponent metricsKeyExistsAndObjectNotEmpty method should work correctly" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="TextExercise Management Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:03" time="4.426" tests="6">
    <testcase classname="TextExercise Management Component should call loadExercises on init" name="TextExercise Management Component should call loadExercises on init" time="0.378">
    </testcase>
    <testcase classname="TextExercise Management Component should open import modal" name="TextExercise Management Component should open import modal" time="0.189">
    </testcase>
    <testcase classname="TextExercise Management Component should return exercise id" name="TextExercise Management Component should return exercise id" time="0.034">
    </testcase>
    <testcase classname="TextExercise Management Component TextExercise Search Exercises should show all exercises" name="TextExercise Management Component TextExercise Search Exercises should show all exercises" time="0.037">
    </testcase>
    <testcase classname="TextExercise Management Component TextExercise Search Exercises should show no exercises" name="TextExercise Management Component TextExercise Search Exercises should show no exercises" time="0.047">
    </testcase>
    <testcase classname="TextExercise Management Component should have working selection" name="TextExercise Management Component should have working selection" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="AccountInformationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:07" time="3.163" tests="7">
    <testcase classname="AccountInformationComponent should initialize and fetch current user" name="AccountInformationComponent should initialize and fetch current user" time="0.092">
    </testcase>
    <testcase classname="AccountInformationComponent should open image cropper modal when setting user image" name="AccountInformationComponent should open image cropper modal when setting user image" time="0.017">
    </testcase>
    <testcase classname="AccountInformationComponent should call removeProfilePicture when deleting user image" name="AccountInformationComponent should call removeProfilePicture when deleting user image" time="0.007">
    </testcase>
    <testcase classname="AccountInformationComponent should update user image on successful upload" name="AccountInformationComponent should update user image on successful upload" time="0.006">
    </testcase>
    <testcase classname="AccountInformationComponent should show error alert when image upload fails" name="AccountInformationComponent should show error alert when image upload fails" time="0.008">
    </testcase>
    <testcase classname="AccountInformationComponent should show error alert when profile picture removal fails" name="AccountInformationComponent should show error alert when profile picture removal fails" time="0.012">
    </testcase>
    <testcase classname="AccountInformationComponent should show error alert when profile picture upload fails" name="AccountInformationComponent should show error alert when profile picture upload fails" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="FileUploadExercise Management Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:08" time="2.312" tests="6">
    <testcase classname="FileUploadExercise Management Component should call loadExercises on init" name="FileUploadExercise Management Component should call loadExercises on init" time="0.257">
    </testcase>
    <testcase classname="FileUploadExercise Management Component should delete exercise" name="FileUploadExercise Management Component should delete exercise" time="0.023">
    </testcase>
    <testcase classname="FileUploadExercise Management Component should return exercise id" name="FileUploadExercise Management Component should return exercise id" time="0.01">
    </testcase>
    <testcase classname="FileUploadExercise Management Component FileUploadExercise Search Exercises should show all exercises" name="FileUploadExercise Management Component FileUploadExercise Search Exercises should show all exercises" time="0.008">
    </testcase>
    <testcase classname="FileUploadExercise Management Component FileUploadExercise Search Exercises should show no exercises" name="FileUploadExercise Management Component FileUploadExercise Search Exercises should show no exercises" time="0.01">
    </testcase>
    <testcase classname="FileUploadExercise Management Component should have working selection" name="FileUploadExercise Management Component should have working selection" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="MessageInlineInputComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:05" time="5.22" tests="4">
    <testcase classname="MessageInlineInputComponent should invoke metis service with created post" name="MessageInlineInputComponent should invoke metis service with created post" time="0.577">
    </testcase>
    <testcase classname="MessageInlineInputComponent should stop loading when metis service throws error during message creation" name="MessageInlineInputComponent should stop loading when metis service throws error during message creation" time="0.073">
    </testcase>
    <testcase classname="MessageInlineInputComponent should invoke metis service with edited post" name="MessageInlineInputComponent should invoke metis service with edited post" time="0.121">
    </testcase>
    <testcase classname="MessageInlineInputComponent should stop loading when metis service throws error during message updating" name="MessageInlineInputComponent should stop loading when metis service throws error during message updating" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="CropService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:11" time="0.792" tests="6">
    <testcase classname="CropService #getResizeRatio when onlyScaleDown is false when resizeToWidth is set" name="CropService #getResizeRatio when onlyScaleDown is false when resizeToWidth is set" time="0.002">
    </testcase>
    <testcase classname="CropService #getResizeRatio when onlyScaleDown is false when resizeToHeight is set" name="CropService #getResizeRatio when onlyScaleDown is false when resizeToHeight is set" time="0.001">
    </testcase>
    <testcase classname="CropService #getResizeRatio when onlyScaleDown is false when resizeToWidth and resizeToHeight is set" name="CropService #getResizeRatio when onlyScaleDown is false when resizeToWidth and resizeToHeight is set" time="0.021">
    </testcase>
    <testcase classname="CropService #getResizeRatio when onlyScaleDown is true when resizeToWidth is set" name="CropService #getResizeRatio when onlyScaleDown is true when resizeToWidth is set" time="0.002">
    </testcase>
    <testcase classname="CropService #getResizeRatio when onlyScaleDown is true when resizeToHeight is set" name="CropService #getResizeRatio when onlyScaleDown is true when resizeToHeight is set" time="0.001">
    </testcase>
    <testcase classname="CropService #getResizeRatio when onlyScaleDown is true when resizeToWidth and resizeToHeight is set" name="CropService #getResizeRatio when onlyScaleDown is true when resizeToWidth and resizeToHeight is set" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Exercise Update Plagiarism Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:11" time="1.523" tests="9">
    <testcase classname="Exercise Update Plagiarism Component should use provided plagiarism checks config" name="Exercise Update Plagiarism Component should use provided plagiarism checks config" time="0.003">
    </testcase>
    <testcase classname="Exercise Update Plagiarism Component should use default if exercise does not have plagiarism checks config" name="Exercise Update Plagiarism Component should use default if exercise does not have plagiarism checks config" time="0.001">
    </testcase>
    <testcase classname="Exercise Update Plagiarism Component should set minimumSizeTooltip on init" name="Exercise Update Plagiarism Component should set minimumSizeTooltip on init" time="0.001">
    </testcase>
    <testcase classname="Exercise Update Plagiarism Component should set default plagiarism detection config on init if not set" name="Exercise Update Plagiarism Component should set default plagiarism detection config on init if not set" time="0.001">
    </testcase>
    <testcase classname="Exercise Update Plagiarism Component should enable cpc" name="Exercise Update Plagiarism Component should enable cpc" time="0.001">
    </testcase>
    <testcase classname="Exercise Update Plagiarism Component should disable cpc" name="Exercise Update Plagiarism Component should disable cpc" time="0.001">
    </testcase>
    <testcase classname="Exercise Update Plagiarism Component should get correct minimumSizeTooltip for programming exercises" name="Exercise Update Plagiarism Component should get correct minimumSizeTooltip for programming exercises" time="0.001">
    </testcase>
    <testcase classname="Exercise Update Plagiarism Component should get correct minimumSizeTooltip for text exercises" name="Exercise Update Plagiarism Component should get correct minimumSizeTooltip for text exercises" time="0.002">
    </testcase>
    <testcase classname="Exercise Update Plagiarism Component should aggregate aggregate input changes" name="Exercise Update Plagiarism Component should aggregate aggregate input changes" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Sort Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:12" time="0.917" tests="15">
    <testcase classname="Sort Service Service methods should sort basic array" name="Sort Service Service methods should sort basic array" time="0.031">
    </testcase>
    <testcase classname="Sort Service Service methods should sort basic array" name="Sort Service Service methods should sort basic array" time="0.007">
    </testcase>
    <testcase classname="Sort Service Service methods should sort basic array" name="Sort Service Service methods should sort basic array" time="0.033">
    </testcase>
    <testcase classname="Sort Service Service methods should sort basic array" name="Sort Service Service methods should sort basic array" time="0.007">
    </testcase>
    <testcase classname="Sort Service Service methods should sort basic array with null values" name="Sort Service Service methods should sort basic array with null values" time="0.007">
    </testcase>
    <testcase classname="Sort Service Service methods should sort basic array with null values" name="Sort Service Service methods should sort basic array with null values" time="0.008">
    </testcase>
    <testcase classname="Sort Service Service methods should sort basic array with null values" name="Sort Service Service methods should sort basic array with null values" time="0.02">
    </testcase>
    <testcase classname="Sort Service Service methods should sort basic array with null values" name="Sort Service Service methods should sort basic array with null values" time="0.011">
    </testcase>
    <testcase classname="Sort Service Service methods should sort basic array with null values" name="Sort Service Service methods should sort basic array with null values" time="0.009">
    </testcase>
    <testcase classname="Sort Service Service methods should sort basic array with null values" name="Sort Service Service methods should sort basic array with null values" time="0.017">
    </testcase>
    <testcase classname="Sort Service Service methods should sort basic array with null values" name="Sort Service Service methods should sort basic array with null values" time="0.015">
    </testcase>
    <testcase classname="Sort Service Service methods should sort basic array with null values" name="Sort Service Service methods should sort basic array with null values" time="0.009">
    </testcase>
    <testcase classname="Sort Service Service methods should sort array by multiple values" name="Sort Service Service methods should sort array by multiple values" time="0.006">
    </testcase>
    <testcase classname="Sort Service Service methods should sort array by multiple values" name="Sort Service Service methods should sort array by multiple values" time="0.007">
    </testcase>
    <testcase classname="Sort Service Service methods should sort array using a function for the compare value" name="Sort Service Service methods should sort array using a function for the compare value" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="CourseDashboardComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:06" time="6.466" tests="6">
    <testcase classname="CourseDashboardComponent should display chatbot when iris is enabled" name="CourseDashboardComponent should display chatbot when iris is enabled" time="0.891">
    </testcase>
    <testcase classname="CourseDashboardComponent should show loading spinner when isLoading is true" name="CourseDashboardComponent should show loading spinner when isLoading is true" time="0.095">
    </testcase>
    <testcase classname="CourseDashboardComponent should show learning paths button if course has learningPathsEnabled" name="CourseDashboardComponent should show learning paths button if course has learningPathsEnabled" time="0.084">
    </testcase>
    <testcase classname="CourseDashboardComponent should navigate to learning paths when button is clicked" name="CourseDashboardComponent should navigate to learning paths when button is clicked" time="0.257">
    </testcase>
    <testcase classname="CourseDashboardComponent should display competency accordion title when hasCompetencies is true" name="CourseDashboardComponent should display competency accordion title when hasCompetencies is true" time="0.096">
    </testcase>
    <testcase classname="CourseDashboardComponent should show no data message when hasCompetencies is false" name="CourseDashboardComponent should show no data message when hasCompetencies is false" time="0.066">
    </testcase>
  </testsuite>
  <testsuite name="CourseCompetenciesRelationModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:11" time="2.167" tests="6">
    <testcase classname="CourseCompetenciesRelationModalComponent should initialize" name="CourseCompetenciesRelationModalComponent should initialize" time="0.101">
    </testcase>
    <testcase classname="CourseCompetenciesRelationModalComponent should load relations" name="CourseCompetenciesRelationModalComponent should load relations" time="0.009">
    </testcase>
    <testcase classname="CourseCompetenciesRelationModalComponent should show alert on error" name="CourseCompetenciesRelationModalComponent should show alert on error" time="0.013">
    </testcase>
    <testcase classname="CourseCompetenciesRelationModalComponent should set isLoading correctly" name="CourseCompetenciesRelationModalComponent should set isLoading correctly" time="0.008">
    </testcase>
    <testcase classname="CourseCompetenciesRelationModalComponent should closeModal" name="CourseCompetenciesRelationModalComponent should closeModal" time="0.005">
    </testcase>
    <testcase classname="CourseCompetenciesRelationModalComponent should call selectCourseCompetency on courseCompetencyRelationFormComponent with valid courseCompetencyId" name="CourseCompetenciesRelationModalComponent should call selectCourseCompetency on courseCompetencyRelationFormComponent with valid courseCompetencyId" time="0.093">
    </testcase>
  </testsuite>
  <testsuite name="ForwardedMessageService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:12" time="0.737" tests="5">
    <testcase classname="ForwardedMessageService should be created" name="ForwardedMessageService should be created" time="0.011">
    </testcase>
    <testcase classname="ForwardedMessageService createForwardedMessage should call POST with a converted DTO and courseId in params" name="ForwardedMessageService createForwardedMessage should call POST with a converted DTO and courseId in params" time="0.006">
    </testcase>
    <testcase classname="ForwardedMessageService getForwardedMessages should call GET with type &quot;POST&quot;" name="ForwardedMessageService getForwardedMessages should call GET with type &quot;POST&quot;" time="0.004">
    </testcase>
    <testcase classname="ForwardedMessageService getForwardedMessages should call GET with type &quot;answer&quot;" name="ForwardedMessageService getForwardedMessages should call GET with type &quot;answer&quot;" time="0.018">
    </testcase>
    <testcase classname="ForwardedMessageService getForwardedMessages should throw an error if IDs are empty" name="ForwardedMessageService getForwardedMessages should throw an error if IDs are empty" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="Grading System Presentations Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:13" time="1.564" tests="7">
    <testcase classname="Grading System Presentations Component should init presentations config for no presentations" name="Grading System Presentations Component should init presentations config for no presentations" time="0.08">
    </testcase>
    <testcase classname="Grading System Presentations Component should init presentations config for basic presentations" name="Grading System Presentations Component should init presentations config for basic presentations" time="0.005">
    </testcase>
    <testcase classname="Grading System Presentations Component should init presentations config for graded presentations" name="Grading System Presentations Component should init presentations config for graded presentations" time="0.008">
    </testcase>
    <testcase classname="Grading System Presentations Component should update number of presentations" name="Grading System Presentations Component should update number of presentations" time="0.007">
    </testcase>
    <testcase classname="Grading System Presentations Component should update combined weight of presentations" name="Grading System Presentations Component should update combined weight of presentations" time="0.023">
    </testcase>
    <testcase classname="Grading System Presentations Component should update presentation type from none to graded" name="Grading System Presentations Component should update presentation type from none to graded" time="0.012">
    </testcase>
    <testcase classname="Grading System Presentations Component should update presentation type from graded to none" name="Grading System Presentations Component should update presentation type from graded to none" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="ImportCourseCompetenciesSettingsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:13" time="2.48" tests="11">
    <testcase classname="ImportCourseCompetenciesSettingsComponent should initialize" name="ImportCourseCompetenciesSettingsComponent should initialize" time="0.099">
    </testcase>
    <testcase classname="ImportCourseCompetenciesSettingsComponent should toggle import setting" name="ImportCourseCompetenciesSettingsComponent should toggle import setting" time="0.049">
    </testcase>
    <testcase classname="ImportCourseCompetenciesSettingsComponent should toggle import setting" name="ImportCourseCompetenciesSettingsComponent should toggle import setting" time="0.059">
    </testcase>
    <testcase classname="ImportCourseCompetenciesSettingsComponent should toggle import setting" name="ImportCourseCompetenciesSettingsComponent should toggle import setting" time="0.172">
    </testcase>
    <testcase classname="ImportCourseCompetenciesSettingsComponent should toggle import setting" name="ImportCourseCompetenciesSettingsComponent should toggle import setting" time="0.093">
    </testcase>
    <testcase classname="ImportCourseCompetenciesSettingsComponent should set reference date" name="ImportCourseCompetenciesSettingsComponent should set reference date" time="0.079">
    </testcase>
    <testcase classname="ImportCourseCompetenciesSettingsComponent should set reference date type" name="ImportCourseCompetenciesSettingsComponent should set reference date type" time="0.093">
    </testcase>
    <testcase classname="ImportCourseCompetenciesSettingsComponent should set reference date when dateEvent is provided" name="ImportCourseCompetenciesSettingsComponent should set reference date when dateEvent is provided" time="0.052">
    </testcase>
    <testcase classname="ImportCourseCompetenciesSettingsComponent should unset reference date when dateEvent is not provided" name="ImportCourseCompetenciesSettingsComponent should unset reference date when dateEvent is not provided" time="0.098">
    </testcase>
    <testcase classname="ImportCourseCompetenciesSettingsComponent should retain isReleaseDate when reference date is already set" name="ImportCourseCompetenciesSettingsComponent should retain isReleaseDate when reference date is already set" time="0.052">
    </testcase>
    <testcase classname="ImportCourseCompetenciesSettingsComponent should set isReleaseDate to true when reference date is set for the first time" name="ImportCourseCompetenciesSettingsComponent should set isReleaseDate to true when reference date is set for the first time" time="0.045">
    </testcase>
  </testsuite>
  <testsuite name="BlobUtil" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:14" time="2.604" tests="16">
    <testcase classname="BlobUtil createBlob should create blob from no parts" name="BlobUtil createBlob should create blob from no parts" time="0.007">
    </testcase>
    <testcase classname="BlobUtil createBlob should create a blob from an array" name="BlobUtil createBlob should create a blob from an array" time="0.001">
    </testcase>
    <testcase classname="BlobUtil createBlob should create a blob from an array with content type" name="BlobUtil createBlob should create a blob from an array with content type" time="0.001">
    </testcase>
    <testcase classname="BlobUtil createBlob should create a blob from an array with content type and string property" name="BlobUtil createBlob should create a blob from an array with content type and string property" time="0.001">
    </testcase>
    <testcase classname="BlobUtil objectToJsonBlob should convert empty object correctly" name="BlobUtil objectToJsonBlob should convert empty object correctly" time="0.015">
    </testcase>
    <testcase classname="BlobUtil objectToJsonBlob should convert object with content correctly" name="BlobUtil objectToJsonBlob should convert object with content correctly" time="0.002">
    </testcase>
    <testcase classname="BlobUtil blobToBinaryString should return an empty string for an empty blob" name="BlobUtil blobToBinaryString should return an empty string for an empty blob" time="0.019">
    </testcase>
    <testcase classname="BlobUtil blobToBinaryString should return the correct binary string for a blob with content" name="BlobUtil blobToBinaryString should return the correct binary string for a blob with content" time="0.005">
    </testcase>
    <testcase classname="BlobUtil base64StringToBlob should return a blob with the correct contents for a base64 string with a length of 0" name="BlobUtil base64StringToBlob should return a blob with the correct contents for a base64 string with a length of 0" time="0.001">
    </testcase>
    <testcase classname="BlobUtil base64StringToBlob should return a blob with the correct contents" name="BlobUtil base64StringToBlob should return a blob with the correct contents" time="0.001">
    </testcase>
    <testcase classname="BlobUtil blobToBase64String should return an empty string for an empty blob" name="BlobUtil blobToBase64String should return an empty string for an empty blob" time="0.001">
    </testcase>
    <testcase classname="BlobUtil blobToBase64String should return the correct binary string for a blob with content" name="BlobUtil blobToBase64String should return the correct binary string for a blob with content" time="0.001">
    </testcase>
    <testcase classname="BlobUtil arrayBufferToBinaryString should return an empty string for an empty array buffer" name="BlobUtil arrayBufferToBinaryString should return an empty string for an empty array buffer" time="0.001">
    </testcase>
    <testcase classname="BlobUtil arrayBufferToBinaryString should return the correct binary string for an array buffer with content" name="BlobUtil arrayBufferToBinaryString should return the correct binary string for an array buffer with content" time="0.001">
    </testcase>
    <testcase classname="BlobUtil binaryStringToArrayBuffer should return an array buffer with the correct contents for a binary string with a length of 0" name="BlobUtil binaryStringToArrayBuffer should return an array buffer with the correct contents for a binary string with a length of 0" time="0">
    </testcase>
    <testcase classname="BlobUtil binaryStringToArrayBuffer should return an array buffer with the correct contents" name="BlobUtil binaryStringToArrayBuffer should return an array buffer with the correct contents" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="SystemNotificationManagementComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:13" time="4.237" tests="4">
    <testcase classname="SystemNotificationManagementComponent navigate to the details page of system notification if details is clicked" name="SystemNotificationManagementComponent navigate to the details page of system notification if details is clicked" time="0.47">
    </testcase>
    <testcase classname="SystemNotificationManagementComponent navigate to the edit page of system notification if details is clicked" name="SystemNotificationManagementComponent navigate to the edit page of system notification if details is clicked" time="0.156">
    </testcase>
    <testcase classname="SystemNotificationManagementComponent should unsubscribe on destroy" name="SystemNotificationManagementComponent should unsubscribe on destroy" time="0.127">
    </testcase>
    <testcase classname="SystemNotificationManagementComponent should transition on page change" name="SystemNotificationManagementComponent should transition on page change" time="0.124">
    </testcase>
  </testsuite>
  <testsuite name="MessageReplyInlineInputComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:12" time="4.945" tests="4">
    <testcase classname="MessageReplyInlineInputComponent should invoke metis service with created message reply" name="MessageReplyInlineInputComponent should invoke metis service with created message reply" time="0.558">
    </testcase>
    <testcase classname="MessageReplyInlineInputComponent should stop loading when metis service throws error during replying to message" name="MessageReplyInlineInputComponent should stop loading when metis service throws error during replying to message" time="0.057">
    </testcase>
    <testcase classname="MessageReplyInlineInputComponent should invoke metis service with edited message reply" name="MessageReplyInlineInputComponent should invoke metis service with edited message reply" time="0.055">
    </testcase>
    <testcase classname="MessageReplyInlineInputComponent should stop loading when metis service throws error during message replying" name="MessageReplyInlineInputComponent should stop loading when metis service throws error during message replying" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="Student Exam Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:17" time="1.417" tests="7">
    <testcase classname="Student Exam Service should call correct url if toggling submitted state and unsubmit is false" name="Student Exam Service should call correct url if toggling submitted state and unsubmit is false" time="0.057">
    </testcase>
    <testcase classname="Student Exam Service should call correct url if toggling submitted state and unsubmit is true" name="Student Exam Service should call correct url if toggling submitted state and unsubmit is true" time="0.014">
    </testcase>
    <testcase classname="Student Exam Service should fetch and process an exam correctly on find and updateWorkingTime" name="Student Exam Service should fetch and process an exam correctly on find and updateWorkingTime" time="0.013">
    </testcase>
    <testcase classname="Student Exam Service should fetch and process an exam correctly on find and updateWorkingTime" name="Student Exam Service should fetch and process an exam correctly on find and updateWorkingTime" time="0.008">
    </testcase>
    <testcase classname="Student Exam Service should fetch and process an exam correctly on find and updateWorkingTime" name="Student Exam Service should fetch and process an exam correctly on find and updateWorkingTime" time="0.013">
    </testcase>
    <testcase classname="Student Exam Service should fetch and process an exam correctly on find and updateWorkingTime" name="Student Exam Service should fetch and process an exam correctly on find and updateWorkingTime" time="0.013">
    </testcase>
    <testcase classname="Student Exam Service should fetch and process exams correctly on findAllForExam" name="Student Exam Service should fetch and process exams correctly on findAllForExam" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="ApollonDiagramService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:19" time="1.478" tests="5">
    <testcase classname="ApollonDiagramService should create a diagram" name="ApollonDiagramService should create a diagram" time="0.014">
    </testcase>
    <testcase classname="ApollonDiagramService should update a diagram" name="ApollonDiagramService should update a diagram" time="0.007">
    </testcase>
    <testcase classname="ApollonDiagramService should find a diagram" name="ApollonDiagramService should find a diagram" time="0.005">
    </testcase>
    <testcase classname="ApollonDiagramService should delete a diagram" name="ApollonDiagramService should delete a diagram" time="0.005">
    </testcase>
    <testcase classname="ApollonDiagramService should get diagrams by course" name="ApollonDiagramService should get diagrams by course" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupSessionForm" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:15" time="5.331" tests="5">
    <testcase classname="TutorialGroupSessionForm should initialize" name="TutorialGroupSessionForm should initialize" time="0.331">
    </testcase>
    <testcase classname="TutorialGroupSessionForm should correctly set form values in edit mode" name="TutorialGroupSessionForm should correctly set form values in edit mode" time="0.17">
    </testcase>
    <testcase classname="TutorialGroupSessionForm should submit valid form" name="TutorialGroupSessionForm should submit valid form" time="0.147">
    </testcase>
    <testcase classname="TutorialGroupSessionForm should block submit when time range is invalid" name="TutorialGroupSessionForm should block submit when time range is invalid" time="0.174">
    </testcase>
    <testcase classname="TutorialGroupSessionForm should block submit when required property is missing" name="TutorialGroupSessionForm should block submit when required property is missing" time="0.177">
    </testcase>
  </testsuite>
  <testsuite name="CompetencyRecommendationDetailComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:17" time="3.747" tests="4">
    <testcase classname="CompetencyRecommendationDetailComponent should initialize" name="CompetencyRecommendationDetailComponent should initialize" time="0.501">
    </testcase>
    <testcase classname="CompetencyRecommendationDetailComponent should switch between edit and save mode" name="CompetencyRecommendationDetailComponent should switch between edit and save mode" time="0.199">
    </testcase>
    <testcase classname="CompetencyRecommendationDetailComponent should delete" name="CompetencyRecommendationDetailComponent should delete" time="0.103">
    </testcase>
    <testcase classname="CompetencyRecommendationDetailComponent should expand" name="CompetencyRecommendationDetailComponent should expand" time="0.103">
    </testcase>
  </testsuite>
  <testsuite name="Course Group Membership Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:18" time="2.994" tests="7">
    <testcase classname="Course Group Membership Component should initialize" name="Course Group Membership Component should initialize" time="0.21">
    </testcase>
    <testcase classname="Course Group Membership Component OnInit should load all course group users" name="Course Group Membership Component OnInit should load all course group users" time="0.048">
    </testcase>
    <testcase classname="Course Group Membership Component courseGroupName should return courses studentGroupName if group is students" name="Course Group Membership Component courseGroupName should return courses studentGroupName if group is students" time="0.022">
    </testcase>
    <testcase classname="Course Group Membership Component courseGroupName should return courses teachingAssistantGroupName if group is tutors" name="Course Group Membership Component courseGroupName should return courses teachingAssistantGroupName if group is tutors" time="0.032">
    </testcase>
    <testcase classname="Course Group Membership Component courseGroupName should return courses instructorGroupName if group is instructors" name="Course Group Membership Component courseGroupName should return courses instructorGroupName if group is instructors" time="0.044">
    </testcase>
    <testcase classname="Course Group Membership Component handleUsersSizeChange should change user size to given number" name="Course Group Membership Component handleUsersSizeChange should change user size to given number" time="0.044">
    </testcase>
    <testcase classname="Course Group Membership Component exportFileName should return export file name" name="Course Group Membership Component exportFileName should return export file name" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="ButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:20" time="1.871" tests="6">
    <testcase classname="ButtonComponent should render button with icon and title" name="ButtonComponent should render button with icon and title" time="0.117">
    </testcase>
    <testcase classname="ButtonComponent should render button without icon and with title" name="ButtonComponent should render button without icon and with title" time="0.037">
    </testcase>
    <testcase classname="ButtonComponent should render button with icon and without title" name="ButtonComponent should render button with icon and without title" time="0.03">
    </testcase>
    <testcase classname="ButtonComponent should disable complete button if disabled is set" name="ButtonComponent should disable complete button if disabled is set" time="0.045">
    </testcase>
    <testcase classname="ButtonComponent should enable complete button if disabled is set to false" name="ButtonComponent should enable complete button if disabled is set to false" time="0.039">
    </testcase>
    <testcase classname="ButtonComponent should show loading indicator when loading is set" name="ButtonComponent should show loading indicator when loading is set" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="Team Owner Search Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:21" time="1.532" tests="4">
    <testcase classname="Team Owner Search Component should initialize with team owner" name="Team Owner Search Component should initialize with team owner" time="0.032">
    </testcase>
    <testcase classname="Team Owner Search Component should search on input change and find a matching result" name="Team Owner Search Component should search on input change and find a matching result" time="0.008">
    </testcase>
    <testcase classname="Team Owner Search Component should search on input change and find no result" name="Team Owner Search Component should search on input change and find no result" time="0.027">
    </testcase>
    <testcase classname="Team Owner Search Component should handle error when loading owner options" name="Team Owner Search Component should handle error when loading owner options" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseTaskComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:21" time="2.387" tests="4">
    <testcase classname="ProgrammingExerciseTaskComponent should handle test cases updates" name="ProgrammingExerciseTaskComponent should handle test cases updates" time="0.267">
    </testcase>
    <testcase classname="ProgrammingExerciseTaskComponent should handle task updates" name="ProgrammingExerciseTaskComponent should handle task updates" time="0.136">
    </testcase>
    <testcase classname="ProgrammingExerciseTaskComponent should not show the task if there is only one" name="ProgrammingExerciseTaskComponent should not show the task if there is only one" time="0.133">
    </testcase>
    <testcase classname="ProgrammingExerciseTaskComponent should show the tasks if there are more than one" name="ProgrammingExerciseTaskComponent should show the tasks if there are more than one" time="0.102">
    </testcase>
  </testsuite>
  <testsuite name="ArtemisVersionInterceptor" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:22" time="1.346" tests="4">
    <testcase classname="ArtemisVersionInterceptor should check for an update immediately and after 60 seconds again if app is stable" name="ArtemisVersionInterceptor should check for an update immediately and after 60 seconds again if app is stable" time="0.019">
    </testcase>
    <testcase classname="ArtemisVersionInterceptor should check for an update after 30s if app is not stable" name="ArtemisVersionInterceptor should check for an update after 30s if app is not stable" time="0.046">
    </testcase>
    <testcase classname="ArtemisVersionInterceptor should show the update alert and have functional callback" name="ArtemisVersionInterceptor should show the update alert and have functional callback" time="0.005">
    </testcase>
    <testcase classname="ArtemisVersionInterceptor should tell the worker to look for updates in HTTP requests (only) if the version is not equal to current" name="ArtemisVersionInterceptor should tell the worker to look for updates in HTTP requests (only) if the version is not equal to current" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="TreeviewItem" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:24" time="0.805" tests="11">
    <testcase classname="TreeviewItem should throw error if TreeItem param is null of undefined" name="TreeviewItem should throw error if TreeItem param is null of undefined" time="0.016">
    </testcase>
    <testcase classname="TreeviewItem should throw error if TreeItem text is not a string" name="TreeviewItem should throw error if TreeItem text is not a string" time="0.003">
    </testcase>
    <testcase classname="TreeviewItem should allow to create TreeviewItem with empty children" name="TreeviewItem should allow to create TreeviewItem with empty children" time="0.001">
    </testcase>
    <testcase classname="TreeviewItem collapsed should set value is false by default" name="TreeviewItem collapsed should set value is false by default" time="0">
    </testcase>
    <testcase classname="TreeviewItem collapsed should affectedly change collapsed value" name="TreeviewItem collapsed should affectedly change collapsed value" time="0.001">
    </testcase>
    <testcase classname="TreeviewItem setCollapsedRecursive should apply collapsed value to children" name="TreeviewItem setCollapsedRecursive should apply collapsed value to children" time="0.001">
    </testcase>
    <testcase classname="TreeviewItem disabled should set value is false by default" name="TreeviewItem disabled should set value is false by default" time="0.001">
    </testcase>
    <testcase classname="TreeviewItem disabled should initialize children are disabled if initializing parent is disabled" name="TreeviewItem disabled should initialize children are disabled if initializing parent is disabled" time="0.001">
    </testcase>
    <testcase classname="TreeviewItem disabled should change disabled value of children to false if changing disabled of parent to false" name="TreeviewItem disabled should change disabled value of children to false if changing disabled of parent to false" time="0.002">
    </testcase>
    <testcase classname="TreeviewItem children should affectedly change children value" name="TreeviewItem children should affectedly change children value" time="0.001">
    </testcase>
    <testcase classname="TreeviewItem children should accept undefined value" name="TreeviewItem children should accept undefined value" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="AssessmentInstructionsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:21" time="4.041" tests="3">
    <testcase classname="AssessmentInstructionsComponent should initialize exercise input" name="AssessmentInstructionsComponent should initialize exercise input" time="0.334">
    </testcase>
    <testcase classname="AssessmentInstructionsComponent should convert the grading instructions to html" name="AssessmentInstructionsComponent should convert the grading instructions to html" time="0.055">
    </testcase>
    <testcase classname="AssessmentInstructionsComponent should ignore empty grading instructions" name="AssessmentInstructionsComponent should ignore empty grading instructions" time="0.051">
    </testcase>
  </testsuite>
  <testsuite name="IrisExerciseSettingsUpdateComponent Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:22" time="3.759" tests="3">
    <testcase classname="IrisExerciseSettingsUpdateComponent Component Setup works correctly" name="IrisExerciseSettingsUpdateComponent Component Setup works correctly" time="0.38">
    </testcase>
    <testcase classname="IrisExerciseSettingsUpdateComponent Component Can deactivate correctly" name="IrisExerciseSettingsUpdateComponent Component Can deactivate correctly" time="0.15">
    </testcase>
    <testcase classname="IrisExerciseSettingsUpdateComponent Component Saves settings correctly" name="IrisExerciseSettingsUpdateComponent Component Saves settings correctly" time="0.157">
    </testcase>
  </testsuite>
  <testsuite name="Password Component Tests" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:26" time="2.097" tests="5">
    <testcase classname="Password Component Tests PasswordComponent should show error if passwords do not match" name="Password Component Tests PasswordComponent should show error if passwords do not match" time="0.144">
    </testcase>
    <testcase classname="Password Component Tests PasswordComponent should call Auth.changePassword when passwords match" name="Password Component Tests PasswordComponent should call Auth.changePassword when passwords match" time="0.007">
    </testcase>
    <testcase classname="Password Component Tests PasswordComponent should set success to true upon success" name="Password Component Tests PasswordComponent should set success to true upon success" time="0.008">
    </testcase>
    <testcase classname="Password Component Tests PasswordComponent should notify of error if change password fails" name="Password Component Tests PasswordComponent should notify of error if change password fails" time="0.007">
    </testcase>
    <testcase classname="Password Component Tests PasswordComponent sets user on init" name="Password Component Tests PasswordComponent sets user on init" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="FormDateTimePickerComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:24" time="4.735" tests="10">
    <testcase classname="FormDateTimePickerComponent should emit if a value is changed" name="FormDateTimePickerComponent should emit if a value is changed" time="0.435">
    </testcase>
    <testcase classname="FormDateTimePickerComponent test date conversion should convert the dayjs if it is not undefined" name="FormDateTimePickerComponent test date conversion should convert the dayjs if it is not undefined" time="0.29">
    </testcase>
    <testcase classname="FormDateTimePickerComponent test date conversion should return null if dayjs is undefined" name="FormDateTimePickerComponent test date conversion should return null if dayjs is undefined" time="0.277">
    </testcase>
    <testcase classname="FormDateTimePickerComponent test date conversion should return null if dayjs is invalid" name="FormDateTimePickerComponent test date conversion should return null if dayjs is invalid" time="0.346">
    </testcase>
    <testcase classname="FormDateTimePickerComponent test date writing should write the correct date if date is dayjs object" name="FormDateTimePickerComponent test date writing should write the correct date if date is dayjs object" time="0.354">
    </testcase>
    <testcase classname="FormDateTimePickerComponent test date writing should write the correct date if date is date object" name="FormDateTimePickerComponent test date writing should write the correct date if date is date object" time="0.218">
    </testcase>
    <testcase classname="FormDateTimePickerComponent should register callback function" name="FormDateTimePickerComponent should register callback function" time="0.276">
    </testcase>
    <testcase classname="FormDateTimePickerComponent should update field" name="FormDateTimePickerComponent should update field" time="0.181">
    </testcase>
    <testcase classname="FormDateTimePickerComponent should have working getters" name="FormDateTimePickerComponent should have working getters" time="0.195">
    </testcase>
    <testcase classname="FormDateTimePickerComponent should clear the datepicker value" name="FormDateTimePickerComponent should clear the datepicker value" time="0.124">
    </testcase>
  </testsuite>
  <testsuite name="LearningPathNavOverviewComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:25" time="4.831" tests="5">
    <testcase classname="LearningPathNavOverviewComponent should initialize" name="LearningPathNavOverviewComponent should initialize" time="0.191">
    </testcase>
    <testcase classname="LearningPathNavOverviewComponent should load competencies" name="LearningPathNavOverviewComponent should load competencies" time="0.073">
    </testcase>
    <testcase classname="LearningPathNavOverviewComponent should correctly set isLoading to true and false" name="LearningPathNavOverviewComponent should correctly set isLoading to true and false" time="0.055">
    </testcase>
    <testcase classname="LearningPathNavOverviewComponent should show error when loading competencies fails" name="LearningPathNavOverviewComponent should show error when loading competencies fails" time="0.048">
    </testcase>
    <testcase classname="LearningPathNavOverviewComponent should open competency graph modal" name="LearningPathNavOverviewComponent should open competency graph modal" time="0.109">
    </testcase>
  </testsuite>
  <testsuite name="TestExamWorkingTimeComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:28" time="1.058" tests="9">
    <testcase classname="TestExamWorkingTimeComponent should have a difference of 0 if the studentExam is not submitted" name="TestExamWorkingTimeComponent should have a difference of 0 if the studentExam is not submitted" time="0.019">
    </testcase>
    <testcase classname="TestExamWorkingTimeComponent should have a difference of 0 if the studentExam is linked to a RealExam" name="TestExamWorkingTimeComponent should have a difference of 0 if the studentExam is linked to a RealExam" time="0.005">
    </testcase>
    <testcase classname="TestExamWorkingTimeComponent should have a difference of 0 if started is false" name="TestExamWorkingTimeComponent should have a difference of 0 if started is false" time="0.004">
    </testcase>
    <testcase classname="TestExamWorkingTimeComponent should have a difference of 0 if the startedDate is not defined" name="TestExamWorkingTimeComponent should have a difference of 0 if the startedDate is not defined" time="0.015">
    </testcase>
    <testcase classname="TestExamWorkingTimeComponent should have a difference of 0 if the submissionDate is not defined" name="TestExamWorkingTimeComponent should have a difference of 0 if the submissionDate is not defined" time="0.005">
    </testcase>
    <testcase classname="TestExamWorkingTimeComponent should calculate the usedWorkingTime correctly" name="TestExamWorkingTimeComponent should calculate the usedWorkingTime correctly" time="0.007">
    </testcase>
    <testcase classname="TestExamWorkingTimeComponent should calculate the percentUsedWorkingTime correctly" name="TestExamWorkingTimeComponent should calculate the percentUsedWorkingTime correctly" time="0.005">
    </testcase>
    <testcase classname="TestExamWorkingTimeComponent usedWorkingTime should not exceed the defaultWorkingTime" name="TestExamWorkingTimeComponent usedWorkingTime should not exceed the defaultWorkingTime" time="0.005">
    </testcase>
    <testcase classname="TestExamWorkingTimeComponent should not exceed 100% in the usedWorkingTime" name="TestExamWorkingTimeComponent should not exceed 100% in the usedWorkingTime" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="GradingKeyOverviewComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:26" time="3.861" tests="4">
    <testcase classname="GradingKeyOverviewComponent should initialize component" name="GradingKeyOverviewComponent should initialize component" time="0.179">
    </testcase>
    <testcase classname="GradingKeyOverviewComponent should print PDF" name="GradingKeyOverviewComponent should print PDF" time="0.043">
    </testcase>
    <testcase classname="GradingKeyOverviewComponent should call the back method on the nav util service on previousState for examId 456" name="GradingKeyOverviewComponent should call the back method on the nav util service on previousState for examId 456" time="0.037">
    </testcase>
    <testcase classname="GradingKeyOverviewComponent should call the back method on the nav util service on previousState for examId undefined" name="GradingKeyOverviewComponent should call the back method on the nav util service on previousState for examId undefined" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:30" time="0.779" tests="9">
    <testcase classname="TutorialGroupService getUniqueCampusValues" name="TutorialGroupService getUniqueCampusValues" time="0.013">
    </testcase>
    <testcase classname="TutorialGroupService getOneOfCourse" name="TutorialGroupService getOneOfCourse" time="0.004">
    </testcase>
    <testcase classname="TutorialGroupService create" name="TutorialGroupService create" time="0.005">
    </testcase>
    <testcase classname="TutorialGroupService update" name="TutorialGroupService update" time="0.008">
    </testcase>
    <testcase classname="TutorialGroupService getAllOfCourse" name="TutorialGroupService getAllOfCourse" time="0.006">
    </testcase>
    <testcase classname="TutorialGroupService deregisterStudent" name="TutorialGroupService deregisterStudent" time="0.004">
    </testcase>
    <testcase classname="TutorialGroupService registerStudent" name="TutorialGroupService registerStudent" time="0.032">
    </testcase>
    <testcase classname="TutorialGroupService delete" name="TutorialGroupService delete" time="0.013">
    </testcase>
    <testcase classname="TutorialGroupService registerMultipleStudents" name="TutorialGroupService registerMultipleStudents" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="CourseNotificationSettingSpecificationCardComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:29" time="1.462" tests="5">
    <testcase classname="CourseNotificationSettingSpecificationCardComponent should create" name="CourseNotificationSettingSpecificationCardComponent should create" time="0.167">
    </testcase>
    <testcase classname="CourseNotificationSettingSpecificationCardComponent should initialize component properties from the input specification" name="CourseNotificationSettingSpecificationCardComponent should initialize component properties from the input specification" time="0.044">
    </testcase>
    <testcase classname="CourseNotificationSettingSpecificationCardComponent should render notification preview using CourseNotificationComponent" name="CourseNotificationSettingSpecificationCardComponent should render notification preview using CourseNotificationComponent" time="0.09">
    </testcase>
    <testcase classname="CourseNotificationSettingSpecificationCardComponent should disable channels based on CourseNotificationService.DISABLE_NOTIFICATION_CHANNEL_TYPES" name="CourseNotificationSettingSpecificationCardComponent should disable channels based on CourseNotificationService.DISABLE_NOTIFICATION_CHANNEL_TYPES" time="0.05">
    </testcase>
    <testcase classname="CourseNotificationSettingSpecificationCardComponent should create a new specification when optionChanged is called" name="CourseNotificationSettingSpecificationCardComponent should create a new specification when optionChanged is called" time="0.097">
    </testcase>
  </testsuite>
  <testsuite name="CodeEditorGridComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:29" time="1.674" tests="3">
    <testcase classname="CodeEditorGridComponent Hide draggable icons should hide draggable icon for file browser" name="CodeEditorGridComponent Hide draggable icons should hide draggable icon for file browser" time="0.055">
    </testcase>
    <testcase classname="CodeEditorGridComponent Hide draggable icons should hide draggable icon for right panel" name="CodeEditorGridComponent Hide draggable icons should hide draggable icon for right panel" time="0.029">
    </testcase>
    <testcase classname="CodeEditorGridComponent Hide draggable icons should hide draggable icon for build output" name="CodeEditorGridComponent Hide draggable icons should hide draggable icon for build output" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseGroupUpdateComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:28" time="3.983" tests="3">
    <testcase classname="ExerciseGroupUpdateComponent should save exercise group" name="ExerciseGroupUpdateComponent should save exercise group" time="0.113">
    </testcase>
    <testcase classname="ExerciseGroupUpdateComponent should save exercise group without ID" name="ExerciseGroupUpdateComponent should save exercise group without ID" time="0.032">
    </testcase>
    <testcase classname="ExerciseGroupUpdateComponent should fail while saving with ErrorResponse" name="ExerciseGroupUpdateComponent should fail while saving with ErrorResponse" time="0.039">
    </testcase>
  </testsuite>
  <testsuite name="AttachmentUnitComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:31" time="2.492" tests="17">
    <testcase classname="AttachmentUnitComponent should initialize" name="AttachmentUnitComponent should initialize" time="0.201">
    </testcase>
    <testcase classname="AttachmentUnitComponent should get file name" name="AttachmentUnitComponent should get file name" time="0.06">
    </testcase>
    <testcase classname="AttachmentUnitComponent should handle download" name="AttachmentUnitComponent should handle download" time="0.019">
    </testcase>
    <testcase classname="AttachmentUnitComponent should use correct icon for extension" name="AttachmentUnitComponent should use correct icon for extension" time="0.018">
    </testcase>
    <testcase classname="AttachmentUnitComponent should use correct icon for extension" name="AttachmentUnitComponent should use correct icon for extension" time="0.016">
    </testcase>
    <testcase classname="AttachmentUnitComponent should use correct icon for extension" name="AttachmentUnitComponent should use correct icon for extension" time="0.014">
    </testcase>
    <testcase classname="AttachmentUnitComponent should use correct icon for extension" name="AttachmentUnitComponent should use correct icon for extension" time="0.034">
    </testcase>
    <testcase classname="AttachmentUnitComponent should use correct icon for extension" name="AttachmentUnitComponent should use correct icon for extension" time="0.026">
    </testcase>
    <testcase classname="AttachmentUnitComponent should use correct icon for extension" name="AttachmentUnitComponent should use correct icon for extension" time="0.022">
    </testcase>
    <testcase classname="AttachmentUnitComponent should use correct icon for extension" name="AttachmentUnitComponent should use correct icon for extension" time="0.02">
    </testcase>
    <testcase classname="AttachmentUnitComponent should use correct icon for extension" name="AttachmentUnitComponent should use correct icon for extension" time="0.016">
    </testcase>
    <testcase classname="AttachmentUnitComponent should use correct icon for extension" name="AttachmentUnitComponent should use correct icon for extension" time="0.018">
    </testcase>
    <testcase classname="AttachmentUnitComponent should use correct icon for extension" name="AttachmentUnitComponent should use correct icon for extension" time="0.016">
    </testcase>
    <testcase classname="AttachmentUnitComponent should use correct icon for extension" name="AttachmentUnitComponent should use correct icon for extension" time="0.027">
    </testcase>
    <testcase classname="AttachmentUnitComponent should download attachment when clicked" name="AttachmentUnitComponent should download attachment when clicked" time="0.018">
    </testcase>
    <testcase classname="AttachmentUnitComponent should call completion callback when downloaded" name="AttachmentUnitComponent should call completion callback when downloaded" time="0.01">
    </testcase>
    <testcase classname="AttachmentUnitComponent should toggle completion" name="AttachmentUnitComponent should toggle completion" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="JudgementOfLearningRatingComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:32" time="2.963" tests="6">
    <testcase classname="JudgementOfLearningRatingComponent should initialize" name="JudgementOfLearningRatingComponent should initialize" time="0.064">
    </testcase>
    <testcase classname="JudgementOfLearningRatingComponent should not emit value when rating and courseId is undefined" name="JudgementOfLearningRatingComponent should not emit value when rating and courseId is undefined" time="0.019">
    </testcase>
    <testcase classname="JudgementOfLearningRatingComponent should not emit value when rating is undefined" name="JudgementOfLearningRatingComponent should not emit value when rating is undefined" time="0.009">
    </testcase>
    <testcase classname="JudgementOfLearningRatingComponent should not emit value when courseId is undefined" name="JudgementOfLearningRatingComponent should not emit value when courseId is undefined" time="0.01">
    </testcase>
    <testcase classname="JudgementOfLearningRatingComponent should emit new rating when onRate is called with valid data" name="JudgementOfLearningRatingComponent should emit new rating when onRate is called with valid data" time="0.023">
    </testcase>
    <testcase classname="JudgementOfLearningRatingComponent should show error message when setting judgement of learning fails" name="JudgementOfLearningRatingComponent should show error message when setting judgement of learning fails" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="CourseLectureRow" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:32" time="2.318" tests="4">
    <testcase classname="CourseLectureRow should initialize" name="CourseLectureRow should initialize" time="0.218">
    </testcase>
    <testcase classname="CourseLectureRow should set urgent class to date if remaining days is less than 7 days" name="CourseLectureRow should set urgent class to date if remaining days is less than 7 days" time="0.055">
    </testcase>
    <testcase classname="CourseLectureRow should not urgent class to date if remaining days is more than 7 days" name="CourseLectureRow should not urgent class to date if remaining days is more than 7 days" time="0.092">
    </testcase>
    <testcase classname="CourseLectureRow navigate to details page if row is clicked" name="CourseLectureRow navigate to details page if row is clicked" time="0.13">
    </testcase>
  </testsuite>
  <testsuite name="EditTutorialGroupSessionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:33" time="3.134" tests="3">
    <testcase classname="EditTutorialGroupSessionComponent should initialize" name="EditTutorialGroupSessionComponent should initialize" time="0.193">
    </testcase>
    <testcase classname="EditTutorialGroupSessionComponent should set form data correctly" name="EditTutorialGroupSessionComponent should set form data correctly" time="0.078">
    </testcase>
    <testcase classname="EditTutorialGroupSessionComponent should send PUT request upon form submission and navigate" name="EditTutorialGroupSessionComponent should send PUT request upon form submission and navigate" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="DetailOverviewList" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:31" time="4.923" tests="4">
    <testcase classname="DetailOverviewList should initialize and destroy" name="DetailOverviewList should initialize and destroy" time="0.411">
    </testcase>
    <testcase classname="DetailOverviewList should escape all falsy values" name="DetailOverviewList should escape all falsy values" time="0.018">
    </testcase>
    <testcase classname="DetailOverviewList should download apollon Diagram" name="DetailOverviewList should download apollon Diagram" time="0.027">
    </testcase>
    <testcase classname="DetailOverviewList should error on download apollon Diagram fail" name="DetailOverviewList should error on download apollon Diagram fail" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="StudentsUploadImagesDialogComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:35" time="2.193" tests="4">
    <testcase classname="StudentsUploadImagesDialogComponent should reset dialog when selecting pdf file" name="StudentsUploadImagesDialogComponent should reset dialog when selecting pdf file" time="0.211">
    </testcase>
    <testcase classname="StudentsUploadImagesDialogComponent should call the function to cancel the dialog" name="StudentsUploadImagesDialogComponent should call the function to cancel the dialog" time="0.11">
    </testcase>
    <testcase classname="StudentsUploadImagesDialogComponent should call the function onFinish and then close the dialog" name="StudentsUploadImagesDialogComponent should call the function onFinish and then close the dialog" time="0.06">
    </testcase>
    <testcase classname="StudentsUploadImagesDialogComponent should upload and save images correctly" name="StudentsUploadImagesDialogComponent should upload and save images correctly" time="0.09">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackItemService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:36" time="0.886" tests="6">
    <testcase classname="FeedbackItemService should create generic feedback item" name="FeedbackItemService should create generic feedback item" time="0.026">
    </testcase>
    <testcase classname="FeedbackItemService should create grading instruction feedback" name="FeedbackItemService should create grading instruction feedback" time="0.009">
    </testcase>
    <testcase classname="FeedbackItemService should propagate subsequent to feedback item type" name="FeedbackItemService should propagate subsequent to feedback item type" time="0.006">
    </testcase>
    <testcase classname="FeedbackItemService should group feedback items correctly" name="FeedbackItemService should group feedback items correctly" time="0.013">
    </testcase>
    <testcase classname="FeedbackItemService should filter out subsequent SGI feedback for group credit calculation" name="FeedbackItemService should filter out subsequent SGI feedback for group credit calculation" time="0.01">
    </testcase>
    <testcase classname="FeedbackItemService should have a custom type guard function that works" name="FeedbackItemService should have a custom type guard function that works" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="QuizVisualEditorComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:35" time="2.37" tests="5">
    <testcase classname="QuizVisualEditorComponent parse the given question properly to markdown" name="QuizVisualEditorComponent parse the given question properly to markdown" time="0.177">
    </testcase>
    <testcase classname="QuizVisualEditorComponent delete an answer option" name="QuizVisualEditorComponent delete an answer option" time="0.099">
    </testcase>
    <testcase classname="QuizVisualEditorComponent toggle the isCorrect state" name="QuizVisualEditorComponent toggle the isCorrect state" time="0.105">
    </testcase>
    <testcase classname="QuizVisualEditorComponent does not toggle the if single mode and already has correct answer" name="QuizVisualEditorComponent does not toggle the if single mode and already has correct answer" time="0.067">
    </testcase>
    <testcase classname="QuizVisualEditorComponent add a new answer option" name="QuizVisualEditorComponent add a new answer option" time="0.129">
    </testcase>
  </testsuite>
  <testsuite name="ExportModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:36" time="4.729" tests="6">
    <testcase classname="ExportModalComponent should init with default options" name="ExportModalComponent should init with default options" time="0.278">
    </testcase>
    <testcase classname="ExportModalComponent should init with german default options" name="ExportModalComponent should init with german default options" time="0.101">
    </testcase>
    <testcase classname="ExportModalComponent should set csv options" name="ExportModalComponent should set csv options" time="0.115">
    </testcase>
    <testcase classname="ExportModalComponent should dismiss modal if close or cancel button are clicked" name="ExportModalComponent should dismiss modal if close or cancel button are clicked" time="0.145">
    </testcase>
    <testcase classname="ExportModalComponent should return empty on finish when excel export is active" name="ExportModalComponent should return empty on finish when excel export is active" time="0.079">
    </testcase>
    <testcase classname="ExportModalComponent should return the csv export options on finish when csv export is active" name="ExportModalComponent should return the csv export options on finish when csv export is active" time="0.18">
    </testcase>
  </testsuite>
  <testsuite name="ExampleSubmissionImportComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:37" time="4.653" tests="2">
    <testcase classname="ExampleSubmissionImportComponent should pass the exercise id to the paging service" name="ExampleSubmissionImportComponent should pass the exercise id to the paging service" time="0.403">
    </testcase>
    <testcase classname="ExampleSubmissionImportComponent should set the submission size when retrieving search results" name="ExampleSubmissionImportComponent should set the submission size when retrieving search results" time="0.115">
    </testcase>
  </testsuite>
  <testsuite name="SidebarCardMediumComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:37" time="4.981" tests="7">
    <testcase classname="SidebarCardMediumComponent should create" name="SidebarCardMediumComponent should create" time="0.381">
    </testcase>
    <testcase classname="SidebarCardMediumComponent should have success border class for easy difficulty" name="SidebarCardMediumComponent should have success border class for easy difficulty" time="0.065">
    </testcase>
    <testcase classname="SidebarCardMediumComponent should have success border class for medium difficulty" name="SidebarCardMediumComponent should have success border class for medium difficulty" time="0.056">
    </testcase>
    <testcase classname="SidebarCardMediumComponent should have success border class for hard difficulty" name="SidebarCardMediumComponent should have success border class for hard difficulty" time="0.033">
    </testcase>
    <testcase classname="SidebarCardMediumComponent should store route on click" name="SidebarCardMediumComponent should store route on click" time="0.068">
    </testcase>
    <testcase classname="SidebarCardMediumComponent should navigate to the item URL on click" name="SidebarCardMediumComponent should navigate to the item URL on click" time="0.096">
    </testcase>
    <testcase classname="SidebarCardMediumComponent should navigate to the when no item was selected before" name="SidebarCardMediumComponent should navigate to the when no item was selected before" time="0.06">
    </testcase>
  </testsuite>
  <testsuite name="SidebarCardSmallComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:37" time="6.142" tests="4">
    <testcase classname="SidebarCardSmallComponent should create" name="SidebarCardSmallComponent should create" time="0.552">
    </testcase>
    <testcase classname="SidebarCardSmallComponent should store route on click" name="SidebarCardSmallComponent should store route on click" time="0.081">
    </testcase>
    <testcase classname="SidebarCardSmallComponent should navigate to the item URL on click" name="SidebarCardSmallComponent should navigate to the item URL on click" time="0.086">
    </testcase>
    <testcase classname="SidebarCardSmallComponent should navigate to the when no item was selected before" name="SidebarCardSmallComponent should navigate to the when no item was selected before" time="0.065">
    </testcase>
  </testsuite>
  <testsuite name="ManualTextblockSelectionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:41" time="2.796" tests="4">
    <testcase classname="ManualTextblockSelectionComponent should add TextBlockRefGroup correctly" name="ManualTextblockSelectionComponent should add TextBlockRefGroup correctly" time="0.375">
    </testcase>
    <testcase classname="ManualTextblockSelectionComponent should add a TextblockAssessmentCardComponent for each TextBlockRefGroup with a feedback" name="ManualTextblockSelectionComponent should add a TextblockAssessmentCardComponent for each TextBlockRefGroup with a feedback" time="0.03">
    </testcase>
    <testcase classname="ManualTextblockSelectionComponent should add a ManualTextSelectionComponent for each TextBlockRefGroup without a feedback" name="ManualTextblockSelectionComponent should add a ManualTextSelectionComponent for each TextBlockRefGroup without a feedback" time="0.029">
    </testcase>
    <testcase classname="ManualTextblockSelectionComponent should handle manual text selection correctly" name="ManualTextblockSelectionComponent should handle manual text selection correctly" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="ExamGeneralInformationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:43" time="1.58" tests="8">
    <testcase classname="ExamGeneralInformationComponent should initialize" name="ExamGeneralInformationComponent should initialize" time="0.136">
    </testcase>
    <testcase classname="ExamGeneralInformationComponent should return undefined if the exam is not set" name="ExamGeneralInformationComponent should return undefined if the exam is not set" time="0.007">
    </testcase>
    <testcase classname="ExamGeneralInformationComponent should return the start date plus the working time as the student exam end date" name="ExamGeneralInformationComponent should return the start date plus the working time as the student exam end date" time="0.011">
    </testcase>
    <testcase classname="ExamGeneralInformationComponent should detect if the end date is on another day" name="ExamGeneralInformationComponent should detect if the end date is on another day" time="0.007">
    </testcase>
    <testcase classname="ExamGeneralInformationComponent should detect if the working time extends to another day" name="ExamGeneralInformationComponent should detect if the working time extends to another day" time="0.009">
    </testcase>
    <testcase classname="ExamGeneralInformationComponent should return false for exams that only last one day" name="ExamGeneralInformationComponent should return false for exams that only last one day" time="0.012">
    </testcase>
    <testcase classname="ExamGeneralInformationComponent should detect an TestExam and set the currentDate correctly" name="ExamGeneralInformationComponent should detect an TestExam and set the currentDate correctly" time="0.02">
    </testcase>
    <testcase classname="ExamGeneralInformationComponent should detect an RealExam and not set the currentDate" name="ExamGeneralInformationComponent should detect an RealExam and not set the currentDate" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:42" time="2.141" tests="5">
    <testcase classname="Component Tests LogsComponent should set all default values correctly" name="Component Tests LogsComponent should set all default values correctly" time="0.091">
    </testcase>
    <testcase classname="Component Tests LogsComponent should call load all on init" name="Component Tests LogsComponent should call load all on init" time="0.011">
    </testcase>
    <testcase classname="Component Tests LogsComponent should change log level correctly" name="Component Tests LogsComponent should change log level correctly" time="0.006">
    </testcase>
    <testcase classname="Component Tests LogsComponent should filter loggers correctly" name="Component Tests LogsComponent should filter loggers correctly" time="0.007">
    </testcase>
    <testcase classname="Component Tests LogsComponent should sort loggers correctly" name="Component Tests LogsComponent should sort loggers correctly" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="The ExcelExportRowBuilder" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:44" time="1.098" tests="7">
    <testcase classname="The ExcelExportRowBuilder should convert numbers to their common spreadsheet format" name="The ExcelExportRowBuilder should convert numbers to their common spreadsheet format" time="0.004">
    </testcase>
    <testcase classname="The ExcelExportRowBuilder should convert percentage numbers to their common spreadsheet format" name="The ExcelExportRowBuilder should convert percentage numbers to their common spreadsheet format" time="0.001">
    </testcase>
    <testcase classname="The ExcelExportRowBuilder should return a hyphen for NaN values" name="The ExcelExportRowBuilder should return a hyphen for NaN values" time="0.001">
    </testcase>
    <testcase classname="The ExcelExportRowBuilder Test the ExcelExportRowBuilder with a specific accuracyOfScores should convert numbers to their localized format respecting the accuracyOfScores" name="The ExcelExportRowBuilder Test the ExcelExportRowBuilder with a specific accuracyOfScores should convert numbers to their localized format respecting the accuracyOfScores" time="0.004">
    </testcase>
    <testcase classname="The ExcelExportRowBuilder Test the ExcelExportRowBuilder with a specific accuracyOfScores should convert percentage numbers to their localized format" name="The ExcelExportRowBuilder Test the ExcelExportRowBuilder with a specific accuracyOfScores should convert percentage numbers to their localized format" time="0.028">
    </testcase>
    <testcase classname="The ExcelExportRowBuilder should set the exercise type points" name="The ExcelExportRowBuilder should set the exercise type points" time="0.001">
    </testcase>
    <testcase classname="The ExcelExportRowBuilder should set the exercise type score" name="The ExcelExportRowBuilder should set the exercise type score" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CourseNotificationPresetPickerComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:44" time="2.295" tests="6">
    <testcase classname="CourseNotificationPresetPickerComponent should create" name="CourseNotificationPresetPickerComponent should create" time="0.186">
    </testcase>
    <testcase classname="CourseNotificationPresetPickerComponent should set selectedPresetLangKey based on selectedCourseSettingPreset" name="CourseNotificationPresetPickerComponent should set selectedPresetLangKey based on selectedCourseSettingPreset" time="0.072">
    </testcase>
    <testcase classname="CourseNotificationPresetPickerComponent should use customUserCourseNotificationSettingPreset key when selected preset is null" name="CourseNotificationPresetPickerComponent should use customUserCourseNotificationSettingPreset key when selected preset is null" time="0.056">
    </testcase>
    <testcase classname="CourseNotificationPresetPickerComponent should emit onPresetSelected event with the correct preset ID when a preset is selected" name="CourseNotificationPresetPickerComponent should emit onPresetSelected event with the correct preset ID when a preset is selected" time="0.092">
    </testcase>
    <testcase classname="CourseNotificationPresetPickerComponent should emit 0 when the custom preset is selected" name="CourseNotificationPresetPickerComponent should emit 0 when the custom preset is selected" time="0.051">
    </testcase>
    <testcase classname="CourseNotificationPresetPickerComponent should show checkmark icon for the selected preset" name="CourseNotificationPresetPickerComponent should show checkmark icon for the selected preset" time="0.115">
    </testcase>
  </testsuite>
  <testsuite name="CancellationModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:46" time="1.817" tests="3">
    <testcase classname="CancellationModalComponent should initialize" name="CancellationModalComponent should initialize" time="0.1">
    </testcase>
    <testcase classname="CancellationModalComponent should call cancel when the activate cancel button is clicked with a active session" name="CancellationModalComponent should call cancel when the activate cancel button is clicked with a active session" time="0.019">
    </testcase>
    <testcase classname="CancellationModalComponent should call activate when the activate cancel button is clicked with a cancelled session" name="CancellationModalComponent should call activate when the activate cancel button is clicked with a cancelled session" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="ImportAllCourseCompetenciesModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:44" time="3.546" tests="8">
    <testcase classname="ImportAllCourseCompetenciesModalComponent should initialize" name="ImportAllCourseCompetenciesModalComponent should initialize" time="0.208">
    </testcase>
    <testcase classname="ImportAllCourseCompetenciesModalComponent should set disabledIds" name="ImportAllCourseCompetenciesModalComponent should set disabledIds" time="0.061">
    </testcase>
    <testcase classname="ImportAllCourseCompetenciesModalComponent should close modal on close button" name="ImportAllCourseCompetenciesModalComponent should close modal on close button" time="0.124">
    </testcase>
    <testcase classname="ImportAllCourseCompetenciesModalComponent should select course and close modal" name="ImportAllCourseCompetenciesModalComponent should select course and close modal" time="0.03">
    </testcase>
    <testcase classname="ImportAllCourseCompetenciesModalComponent should initialize table columns correctly" name="ImportAllCourseCompetenciesModalComponent should initialize table columns correctly" time="0.046">
    </testcase>
    <testcase classname="ImportAllCourseCompetenciesModalComponent should get correct property for TITLE column" name="ImportAllCourseCompetenciesModalComponent should get correct property for TITLE column" time="0.047">
    </testcase>
    <testcase classname="ImportAllCourseCompetenciesModalComponent should get correct property for SHORT_NAME column" name="ImportAllCourseCompetenciesModalComponent should get correct property for SHORT_NAME column" time="0.074">
    </testcase>
    <testcase classname="ImportAllCourseCompetenciesModalComponent should get correct property for SEMESTER column" name="ImportAllCourseCompetenciesModalComponent should get correct property for SEMESTER column" time="0.045">
    </testcase>
  </testsuite>
  <testsuite name="Create Test Run Modal Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:46" time="1.716" tests="5">
    <testcase classname="Create Test Run Modal Component onInit should initialise the working time form" name="Create Test Run Modal Component onInit should initialise the working time form" time="0.08">
    </testcase>
    <testcase classname="Create Test Run Modal Component creating test run workflow should create a new test run and close the modal" name="Create Test Run Modal Component creating test run workflow should create a new test run and close the modal" time="0.061">
    </testcase>
    <testcase classname="Create Test Run Modal Component Ignore Exercise groups should ignore exercise groups with no exercises" name="Create Test Run Modal Component Ignore Exercise groups should ignore exercise groups with no exercises" time="0.021">
    </testcase>
    <testcase classname="Create Test Run Modal Component Exercise Selection should highlight the exercise when pressed" name="Create Test Run Modal Component Exercise Selection should highlight the exercise when pressed" time="0.013">
    </testcase>
    <testcase classname="Create Test Run Modal Component Exercise Selection should allow submit when an exercise has been selected for every exercise group" name="Create Test Run Modal Component Exercise Selection should allow submit when an exercise has been selected for every exercise group" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="ConfirmEntityNameComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:48" time="0.932" tests="7">
    <testcase classname="ConfirmEntityNameComponent NgModel control should be valid with valid input" name="ConfirmEntityNameComponent NgModel control should be valid with valid input" time="0.068">
    </testcase>
    <testcase classname="ConfirmEntityNameComponent NgModel control should be invalid with invalid input" name="ConfirmEntityNameComponent NgModel control should be invalid with invalid input" time="0.013">
    </testcase>
    <testcase classname="ConfirmEntityNameComponent NgModel control should be valid for dynamic entity name" name="ConfirmEntityNameComponent NgModel control should be valid for dynamic entity name" time="0.013">
    </testcase>
    <testcase classname="ConfirmEntityNameComponent NgModel control should be invalid for dynamic entity name with previous entity name" name="ConfirmEntityNameComponent NgModel control should be invalid for dynamic entity name with previous entity name" time="0.009">
    </testcase>
    <testcase classname="ConfirmEntityNameComponent Component should create" name="ConfirmEntityNameComponent Component should create" time="0.009">
    </testcase>
    <testcase classname="ConfirmEntityNameComponent Component should change warning text color" name="ConfirmEntityNameComponent Component should change warning text color" time="0.029">
    </testcase>
    <testcase classname="ConfirmEntityNameComponent Component should display confirmation text" name="ConfirmEntityNameComponent Component should display confirmation text" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseStatisticsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:44" time="4.848" tests="2">
    <testcase classname="ExerciseStatisticsComponent should initialize" name="ExerciseStatisticsComponent should initialize" time="0.434">
    </testcase>
    <testcase classname="ExerciseStatisticsComponent should trigger when tab changed" name="ExerciseStatisticsComponent should trigger when tab changed" time="0.27">
    </testcase>
  </testsuite>
  <testsuite name="ColorSelectorComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:49" time="0.912" tests="8">
    <testcase classname="ColorSelectorComponent should set the correct coordinates on init" name="ColorSelectorComponent should set the correct coordinates on init" time="0.045">
    </testcase>
    <testcase classname="ColorSelectorComponent should register click event listener on init" name="ColorSelectorComponent should register click event listener on init" time="0.006">
    </testcase>
    <testcase classname="ColorSelectorComponent should stop event propagation on openSelector" name="ColorSelectorComponent should stop event propagation on openSelector" time="0.012">
    </testcase>
    <testcase classname="ColorSelectorComponent should position the color selector after opening correctly" name="ColorSelectorComponent should position the color selector after opening correctly" time="0.037">
    </testcase>
    <testcase classname="ColorSelectorComponent should set the tag colors correctly" name="ColorSelectorComponent should set the tag colors correctly" time="0.012">
    </testcase>
    <testcase classname="ColorSelectorComponent should cancel the color selector correctly" name="ColorSelectorComponent should cancel the color selector correctly" time="0.005">
    </testcase>
    <testcase classname="ColorSelectorComponent should handle close actions properly and close when clicked outside" name="ColorSelectorComponent should handle close actions properly and close when clicked outside" time="0.012">
    </testcase>
    <testcase classname="ColorSelectorComponent should handle close actions properly and stay open when clicked inside but not clicking a color" name="ColorSelectorComponent should handle close actions properly and stay open when clicked inside but not clicking a color" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="CreateTutorialGroupComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:48" time="3.81" tests="2">
    <testcase classname="CreateTutorialGroupComponent should initialize" name="CreateTutorialGroupComponent should initialize" time="0.982">
    </testcase>
    <testcase classname="CreateTutorialGroupComponent should send POST request upon form submission and navigate" name="CreateTutorialGroupComponent should send POST request upon form submission and navigate" time="0.084">
    </testcase>
  </testsuite>
  <testsuite name="CompetencyManagementTableComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:50" time="3.012" tests="3">
    <testcase classname="CompetencyManagementTableComponent should initialize values" name="CompetencyManagementTableComponent should initialize values" time="0.197">
    </testcase>
    <testcase classname="CompetencyManagementTableComponent should handle import all data" name="CompetencyManagementTableComponent should handle import all data" time="0.058">
    </testcase>
    <testcase classname="CompetencyManagementTableComponent should handle delete competency" name="CompetencyManagementTableComponent should handle delete competency" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="CodeEditorStudentContainerComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:47" time="5.989" tests="3">
    <testcase classname="CodeEditorStudentContainerComponent should correctly initialize the number of submissions for submission policy" name="CodeEditorStudentContainerComponent should correctly initialize the number of submissions for submission policy" time="1.127">
    </testcase>
    <testcase classname="CodeEditorStudentContainerComponent should not calculate the number of submissions for no or inactive submission policy" name="CodeEditorStudentContainerComponent should not calculate the number of submissions for no or inactive submission policy" time="0.018">
    </testcase>
    <testcase classname="CodeEditorStudentContainerComponent should not calculate the number of submissions for no or inactive submission policy" name="CodeEditorStudentContainerComponent should not calculate the number of submissions for no or inactive submission policy" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="StructuredGradingInstructionsAssessmentLayoutComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:50" time="4.917" tests="3">
    <testcase classname="StructuredGradingInstructionsAssessmentLayoutComponent should initialize" name="StructuredGradingInstructionsAssessmentLayoutComponent should initialize" time="0.353">
    </testcase>
    <testcase classname="StructuredGradingInstructionsAssessmentLayoutComponent should set display elements" name="StructuredGradingInstructionsAssessmentLayoutComponent should set display elements" time="0.188">
    </testcase>
    <testcase classname="StructuredGradingInstructionsAssessmentLayoutComponent should expand and collapse all criteria" name="StructuredGradingInstructionsAssessmentLayoutComponent should expand and collapse all criteria" time="0.155">
    </testcase>
  </testsuite>
  <testsuite name="QuizManageUtil" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:53" time="2.365" tests="11">
    <testcase classname="QuizManageUtil isQuizEditable should return true if new quiz" name="QuizManageUtil isQuizEditable should return true if new quiz" time="0.002">
    </testcase>
    <testcase classname="QuizManageUtil isQuizEditable should return true if existing quiz is synchronized, not active and not over" name="QuizManageUtil isQuizEditable should return true if existing quiz is synchronized, not active and not over" time="0.001">
    </testcase>
    <testcase classname="QuizManageUtil isQuizEditable should return true if existing quiz is batched, no batch exists, not active, at least editor and not over" name="QuizManageUtil isQuizEditable should return true if existing quiz is batched, no batch exists, not active, at least editor and not over" time="0.001">
    </testcase>
    <testcase classname="QuizManageUtil isQuizEditable should return false if existing quiz is batched, batch exists, not active, at least editor and not over" name="QuizManageUtil isQuizEditable should return false if existing quiz is batched, batch exists, not active, at least editor and not over" time="0.001">
    </testcase>
    <testcase classname="QuizManageUtil isQuizEditable should return false if existing quiz is synchronized, active, at least editor, and not over" name="QuizManageUtil isQuizEditable should return false if existing quiz is synchronized, active, at least editor, and not over" time="0.001">
    </testcase>
    <testcase classname="QuizManageUtil isQuizEditable should return false if existing quiz is synchronized, not active, at least editor, and over" name="QuizManageUtil isQuizEditable should return false if existing quiz is synchronized, not active, at least editor, and over" time="0.001">
    </testcase>
    <testcase classname="QuizManageUtil isQuizEditable should return false if existing quiz is synchronized, not active, not editor and not over" name="QuizManageUtil isQuizEditable should return false if existing quiz is synchronized, not active, not editor and not over" time="0.001">
    </testcase>
    <testcase classname="QuizManageUtil isQuizQuestionValid should return false if points is undefined" name="QuizManageUtil isQuizQuestionValid should return false if points is undefined" time="0.001">
    </testcase>
    <testcase classname="QuizManageUtil isQuizQuestionValid should return false if points &lt; 1" name="QuizManageUtil isQuizQuestionValid should return false if points &lt; 1" time="0">
    </testcase>
    <testcase classname="QuizManageUtil isQuizQuestionValid should return false if points &gt; 9999" name="QuizManageUtil isQuizQuestionValid should return false if points &gt; 9999" time="0">
    </testcase>
    <testcase classname="QuizManageUtil isQuizQuestionValid should return true if question is valid" name="QuizManageUtil isQuizQuestionValid should return true if question is valid" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Iris Chat Http Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:55" time="0.959" tests="6">
    <testcase classname="Iris Chat Http Service Service methods should create a message" name="Iris Chat Http Service Service methods should create a message" time="0.031">
    </testcase>
    <testcase classname="Iris Chat Http Service Service methods should resend a message" name="Iris Chat Http Service Service methods should resend a message" time="0.005">
    </testcase>
    <testcase classname="Iris Chat Http Service Service methods should return all messages for a session" name="Iris Chat Http Service Service methods should return all messages for a session" time="0.005">
    </testcase>
    <testcase classname="Iris Chat Http Service Service methods should update message helpful field" name="Iris Chat Http Service Service methods should update message helpful field" time="0.004">
    </testcase>
    <testcase classname="Iris Chat Http Service Service methods should create a session" name="Iris Chat Http Service Service methods should create a session" time="0.004">
    </testcase>
    <testcase classname="Iris Chat Http Service Service methods should return current session" name="Iris Chat Http Service Service methods should return current session" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="IrisEnabledComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:54" time="1.107" tests="8">
    <testcase classname="IrisEnabledComponent should initialize" name="IrisEnabledComponent should initialize" time="0.046">
    </testcase>
    <testcase classname="IrisEnabledComponent should load exercise" name="IrisEnabledComponent should load exercise" time="0.009">
    </testcase>
    <testcase classname="IrisEnabledComponent should load exercise" name="IrisEnabledComponent should load exercise" time="0.035">
    </testcase>
    <testcase classname="IrisEnabledComponent should load course" name="IrisEnabledComponent should load course" time="0.016">
    </testcase>
    <testcase classname="IrisEnabledComponent should load course" name="IrisEnabledComponent should load course" time="0.01">
    </testcase>
    <testcase classname="IrisEnabledComponent should load course" name="IrisEnabledComponent should load course" time="0.011">
    </testcase>
    <testcase classname="IrisEnabledComponent should set exercise enabled" name="IrisEnabledComponent should set exercise enabled" time="0.006">
    </testcase>
    <testcase classname="IrisEnabledComponent should set course enabled" name="IrisEnabledComponent should set course enabled" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupsChecklistComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:53" time="2.935" tests="1">
    <testcase classname="TutorialGroupsChecklistComponent should initialize" name="TutorialGroupsChecklistComponent should initialize" time="0.167">
    </testcase>
  </testsuite>
  <testsuite name="LegalDocumentService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:56" time="0.734" tests="6">
    <testcase classname="LegalDocumentService should make PUT request to update legal document" name="LegalDocumentService should make PUT request to update legal document" time="0.01">
    </testcase>
    <testcase classname="LegalDocumentService should make PUT request to update legal document" name="LegalDocumentService should make PUT request to update legal document" time="0.01">
    </testcase>
    <testcase classname="LegalDocumentService should make GET request to retrieve legal document for update" name="LegalDocumentService should make GET request to retrieve legal document for update" time="0.004">
    </testcase>
    <testcase classname="LegalDocumentService should make GET request to retrieve legal document for update" name="LegalDocumentService should make GET request to retrieve legal document for update" time="0.003">
    </testcase>
    <testcase classname="LegalDocumentService should make GET request to retrieve legal document" name="LegalDocumentService should make GET request to retrieve legal document" time="0.006">
    </testcase>
    <testcase classname="LegalDocumentService should make GET request to retrieve legal document" name="LegalDocumentService should make GET request to retrieve legal document" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="LinkPreviewContainerComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:55" time="1.533" tests="3">
    <testcase classname="LinkPreviewContainerComponent should create" name="LinkPreviewContainerComponent should create" time="0.049">
    </testcase>
    <testcase classname="LinkPreviewContainerComponent should fetch link previews and update linkPreviews array" name="LinkPreviewContainerComponent should fetch link previews and update linkPreviews array" time="0.008">
    </testcase>
    <testcase classname="LinkPreviewContainerComponent should update existing link preview if it already exists" name="LinkPreviewContainerComponent should update existing link preview if it already exists" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="OrganizationManagementComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:56" time="1.653" tests="3">
    <testcase classname="OrganizationManagementComponent should initialize and load organizations" name="OrganizationManagementComponent should initialize and load organizations" time="0.017">
    </testcase>
    <testcase classname="OrganizationManagementComponent should delete an organization" name="OrganizationManagementComponent should delete an organization" time="0.008">
    </testcase>
    <testcase classname="OrganizationManagementComponent should track id" name="OrganizationManagementComponent should track id" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="MonacoEditorActionGradingInstructionsIntegration" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:56" time="1.738" tests="2">
    <testcase classname="MonacoEditorActionGradingInstructionsIntegration should insert grading instructions" name="MonacoEditorActionGradingInstructionsIntegration should insert grading instructions" time="0.717">
    </testcase>
    <testcase classname="MonacoEditorActionGradingInstructionsIntegration should insert grading criterion" name="MonacoEditorActionGradingInstructionsIntegration should insert grading criterion" time="0.069">
    </testcase>
  </testsuite>
  <testsuite name="BuildJobStatisticsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:56" time="3.131" tests="4">
    <testcase classname="BuildJobStatisticsComponent should get build job statistics when changing the span" name="BuildJobStatisticsComponent should get build job statistics when changing the span" time="0.193">
    </testcase>
    <testcase classname="BuildJobStatisticsComponent should not get build job statistics when span is the same" name="BuildJobStatisticsComponent should not get build job statistics when span is the same" time="0.027">
    </testcase>
    <testcase classname="BuildJobStatisticsComponent should get build job statistics for course when courseId is present" name="BuildJobStatisticsComponent should get build job statistics for course when courseId is present" time="0.021">
    </testcase>
    <testcase classname="BuildJobStatisticsComponent should use stats from input" name="BuildJobStatisticsComponent should use stats from input" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="TypeAheadUserSearchFieldComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:57" time="2.249" tests="8">
    <testcase classname="TypeAheadUserSearchFieldComponent should create" name="TypeAheadUserSearchFieldComponent should create" time="0.159">
    </testcase>
    <testcase classname="TypeAheadUserSearchFieldComponent should call the user service on search" name="TypeAheadUserSearchFieldComponent should call the user service on search" time="0.065">
    </testcase>
    <testcase classname="TypeAheadUserSearchFieldComponent should not call the user service on search for string with less than three characters" name="TypeAheadUserSearchFieldComponent should not call the user service on search for string with less than three characters" time="0.104">
    </testcase>
    <testcase classname="TypeAheadUserSearchFieldComponent should set searchNoResults to true if no users are found" name="TypeAheadUserSearchFieldComponent should set searchNoResults to true if no users are found" time="0.103">
    </testcase>
    <testcase classname="TypeAheadUserSearchFieldComponent should set searchFailed to true if the user service throws an error" name="TypeAheadUserSearchFieldComponent should set searchFailed to true if the user service throws an error" time="0.097">
    </testcase>
    <testcase classname="TypeAheadUserSearchFieldComponent should emit the loginOrNameChange event on change with the correct value and update searchQueryTooShort" name="TypeAheadUserSearchFieldComponent should emit the loginOrNameChange event on change with the correct value and update searchQueryTooShort" time="0.092">
    </testcase>
    <testcase classname="TypeAheadUserSearchFieldComponent should format the result correctly" name="TypeAheadUserSearchFieldComponent should format the result correctly" time="0.059">
    </testcase>
    <testcase classname="TypeAheadUserSearchFieldComponent should format the input correctly" name="TypeAheadUserSearchFieldComponent should format the input correctly" time="0.074">
    </testcase>
  </testsuite>
  <testsuite name="CourseTutorialGroupDetailComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:57" time="2.332" tests="2">
    <testcase classname="CourseTutorialGroupDetailComponent should initialize" name="CourseTutorialGroupDetailComponent should initialize" time="0.328">
    </testcase>
    <testcase classname="CourseTutorialGroupDetailComponent should load tutorial group" name="CourseTutorialGroupDetailComponent should load tutorial group" time="0.064">
    </testcase>
  </testsuite>
  <testsuite name="ExamLiveAnnouncementCreateModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:57" time="3.057" tests="5">
    <testcase classname="ExamLiveAnnouncementCreateModalComponent should initialize component with default properties" name="ExamLiveAnnouncementCreateModalComponent should initialize component with default properties" time="0.453">
    </testcase>
    <testcase classname="ExamLiveAnnouncementCreateModalComponent should update text content and announcement when textContentChanged() is called" name="ExamLiveAnnouncementCreateModalComponent should update text content and announcement when textContentChanged() is called" time="0.016">
    </testcase>
    <testcase classname="ExamLiveAnnouncementCreateModalComponent should dismiss the modal when clear() is called" name="ExamLiveAnnouncementCreateModalComponent should dismiss the modal when clear() is called" time="0.009">
    </testcase>
    <testcase classname="ExamLiveAnnouncementCreateModalComponent should handle successful announcement submission" name="ExamLiveAnnouncementCreateModalComponent should handle successful announcement submission" time="0.153">
    </testcase>
    <testcase classname="ExamLiveAnnouncementCreateModalComponent should handle failed announcement submission" name="ExamLiveAnnouncementCreateModalComponent should handle failed announcement submission" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="ResultProgressBarComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:00" time="4.201" tests="6">
    <testcase classname="ResultProgressBarComponent should clear interval when not queued or building" name="ResultProgressBarComponent should clear interval when not queued or building" time="0.041">
    </testcase>
    <testcase classname="ResultProgressBarComponent should set queue progress bar" name="ResultProgressBarComponent should set queue progress bar" time="0.028">
    </testcase>
    <testcase classname="ResultProgressBarComponent should set build progress bar" name="ResultProgressBarComponent should set build progress bar" time="0.016">
    </testcase>
    <testcase classname="ResultProgressBarComponent should alternate opacity when queued" name="ResultProgressBarComponent should alternate opacity when queued" time="0.015">
    </testcase>
    <testcase classname="ResultProgressBarComponent should alternate opacity when building" name="ResultProgressBarComponent should alternate opacity when building" time="0.013">
    </testcase>
    <testcase classname="ResultProgressBarComponent should clear interval on destroy" name="ResultProgressBarComponent should clear interval on destroy" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="DeleteDialogDirective" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:22:59" time="4.538" tests="4">
    <testcase classname="DeleteDialogDirective directive should be correctly initialized" name="DeleteDialogDirective directive should be correctly initialized" time="0.049">
    </testcase>
    <testcase classname="DeleteDialogDirective on click should call delete dialog service" name="DeleteDialogDirective on click should call delete dialog service" time="0.011">
    </testcase>
    <testcase classname="DeleteDialogDirective action type cleanup should change button title" name="DeleteDialogDirective action type cleanup should change button title" time="0.006">
    </testcase>
    <testcase classname="DeleteDialogDirective action type reset should change button title" name="DeleteDialogDirective action type reset should change button title" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:02" time="2.815" tests="5">
    <testcase classname="Component Tests PasswordResetFinishComponent should define its initial state" name="Component Tests PasswordResetFinishComponent should define its initial state" time="0.159">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent sets focus after the view has been initialized" name="Component Tests PasswordResetFinishComponent sets focus after the view has been initialized" time="0.009">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should ensure the two passwords entered match" name="Component Tests PasswordResetFinishComponent should ensure the two passwords entered match" time="0.009">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should update success to true after resetting password" name="Component Tests PasswordResetFinishComponent should update success to true after resetting password" time="0.033">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should notify of generic error" name="Component Tests PasswordResetFinishComponent should notify of generic error" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="TeamsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:00" time="4.903" tests="1">
    <testcase classname="TeamsComponent Teams are loaded correctly" name="TeamsComponent Teams are loaded correctly" time="0.347">
    </testcase>
  </testsuite>
  <testsuite name="Header Course Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:04" time="1.005" tests="4">
    <testcase classname="Header Course Component should toggle long course description" name="Header Course Component should toggle long course description" time="0.089">
    </testcase>
    <testcase classname="Header Course Component should not enable show more for course with short description" name="Header Course Component should not enable show more for course with short description" time="0.016">
    </testcase>
    <testcase classname="Header Course Component should not display manage button but go to student view button in course management" name="Header Course Component should not display manage button but go to student view button in course management" time="0.01">
    </testcase>
    <testcase classname="Header Course Component should not display manage button to student" name="Header Course Component should not display manage button to student" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="SettingsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:04" time="1.165" tests="3">
    <testcase classname="SettingsComponent should send the current identity upon save" name="SettingsComponent should send the current identity upon save" time="0.129">
    </testcase>
    <testcase classname="SettingsComponent should notify of success upon successful save" name="SettingsComponent should notify of success upon successful save" time="0.008">
    </testcase>
    <testcase classname="SettingsComponent should notify of error upon failed save" name="SettingsComponent should notify of error upon failed save" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="User Settings Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:05" time="0.777" tests="3">
    <testcase classname="User Settings Service should refresh settings after user settings changed" name="User Settings Service should refresh settings after user settings changed" time="0.011">
    </testcase>
    <testcase classname="User Settings Service should provide getters for notification settings and updates to it" name="User Settings Service should provide getters for notification settings and updates to it" time="0.006">
    </testcase>
    <testcase classname="User Settings Service create correct title activation map" name="User Settings Service create correct title activation map" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="CategoryIssuesChartComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:05" time="1.44" tests="6">
    <testcase classname="CategoryIssuesChartComponent should display the right tooltip content" name="CategoryIssuesChartComponent should display the right tooltip content" time="0.026">
    </testcase>
    <testcase classname="CategoryIssuesChartComponent should display the right tooltip color for feedback" name="CategoryIssuesChartComponent should display the right tooltip color for feedback" time="0.006">
    </testcase>
    <testcase classname="CategoryIssuesChartComponent should display the right tooltip color for inactive" name="CategoryIssuesChartComponent should display the right tooltip color for inactive" time="0.011">
    </testcase>
    <testcase classname="CategoryIssuesChartComponent should display the right tooltip color for more issues than max graded" name="CategoryIssuesChartComponent should display the right tooltip color for more issues than max graded" time="0.006">
    </testcase>
    <testcase classname="CategoryIssuesChartComponent should have the right tooltip width" name="CategoryIssuesChartComponent should have the right tooltip width" time="0.005">
    </testcase>
    <testcase classname="CategoryIssuesChartComponent should have the right tooltip height" name="CategoryIssuesChartComponent should have the right tooltip height" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="CourseCompetencyService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:05" time="1.13" tests="3">
    <testcase classname="CourseCompetencyService should find all competencies" name="CourseCompetencyService should find all competencies" time="0.041">
    </testcase>
    <testcase classname="CourseCompetencyService should find a competency" name="CourseCompetencyService should find a competency" time="0.011">
    </testcase>
    <testcase classname="CourseCompetencyService should import all competencies of a course" name="CourseCompetencyService should import all competencies of a course" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="StatisticsGraphComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:04" time="2.248" tests="3">
    <testcase classname="StatisticsGraphComponent should initialize" name="StatisticsGraphComponent should initialize" time="0.069">
    </testcase>
    <testcase classname="StatisticsGraphComponent should initialize after changes" name="StatisticsGraphComponent should initialize after changes" time="0.012">
    </testcase>
    <testcase classname="StatisticsGraphComponent should switch time span" name="StatisticsGraphComponent should switch time span" time="0.052">
    </testcase>
  </testsuite>
  <testsuite name="Iris Settings Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:07" time="0.814" tests="8">
    <testcase classname="Iris Settings Service should get global settings" name="Iris Settings Service should get global settings" time="0.009">
    </testcase>
    <testcase classname="Iris Settings Service should set global settings" name="Iris Settings Service should set global settings" time="0.028">
    </testcase>
    <testcase classname="Iris Settings Service should get uncombined course settings" name="Iris Settings Service should get uncombined course settings" time="0.004">
    </testcase>
    <testcase classname="Iris Settings Service should get combined course settings" name="Iris Settings Service should get combined course settings" time="0.006">
    </testcase>
    <testcase classname="Iris Settings Service should set course settings" name="Iris Settings Service should set course settings" time="0.009">
    </testcase>
    <testcase classname="Iris Settings Service should get uncombined programming exercise settings" name="Iris Settings Service should get uncombined programming exercise settings" time="0.01">
    </testcase>
    <testcase classname="Iris Settings Service should get combined programming exercise settings" name="Iris Settings Service should get combined programming exercise settings" time="0.006">
    </testcase>
    <testcase classname="Iris Settings Service should set programming exercise settings" name="Iris Settings Service should set programming exercise settings" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="CourseCompetenciesRelationGraphComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:06" time="1.989" tests="4">
    <testcase classname="CourseCompetenciesRelationGraphComponent should initialize" name="CourseCompetenciesRelationGraphComponent should initialize" time="0.096">
    </testcase>
    <testcase classname="CourseCompetenciesRelationGraphComponent should map edges correctly" name="CourseCompetenciesRelationGraphComponent should map edges correctly" time="0.038">
    </testcase>
    <testcase classname="CourseCompetenciesRelationGraphComponent should map nodes correctly" name="CourseCompetenciesRelationGraphComponent should map nodes correctly" time="0.138">
    </testcase>
    <testcase classname="CourseCompetenciesRelationGraphComponent should update node dimension" name="CourseCompetenciesRelationGraphComponent should update node dimension" time="0.104">
    </testcase>
  </testsuite>
  <testsuite name="AuthServerProvider" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:08" time="1.44" tests="6">
    <testcase classname="AuthServerProvider test login should login with credentials if they should be remembered" name="AuthServerProvider test login should login with credentials if they should be remembered" time="0.013">
    </testcase>
    <testcase classname="AuthServerProvider test login should login with credentials if they should not be remembered" name="AuthServerProvider test login should login with credentials if they should not be remembered" time="0.007">
    </testcase>
    <testcase classname="AuthServerProvider should logout" name="AuthServerProvider should logout" time="0.008">
    </testcase>
    <testcase classname="AuthServerProvider test login with SAML2 should login with SAML2 if login should be remembered" name="AuthServerProvider test login with SAML2 should login with SAML2 if login should be remembered" time="0.007">
    </testcase>
    <testcase classname="AuthServerProvider test login with SAML2 should login with SAML2 if login should not be remembered" name="AuthServerProvider test login with SAML2 should login with SAML2 if login should not be remembered" time="0.006">
    </testcase>
    <testcase classname="AuthServerProvider should clear caches" name="AuthServerProvider should clear caches" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="VcsRepositoryAccessLogViewComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:08" time="2.887" tests="2">
    <testcase classname="VcsRepositoryAccessLogViewComponent should load participation vcs access log" name="VcsRepositoryAccessLogViewComponent should load participation vcs access log" time="0.066">
    </testcase>
    <testcase classname="VcsRepositoryAccessLogViewComponent should load template repository vcs access log" name="VcsRepositoryAccessLogViewComponent should load template repository vcs access log" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="CourseManagementStatisticsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:06" time="4.176" tests="2">
    <testcase classname="CourseManagementStatisticsComponent should initialize" name="CourseManagementStatisticsComponent should initialize" time="0.279">
    </testcase>
    <testcase classname="CourseManagementStatisticsComponent should trigger when tab changed" name="CourseManagementStatisticsComponent should trigger when tab changed" time="0.091">
    </testcase>
  </testsuite>
  <testsuite name="QuizExercise Management Buttons Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:09" time="3.603" tests="3">
    <testcase classname="QuizExercise Management Buttons Component should reset quiz" name="QuizExercise Management Buttons Component should reset quiz" time="0.074">
    </testcase>
    <testcase classname="QuizExercise Management Buttons Component should delete quiz" name="QuizExercise Management Buttons Component should delete quiz" time="0.023">
    </testcase>
    <testcase classname="QuizExercise Management Buttons Component should export quiz" name="QuizExercise Management Buttons Component should export quiz" time="0.057">
    </testcase>
  </testsuite>
  <testsuite name="ConsistencyCheckComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:11" time="2.43" tests="2">
    <testcase classname="ConsistencyCheckComponent should call checks for single programming exercise" name="ConsistencyCheckComponent should call checks for single programming exercise" time="0.219">
    </testcase>
    <testcase classname="ConsistencyCheckComponent should call checks for multiple programming exercises" name="ConsistencyCheckComponent should call checks for multiple programming exercises" time="0.063">
    </testcase>
  </testsuite>
  <testsuite name="TextSubmission Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:13" time="0.839" tests="5">
    <testcase classname="TextSubmission Service should create a TextSubmission" name="TextSubmission Service should create a TextSubmission" time="0.01">
    </testcase>
    <testcase classname="TextSubmission Service should update a TextSubmission" name="TextSubmission Service should update a TextSubmission" time="0.004">
    </testcase>
    <testcase classname="TextSubmission Service should get textSubmission for exercise" name="TextSubmission Service should get textSubmission for exercise" time="0.004">
    </testcase>
    <testcase classname="TextSubmission Service should get textSubmission" name="TextSubmission Service should get textSubmission" time="0.004">
    </testcase>
    <testcase classname="TextSubmission Service should get submission without assessment" name="TextSubmission Service should get submission without assessment" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="TutorLeaderboardComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:11" time="3.261" tests="6">
    <testcase classname="TutorLeaderboardComponent ngOnInit sets variables correctly if course is set" name="TutorLeaderboardComponent ngOnInit sets variables correctly if course is set" time="0.149">
    </testcase>
    <testcase classname="TutorLeaderboardComponent ngOnInit sets variables correctly if exercise.course is set" name="TutorLeaderboardComponent ngOnInit sets variables correctly if exercise.course is set" time="0.014">
    </testcase>
    <testcase classname="TutorLeaderboardComponent ngOnInit sets variables correctly if exercise.exerciseGroup.exam.course is set" name="TutorLeaderboardComponent ngOnInit sets variables correctly if exercise.exerciseGroup.exam.course is set" time="0.014">
    </testcase>
    <testcase classname="TutorLeaderboardComponent ngOnInit sets isExamMode if exam is set" name="TutorLeaderboardComponent ngOnInit sets isExamMode if exam is set" time="0.025">
    </testcase>
    <testcase classname="TutorLeaderboardComponent ngOnInit should sort rows" name="TutorLeaderboardComponent ngOnInit should sort rows" time="0.024">
    </testcase>
    <testcase classname="TutorLeaderboardComponent tutorData should fill the table with elements" name="TutorLeaderboardComponent tutorData should fill the table with elements" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="ExamResultSummaryExerciseCardHeaderComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:07" time="7.511" tests="10">
    <testcase classname="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for {} when displaying illegal submission badge" name="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for {} when displaying illegal submission badge" time="0.103">
    </testcase>
    <testcase classname="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for { studentParticipations: null } when displaying illegal submission badge" name="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for { studentParticipations: null } when displaying illegal submission badge" time="0.049">
    </testcase>
    <testcase classname="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for { studentParticipations: undefined } when displaying illegal submission badge" name="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for { studentParticipations: undefined } when displaying illegal submission badge" time="0.052">
    </testcase>
    <testcase classname="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for { studentParticipations: [ [length]: 0 ] } when displaying illegal submission badge" name="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for { studentParticipations: [ [length]: 0 ] } when displaying illegal submission badge" time="0.044">
    </testcase>
    <testcase classname="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for { studentParticipations: [ {}, [length]: 1 ] } when displaying illegal submission badge" name="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for { studentParticipations: [ {}, [length]: 1 ] } when displaying illegal submission badge" time="0.067">
    </testcase>
    <testcase classname="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for { studentParticipations: [ { submissions: null }, [length]: 1 ] } when displaying illegal submission badge" name="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for { studentParticipations: [ { submissions: null }, [length]: 1 ] } when displaying illegal submission badge" time="0.028">
    </testcase>
    <testcase classname="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for { studentParticipations: [ { submissions: undefined }, [length]: 1 ] } when displaying illegal submission badge" name="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for { studentParticipations: [ { submissions: undefined }, [length]: 1 ] } when displaying illegal submission badge" time="0.032">
    </testcase>
    <testcase classname="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for {
  studentParticipations: [
    { submissions: [ { type: &apos;MANUAL&apos; }, [length]: 1 ] },
    [length]: 1
  ]
} when displaying illegal submission badge" name="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for {
  studentParticipations: [
    { submissions: [ { type: &apos;MANUAL&apos; }, [length]: 1 ] },
    [length]: 1
  ]
} when displaying illegal submission badge" time="0.063">
    </testcase>
    <testcase classname="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for {
  studentParticipations: [
    { submissions: [ { type: &apos;ILLEGAL&apos; }, [length]: 1 ] },
    [length]: 1
  ]
} when displaying illegal submission badge" name="ExamResultSummaryExerciseCardHeaderComponent should handle missing/empty fields correctly for {
  studentParticipations: [
    { submissions: [ { type: &apos;ILLEGAL&apos; }, [length]: 1 ] },
    [length]: 1
  ]
} when displaying illegal submission badge" time="0.06">
    </testcase>
    <testcase classname="ExamResultSummaryExerciseCardHeaderComponent should show exercise group title" name="ExamResultSummaryExerciseCardHeaderComponent should show exercise group title" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="CompetencyGraphModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:13" time="2.053" tests="5">
    <testcase classname="CompetencyGraphModalComponent should initialize" name="CompetencyGraphModalComponent should initialize" time="0.124">
    </testcase>
    <testcase classname="CompetencyGraphModalComponent should load data" name="CompetencyGraphModalComponent should load data" time="0.024">
    </testcase>
    <testcase classname="CompetencyGraphModalComponent should show alert on failed data loading" name="CompetencyGraphModalComponent should show alert on failed data loading" time="0.036">
    </testcase>
    <testcase classname="CompetencyGraphModalComponent should set isLoading correctly" name="CompetencyGraphModalComponent should set isLoading correctly" time="0.032">
    </testcase>
    <testcase classname="CompetencyGraphModalComponent should close modal" name="CompetencyGraphModalComponent should close modal" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="ManualTextSelectionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:14" time="1.513" tests="4">
    <testcase classname="ManualTextSelectionComponent should set words correctly" name="ManualTextSelectionComponent should set words correctly" time="0.028">
    </testcase>
    <testcase classname="ManualTextSelectionComponent should calculate word indices correctly" name="ManualTextSelectionComponent should calculate word indices correctly" time="0.007">
    </testcase>
    <testcase classname="ManualTextSelectionComponent should reverse word entries if the tutor clicks on the last word first" name="ManualTextSelectionComponent should reverse word entries if the tutor clicks on the last word first" time="0.006">
    </testcase>
    <testcase classname="ManualTextSelectionComponent should send assessment event when selecting text block manually" name="ManualTextSelectionComponent should send assessment event when selecting text block manually" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="TextAssessmentAreaComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:14" time="2.072" tests="6">
    <testcase classname="TextAssessmentAreaComponent should create" name="TextAssessmentAreaComponent should create" time="0.329">
    </testcase>
    <testcase classname="TextAssessmentAreaComponent should add a TextblockAssessmentCardComponent for each TextBlockRef" name="TextAssessmentAreaComponent should add a TextblockAssessmentCardComponent for each TextBlockRef" time="0.079">
    </testcase>
    <testcase classname="TextAssessmentAreaComponent should toggle on alt" name="TextAssessmentAreaComponent should toggle on alt" time="0.051">
    </testcase>
    <testcase classname="TextAssessmentAreaComponent should not toggle on alt when manual selection forbidden" name="TextAssessmentAreaComponent should not toggle on alt when manual selection forbidden" time="0.037">
    </testcase>
    <testcase classname="TextAssessmentAreaComponent should add TextBlockRef if text block is added manually" name="TextAssessmentAreaComponent should add TextBlockRef if text block is added manually" time="0.075">
    </testcase>
    <testcase classname="TextAssessmentAreaComponent should remove TextBlockRef if text block is deleted" name="TextAssessmentAreaComponent should remove TextBlockRef if text block is deleted" time="0.044">
    </testcase>
  </testsuite>
  <testsuite name="CourseManagementOverviewStatisticsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:15" time="3.322" tests="6">
    <testcase classname="CourseManagementOverviewStatisticsComponent should initialize component and load values" name="CourseManagementOverviewStatisticsComponent should initialize component and load values" time="0.065">
    </testcase>
    <testcase classname="CourseManagementOverviewStatisticsComponent should react to changes" name="CourseManagementOverviewStatisticsComponent should react to changes" time="0.021">
    </testcase>
    <testcase classname="CourseManagementOverviewStatisticsComponent should show lettering if course did not start yet" name="CourseManagementOverviewStatisticsComponent should show lettering if course did not start yet" time="0.008">
    </testcase>
    <testcase classname="CourseManagementOverviewStatisticsComponent should show only 2 weeks if start date is 1 week ago" name="CourseManagementOverviewStatisticsComponent should show only 2 weeks if start date is 1 week ago" time="0.025">
    </testcase>
    <testcase classname="CourseManagementOverviewStatisticsComponent should adapt labels if end date is passed" name="CourseManagementOverviewStatisticsComponent should adapt labels if end date is passed" time="0.007">
    </testcase>
    <testcase classname="CourseManagementOverviewStatisticsComponent should adapt if course phase is smaller than 4 weeks" name="CourseManagementOverviewStatisticsComponent should adapt if course phase is smaller than 4 weeks" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Unreferenced Feedback Detail Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:16" time="3.064" tests="4">
    <testcase classname="Unreferenced Feedback Detail Component should call getLongFeedbackText on init if feedback has long text" name="Unreferenced Feedback Detail Component should call getLongFeedbackText on init if feedback has long text" time="0.117">
    </testcase>
    <testcase classname="Unreferenced Feedback Detail Component should update feedback with SGI and emit to parent" name="Unreferenced Feedback Detail Component should update feedback with SGI and emit to parent" time="0.038">
    </testcase>
    <testcase classname="Unreferenced Feedback Detail Component should emit the assessment change after deletion" name="Unreferenced Feedback Detail Component should emit the assessment change after deletion" time="0.041">
    </testcase>
    <testcase classname="Unreferenced Feedback Detail Component should mark automatic feedback and feedback suggestions as adapted when they are modified" name="Unreferenced Feedback Detail Component should mark automatic feedback and feedback suggestions as adapted when they are modified" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Course Management Exercises Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:15" time="3.936" tests="2">
    <testcase classname="Course Management Exercises Component should get course on onInit" name="Course Management Exercises Component should get course on onInit" time="1.022">
    </testcase>
    <testcase classname="Course Management Exercises Component should open search bar on button click" name="Course Management Exercises Component should open search bar on button click" time="0.184">
    </testcase>
  </testsuite>
  <testsuite name="AssessmentLayoutComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:16" time="3.422" tests="5">
    <testcase classname="AssessmentLayoutComponent should create" name="AssessmentLayoutComponent should create" time="0.482">
    </testcase>
    <testcase classname="AssessmentLayoutComponent should include jhi-assessment-header" name="AssessmentLayoutComponent should include jhi-assessment-header" time="0.247">
    </testcase>
    <testcase classname="AssessmentLayoutComponent should include jhi-assessment-complaint-alert" name="AssessmentLayoutComponent should include jhi-assessment-complaint-alert" time="0.184">
    </testcase>
    <testcase classname="AssessmentLayoutComponent should include jhi-assessment-note" name="AssessmentLayoutComponent should include jhi-assessment-note" time="0.204">
    </testcase>
    <testcase classname="AssessmentLayoutComponent should include jhi-complaints-for-tutor-form" name="AssessmentLayoutComponent should include jhi-complaints-for-tutor-form" time="0.222">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackSuggestionBadgeComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:20" time="1.757" tests="6">
    <testcase classname="FeedbackSuggestionBadgeComponent should have the correct text and tooltip for a SUGGESTED feedback" name="FeedbackSuggestionBadgeComponent should have the correct text and tooltip for a SUGGESTED feedback" time="0.074">
    </testcase>
    <testcase classname="FeedbackSuggestionBadgeComponent should have the correct text and tooltip for an ACCEPTED feedback" name="FeedbackSuggestionBadgeComponent should have the correct text and tooltip for an ACCEPTED feedback" time="0.025">
    </testcase>
    <testcase classname="FeedbackSuggestionBadgeComponent should have the correct text and tooltip for an ADAPTED feedback" name="FeedbackSuggestionBadgeComponent should have the correct text and tooltip for an ADAPTED feedback" time="0.034">
    </testcase>
    <testcase classname="FeedbackSuggestionBadgeComponent should have empty text and tooltip for undefined feedback type" name="FeedbackSuggestionBadgeComponent should have empty text and tooltip for undefined feedback type" time="0.054">
    </testcase>
    <testcase classname="FeedbackSuggestionBadgeComponent should respect the useDefaultText setting" name="FeedbackSuggestionBadgeComponent should respect the useDefaultText setting" time="0.032">
    </testcase>
    <testcase classname="FeedbackSuggestionBadgeComponent should ignore the useDefaultText setting for ADAPTED feedback" name="FeedbackSuggestionBadgeComponent should ignore the useDefaultText setting for ADAPTED feedback" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="CreateTutorialGroupSessionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:19" time="2.347" tests="2">
    <testcase classname="CreateTutorialGroupSessionComponent should initialize" name="CreateTutorialGroupSessionComponent should initialize" time="0.167">
    </testcase>
    <testcase classname="CreateTutorialGroupSessionComponent should send POST request upon form submission and close modal" name="CreateTutorialGroupSessionComponent should send POST request upon form submission and close modal" time="0.073">
    </testcase>
  </testsuite>
  <testsuite name="AssessmentDashboardInformationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:19" time="3.529" tests="4">
    <testcase classname="AssessmentDashboardInformationComponent should display open and closed assessments correctly" name="AssessmentDashboardInformationComponent should display open and closed assessments correctly" time="0.209">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent should set up links correctly" name="AssessmentDashboardInformationComponent should set up links correctly" time="0.012">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent should handle language changes" name="AssessmentDashboardInformationComponent should handle language changes" time="0.006">
    </testcase>
    <testcase classname="AssessmentDashboardInformationComponent should compute the right total/missing ratio" name="AssessmentDashboardInformationComponent should compute the right total/missing ratio" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupSessionService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:22" time="2.931" tests="7">
    <testcase classname="TutorialGroupSessionService getOneOfTutorialGroup" name="TutorialGroupSessionService getOneOfTutorialGroup" time="0.013">
    </testcase>
    <testcase classname="TutorialGroupSessionService create" name="TutorialGroupSessionService create" time="0.006">
    </testcase>
    <testcase classname="TutorialGroupSessionService update" name="TutorialGroupSessionService update" time="0.004">
    </testcase>
    <testcase classname="TutorialGroupSessionService updateAttendanceCount" name="TutorialGroupSessionService updateAttendanceCount" time="0.004">
    </testcase>
    <testcase classname="TutorialGroupSessionService cancel" name="TutorialGroupSessionService cancel" time="0.016">
    </testcase>
    <testcase classname="TutorialGroupSessionService activate" name="TutorialGroupSessionService activate" time="0.006">
    </testcase>
    <testcase classname="TutorialGroupSessionService delete" name="TutorialGroupSessionService delete" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="hasLectureUnsavedChanges" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:19" time="5.658" tests="4">
    <testcase classname="hasLectureUnsavedChanges should return true if warning is not bypassed by shouldDisplayDismissWarning variable but no changes were made" name="hasLectureUnsavedChanges should return true if warning is not bypassed by shouldDisplayDismissWarning variable but no changes were made" time="0.013">
    </testcase>
    <testcase classname="hasLectureUnsavedChanges should return true if dismiss warning shall not be displayed" name="hasLectureUnsavedChanges should return true if dismiss warning shall not be displayed" time="0.006">
    </testcase>
    <testcase classname="hasLectureUnsavedChanges should return result from modal (true, dismiss changes)" name="hasLectureUnsavedChanges should return result from modal (true, dismiss changes)" time="0.006">
    </testcase>
    <testcase classname="hasLectureUnsavedChanges should return result from modal (false, keep editing)" name="hasLectureUnsavedChanges should return result from modal (false, keep editing)" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="HealthComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:22" time="3.12" tests="4">
    <testcase classname="HealthComponent should get badge class" name="HealthComponent should get badge class" time="0.148">
    </testcase>
    <testcase classname="HealthComponent should call refresh on init" name="HealthComponent should call refresh on init" time="0.042">
    </testcase>
    <testcase classname="HealthComponent should handle a 503 on refreshing health data" name="HealthComponent should handle a 503 on refreshing health data" time="0.068">
    </testcase>
    <testcase classname="HealthComponent should open a modal with health if eye icon is clicked" name="HealthComponent should open a modal with health if eye icon is clicked" time="0.091">
    </testcase>
  </testsuite>
  <testsuite name="ChannelItemComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:22" time="3.542" tests="3">
    <testcase classname="ChannelItemComponent should create" name="ChannelItemComponent should create" time="0.158">
    </testcase>
    <testcase classname="ChannelItemComponent should show buttons only if user has the required permissions" name="ChannelItemComponent should show buttons only if user has the required permissions" time="0.121">
    </testcase>
    <testcase classname="ChannelItemComponent should emit channel action when the user clicks on the interaction buttons" name="ChannelItemComponent should emit channel action when the user clicks on the interaction buttons" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="Structured Grading Criteria Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:25" time="0.703" tests="2">
    <testcase classname="Structured Grading Criteria Service Service methods should calculate the total score" name="Structured Grading Criteria Service Service methods should calculate the total score" time="0.008">
    </testcase>
    <testcase classname="Structured Grading Criteria Service Service methods should calculate the total score too" name="Structured Grading Criteria Service Service methods should calculate the total score too" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseModeComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:25" time="1.876" tests="2">
    <testcase classname="ProgrammingExerciseModeComponent should initialize" name="ProgrammingExerciseModeComponent should initialize" time="0.287">
    </testcase>
    <testcase classname="ProgrammingExerciseModeComponent should initialize theiaEnabled" name="ProgrammingExerciseModeComponent should initialize theiaEnabled" time="0.089">
    </testcase>
  </testsuite>
  <testsuite name="IrisGlobalSettingsUpdateComponent Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:26" time="2.882" tests="4">
    <testcase classname="IrisGlobalSettingsUpdateComponent Component should create IrisGlobalSettingsUpdateComponent" name="IrisGlobalSettingsUpdateComponent Component should create IrisGlobalSettingsUpdateComponent" time="0.362">
    </testcase>
    <testcase classname="IrisGlobalSettingsUpdateComponent Component Setup works correctly" name="IrisGlobalSettingsUpdateComponent Component Setup works correctly" time="0.203">
    </testcase>
    <testcase classname="IrisGlobalSettingsUpdateComponent Component Can deactivate correctly" name="IrisGlobalSettingsUpdateComponent Component Can deactivate correctly" time="0.164">
    </testcase>
    <testcase classname="IrisGlobalSettingsUpdateComponent Component Saves settings correctly" name="IrisGlobalSettingsUpdateComponent Component Saves settings correctly" time="0.263">
    </testcase>
  </testsuite>
  <testsuite name="CompetencyAccordionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:25" time="3.966" tests="2">
    <testcase classname="CompetencyAccordionComponent should calculate exercise progress" name="CompetencyAccordionComponent should calculate exercise progress" time="0.816">
    </testcase>
    <testcase classname="CompetencyAccordionComponent should calculate lecture progress" name="CompetencyAccordionComponent should calculate lecture progress" time="0.144">
    </testcase>
  </testsuite>
  <testsuite name="ModelingExamSummaryComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:25" time="5.149" tests="4">
    <testcase classname="ModelingExamSummaryComponent should initialize" name="ModelingExamSummaryComponent should initialize" time="1.048">
    </testcase>
    <testcase classname="ModelingExamSummaryComponent should show no submission when there is no uml model" name="ModelingExamSummaryComponent should show no submission when there is no uml model" time="0.014">
    </testcase>
    <testcase classname="ModelingExamSummaryComponent should show modeling submission when there is submission and exercise" name="ModelingExamSummaryComponent should show modeling submission when there is submission and exercise" time="0.068">
    </testcase>
    <testcase classname="ModelingExamSummaryComponent should not show modeling submission when there is no submission or exercise" name="ModelingExamSummaryComponent should not show modeling submission when there is no submission or exercise" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Plagiarism Sidebar Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:30" time="2.671" tests="11">
    <testcase classname="Plagiarism Sidebar Component displays the run details" name="Plagiarism Sidebar Component displays the run details" time="0.241">
    </testcase>
    <testcase classname="Plagiarism Sidebar Component computes the number of pages with multiple comparisons" name="Plagiarism Sidebar Component computes the number of pages with multiple comparisons" time="0.083">
    </testcase>
    <testcase classname="Plagiarism Sidebar Component computes the number of pages with 0 comparisons" name="Plagiarism Sidebar Component computes the number of pages with 0 comparisons" time="0.071">
    </testcase>
    <testcase classname="Plagiarism Sidebar Component computes the number of pages with one comparison" name="Plagiarism Sidebar Component computes the number of pages with one comparison" time="0.08">
    </testcase>
    <testcase classname="Plagiarism Sidebar Component computes the number of pages with number of comparisons equal to page size" name="Plagiarism Sidebar Component computes the number of pages with number of comparisons equal to page size" time="0.082">
    </testcase>
    <testcase classname="Plagiarism Sidebar Component computes the paged index" name="Plagiarism Sidebar Component computes the paged index" time="0.032">
    </testcase>
    <testcase classname="Plagiarism Sidebar Component pages left" name="Plagiarism Sidebar Component pages left" time="0.055">
    </testcase>
    <testcase classname="Plagiarism Sidebar Component does not page left" name="Plagiarism Sidebar Component does not page left" time="0.06">
    </testcase>
    <testcase classname="Plagiarism Sidebar Component pages right" name="Plagiarism Sidebar Component pages right" time="0.076">
    </testcase>
    <testcase classname="Plagiarism Sidebar Component does not pages right" name="Plagiarism Sidebar Component does not pages right" time="0.059">
    </testcase>
    <testcase classname="Plagiarism Sidebar Component should reset pagination on changes" name="Plagiarism Sidebar Component should reset pagination on changes" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="CourseCompetencyApiService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:32" time="0.89" tests="6">
    <testcase classname="CourseCompetencyApiService should import all by course id" name="CourseCompetencyApiService should import all by course id" time="0.016">
    </testcase>
    <testcase classname="CourseCompetencyApiService should update course competency relation" name="CourseCompetencyApiService should update course competency relation" time="0.004">
    </testcase>
    <testcase classname="CourseCompetencyApiService should create course competency relation" name="CourseCompetencyApiService should create course competency relation" time="0.009">
    </testcase>
    <testcase classname="CourseCompetencyApiService should delete course competency relation" name="CourseCompetencyApiService should delete course competency relation" time="0.007">
    </testcase>
    <testcase classname="CourseCompetencyApiService should get course competency relations" name="CourseCompetencyApiService should get course competency relations" time="0.005">
    </testcase>
    <testcase classname="CourseCompetencyApiService should get course competencies by course id" name="CourseCompetencyApiService should get course competencies by course id" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="ConversationThreadSidebarComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:27" time="5.971" tests="6">
    <testcase classname="ConversationThreadSidebarComponent should create" name="ConversationThreadSidebarComponent should create" time="0.916">
    </testcase>
    <testcase classname="ConversationThreadSidebarComponent should create empty default answer post" name="ConversationThreadSidebarComponent should create empty default answer post" time="0.097">
    </testcase>
    <testcase classname="ConversationThreadSidebarComponent should determine channel moderation rights based on active conversation" name="ConversationThreadSidebarComponent should determine channel moderation rights based on active conversation" time="0.131">
    </testcase>
    <testcase classname="ConversationThreadSidebarComponent should determine channel moderation rights based on active conversation" name="ConversationThreadSidebarComponent should determine channel moderation rights based on active conversation" time="0.104">
    </testcase>
    <testcase classname="ConversationThreadSidebarComponent should set min and max width for the resizable thread section" name="ConversationThreadSidebarComponent should set min and max width for the resizable thread section" time="0.096">
    </testcase>
    <testcase classname="ConversationThreadSidebarComponent should toggle isExpanded and call close() on expandTooltip signal when toggleExpand() is called" name="ConversationThreadSidebarComponent should toggle isExpanded and call close() on expandTooltip signal when toggleExpand() is called" time="0.088">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseInstructionStepWizardComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:29" time="4.1" tests="2">
    <testcase classname="ProgrammingExerciseInstructionStepWizardComponent should load the expected number of steps according to the provided tests" name="ProgrammingExerciseInstructionStepWizardComponent should load the expected number of steps according to the provided tests" time="0.146">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructionStepWizardComponent should not show any icons for empty tasks list" name="ProgrammingExerciseInstructionStepWizardComponent should not show any icons for empty tasks list" time="0.066">
    </testcase>
  </testsuite>
  <testsuite name="LtiInitializerComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:34" time="2.71" tests="3">
    <testcase classname="LtiInitializerComponent should not initialize without flag" name="LtiInitializerComponent should not initialize without flag" time="0.089">
    </testcase>
    <testcase classname="LtiInitializerComponent should initialize and display with flag" name="LtiInitializerComponent should initialize and display with flag" time="0.037">
    </testcase>
    <testcase classname="LtiInitializerComponent should end initialization without password" name="LtiInitializerComponent should end initialization without password" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="CourseDescriptionFormComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:33" time="3.016" tests="4">
    <testcase classname="CourseDescriptionFormComponent should initialize" name="CourseDescriptionFormComponent should initialize" time="0.413">
    </testcase>
    <testcase classname="CourseDescriptionFormComponent should submit successfully" name="CourseDescriptionFormComponent should submit successfully" time="0.088">
    </testcase>
    <testcase classname="CourseDescriptionFormComponent should not allow submission for invalid values" name="CourseDescriptionFormComponent should not allow submission for invalid values" time="0.138">
    </testcase>
    <testcase classname="CourseDescriptionFormComponent should update the description" name="CourseDescriptionFormComponent should update the description" time="0.145">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackTextComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:36" time="0.935" tests="5">
    <testcase classname="FeedbackTextComponent should set an empty text if there is no feedback text" name="FeedbackTextComponent should set an empty text if there is no feedback text" time="0.069">
    </testcase>
    <testcase classname="FeedbackTextComponent should set the text to the feedback text" name="FeedbackTextComponent should set the text to the feedback text" time="0.013">
    </testcase>
    <testcase classname="FeedbackTextComponent should not fetch long feedback if it does not exist" name="FeedbackTextComponent should not fetch long feedback if it does not exist" time="0.02">
    </testcase>
    <testcase classname="FeedbackTextComponent should fetch long feedback" name="FeedbackTextComponent should fetch long feedback" time="0.007">
    </testcase>
    <testcase classname="FeedbackTextComponent should create a download link for very long feedback" name="FeedbackTextComponent should create a download link for very long feedback" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="QuizExercise Details Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:30" time="7.108" tests="2">
    <testcase classname="QuizExercise Details Component should be in exam mode" name="QuizExercise Details Component should be in exam mode" time="0.633">
    </testcase>
    <testcase classname="QuizExercise Details Component should initialize detail component" name="QuizExercise Details Component should initialize detail component" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="DataExportRequestButtonDirective" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:36" time="1.484" tests="2">
    <testcase classname="DataExportRequestButtonDirective should be correctly initialized" name="DataExportRequestButtonDirective should be correctly initialized" time="0.03">
    </testcase>
    <testcase classname="DataExportRequestButtonDirective should on click call data export confirmation dialog service" name="DataExportRequestButtonDirective should on click call data export confirmation dialog service" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseImportWrapperComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:34" time="4.848" tests="12">
    <testcase classname="ExerciseImportWrapperComponent should show correct header title for each exercise type" name="ExerciseImportWrapperComponent should show correct header title for each exercise type" time="0.238">
    </testcase>
    <testcase classname="ExerciseImportWrapperComponent should show correct header title for each exercise type" name="ExerciseImportWrapperComponent should show correct header title for each exercise type" time="0.029">
    </testcase>
    <testcase classname="ExerciseImportWrapperComponent should show correct header title for each exercise type" name="ExerciseImportWrapperComponent should show correct header title for each exercise type" time="0.046">
    </testcase>
    <testcase classname="ExerciseImportWrapperComponent should show correct header title for each exercise type" name="ExerciseImportWrapperComponent should show correct header title for each exercise type" time="0.031">
    </testcase>
    <testcase classname="ExerciseImportWrapperComponent should show correct header title for each exercise type" name="ExerciseImportWrapperComponent should show correct header title for each exercise type" time="0.051">
    </testcase>
    <testcase classname="ExerciseImportWrapperComponent should show correct header title for SCA import" name="ExerciseImportWrapperComponent should show correct header title for SCA import" time="0.034">
    </testcase>
    <testcase classname="ExerciseImportWrapperComponent should show tabs component for programming-exercises" name="ExerciseImportWrapperComponent should show tabs component for programming-exercises" time="0.05">
    </testcase>
    <testcase classname="ExerciseImportWrapperComponent should show exercise-import component for all other exercise types" name="ExerciseImportWrapperComponent should show exercise-import component for all other exercise types" time="0.058">
    </testcase>
    <testcase classname="ExerciseImportWrapperComponent should show exercise-import component for all other exercise types" name="ExerciseImportWrapperComponent should show exercise-import component for all other exercise types" time="0.056">
    </testcase>
    <testcase classname="ExerciseImportWrapperComponent should show exercise-import component for all other exercise types" name="ExerciseImportWrapperComponent should show exercise-import component for all other exercise types" time="0.035">
    </testcase>
    <testcase classname="ExerciseImportWrapperComponent should show exercise-import component for all other exercise types" name="ExerciseImportWrapperComponent should show exercise-import component for all other exercise types" time="0.063">
    </testcase>
    <testcase classname="ExerciseImportWrapperComponent should close the active modal when clicking cancel button" name="ExerciseImportWrapperComponent should close the active modal when clicking cancel button" time="0.106">
    </testcase>
  </testsuite>
  <testsuite name="PdfPreviewThumbnailGridComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:38" time="1.323" tests="4">
    <testcase classname="PdfPreviewThumbnailGridComponent should load PDF and render pages" name="PdfPreviewThumbnailGridComponent should load PDF and render pages" time="0.078">
    </testcase>
    <testcase classname="PdfPreviewThumbnailGridComponent should toggle enlarged view state" name="PdfPreviewThumbnailGridComponent should toggle enlarged view state" time="0.01">
    </testcase>
    <testcase classname="PdfPreviewThumbnailGridComponent should handle mouseenter and mouseleave events correctly" name="PdfPreviewThumbnailGridComponent should handle mouseenter and mouseleave events correctly" time="0.01">
    </testcase>
    <testcase classname="PdfPreviewThumbnailGridComponent should handle click event on overlay to trigger displayEnlargedCanvas" name="PdfPreviewThumbnailGridComponent should handle click event on overlay to trigger displayEnlargedCanvas" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="LearningPathNavOverviewLearningObjectsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:37" time="2.477" tests="4">
    <testcase classname="LearningPathNavOverviewLearningObjectsComponent should initialize" name="LearningPathNavOverviewLearningObjectsComponent should initialize" time="0.136">
    </testcase>
    <testcase classname="LearningPathNavOverviewLearningObjectsComponent should load learning objects" name="LearningPathNavOverviewLearningObjectsComponent should load learning objects" time="0.043">
    </testcase>
    <testcase classname="LearningPathNavOverviewLearningObjectsComponent should show error message when loading learning objects fails" name="LearningPathNavOverviewLearningObjectsComponent should show error message when loading learning objects fails" time="0.016">
    </testcase>
    <testcase classname="LearningPathNavOverviewLearningObjectsComponent should set isLoading correctly" name="LearningPathNavOverviewLearningObjectsComponent should set isLoading correctly" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="NotificationSettingsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:38" time="1.979" tests="2">
    <testcase classname="NotificationSettingsComponent should toggle setting" name="NotificationSettingsComponent should toggle setting" time="0.274">
    </testcase>
    <testcase classname="NotificationSettingsComponent should reuse settings via service if they were already loaded" name="NotificationSettingsComponent should reuse settings via service if they were already loaded" time="0.173">
    </testcase>
  </testsuite>
  <testsuite name="StandardizedCompetencyService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:40" time="0.762" tests="3">
    <testcase classname="StandardizedCompetencyService should get competency" name="StandardizedCompetencyService should get competency" time="0.01">
    </testcase>
    <testcase classname="StandardizedCompetencyService should get all for tree view" name="StandardizedCompetencyService should get all for tree view" time="0.004">
    </testcase>
    <testcase classname="StandardizedCompetencyService should get sources" name="StandardizedCompetencyService should get sources" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="BrowserFingerprintInterceptor" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:41" time="0.824" tests="3">
    <testcase classname="BrowserFingerprintInterceptor should add fingerprint and instance ID if request goes to artemis" name="BrowserFingerprintInterceptor should add fingerprint and instance ID if request goes to artemis" time="0.009">
    </testcase>
    <testcase classname="BrowserFingerprintInterceptor should not send headers if fingerprint service returns falsy values" name="BrowserFingerprintInterceptor should not send headers if fingerprint service returns falsy values" time="0.031">
    </testcase>
    <testcase classname="BrowserFingerprintInterceptor should do nothing if the request goes elsewhere" name="BrowserFingerprintInterceptor should do nothing if the request goes elsewhere" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="LearningPathsAnalyticsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:40" time="2.057" tests="3">
    <testcase classname="LearningPathsAnalyticsComponent should load instructor competency graph" name="LearningPathsAnalyticsComponent should load instructor competency graph" time="0.063">
    </testcase>
    <testcase classname="LearningPathsAnalyticsComponent should set isLoading correctly" name="LearningPathsAnalyticsComponent should set isLoading correctly" time="0.019">
    </testcase>
    <testcase classname="LearningPathsAnalyticsComponent should show error on load instructor competency graph" name="LearningPathsAnalyticsComponent should show error on load instructor competency graph" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExercise Instructor Trigger Build Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:39" time="2.595" tests="1">
    <testcase classname="ProgrammingExercise Instructor Trigger Build Component should trigger build" name="ProgrammingExercise Instructor Trigger Build Component should trigger build" time="0.061">
    </testcase>
  </testsuite>
  <testsuite name="DateUtils" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:42" time="0.911" tests="13">
    <testcase classname="DateUtils convertDateFromClient should convert date to json" name="DateUtils convertDateFromClient should convert date to json" time="0.001">
    </testcase>
    <testcase classname="DateUtils convertDateFromClient should return undefined if date is not valid" name="DateUtils convertDateFromClient should return undefined if date is not valid" time="0.007">
    </testcase>
    <testcase classname="DateUtils convertDateFromClient should return undefined if date is undefined" name="DateUtils convertDateFromClient should return undefined if date is undefined" time="0.001">
    </testcase>
    <testcase classname="DateUtils convertDateFromServer should convert dayjs to dayjs" name="DateUtils convertDateFromServer should convert dayjs to dayjs" time="0.001">
    </testcase>
    <testcase classname="DateUtils toISO8601DateString should convert date to iso string" name="DateUtils toISO8601DateString should convert date to iso string" time="0.01">
    </testcase>
    <testcase classname="DateUtils toISO8601DateString should return null or undefined" name="DateUtils toISO8601DateString should return null or undefined" time="0">
    </testcase>
    <testcase classname="DateUtils toISO8601DateTimeString should convert date to iso string" name="DateUtils toISO8601DateTimeString should convert date to iso string" time="0.001">
    </testcase>
    <testcase classname="DateUtils toISO8601DateTimeString should return null or undefined" name="DateUtils toISO8601DateTimeString should return null or undefined" time="0.007">
    </testcase>
    <testcase classname="DateUtils dayOfWeekZeroSundayToZeroMonday should convert day of week" name="DateUtils dayOfWeekZeroSundayToZeroMonday should convert day of week" time="0.002">
    </testcase>
    <testcase classname="DateUtils dayOfWeekZeroSundayToZeroMonday should throw error if day of week is not in range" name="DateUtils dayOfWeekZeroSundayToZeroMonday should throw error if day of week is not in range" time="0.034">
    </testcase>
    <testcase classname="DateUtils isDateLessThanAWeekInTheFuture should return true if date is less than a week away" name="DateUtils isDateLessThanAWeekInTheFuture should return true if date is less than a week away" time="0.001">
    </testcase>
    <testcase classname="DateUtils isDateLessThanAWeekInTheFuture should return false if date is more than a week away" name="DateUtils isDateLessThanAWeekInTheFuture should return false if date is more than a week away" time="0.001">
    </testcase>
    <testcase classname="DateUtils isDateLessThanAWeekInTheFuture should return false if date is more than a week ago" name="DateUtils isDateLessThanAWeekInTheFuture should return false if date is more than a week ago" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExamSubmissionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:39" time="4.755" tests="4">
    <testcase classname="ProgrammingExamSubmissionComponent should change state on commit" name="ProgrammingExamSubmissionComponent should change state on commit" time="1.106">
    </testcase>
    <testcase classname="ProgrammingExamSubmissionComponent should not be synced on file change" name="ProgrammingExamSubmissionComponent should not be synced on file change" time="0.008">
    </testcase>
    <testcase classname="ProgrammingExamSubmissionComponent should get submission" name="ProgrammingExamSubmissionComponent should get submission" time="0.005">
    </testcase>
    <testcase classname="ProgrammingExamSubmissionComponent should return false if no unsaved changes" name="ProgrammingExamSubmissionComponent should return false if no unsaved changes" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="PlagiarismInspectorService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:43" time="1.118" tests="11">
    <testcase classname="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" name="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" time="0.023">
    </testcase>
    <testcase classname="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" name="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" time="0.007">
    </testcase>
    <testcase classname="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" name="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" time="0.003">
    </testcase>
    <testcase classname="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" name="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" time="0.004">
    </testcase>
    <testcase classname="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" name="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" time="0.003">
    </testcase>
    <testcase classname="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" name="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" time="0.007">
    </testcase>
    <testcase classname="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" name="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" time="0.005">
    </testcase>
    <testcase classname="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" name="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" time="0.004">
    </testcase>
    <testcase classname="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" name="PlagiarismInspectorService should filter comparisons correctly for range &lt; 100%" time="0.007">
    </testcase>
    <testcase classname="PlagiarismInspectorService should filter comparisons correctly for maximal range 100%" name="PlagiarismInspectorService should filter comparisons correctly for maximal range 100%" time="0.007">
    </testcase>
    <testcase classname="PlagiarismInspectorService should return empty array if comparisons are empty" name="PlagiarismInspectorService should return empty array if comparisons are empty" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExercise Trigger All Button Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:42" time="2.879" tests="1">
    <testcase classname="ProgrammingExercise Trigger All Button Component should trigger builds for all participants on confirmation" name="ProgrammingExercise Trigger All Button Component should trigger builds for all participants on confirmation" time="0.091">
    </testcase>
  </testsuite>
  <testsuite name="CourseCardComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:42" time="3.294" tests="3">
    <testcase classname="CourseCardComponent should initialize component" name="CourseCardComponent should initialize component" time="0.224">
    </testcase>
    <testcase classname="CourseCardComponent should display the next exercise which is not yet successful" name="CourseCardComponent should display the next exercise which is not yet successful" time="0.037">
    </testcase>
    <testcase classname="CourseCardComponent should display the total course scores returned from the scores storage service" name="CourseCardComponent should display the total course scores returned from the scores storage service" time="0.069">
    </testcase>
  </testsuite>
  <testsuite name="SearchFilterPipe" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:44" time="1.61" tests="7">
    <testcase classname="SearchFilterPipe should filter array of objects based on search term" name="SearchFilterPipe should filter array of objects based on search term" time="0.053">
    </testcase>
    <testcase classname="SearchFilterPipe should return an empty array if no items match the search term" name="SearchFilterPipe should return an empty array if no items match the search term" time="0.029">
    </testcase>
    <testcase classname="SearchFilterPipe should handle empty or invalid input gracefully" name="SearchFilterPipe should handle empty or invalid input gracefully" time="0.686">
    </testcase>
    <testcase classname="SearchFilterPipe should filter ignoring case sensitivity" name="SearchFilterPipe should filter ignoring case sensitivity" time="0.002">
    </testcase>
    <testcase classname="SearchFilterPipe should allow partial matches of the search term" name="SearchFilterPipe should allow partial matches of the search term" time="0.004">
    </testcase>
    <testcase classname="SearchFilterPipe should allow for partial matches at the beginning, middle, and end of the search fields" name="SearchFilterPipe should allow for partial matches at the beginning, middle, and end of the search fields" time="0.004">
    </testcase>
    <testcase classname="SearchFilterPipe should filter array of objects based on multiple search fields" name="SearchFilterPipe should filter array of objects based on multiple search fields" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="RatingListComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:44" time="1.652" tests="4">
    <testcase classname="RatingListComponent should initialize ratings" name="RatingListComponent should initialize ratings" time="0.315">
    </testcase>
    <testcase classname="RatingListComponent should not open exercise du to missing participation" name="RatingListComponent should not open exercise du to missing participation" time="0.094">
    </testcase>
    <testcase classname="RatingListComponent should not open exercise du to missing exercise" name="RatingListComponent should not open exercise du to missing exercise" time="0.081">
    </testcase>
    <testcase classname="RatingListComponent should open exercise" name="RatingListComponent should open exercise" time="0.053">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseSaveButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:45" time="1.467" tests="6">
    <testcase classname="ExerciseSaveButtonComponent should create the component" name="ExerciseSaveButtonComponent should create the component" time="0.043">
    </testcase>
    <testcase classname="ExerciseSaveButtonComponent should disable the button if submission is synced" name="ExerciseSaveButtonComponent should disable the button if submission is synced" time="0.014">
    </testcase>
    <testcase classname="ExerciseSaveButtonComponent should enable the button if submission is not synced" name="ExerciseSaveButtonComponent should enable the button if submission is not synced" time="0.026">
    </testcase>
    <testcase classname="ExerciseSaveButtonComponent should display facSaveSuccess icon if submission is synced and submitted" name="ExerciseSaveButtonComponent should display facSaveSuccess icon if submission is synced and submitted" time="0.011">
    </testcase>
    <testcase classname="ExerciseSaveButtonComponent should display faFloppyDisk icon if submission is not synced and submitted" name="ExerciseSaveButtonComponent should display faFloppyDisk icon if submission is not synced and submitted" time="0.028">
    </testcase>
    <testcase classname="ExerciseSaveButtonComponent should call onSave when the button is clicked and submission is not synced" name="ExerciseSaveButtonComponent should call onSave when the button is clicked and submission is not synced" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="MonacoEditorService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:46" time="1.159" tests="4">
    <testcase classname="MonacoEditorService should register the custom markdown language" name="MonacoEditorService should register the custom markdown language" time="0.048">
    </testcase>
    <testcase classname="MonacoEditorService should correctly handle themes" name="MonacoEditorService should correctly handle themes" time="0.051">
    </testcase>
    <testcase classname="MonacoEditorService should insert an editor (monaco-editor) into the provided DOM element" name="MonacoEditorService should insert an editor (monaco-editor) into the provided DOM element" time="0.108">
    </testcase>
    <testcase classname="MonacoEditorService should insert an editor (monaco-diff-editor) into the provided DOM element" name="MonacoEditorService should insert an editor (monaco-diff-editor) into the provided DOM element" time="0.187">
    </testcase>
  </testsuite>
  <testsuite name="FooterComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:46" time="1.545" tests="6">
    <testcase classname="FooterComponent should create" name="FooterComponent should create" time="0.189">
    </testcase>
    <testcase classname="FooterComponent should have an About Us link with correct routing" name="FooterComponent should have an About Us link with correct routing" time="0.082">
    </testcase>
    <testcase classname="FooterComponent should have an Imprint link with correct routing" name="FooterComponent should have an Imprint link with correct routing" time="0.077">
    </testcase>
    <testcase classname="FooterComponent Git Information should display git information if not in production or on a test server" name="FooterComponent Git Information should display git information if not in production or on a test server" time="0.129">
    </testcase>
    <testcase classname="FooterComponent should not display git information if in production and not a test server" name="FooterComponent should not display git information if in production and not a test server" time="0.055">
    </testcase>
    <testcase classname="FooterComponent Git Information Detailed Testing should display all git information" name="FooterComponent Git Information Detailed Testing should display all git information" time="0.057">
    </testcase>
  </testsuite>
  <testsuite name="FileUploadSubmission Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:47" time="1.416" tests="5">
    <testcase classname="FileUploadSubmission Service should find an element" name="FileUploadSubmission Service should find an element" time="0.04">
    </testcase>
    <testcase classname="FileUploadSubmission Service should create/update a FileUploadSubmission" name="FileUploadSubmission Service should create/update a FileUploadSubmission" time="0.014">
    </testcase>
    <testcase classname="FileUploadSubmission Service should return a list of FileUploadSubmission for an exercise" name="FileUploadSubmission Service should return a list of FileUploadSubmission for an exercise" time="0.092">
    </testcase>
    <testcase classname="FileUploadSubmission Service should return next submission with no assessment" name="FileUploadSubmission Service should return next submission with no assessment" time="0.01">
    </testcase>
    <testcase classname="FileUploadSubmission Service should return data from participation id" name="FileUploadSubmission Service should return data from participation id" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="PasswordResetInitComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:46" time="2.65" tests="4">
    <testcase classname="PasswordResetInitComponent sets focus after the view has been initialized" name="PasswordResetInitComponent sets focus after the view has been initialized" time="0.178">
    </testcase>
    <testcase classname="PasswordResetInitComponent notifies of success upon successful requestReset" name="PasswordResetInitComponent notifies of success upon successful requestReset" time="0.024">
    </testcase>
    <testcase classname="PasswordResetInitComponent no notification of success upon error response" name="PasswordResetInitComponent no notification of success upon error response" time="0.031">
    </testcase>
    <testcase classname="PasswordResetInitComponent no notification of success upon external user error response" name="PasswordResetInitComponent no notification of success upon external user error response" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="ChatStatusBarComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:47" time="2.162" tests="9">
    <testcase classname="ChatStatusBarComponent should create" name="ChatStatusBarComponent should create" time="0.043">
    </testcase>
    <testcase classname="ChatStatusBarComponent should handle unfinished stages in ngOnChanges" name="ChatStatusBarComponent should handle unfinished stages in ngOnChanges" time="0.007">
    </testcase>
    <testcase classname="ChatStatusBarComponent should handle all stages finished in ngOnChanges" name="ChatStatusBarComponent should handle all stages finished in ngOnChanges" time="0.006">
    </testcase>
    <testcase classname="ChatStatusBarComponent should return true for finished stages in isStageFinished" name="ChatStatusBarComponent should return true for finished stages in isStageFinished" time="0.005">
    </testcase>
    <testcase classname="ChatStatusBarComponent should return false for unfinished stages in isStageFinished" name="ChatStatusBarComponent should return false for unfinished stages in isStageFinished" time="0.006">
    </testcase>
    <testcase classname="ChatStatusBarComponent should render progress bar when stages are present" name="ChatStatusBarComponent should render progress bar when stages are present" time="0.011">
    </testcase>
    <testcase classname="ChatStatusBarComponent should not render progress bar when stages are not present" name="ChatStatusBarComponent should not render progress bar when stages are not present" time="0.007">
    </testcase>
    <testcase classname="ChatStatusBarComponent should render stage name when stages are present" name="ChatStatusBarComponent should render stage name when stages are present" time="0.038">
    </testcase>
    <testcase classname="ChatStatusBarComponent should not render stage name when stages are not present" name="ChatStatusBarComponent should not render stage name when stages are not present" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="PlagiarismCasesOverviewComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:49" time="1.058" tests="3">
    <testcase classname="PlagiarismCasesOverviewComponent should navigate to plagiarism cases on view plagiarism cases click" name="PlagiarismCasesOverviewComponent should navigate to plagiarism cases on view plagiarism cases click" time="0.057">
    </testcase>
    <testcase classname="PlagiarismCasesOverviewComponent should not show view cases button if no cases exist" name="PlagiarismCasesOverviewComponent should not show view cases button if no cases exist" time="0.009">
    </testcase>
    <testcase classname="PlagiarismCasesOverviewComponent should navigate to plagiarism results on view plagiarism results click" name="PlagiarismCasesOverviewComponent should navigate to plagiarism results on view plagiarism results click" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="OnlineUnitService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:49" time="1.099" tests="4">
    <testcase classname="OnlineUnitService should find a OnlineUnit" name="OnlineUnitService should find a OnlineUnit" time="0.016">
    </testcase>
    <testcase classname="OnlineUnitService should create a OnlineUnit" name="OnlineUnitService should create a OnlineUnit" time="0.006">
    </testcase>
    <testcase classname="OnlineUnitService should update a OnlineUnit" name="OnlineUnitService should update a OnlineUnit" time="0.005">
    </testcase>
    <testcase classname="OnlineUnitService should send request to get online resource" name="OnlineUnitService should send request to get online resource" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="ResultHistoryComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:46" time="5.716" tests="2">
    <testcase classname="ResultHistoryComponent should initialize with same rated results" name="ResultHistoryComponent should initialize with same rated results" time="0.397">
    </testcase>
    <testcase classname="ResultHistoryComponent should initialize with mixed rated results" name="ResultHistoryComponent should initialize with mixed rated results" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="CompetencySearchComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:50" time="3.062" tests="5">
    <testcase classname="CompetencySearchComponent should initialize" name="CompetencySearchComponent should initialize" time="0.308">
    </testcase>
    <testcase classname="CompetencySearchComponent should reset" name="CompetencySearchComponent should reset" time="0.202">
    </testcase>
    <testcase classname="CompetencySearchComponent should submit with only title" name="CompetencySearchComponent should submit with only title" time="0.119">
    </testcase>
    <testcase classname="CompetencySearchComponent should submit with advanced search" name="CompetencySearchComponent should submit with advanced search" time="0.118">
    </testcase>
    <testcase classname="CompetencySearchComponent should toggle advanced search" name="CompetencySearchComponent should toggle advanced search" time="0.104">
    </testcase>
  </testsuite>
  <testsuite name="TextUnitComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:50" time="3.497" tests="4">
    <testcase classname="TextUnitComponent should initialize" name="TextUnitComponent should initialize" time="0.073">
    </testcase>
    <testcase classname="TextUnitComponent should convert markdown to html" name="TextUnitComponent should convert markdown to html" time="0.039">
    </testcase>
    <testcase classname="TextUnitComponent should display html in new window on isolatedView click" name="TextUnitComponent should display html in new window on isolatedView click" time="0.027">
    </testcase>
    <testcase classname="TextUnitComponent should log event on isolated view" name="TextUnitComponent should log event on isolated view" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="OrganizationManagementUpdateComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:52" time="1.424" tests="4">
    <testcase classname="OrganizationManagementUpdateComponent onInit should create" name="OrganizationManagementUpdateComponent onInit should create" time="0.104">
    </testcase>
    <testcase classname="OrganizationManagementUpdateComponent onInit should initialize and load organization from route if any" name="OrganizationManagementUpdateComponent onInit should initialize and load organization from route if any" time="0.017">
    </testcase>
    <testcase classname="OrganizationManagementUpdateComponent Save should update the current edited organization" name="OrganizationManagementUpdateComponent Save should update the current edited organization" time="0.034">
    </testcase>
    <testcase classname="OrganizationManagementUpdateComponent Save should add the current created organization" name="OrganizationManagementUpdateComponent Save should add the current created organization" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="Rating Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:53" time="0.869" tests="5">
    <testcase classname="Rating Service should create a TutorParticipation for an exercise" name="Rating Service should create a TutorParticipation for an exercise" time="0.009">
    </testcase>
    <testcase classname="Rating Service should assess ExampleSubmission for an exercise" name="Rating Service should assess ExampleSubmission for an exercise" time="0.006">
    </testcase>
    <testcase classname="Rating Service should not delete tutor participation for guided tour if course is undefined" name="Rating Service should not delete tutor participation for guided tour if course is undefined" time="0.003">
    </testcase>
    <testcase classname="Rating Service should not delete tutor participation for guided tour if user is not at least tutor for the course" name="Rating Service should not delete tutor participation for guided tour if user is not at least tutor for the course" time="0.003">
    </testcase>
    <testcase classname="Rating Service should delete tutor participation for guided tour if there is a course and is at least turo for the course" name="Rating Service should delete tutor participation for guided tour if there is a course and is at least turo for the course" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackChartService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:50" time="3.913" tests="7">
    <testcase classname="FeedbackChartService sets xScaleMax correctly according to maximal points" name="FeedbackChartService sets xScaleMax correctly according to maximal points" time="0.002">
    </testcase>
    <testcase classname="FeedbackChartService extracts color scheme correctly" name="FeedbackChartService extracts color scheme correctly" time="0.003">
    </testcase>
    <testcase classname="FeedbackChartService should show correct results when only positive credits" name="FeedbackChartService should show correct results when only positive credits" time="0.001">
    </testcase>
    <testcase classname="FeedbackChartService should not show net negative results" name="FeedbackChartService should not show net negative results" time="0.001">
    </testcase>
    <testcase classname="FeedbackChartService should subtract correctly" name="FeedbackChartService should subtract correctly" time="0.002">
    </testcase>
    <testcase classname="FeedbackChartService should subtract correctly with overflow" name="FeedbackChartService should subtract correctly with overflow" time="0.001">
    </testcase>
    <testcase classname="FeedbackChartService should not show more than max credits" name="FeedbackChartService should not show more than max credits" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseInstructionService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:54" time="0.793" tests="3">
    <testcase classname="ProgrammingExerciseInstructionService should determine a successful state for all tasks if the result is successful" name="ProgrammingExerciseInstructionService should determine a successful state for all tasks if the result is successful" time="0.009">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructionService should determine a failed state for a task if at least one test has failed" name="ProgrammingExerciseInstructionService should determine a failed state for a task if at least one test has failed" time="0.001">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructionService should determine a state if there is no feedback for the specified tests" name="ProgrammingExerciseInstructionService should determine a state if there is no feedback for the specified tests" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupManagementResolve" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:53" time="1.139" tests="3">
    <testcase classname="TutorialGroupManagementResolve should navigate to tutorial-groups-checklist if course has no tutorialGroupsConfiguration" name="TutorialGroupManagementResolve should navigate to tutorial-groups-checklist if course has no tutorialGroupsConfiguration" time="0.016">
    </testcase>
    <testcase classname="TutorialGroupManagementResolve should navigate to tutorial-groups-checklist if course has no timeZone" name="TutorialGroupManagementResolve should navigate to tutorial-groups-checklist if course has no timeZone" time="0.006">
    </testcase>
    <testcase classname="TutorialGroupManagementResolve should not navigate to tutorial-groups-checklist if state url matches edit configuration url" name="TutorialGroupManagementResolve should not navigate to tutorial-groups-checklist if state url matches edit configuration url" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="SshUserSettingsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:53" time="1.757" tests="4">
    <testcase classname="SshUserSettingsComponent should initialize with User without keys" name="SshUserSettingsComponent should initialize with User without keys" time="0.135">
    </testcase>
    <testcase classname="SshUserSettingsComponent should initialize with User with keys" name="SshUserSettingsComponent should initialize with User with keys" time="0.018">
    </testcase>
    <testcase classname="SshUserSettingsComponent should delete SSH key" name="SshUserSettingsComponent should delete SSH key" time="0.011">
    </testcase>
    <testcase classname="SshUserSettingsComponent should fail to load SSH keys" name="SshUserSettingsComponent should fail to load SSH keys" time="0.055">
    </testcase>
  </testsuite>
  <testsuite name="AnswerPost Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:55" time="1.174" tests="5">
    <testcase classname="AnswerPost Service Service methods should create a AnswerPost" name="AnswerPost Service Service methods should create a AnswerPost" time="0.024">
    </testcase>
    <testcase classname="AnswerPost Service Service methods should update a AnswerPost text field" name="AnswerPost Service Service methods should update a AnswerPost text field" time="0.011">
    </testcase>
    <testcase classname="AnswerPost Service Service methods should update a AnswerPost resolvesPost field" name="AnswerPost Service Service methods should update a AnswerPost resolvesPost field" time="0.008">
    </testcase>
    <testcase classname="AnswerPost Service Service methods should delete a AnswerPost" name="AnswerPost Service Service methods should delete a AnswerPost" time="0.01">
    </testcase>
    <testcase classname="AnswerPost Service Service methods should get source answer posts by IDs" name="AnswerPost Service Service methods should get source answer posts by IDs" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="FileUploaderService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:56" time="0.907" tests="7">
    <testcase classname="FileUploaderService should upload a regular file for the markdown editor" name="FileUploaderService should upload a regular file for the markdown editor" time="0.034">
    </testcase>
    <testcase classname="FileUploaderService should upload a regular file for communication" name="FileUploaderService should upload a regular file for communication" time="0.008">
    </testcase>
    <testcase classname="FileUploaderService should reject if the course for communication is not specified" name="FileUploaderService should reject if the course for communication is not specified" time="0.043">
    </testcase>
    <testcase classname="FileUploaderService should reject if the conversation for communication is not specified" name="FileUploaderService should reject if the conversation for communication is not specified" time="0.022">
    </testcase>
    <testcase classname="FileUploaderService should reject files with unsupported extensions" name="FileUploaderService should reject files with unsupported extensions" time="0.012">
    </testcase>
    <testcase classname="FileUploaderService should reject files that are too large (general)" name="FileUploaderService should reject files that are too large (general)" time="0.007">
    </testcase>
    <testcase classname="FileUploaderService should reject files that are too large (communication)" name="FileUploaderService should reject files that are too large (communication)" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="IrisChatbotWidgetComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:54" time="2.488" tests="7">
    <testcase classname="IrisChatbotWidgetComponent should create" name="IrisChatbotWidgetComponent should create" time="0.247">
    </testcase>
    <testcase classname="IrisChatbotWidgetComponent should call closeAll on dialog when closeChat is called" name="IrisChatbotWidgetComponent should call closeAll on dialog when closeChat is called" time="0.058">
    </testcase>
    <testcase classname="IrisChatbotWidgetComponent should toggle fullSize and call setPositionAndScale when toggleFullSize is called" name="IrisChatbotWidgetComponent should toggle fullSize and call setPositionAndScale when toggleFullSize is called" time="0.045">
    </testcase>
    <testcase classname="IrisChatbotWidgetComponent should add or remove cdk-global-scroll class when toggleScrollLock is called" name="IrisChatbotWidgetComponent should add or remove cdk-global-scroll class when toggleScrollLock is called" time="0.042">
    </testcase>
    <testcase classname="IrisChatbotWidgetComponent should call onResize when window is resized" name="IrisChatbotWidgetComponent should call onResize when window is resized" time="0.04">
    </testcase>
    <testcase classname="IrisChatbotWidgetComponent should call setPositionAndScale on initialization" name="IrisChatbotWidgetComponent should call setPositionAndScale on initialization" time="0.021">
    </testcase>
    <testcase classname="IrisChatbotWidgetComponent should add or remove cdk-global-scroll class when mouse enters or leaves container" name="IrisChatbotWidgetComponent should add or remove cdk-global-scroll class when mouse enters or leaves container" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="AuthExpiredInterceptor" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:57" time="1.318" tests="3">
    <testcase classname="AuthExpiredInterceptor should logout and store the current url if status is 401 and user is authenticated" name="AuthExpiredInterceptor should logout and store the current url if status is 401 and user is authenticated" time="0.014">
    </testcase>
    <testcase classname="AuthExpiredInterceptor should ignore if user is not authenticated" name="AuthExpiredInterceptor should ignore if user is not authenticated" time="0.009">
    </testcase>
    <testcase classname="AuthExpiredInterceptor should ignore if the error is anything other than 401" name="AuthExpiredInterceptor should ignore if the error is anything other than 401" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Example Solution Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:54" time="4.437" tests="1">
    <testcase classname="Example Solution Component should initialize" name="Example Solution Component should initialize" time="0.543">
    </testcase>
  </testsuite>
  <testsuite name="AboutUsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:55" time="3.805" tests="2">
    <testcase classname="AboutUsComponent load the json file from resources" name="AboutUsComponent load the json file from resources" time="0.325">
    </testcase>
    <testcase classname="AboutUsComponent load and display contributors" name="AboutUsComponent load and display contributors" time="0.119">
    </testcase>
  </testsuite>
  <testsuite name="ScienceSettingsService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:59" time="1.088" tests="2">
    <testcase classname="ScienceSettingsService should refresh settings after user settings changed" name="ScienceSettingsService should refresh settings after user settings changed" time="0.015">
    </testcase>
    <testcase classname="ScienceSettingsService should provide getters for science settings and updates to it" name="ScienceSettingsService should provide getters for science settings and updates to it" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="GenericUpdateTextPropertyDialog" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:57" time="3.83" tests="4">
    <testcase classname="GenericUpdateTextPropertyDialog should create" name="GenericUpdateTextPropertyDialog should create" time="0.183">
    </testcase>
    <testcase classname="GenericUpdateTextPropertyDialog should build the correct form, the initial value and set the correct validators" name="GenericUpdateTextPropertyDialog should build the correct form, the initial value and set the correct validators" time="0.106">
    </testcase>
    <testcase classname="GenericUpdateTextPropertyDialog should close modal if confirm is selected with the form value" name="GenericUpdateTextPropertyDialog should close modal if confirm is selected with the form value" time="0.103">
    </testcase>
    <testcase classname="GenericUpdateTextPropertyDialog should dismiss modal if cancel is selected" name="GenericUpdateTextPropertyDialog should dismiss modal if cancel is selected" time="0.105">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseTheiaComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:58" time="2.84" tests="4">
    <testcase classname="ProgrammingExerciseTheiaComponent should initialize" name="ProgrammingExerciseTheiaComponent should initialize" time="0.084">
    </testcase>
    <testcase classname="ProgrammingExerciseTheiaComponent should have no selectedImage when no image is available" name="ProgrammingExerciseTheiaComponent should have no selectedImage when no image is available" time="0.035">
    </testcase>
    <testcase classname="ProgrammingExerciseTheiaComponent should select first image when none was selected" name="ProgrammingExerciseTheiaComponent should select first image when none was selected" time="0.03">
    </testcase>
    <testcase classname="ProgrammingExerciseTheiaComponent should not overwrite selected image when others are loaded" name="ProgrammingExerciseTheiaComponent should not overwrite selected image when others are loaded" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="ArtemisDurationFromSecondsPipe" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:01" time="0.835" tests="16">
    <testcase classname="ArtemisDurationFromSecondsPipe long format should return correct format for only seconds" name="ArtemisDurationFromSecondsPipe long format should return correct format for only seconds" time="0.001">
    </testcase>
    <testcase classname="ArtemisDurationFromSecondsPipe long format should return correct format for minutes" name="ArtemisDurationFromSecondsPipe long format should return correct format for minutes" time="0">
    </testcase>
    <testcase classname="ArtemisDurationFromSecondsPipe long format should return correct format for hours" name="ArtemisDurationFromSecondsPipe long format should return correct format for hours" time="0.003">
    </testcase>
    <testcase classname="ArtemisDurationFromSecondsPipe long format should skip zero-value elements" name="ArtemisDurationFromSecondsPipe long format should skip zero-value elements" time="0.001">
    </testcase>
    <testcase classname="ArtemisDurationFromSecondsPipe long format should return correct format for days" name="ArtemisDurationFromSecondsPipe long format should return correct format for days" time="0.001">
    </testcase>
    <testcase classname="ArtemisDurationFromSecondsPipe long format should be chosen when parameter is false" name="ArtemisDurationFromSecondsPipe long format should be chosen when parameter is false" time="0.001">
    </testcase>
    <testcase classname="ArtemisDurationFromSecondsPipe long format should be chosen when parameter is undefined" name="ArtemisDurationFromSecondsPipe long format should be chosen when parameter is undefined" time="0">
    </testcase>
    <testcase classname="ArtemisDurationFromSecondsPipe long format should return correct format for zero seconds" name="ArtemisDurationFromSecondsPipe long format should return correct format for zero seconds" time="0.001">
    </testcase>
    <testcase classname="ArtemisDurationFromSecondsPipe long format should return correct format for negative seconds" name="ArtemisDurationFromSecondsPipe long format should return correct format for negative seconds" time="0.001">
    </testcase>
    <testcase classname="ArtemisDurationFromSecondsPipe short format should return correct format for day" name="ArtemisDurationFromSecondsPipe short format should return correct format for day" time="0.001">
    </testcase>
    <testcase classname="ArtemisDurationFromSecondsPipe short format should return correct format for hour" name="ArtemisDurationFromSecondsPipe short format should return correct format for hour" time="0.001">
    </testcase>
    <testcase classname="ArtemisDurationFromSecondsPipe short format should return correct format for over 10 minutes" name="ArtemisDurationFromSecondsPipe short format should return correct format for over 10 minutes" time="0">
    </testcase>
    <testcase classname="ArtemisDurationFromSecondsPipe short format should return correct format for under 10 minutes" name="ArtemisDurationFromSecondsPipe short format should return correct format for under 10 minutes" time="0">
    </testcase>
    <testcase classname="ArtemisDurationFromSecondsPipe short format should return correct format for under one minute" name="ArtemisDurationFromSecondsPipe short format should return correct format for under one minute" time="0.001">
    </testcase>
    <testcase classname="ArtemisDurationFromSecondsPipe short format should return correct format for zero seconds" name="ArtemisDurationFromSecondsPipe short format should return correct format for zero seconds" time="0.001">
    </testcase>
    <testcase classname="ArtemisDurationFromSecondsPipe short format should return correct format for negative seconds" name="ArtemisDurationFromSecondsPipe short format should return correct format for negative seconds" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="ExamTimerComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:02" time="1.336" tests="4">
    <testcase classname="ExamTimerComponent should call ngOnInit" name="ExamTimerComponent should call ngOnInit" time="0.039">
    </testcase>
    <testcase classname="ExamTimerComponent should update display times" name="ExamTimerComponent should update display times" time="0.034">
    </testcase>
    <testcase classname="ExamTimerComponent should round down to next minute when over 10 minutes" name="ExamTimerComponent should round down to next minute when over 10 minutes" time="0.017">
    </testcase>
    <testcase classname="ExamTimerComponent should update time in the template correctly" name="ExamTimerComponent should update time in the template correctly" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Plagiarism Run Details" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:00" time="3.293" tests="16">
    <testcase classname="Plagiarism Run Details updates chart data on changes" name="Plagiarism Run Details updates chart data on changes" time="0.059">
    </testcase>
    <testcase classname="Plagiarism Run Details updates the chart data correctly" name="Plagiarism Run Details updates the chart data correctly" time="0.042">
    </testcase>
    <testcase classname="Plagiarism Run Details sets BucketDTOs" name="Plagiarism Run Details sets BucketDTOs" time="0.019">
    </testcase>
    <testcase classname="Plagiarism Run Details emits the correct range if bar is selected" name="Plagiarism Run Details emits the correct range if bar is selected" time="0.027">
    </testcase>
    <testcase classname="Plagiarism Run Details emits the correct range if bar is selected" name="Plagiarism Run Details emits the correct range if bar is selected" time="0.029">
    </testcase>
    <testcase classname="Plagiarism Run Details emits the correct range if bar is selected" name="Plagiarism Run Details emits the correct range if bar is selected" time="0.012">
    </testcase>
    <testcase classname="Plagiarism Run Details emits the correct range if bar is selected" name="Plagiarism Run Details emits the correct range if bar is selected" time="0.016">
    </testcase>
    <testcase classname="Plagiarism Run Details emits the correct range if bar is selected" name="Plagiarism Run Details emits the correct range if bar is selected" time="0.014">
    </testcase>
    <testcase classname="Plagiarism Run Details emits the correct range if bar is selected" name="Plagiarism Run Details emits the correct range if bar is selected" time="0.015">
    </testcase>
    <testcase classname="Plagiarism Run Details emits the correct range if bar is selected" name="Plagiarism Run Details emits the correct range if bar is selected" time="0.016">
    </testcase>
    <testcase classname="Plagiarism Run Details emits the correct range if bar is selected" name="Plagiarism Run Details emits the correct range if bar is selected" time="0.026">
    </testcase>
    <testcase classname="Plagiarism Run Details emits the correct range if bar is selected" name="Plagiarism Run Details emits the correct range if bar is selected" time="0.015">
    </testcase>
    <testcase classname="Plagiarism Run Details emits the correct range if bar is selected" name="Plagiarism Run Details emits the correct range if bar is selected" time="0.017">
    </testcase>
    <testcase classname="Plagiarism Run Details return correct bucketDTO" name="Plagiarism Run Details return correct bucketDTO" time="0.025">
    </testcase>
    <testcase classname="Plagiarism Run Details return correct bucketDTO" name="Plagiarism Run Details return correct bucketDTO" time="0.022">
    </testcase>
    <testcase classname="Plagiarism Run Details return correct bucketDTO" name="Plagiarism Run Details return correct bucketDTO" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="StandaloneFeedbackComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:01" time="3.331" tests="2">
    <testcase classname="StandaloneFeedbackComponent should set exercise, result and latestDueDate correctly" name="StandaloneFeedbackComponent should set exercise, result and latestDueDate correctly" time="0.189">
    </testcase>
    <testcase classname="StandaloneFeedbackComponent should set showMissingAutomaticFeedbackInformation and messageKey correctly" name="StandaloneFeedbackComponent should set showMissingAutomaticFeedbackInformation and messageKey correctly" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="DoughnutChartComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:23:59" time="4.652" tests="5">
    <testcase classname="DoughnutChartComponent should initialize" name="DoughnutChartComponent should initialize" time="0.03">
    </testcase>
    <testcase classname="DoughnutChartComponent setting titles for different chart types should set title for average exercise score" name="DoughnutChartComponent setting titles for different chart types should set title for average exercise score" time="0.008">
    </testcase>
    <testcase classname="DoughnutChartComponent setting titles for different chart types should set title for participations" name="DoughnutChartComponent setting titles for different chart types should set title for participations" time="0.009">
    </testcase>
    <testcase classname="DoughnutChartComponent setting titles for different chart types should set title for question chart" name="DoughnutChartComponent setting titles for different chart types should set title for question chart" time="0.014">
    </testcase>
    <testcase classname="DoughnutChartComponent should open corresponding page" name="DoughnutChartComponent should open corresponding page" time="0.22">
    </testcase>
  </testsuite>
  <testsuite name="ScienceSettingsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:04" time="1.25" tests="2">
    <testcase classname="ScienceSettingsComponent should toggle setting" name="ScienceSettingsComponent should toggle setting" time="0.181">
    </testcase>
    <testcase classname="ScienceSettingsComponent should reuse settings via service if they were already loaded" name="ScienceSettingsComponent should reuse settings via service if they were already loaded" time="0.073">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupFreeDaysOverviewComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:03" time="2.096" tests="2">
    <testcase classname="TutorialGroupFreeDaysOverviewComponent should create" name="TutorialGroupFreeDaysOverviewComponent should create" time="0.108">
    </testcase>
    <testcase classname="TutorialGroupFreeDaysOverviewComponent should sort the free days by start date" name="TutorialGroupFreeDaysOverviewComponent should sort the free days by start date" time="0.055">
    </testcase>
  </testsuite>
  <testsuite name="CompetencyPopoverComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:04" time="1.875" tests="3">
    <testcase classname="CompetencyPopoverComponent should initialize" name="CompetencyPopoverComponent should initialize" time="0.144">
    </testcase>
    <testcase classname="CompetencyPopoverComponent should navigate" name="CompetencyPopoverComponent should navigate" time="0.151">
    </testcase>
    <testcase classname="CompetencyPopoverComponent should navigate" name="CompetencyPopoverComponent should navigate" time="0.126">
    </testcase>
  </testsuite>
  <testsuite name="Alert Overlay Component Tests" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:06" time="2.147" tests="5">
    <testcase classname="Alert Overlay Component Tests should call alertService.get on init" name="Alert Overlay Component Tests should call alertService.get on init" time="0.047">
    </testcase>
    <testcase classname="Alert Overlay Component Tests should close all alerts on destroy" name="Alert Overlay Component Tests should close all alerts on destroy" time="0.018">
    </testcase>
    <testcase classname="Alert Overlay Component Tests should call action callback if button is clicked" name="Alert Overlay Component Tests should call action callback if button is clicked" time="0.059">
    </testcase>
    <testcase classname="Alert Overlay Component Tests should close the alert if the close icon is clicked" name="Alert Overlay Component Tests should close the alert if the close icon is clicked" time="0.015">
    </testcase>
    <testcase classname="Alert Overlay Component Tests should not render the close icon if alert is not dismissible" name="Alert Overlay Component Tests should not render the close icon if alert is not dismissible" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Mode Picker Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:06" time="2.94" tests="5">
    <testcase classname="Mode Picker Component should initialize" name="Mode Picker Component should initialize" time="0.075">
    </testcase>
    <testcase classname="Mode Picker Component should set mode when new mode is different" name="Mode Picker Component should set mode when new mode is different" time="0.055">
    </testcase>
    <testcase classname="Mode Picker Component should not set mode when new mode is the same" name="Mode Picker Component should not set mode when new mode is the same" time="0.077">
    </testcase>
    <testcase classname="Mode Picker Component should not set mode when disabled" name="Mode Picker Component should not set mode when disabled" time="0.017">
    </testcase>
    <testcase classname="Mode Picker Component should set mode classes according to the chosen value" name="Mode Picker Component should set mode classes according to the chosen value" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="SidebarCardLargeComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:04" time="4.422" tests="4">
    <testcase classname="SidebarCardLargeComponent should create" name="SidebarCardLargeComponent should create" time="0.365">
    </testcase>
    <testcase classname="SidebarCardLargeComponent should store route on click" name="SidebarCardLargeComponent should store route on click" time="0.063">
    </testcase>
    <testcase classname="SidebarCardLargeComponent should navigate to the item URL on click" name="SidebarCardLargeComponent should navigate to the item URL on click" time="0.073">
    </testcase>
    <testcase classname="SidebarCardLargeComponent should navigate to the when no item was selected before" name="SidebarCardLargeComponent should navigate to the when no item was selected before" time="0.047">
    </testcase>
  </testsuite>
  <testsuite name="ExamBarComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:05" time="4.601" tests="2">
    <testcase classname="ExamBarComponent trigger emit and call saveExercise when the exam is about to end" name="ExamBarComponent trigger emit and call saveExercise when the exam is about to end" time="0.136">
    </testcase>
    <testcase classname="ExamBarComponent should hand in the exam early" name="ExamBarComponent should hand in the exam early" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="LoginService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:09" time="2.185" tests="2">
    <testcase classname="LoginService should properly log out when every action is successful" name="LoginService should properly log out when every action is successful" time="0.028">
    </testcase>
    <testcase classname="LoginService should logout properly and not call server logout on forceful logout" name="LoginService should logout properly and not call server logout on forceful logout" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="CoursePrerequisitesModal" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:09" time="2.543" tests="2">
    <testcase classname="CoursePrerequisitesModal should load prerequisites and display a card for each of them" name="CoursePrerequisitesModal should load prerequisites and display a card for each of them" time="0.16">
    </testcase>
    <testcase classname="CoursePrerequisitesModal should close modal when cleared" name="CoursePrerequisitesModal should close modal when cleared" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="GroupChatService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:10" time="1.211" tests="4">
    <testcase classname="GroupChatService create" name="GroupChatService create" time="0.011">
    </testcase>
    <testcase classname="GroupChatService update" name="GroupChatService update" time="0.005">
    </testcase>
    <testcase classname="GroupChatService removeUsersFromGroupChat" name="GroupChatService removeUsersFromGroupChat" time="0.024">
    </testcase>
    <testcase classname="GroupChatService addUsersToGroupChat" name="GroupChatService addUsersToGroupChat" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="FormFooterComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:08" time="3.1" tests="5">
    <testcase classname="FormFooterComponent update title depending on input signals" name="FormFooterComponent update title depending on input signals" time="0.139">
    </testcase>
    <testcase classname="FormFooterComponent should display saving badge when isSaving is true" name="FormFooterComponent should display saving badge when isSaving is true" time="0.04">
    </testcase>
    <testcase classname="FormFooterComponent should not display the exercise update notification when in creation or import mode" name="FormFooterComponent should not display the exercise update notification when in creation or import mode" time="0.014">
    </testcase>
    <testcase classname="FormFooterComponent should display invalid input badge when there are invalid reasons" name="FormFooterComponent should display invalid input badge when there are invalid reasons" time="0.027">
    </testcase>
    <testcase classname="FormFooterComponent should enable save button when form is valid" name="FormFooterComponent should enable save button when form is valid" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:11" time="0.708" tests="4">
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should initialize with default values" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should initialize with default values" time="0.084">
    </testcase>
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should increase strength upon password value change" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should increase strength upon password value change" time="0.007">
    </testcase>
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should change the color based on strength" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should change the color based on strength" time="0.006">
    </testcase>
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should set color in correct amount on password change" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should set color in correct amount on password change" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseInstructionAnalysisService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:11" time="0.781" tests="3">
    <testcase classname="ProgrammingExerciseInstructionAnalysisService should analyse problem statement without any issues correctly" name="ProgrammingExerciseInstructionAnalysisService should analyse problem statement without any issues correctly" time="0.009">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructionAnalysisService should analyse problem statement with issues correctly" name="ProgrammingExerciseInstructionAnalysisService should analyse problem statement with issues correctly" time="0.005">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructionAnalysisService should analyse problem statement with repeated test cases" name="ProgrammingExerciseInstructionAnalysisService should analyse problem statement with repeated test cases" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="SuspiciousSessionsOverviewComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:11" time="1.066" tests="1">
    <testcase classname="SuspiciousSessionsOverviewComponent should retrieve suspicious sessions onInit" name="SuspiciousSessionsOverviewComponent should retrieve suspicious sessions onInit" time="0.138">
    </testcase>
  </testsuite>
  <testsuite name="VideoUnitComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:11" time="1.671" tests="4">
    <testcase classname="VideoUnitComponent should initialize" name="VideoUnitComponent should initialize" time="0.077">
    </testcase>
    <testcase classname="VideoUnitComponent should show iFrame correctly" name="VideoUnitComponent should show iFrame correctly" time="0.044">
    </testcase>
    <testcase classname="VideoUnitComponent should toggle collapse, log event and set timeout on open" name="VideoUnitComponent should toggle collapse, log event and set timeout on open" time="0.024">
    </testcase>
    <testcase classname="VideoUnitComponent should toggle collapse and clear timeout on close" name="VideoUnitComponent should toggle collapse and clear timeout on close" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="DifficultyLevelComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:12" time="1.409" tests="7">
    <testcase classname="DifficultyLevelComponent should create" name="DifficultyLevelComponent should create" time="0.018">
    </testcase>
    <testcase classname="DifficultyLevelComponent should set coloredDifficultyLevel correctly for EASY" name="DifficultyLevelComponent should set coloredDifficultyLevel correctly for EASY" time="0.009">
    </testcase>
    <testcase classname="DifficultyLevelComponent should set coloredDifficultyLevel correctly for MEDIUM" name="DifficultyLevelComponent should set coloredDifficultyLevel correctly for MEDIUM" time="0.006">
    </testcase>
    <testcase classname="DifficultyLevelComponent should set coloredDifficultyLevel correctly for HARD" name="DifficultyLevelComponent should set coloredDifficultyLevel correctly for HARD" time="0.007">
    </testcase>
    <testcase classname="DifficultyLevelComponent should set coloredDifficultyLevel correctly for no level" name="DifficultyLevelComponent should set coloredDifficultyLevel correctly for no level" time="0.007">
    </testcase>
    <testcase classname="DifficultyLevelComponent should display the correct tooltip label" name="DifficultyLevelComponent should display the correct tooltip label" time="0.04">
    </testcase>
    <testcase classname="DifficultyLevelComponent should apply the correct classes for difficulty colors" name="DifficultyLevelComponent should apply the correct classes for difficulty colors" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="IdeSettingsService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:13" time="1.358" tests="4">
    <testcase classname="IdeSettingsService should load predefined IDEs" name="IdeSettingsService should load predefined IDEs" time="0.017">
    </testcase>
    <testcase classname="IdeSettingsService should load IDE preferences" name="IdeSettingsService should load IDE preferences" time="0.078">
    </testcase>
    <testcase classname="IdeSettingsService should save IDE preference" name="IdeSettingsService should save IDE preference" time="0.015">
    </testcase>
    <testcase classname="IdeSettingsService should delete IDE preference" name="IdeSettingsService should delete IDE preference" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="ExamLiveAnnouncementCreateButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:12" time="4.335" tests="4">
    <testcase classname="ExamLiveAnnouncementCreateButtonComponent should initialize component properties with visibleDate" name="ExamLiveAnnouncementCreateButtonComponent should initialize component properties with visibleDate" time="0.031">
    </testcase>
    <testcase classname="ExamLiveAnnouncementCreateButtonComponent should initialize component properties with visibleDate" name="ExamLiveAnnouncementCreateButtonComponent should initialize component properties with visibleDate" time="0.038">
    </testcase>
    <testcase classname="ExamLiveAnnouncementCreateButtonComponent should open dialog when button is clicked" name="ExamLiveAnnouncementCreateButtonComponent should open dialog when button is clicked" time="0.018">
    </testcase>
    <testcase classname="ExamLiveAnnouncementCreateButtonComponent should not open dialog when announcementCreationAllowed is false" name="ExamLiveAnnouncementCreateButtonComponent should not open dialog when announcementCreationAllowed is false" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="Submission Export Button Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:13" time="4.95" tests="2">
    <testcase classname="Submission Export Button Component should open export submission dialog" name="Submission Export Button Component should open export submission dialog" time="0.204">
    </testcase>
    <testcase classname="Submission Export Button Component should set input values for dialog" name="Submission Export Button Component should set input values for dialog" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="ExamExerciseOverviewPageComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:12" time="6.143" tests="2">
    <testcase classname="ExamExerciseOverviewPageComponent should open the exercise" name="ExamExerciseOverviewPageComponent should open the exercise" time="0.229">
    </testcase>
    <testcase classname="ExamExerciseOverviewPageComponent jhi-updating-result component should be defined" name="ExamExerciseOverviewPageComponent jhi-updating-result component should be defined" time="0.054">
    </testcase>
  </testsuite>
  <testsuite name="ImportPrerequisitesComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:15" time="4.571" tests="2">
    <testcase classname="ImportPrerequisitesComponent should initialize" name="ImportPrerequisitesComponent should initialize" time="0.308">
    </testcase>
    <testcase classname="ImportPrerequisitesComponent should import prerequisites on submit" name="ImportPrerequisitesComponent should import prerequisites on submit" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="Course Admin Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:19" time="1.163" tests="2">
    <testcase classname="Course Admin Service should create course" name="Course Admin Service should create course" time="0.024">
    </testcase>
    <testcase classname="Course Admin Service should delete a course" name="Course Admin Service should delete a course" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="External Submission Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:19" time="0.966" tests="2">
    <testcase classname="External Submission Service submits a new result to the server correctly" name="External Submission Service submits a new result to the server correctly" time="0.011">
    </testcase>
    <testcase classname="External Submission Service generates initial manual result correctly" name="External Submission Service generates initial manual result correctly" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="DataExportService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:19" time="0.84" tests="6">
    <testcase classname="DataExportService should make POST request to request data export" name="DataExportService should make POST request to request data export" time="0.009">
    </testcase>
    <testcase classname="DataExportService should make open download link to download data export" name="DataExportService should make open download link to download data export" time="0.003">
    </testcase>
    <testcase classname="DataExportService should make POST request to request data export as admin for another user" name="DataExportService should make POST request to request data export as admin for another user" time="0.004">
    </testcase>
    <testcase classname="DataExportService should make GET request to check if any data export can be downloaded" name="DataExportService should make GET request to check if any data export can be downloaded" time="0.004">
    </testcase>
    <testcase classname="DataExportService should make GET request to check if a specific data export can be downloaded" name="DataExportService should make GET request to check if a specific data export can be downloaded" time="0.006">
    </testcase>
    <testcase classname="DataExportService should make GET request to check if a data export can be requested" name="DataExportService should make GET request to check if a data export can be requested" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="SuspiciousSessionsService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:20" time="0.832" tests="2">
    <testcase classname="SuspiciousSessionsService should make GET request to retrieve suspicious sessions" name="SuspiciousSessionsService should make GET request to retrieve suspicious sessions" time="0.016">
    </testcase>
    <testcase classname="SuspiciousSessionsService should make GET request to retrieve suspicious sessions with subnet" name="SuspiciousSessionsService should make GET request to retrieve suspicious sessions with subnet" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="GlobalUtils" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:20" time="0.831" tests="7">
    <testcase classname="GlobalUtils getStringSegmentPositions should return correct segments of provided string and single character delimiter" name="GlobalUtils getStringSegmentPositions should return correct segments of provided string and single character delimiter" time="0.002">
    </testcase>
    <testcase classname="GlobalUtils getStringSegmentPositions should return correct segments of provided string and multiple character delimiter" name="GlobalUtils getStringSegmentPositions should return correct segments of provided string and multiple character delimiter" time="0.001">
    </testcase>
    <testcase classname="GlobalUtils getStringSegmentPositions should return the string as a single segment if it does not contain the delimiter" name="GlobalUtils getStringSegmentPositions should return the string as a single segment if it does not contain the delimiter" time="0.001">
    </testcase>
    <testcase classname="GlobalUtils getStringSegmentPositions should return a single segment for the empty string" name="GlobalUtils getStringSegmentPositions should return a single segment for the empty string" time="0.001">
    </testcase>
    <testcase classname="GlobalUtils matchRegexWithLineNumbers should match the line numbers correctly in the given multiline string" name="GlobalUtils matchRegexWithLineNumbers should match the line numbers correctly in the given multiline string" time="0.001">
    </testcase>
    <testcase classname="GlobalUtils matchRegexWithLineNumbers should return matches if the string is not multiline" name="GlobalUtils matchRegexWithLineNumbers should return matches if the string is not multiline" time="0.001">
    </testcase>
    <testcase classname="GlobalUtils matchRegexWithLineNumbers should throw an error if a string without the global flag is provided" name="GlobalUtils matchRegexWithLineNumbers should throw an error if a string without the global flag is provided" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="FileUploadExamSummaryComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:17" time="4.036" tests="3">
    <testcase classname="FileUploadExamSummaryComponent should initialize" name="FileUploadExamSummaryComponent should initialize" time="0.417">
    </testcase>
    <testcase classname="FileUploadExamSummaryComponent should render submission when exercise and submisssion is set" name="FileUploadExamSummaryComponent should render submission when exercise and submisssion is set" time="0.049">
    </testcase>
    <testcase classname="FileUploadExamSummaryComponent should not render submission if exercise and submission are not set" name="FileUploadExamSummaryComponent should not render submission if exercise and submission are not set" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="VideoUnitService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:20" time="1.06" tests="3">
    <testcase classname="VideoUnitService should find a VideoUnit" name="VideoUnitService should find a VideoUnit" time="0.017">
    </testcase>
    <testcase classname="VideoUnitService should create a VideoUnit" name="VideoUnitService should create a VideoUnit" time="0.006">
    </testcase>
    <testcase classname="VideoUnitService should update a VideoUnit" name="VideoUnitService should update a VideoUnit" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseUnitService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:21" time="0.908" tests="2">
    <testcase classname="ExerciseUnitService should find a list of ExerciseUnit" name="ExerciseUnitService should find a list of ExerciseUnit" time="0.015">
    </testcase>
    <testcase classname="ExerciseUnitService should create an ExerciseUnit" name="ExerciseUnitService should create an ExerciseUnit" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseLanguageComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:21" time="3.018" tests="3">
    <testcase classname="ProgrammingExerciseLanguageComponent should initialize" name="ProgrammingExerciseLanguageComponent should initialize" time="0.523">
    </testcase>
    <testcase classname="ProgrammingExerciseLanguageComponent should not load TheiaComponent when online IDE is not allowed" name="ProgrammingExerciseLanguageComponent should not load TheiaComponent when online IDE is not allowed" time="0.013">
    </testcase>
    <testcase classname="ProgrammingExerciseLanguageComponent should load TheiaComponent when online IDE is allowed" name="ProgrammingExerciseLanguageComponent should load TheiaComponent when online IDE is allowed" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="TextUnitService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:22" time="2.668" tests="3">
    <testcase classname="TextUnitService should find a TextUnit" name="TextUnitService should find a TextUnit" time="0.016">
    </testcase>
    <testcase classname="TextUnitService should create a TextUnit" name="TextUnitService should create a TextUnit" time="0.005">
    </testcase>
    <testcase classname="TextUnitService should update a TextUnit" name="TextUnitService should update a TextUnit" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupsImportButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:21" time="3.977" tests="2">
    <testcase classname="TutorialGroupsImportButtonComponent should create" name="TutorialGroupsImportButtonComponent should create" time="0.069">
    </testcase>
    <testcase classname="TutorialGroupsImportButtonComponent should open the import dialog when the button is clicked" name="TutorialGroupsImportButtonComponent should open the import dialog when the button is clicked" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="SidebarCardItemComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:21" time="4.268" tests="6">
    <testcase classname="SidebarCardItemComponent should create" name="SidebarCardItemComponent should create" time="0.3">
    </testcase>
    <testcase classname="SidebarCardItemComponent should display item title" name="SidebarCardItemComponent should display item title" time="0.092">
    </testcase>
    <testcase classname="SidebarCardItemComponent should format unreadCount correctly when count is less than 99" name="SidebarCardItemComponent should format unreadCount correctly when count is less than 99" time="0.069">
    </testcase>
    <testcase classname="SidebarCardItemComponent should format unreadCount as &quot;99+&quot; when count exceeds 99" name="SidebarCardItemComponent should format unreadCount as &quot;99+&quot; when count exceeds 99" time="0.055">
    </testcase>
    <testcase classname="SidebarCardItemComponent should set group icon for group chats in extractMessageUser" name="SidebarCardItemComponent should set group icon for group chats in extractMessageUser" time="0.093">
    </testcase>
    <testcase classname="SidebarCardItemComponent should set otherUser for one-to-one chat in extractMessageUser" name="SidebarCardItemComponent should set otherUser for one-to-one chat in extractMessageUser" time="0.122">
    </testcase>
  </testsuite>
  <testsuite name="SshUserSettingsService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:26" time="2.321" tests="5">
    <testcase classname="SshUserSettingsService should handle user SSH public key correctly" name="SshUserSettingsService should handle user SSH public key correctly" time="0.009">
    </testcase>
    <testcase classname="SshUserSettingsService test SSH user settings API calls should send a new SSH public key" name="SshUserSettingsService test SSH user settings API calls should send a new SSH public key" time="0.013">
    </testcase>
    <testcase classname="SshUserSettingsService test SSH user settings API calls should retrieve all SSH public keys" name="SshUserSettingsService test SSH user settings API calls should retrieve all SSH public keys" time="0.006">
    </testcase>
    <testcase classname="SshUserSettingsService test SSH user settings API calls should retrieve a specific SSH public key" name="SshUserSettingsService test SSH user settings API calls should retrieve a specific SSH public key" time="0.004">
    </testcase>
    <testcase classname="SshUserSettingsService test SSH user settings API calls should delete a specific SSH public key" name="SshUserSettingsService test SSH user settings API calls should delete a specific SSH public key" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="CourseRegistrationButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:24" time="5.124" tests="3">
    <testcase classname="CourseRegistrationButtonComponent should initialize" name="CourseRegistrationButtonComponent should initialize" time="0.051">
    </testcase>
    <testcase classname="CourseRegistrationButtonComponent should register for course" name="CourseRegistrationButtonComponent should register for course" time="0.011">
    </testcase>
    <testcase classname="CourseRegistrationButtonComponent should should fire onRegistration after registration" name="CourseRegistrationButtonComponent should should fire onRegistration after registration" time="0.046">
    </testcase>
  </testsuite>
  <testsuite name="TextExamSummaryComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:25" time="4.942" tests="2">
    <testcase classname="TextExamSummaryComponent should initialize" name="TextExamSummaryComponent should initialize" time="0.543">
    </testcase>
    <testcase classname="TextExamSummaryComponent should display the submission text" name="TextExamSummaryComponent should display the submission text" time="0.073">
    </testcase>
  </testsuite>
  <testsuite name="PostingThreadComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:25" time="4.572" tests="1">
    <testcase classname="PostingThreadComponent should contain a post" name="PostingThreadComponent should contain a post" time="1.002">
    </testcase>
  </testsuite>
  <testsuite name="LectureUnitComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:30" time="1.621" tests="4">
    <testcase classname="LectureUnitComponent should initialize" name="LectureUnitComponent should initialize" time="0.056">
    </testcase>
    <testcase classname="LectureUnitComponent should handle isolated view" name="LectureUnitComponent should handle isolated view" time="0.045">
    </testcase>
    <testcase classname="LectureUnitComponent should toggle completion" name="LectureUnitComponent should toggle completion" time="0.053">
    </testcase>
    <testcase classname="LectureUnitComponent should toggle collapse" name="LectureUnitComponent should toggle collapse" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Lti13DynamicRegistrationComponentTest" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:30" time="0.857" tests="3">
    <testcase classname="Lti13DynamicRegistrationComponentTest onInit without query params to fail" name="Lti13DynamicRegistrationComponentTest onInit without query params to fail" time="0.028">
    </testcase>
    <testcase classname="Lti13DynamicRegistrationComponentTest onInit success to call dynamic registration endpoint" name="Lti13DynamicRegistrationComponentTest onInit success to call dynamic registration endpoint" time="0.011">
    </testcase>
    <testcase classname="Lti13DynamicRegistrationComponentTest onInit dynamic registration fails on error" name="Lti13DynamicRegistrationComponentTest onInit dynamic registration fails on error" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupManagementDetailComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:28" time="3.223" tests="2">
    <testcase classname="TutorialGroupManagementDetailComponent should initialize" name="TutorialGroupManagementDetailComponent should initialize" time="0.294">
    </testcase>
    <testcase classname="TutorialGroupManagementDetailComponent should load tutorial group" name="TutorialGroupManagementDetailComponent should load tutorial group" time="0.097">
    </testcase>
  </testsuite>
  <testsuite name="AssessmentWarningComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:31" time="0.814" tests="3">
    <testcase classname="AssessmentWarningComponent should not be before exercise due date if the exercise has no due date" name="AssessmentWarningComponent should not be before exercise due date if the exercise has no due date" time="0.024">
    </testcase>
    <testcase classname="AssessmentWarningComponent should be before the exercise due date if the exercise due date is in the future" name="AssessmentWarningComponent should be before the exercise due date if the exercise due date is in the future" time="0.009">
    </testcase>
    <testcase classname="AssessmentWarningComponent should be before the latest due date if the exercise due date is in the past but individual due dates in the future" name="AssessmentWarningComponent should be before the latest due date if the exercise due date is in the past but individual due dates in the future" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Lti13SelectContentComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:32" time="1.036" tests="3">
    <testcase classname="Lti13SelectContentComponent should create" name="Lti13SelectContentComponent should create" time="0.047">
    </testcase>
    <testcase classname="Lti13SelectContentComponent should initialize form on ngOnInit" name="Lti13SelectContentComponent should initialize form on ngOnInit" time="0.02">
    </testcase>
    <testcase classname="Lti13SelectContentComponent should not auto-submit form if parameters are missing" name="Lti13SelectContentComponent should not auto-submit form if parameters are missing" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="OnlineUnitComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:31" time="1.594" tests="4">
    <testcase classname="OnlineUnitComponent should initialize" name="OnlineUnitComponent should initialize" time="0.044">
    </testcase>
    <testcase classname="OnlineUnitComponent should handle isolated view" name="OnlineUnitComponent should handle isolated view" time="0.04">
    </testcase>
    <testcase classname="OnlineUnitComponent should log event on isolated view" name="OnlineUnitComponent should log event on isolated view" time="0.008">
    </testcase>
    <testcase classname="OnlineUnitComponent should call completion on isolated view" name="OnlineUnitComponent should call completion on isolated view" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="LectureTitleChannelNameComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:32" time="1.89" tests="5">
    <testcase classname="LectureTitleChannelNameComponent should hide channel name input when messaging and communication is disabled" name="LectureTitleChannelNameComponent should hide channel name input when messaging and communication is disabled" time="0.095">
    </testcase>
    <testcase classname="LectureTitleChannelNameComponent should show channel name input when messaging is disabled but communication enabled" name="LectureTitleChannelNameComponent should show channel name input when messaging is disabled but communication enabled" time="0.008">
    </testcase>
    <testcase classname="LectureTitleChannelNameComponent should not hide channel name input when lecture is created" name="LectureTitleChannelNameComponent should not hide channel name input when lecture is created" time="0.006">
    </testcase>
    <testcase classname="LectureTitleChannelNameComponent should not hide channel name input when lecture is being edited and has a channel name" name="LectureTitleChannelNameComponent should not hide channel name input when lecture is being edited and has a channel name" time="0.011">
    </testcase>
    <testcase classname="LectureTitleChannelNameComponent should hide channel name input when lecture is being edited and has no channel name" name="LectureTitleChannelNameComponent should hide channel name input when lecture is being edited and has no channel name" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="CourseDetailDoughnutChartComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:30" time="4.374" tests="2">
    <testcase classname="CourseDetailDoughnutChartComponent should initialize" name="CourseDetailDoughnutChartComponent should initialize" time="0.055">
    </testcase>
    <testcase classname="CourseDetailDoughnutChartComponent should set the right title and link" name="CourseDetailDoughnutChartComponent should set the right title and link" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="JvmThreadsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:33" time="3.88" tests="2">
    <testcase classname="JvmThreadsComponent should store threads and create statistic counts" name="JvmThreadsComponent should store threads and create statistic counts" time="0.3">
    </testcase>
    <testcase classname="JvmThreadsComponent should open modal when expand is clicked" name="JvmThreadsComponent should open modal when expand is clicked" time="0.15">
    </testcase>
  </testsuite>
  <testsuite name="JhiMainComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:33" time="5.034" tests="2">
    <testcase classname="JhiMainComponent should display footer if there is no exam" name="JhiMainComponent should display footer if there is no exam" time="0.358">
    </testcase>
    <testcase classname="JhiMainComponent should not display footer during an exam" name="JhiMainComponent should not display footer during an exam" time="0.094">
    </testcase>
  </testsuite>
  <testsuite name="CourseManagementExerciseRowComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:34" time="4.19" tests="1">
    <testcase classname="CourseManagementExerciseRowComponent should initialize component" name="CourseManagementExerciseRowComponent should initialize component" time="0.273">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:38" time="0.756" tests="2">
    <testcase classname="Service Tests Logs Service Service methods should return Metrics" name="Service Tests Logs Service Service methods should return Metrics" time="0.023">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should return Thread Dump" name="Service Tests Logs Service Service methods should return Thread Dump" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="TeamsImportButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:37" time="1.985" tests="1">
    <testcase classname="TeamsImportButtonComponent openTeamsImportDialog should open teams import dialog when called" name="TeamsImportButtonComponent openTeamsImportDialog should open teams import dialog when called" time="0.243">
    </testcase>
  </testsuite>
  <testsuite name="ThemeSwitchComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:38" time="1.906" tests="4">
    <testcase classname="ThemeSwitchComponent theme toggles correctly" name="ThemeSwitchComponent theme toggles correctly" time="0.125">
    </testcase>
    <testcase classname="ThemeSwitchComponent os sync toggles correctly" name="ThemeSwitchComponent os sync toggles correctly" time="0.083">
    </testcase>
    <testcase classname="ThemeSwitchComponent opens and closes the popover" name="ThemeSwitchComponent opens and closes the popover" time="0.074">
    </testcase>
    <testcase classname="ThemeSwitchComponent closes on mouse leave after 200ms" name="ThemeSwitchComponent closes on mouse leave after 200ms" time="0.061">
    </testcase>
  </testsuite>
  <testsuite name="Feature Overview Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:39" time="1.386" tests="3">
    <testcase classname="Feature Overview Component Target Audience: Instructors onInit should load all features for instructors" name="Feature Overview Component Target Audience: Instructors onInit should load all features for instructors" time="0.12">
    </testcase>
    <testcase classname="Feature Overview Component Target Audience: Instructors onInit should ensure all features have unique IDs" name="Feature Overview Component Target Audience: Instructors onInit should ensure all features have unique IDs" time="0.08">
    </testcase>
    <testcase classname="Feature Overview Component Target Audience: Instructors Navigate to Feature Details should scroll to the correct feature detail" name="Feature Overview Component Target Audience: Instructors Navigate to Feature Details should scroll to the correct feature detail" time="0.095">
    </testcase>
  </testsuite>
  <testsuite name="StatisticsScoreDistributionGraphComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:36" time="5.156" tests="11">
    <testcase classname="StatisticsScoreDistributionGraphComponent should initialize" name="StatisticsScoreDistributionGraphComponent should initialize" time="0.592">
    </testcase>
    <testcase classname="StatisticsScoreDistributionGraphComponent should delegate the on bar select" name="StatisticsScoreDistributionGraphComponent should delegate the on bar select" time="0.09">
    </testcase>
    <testcase classname="StatisticsScoreDistributionGraphComponent should delegate the on bar select" name="StatisticsScoreDistributionGraphComponent should delegate the on bar select" time="0.138">
    </testcase>
    <testcase classname="StatisticsScoreDistributionGraphComponent should delegate the on bar select" name="StatisticsScoreDistributionGraphComponent should delegate the on bar select" time="0.067">
    </testcase>
    <testcase classname="StatisticsScoreDistributionGraphComponent should delegate the on bar select" name="StatisticsScoreDistributionGraphComponent should delegate the on bar select" time="0.079">
    </testcase>
    <testcase classname="StatisticsScoreDistributionGraphComponent should delegate the on bar select" name="StatisticsScoreDistributionGraphComponent should delegate the on bar select" time="0.094">
    </testcase>
    <testcase classname="StatisticsScoreDistributionGraphComponent should delegate the on bar select" name="StatisticsScoreDistributionGraphComponent should delegate the on bar select" time="0.058">
    </testcase>
    <testcase classname="StatisticsScoreDistributionGraphComponent should delegate the on bar select" name="StatisticsScoreDistributionGraphComponent should delegate the on bar select" time="0.088">
    </testcase>
    <testcase classname="StatisticsScoreDistributionGraphComponent should delegate the on bar select" name="StatisticsScoreDistributionGraphComponent should delegate the on bar select" time="0.061">
    </testcase>
    <testcase classname="StatisticsScoreDistributionGraphComponent should delegate the on bar select" name="StatisticsScoreDistributionGraphComponent should delegate the on bar select" time="0.109">
    </testcase>
    <testcase classname="StatisticsScoreDistributionGraphComponent should delegate the on bar select" name="StatisticsScoreDistributionGraphComponent should delegate the on bar select" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseTestScheduleDatePickerComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:39" time="2.038" tests="5">
    <testcase classname="ProgrammingExerciseTestScheduleDatePickerComponent should not change date when value is reference-equal to selected date" name="ProgrammingExerciseTestScheduleDatePickerComponent should not change date when value is reference-equal to selected date" time="0.105">
    </testcase>
    <testcase classname="ProgrammingExerciseTestScheduleDatePickerComponent should update date with dayjs object and invoke change" name="ProgrammingExerciseTestScheduleDatePickerComponent should update date with dayjs object and invoke change" time="0.023">
    </testcase>
    <testcase classname="ProgrammingExerciseTestScheduleDatePickerComponent should update date with date object and invoke change" name="ProgrammingExerciseTestScheduleDatePickerComponent should update date with date object and invoke change" time="0.015">
    </testcase>
    <testcase classname="ProgrammingExerciseTestScheduleDatePickerComponent should reset date and emit reset event" name="ProgrammingExerciseTestScheduleDatePickerComponent should reset date and emit reset event" time="0.016">
    </testcase>
    <testcase classname="ProgrammingExerciseTestScheduleDatePickerComponent should call all functions" name="ProgrammingExerciseTestScheduleDatePickerComponent should call all functions" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="Event Manager tests" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:40" time="1.786" tests="5">
    <testcase classname="Event Manager tests EventWithContent should create correctly EventWithContent" name="Event Manager tests EventWithContent should create correctly EventWithContent" time="0.009">
    </testcase>
    <testcase classname="Event Manager tests EventManager should not fail when no subscriber and broadcasting" name="Event Manager tests EventManager should not fail when no subscriber and broadcasting" time="0.023">
    </testcase>
    <testcase classname="Event Manager tests EventManager should create an observable and callback when broadcasted EventWithContent" name="Event Manager tests EventManager should create an observable and callback when broadcasted EventWithContent" time="0.009">
    </testcase>
    <testcase classname="Event Manager tests EventManager should create an observable and callback when broadcasted string" name="Event Manager tests EventManager should create an observable and callback when broadcasted string" time="0.01">
    </testcase>
    <testcase classname="Event Manager tests EventManager should subscribe to multiple events" name="Event Manager tests EventManager should subscribe to multiple events" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="CodeEditorStatusComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:40" time="2.283" tests="8">
    <testcase classname="CodeEditorStatusComponent should create" name="CodeEditorStatusComponent should create" time="0.213">
    </testcase>
    <testcase classname="CodeEditorStatusComponent should show an empty status segment for CommitState if no EditorState is given" name="CodeEditorStatusComponent should show an empty status segment for CommitState if no EditorState is given" time="0.094">
    </testcase>
    <testcase classname="CodeEditorStatusComponent should show exactly one status segment for CommitState UNDEFINED with an icon and a non-empty description" name="CodeEditorStatusComponent should show exactly one status segment for CommitState UNDEFINED with an icon and a non-empty description" time="0.151">
    </testcase>
    <testcase classname="CodeEditorStatusComponent should show exactly one status segment for CommitState COULD_NOT_BE_RETRIEVED with an icon and a non-empty description" name="CodeEditorStatusComponent should show exactly one status segment for CommitState COULD_NOT_BE_RETRIEVED with an icon and a non-empty description" time="0.053">
    </testcase>
    <testcase classname="CodeEditorStatusComponent should show exactly one status segment for CommitState CLEAN with an icon and a non-empty description" name="CodeEditorStatusComponent should show exactly one status segment for CommitState CLEAN with an icon and a non-empty description" time="0.074">
    </testcase>
    <testcase classname="CodeEditorStatusComponent should show exactly one status segment for CommitState UNCOMMITTED_CHANGES with an icon and a non-empty description" name="CodeEditorStatusComponent should show exactly one status segment for CommitState UNCOMMITTED_CHANGES with an icon and a non-empty description" time="0.108">
    </testcase>
    <testcase classname="CodeEditorStatusComponent should show exactly one status segment for CommitState COMMITTING with an icon and a non-empty description" name="CodeEditorStatusComponent should show exactly one status segment for CommitState COMMITTING with an icon and a non-empty description" time="0.074">
    </testcase>
    <testcase classname="CodeEditorStatusComponent should show exactly one status segment for CommitState CONFLICT with an icon and a non-empty description" name="CodeEditorStatusComponent should show exactly one status segment for CommitState CONFLICT with an icon and a non-empty description" time="0.053">
    </testcase>
  </testsuite>
  <testsuite name="ApollonDiagramCreateForm Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:41" time="2.108" tests="1">
    <testcase classname="ApollonDiagramCreateForm Component save" name="ApollonDiagramCreateForm Component save" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="ArtemisIntelligenceService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:42" time="0.795" tests="2">
    <testcase classname="ArtemisIntelligenceService Service methods should trigger rewriting pipeline and return rewritten text" name="ArtemisIntelligenceService Service methods should trigger rewriting pipeline and return rewritten text" time="0.014">
    </testcase>
    <testcase classname="ArtemisIntelligenceService Service methods should handle HTTP error correctly" name="ArtemisIntelligenceService Service methods should handle HTTP error correctly" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="ImportCompetenciesComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:41" time="2.232" tests="2">
    <testcase classname="ImportCompetenciesComponent should initialize" name="ImportCompetenciesComponent should initialize" time="0.229">
    </testcase>
    <testcase classname="ImportCompetenciesComponent should import competencies on submit" name="ImportCompetenciesComponent should import competencies on submit" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="Quiz Participation Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:42" time="0.866" tests="4">
    <testcase classname="Quiz Participation Service should submit submission for practice" name="Quiz Participation Service should submit submission for practice" time="0.01">
    </testcase>
    <testcase classname="Quiz Participation Service should submit for preview" name="Quiz Participation Service should submit for preview" time="0.005">
    </testcase>
    <testcase classname="Quiz Participation Service should save or submit for live mode" name="Quiz Participation Service should save or submit for live mode" time="0.004">
    </testcase>
    <testcase classname="Quiz Participation Service should save or submit for live mode" name="Quiz Participation Service should save or submit for live mode" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="TextEditorService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:43" time="1.412" tests="5">
    <testcase classname="TextEditorService Can detect a short German string" name="TextEditorService Can detect a short German string" time="0.027">
    </testcase>
    <testcase classname="TextEditorService Can detect that a French sentence isn&apos;t German or English" name="TextEditorService Can detect that a French sentence isn&apos;t German or English" time="0.01">
    </testcase>
    <testcase classname="TextEditorService Can detect a short English string" name="TextEditorService Can detect a short English string" time="0.016">
    </testcase>
    <testcase classname="TextEditorService Can detect a long German text" name="TextEditorService Can detect a long German text" time="0.011">
    </testcase>
    <testcase classname="TextEditorService Can detect a long English text" name="TextEditorService Can detect a long English text" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="LtiCoursesComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:43" time="1.83" tests="2">
    <testcase classname="LtiCoursesComponent should create" name="LtiCoursesComponent should create" time="0.2">
    </testcase>
    <testcase classname="LtiCoursesComponent should load and filter courses on ngOnInit" name="LtiCoursesComponent should load and filter courses on ngOnInit" time="0.086">
    </testcase>
  </testsuite>
  <testsuite name="Exercise Info Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:45" time="2.034" tests="8">
    <testcase classname="Exercise Info Component should determine due date" name="Exercise Info Component should determine due date" time="0.148">
    </testcase>
    <testcase classname="Exercise Info Component should determine due date" name="Exercise Info Component should determine due date" time="0.051">
    </testcase>
    <testcase classname="Exercise Info Component should determine due date" name="Exercise Info Component should determine due date" time="0.085">
    </testcase>
    <testcase classname="Exercise Info Component should determine due date" name="Exercise Info Component should determine due date" time="0.052">
    </testcase>
    <testcase classname="Exercise Info Component should determine complaint state" name="Exercise Info Component should determine complaint state" time="0.028">
    </testcase>
    <testcase classname="Exercise Info Component should determine complaint state" name="Exercise Info Component should determine complaint state" time="0.045">
    </testcase>
    <testcase classname="Exercise Info Component should determine complaint state" name="Exercise Info Component should determine complaint state" time="0.051">
    </testcase>
    <testcase classname="Exercise Info Component should determine complaint state" name="Exercise Info Component should determine complaint state" time="0.036">
    </testcase>
  </testsuite>
  <testsuite name="CompetencyGraphComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:43" time="4.3" tests="4">
    <testcase classname="CompetencyGraphComponent should initialize" name="CompetencyGraphComponent should initialize" time="0.031">
    </testcase>
    <testcase classname="CompetencyGraphComponent should have nodes and edges" name="CompetencyGraphComponent should have nodes and edges" time="0.079">
    </testcase>
    <testcase classname="CompetencyGraphComponent should handle empty nodes array gracefully" name="CompetencyGraphComponent should handle empty nodes array gracefully" time="0.013">
    </testcase>
    <testcase classname="CompetencyGraphComponent should not update dimension if node id does not exist" name="CompetencyGraphComponent should not update dimension if node id does not exist" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="UserSettingsContainerComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:45" time="3.221" tests="2">
    <testcase classname="UserSettingsContainerComponent should initialize with localVC profile" name="UserSettingsContainerComponent should initialize with localVC profile" time="0.058">
    </testcase>
    <testcase classname="UserSettingsContainerComponent should initialize with no localVC profile set" name="UserSettingsContainerComponent should initialize with no localVC profile set" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="ScoreDisplayComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:47" time="2.57" tests="4">
    <testcase classname="ScoreDisplayComponent should set bonus points correctly if score &gt; maxScore" name="ScoreDisplayComponent should set bonus points correctly if score &gt; maxScore" time="0.057">
    </testcase>
    <testcase classname="ScoreDisplayComponent should set bonus points as undefined if score &lt; maxScore" name="ScoreDisplayComponent should set bonus points as undefined if score &lt; maxScore" time="0.048">
    </testcase>
    <testcase classname="ScoreDisplayComponent should set bonus points, max points with bonus and max percentage to undefined if maxBonusPoints is 0" name="ScoreDisplayComponent should set bonus points, max points with bonus and max percentage to undefined if maxBonusPoints is 0" time="0.026">
    </testcase>
    <testcase classname="ScoreDisplayComponent should set bonus points, max points with bonus and max percentage to undefined if maxPoints is undefined" name="ScoreDisplayComponent should set bonus points, max points with bonus and max percentage to undefined if maxPoints is undefined" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="ReEvaluateDragAndDropQuestionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:43" time="6.137" tests="2">
    <testcase classname="ReEvaluateDragAndDropQuestionComponent should add file" name="ReEvaluateDragAndDropQuestionComponent should add file" time="0.929">
    </testcase>
    <testcase classname="ReEvaluateDragAndDropQuestionComponent should remove file" name="ReEvaluateDragAndDropQuestionComponent should remove file" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingAssessmentRepoExportButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:48" time="2.301" tests="1">
    <testcase classname="ProgrammingAssessmentRepoExportButtonComponent should open repo export modal" name="ProgrammingAssessmentRepoExportButtonComponent should open repo export modal" time="0.036">
    </testcase>
  </testsuite>
  <testsuite name="OneToOneChatService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:50" time="0.704" tests="2">
    <testcase classname="OneToOneChatService create method should create a one-to-one chat with a login" name="OneToOneChatService create method should create a one-to-one chat with a login" time="0.009">
    </testcase>
    <testcase classname="OneToOneChatService createWithId method should create a one-to-one chat with a user ID" name="OneToOneChatService createWithId method should create a one-to-one chat with a user ID" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseInstructorExerciseDownloadComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:48" time="1.745" tests="4">
    <testcase classname="ProgrammingExerciseInstructorExerciseDownloadComponent should initialize" name="ProgrammingExerciseInstructorExerciseDownloadComponent should initialize" time="0.088">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorExerciseDownloadComponent should not download when there is no exercise" name="ProgrammingExerciseInstructorExerciseDownloadComponent should not download when there is no exercise" time="0.027">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorExerciseDownloadComponent should download the exercise" name="ProgrammingExerciseInstructorExerciseDownloadComponent should download the exercise" time="0.022">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorExerciseDownloadComponent should show alert if the export fails" name="ProgrammingExerciseInstructorExerciseDownloadComponent should show alert if the export fails" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Navigation Util Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:50" time="0.744" tests="5">
    <testcase classname="Navigation Util Service should go back" name="Navigation Util Service should go back" time="0.009">
    </testcase>
    <testcase classname="Navigation Util Service should use fallback" name="Navigation Util Service should use fallback" time="0.005">
    </testcase>
    <testcase classname="Navigation Util Service should use without optional" name="Navigation Util Service should use without optional" time="0.028">
    </testcase>
    <testcase classname="Navigation Util Service should use with optional" name="Navigation Util Service should use with optional" time="0.016">
    </testcase>
    <testcase classname="Navigation Util Service should route correctly" name="Navigation Util Service should route correctly" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Course Management Exercises Search Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:50" time="1.054" tests="5">
    <testcase classname="Course Management Exercises Search Component should initialize" name="Course Management Exercises Search Component should initialize" time="0.127">
    </testcase>
    <testcase classname="Course Management Exercises Search Component should have empty filter on init" name="Course Management Exercises Search Component should have empty filter on init" time="0.01">
    </testcase>
    <testcase classname="Course Management Exercises Search Component should change filter on name change" name="Course Management Exercises Search Component should change filter on name change" time="0.017">
    </testcase>
    <testcase classname="Course Management Exercises Search Component should change filter on category change" name="Course Management Exercises Search Component should change filter on category change" time="0.016">
    </testcase>
    <testcase classname="Course Management Exercises Search Component should change filter on type change" name="Course Management Exercises Search Component should change filter on type change" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="MarkdownEditorParsingHelper" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:50" time="0.858" tests="5">
    <testcase classname="MarkdownEditorParsingHelper should parse markdown without domain action identifiers" name="MarkdownEditorParsingHelper should parse markdown without domain action identifiers" time="0.003">
    </testcase>
    <testcase classname="MarkdownEditorParsingHelper should parse single-line text with one domain action identifier" name="MarkdownEditorParsingHelper should parse single-line text with one domain action identifier" time="0.002">
    </testcase>
    <testcase classname="MarkdownEditorParsingHelper should parse single-line text with multiple domain action identifiers" name="MarkdownEditorParsingHelper should parse single-line text with multiple domain action identifiers" time="0.002">
    </testcase>
    <testcase classname="MarkdownEditorParsingHelper should parse multi-line text without domain action identifiers" name="MarkdownEditorParsingHelper should parse multi-line text without domain action identifiers" time="0.017">
    </testcase>
    <testcase classname="MarkdownEditorParsingHelper should parse multi-line text with multiple domain action identifiers" name="MarkdownEditorParsingHelper should parse multi-line text with multiple domain action identifiers" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AffectedStudentsModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:51" time="1.713" tests="1">
    <testcase classname="AffectedStudentsModalComponent should handle error when loadAffected fails" name="AffectedStudentsModalComponent should handle error when loadAffected fails" time="0.235">
    </testcase>
  </testsuite>
  <testsuite name="Exercise Update Warning Component Tests" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:51" time="1.737" tests="4">
    <testcase classname="Exercise Update Warning Component Tests should trigger saveExerciseWithoutReevaluation once" name="Exercise Update Warning Component Tests should trigger saveExerciseWithoutReevaluation once" time="0.11">
    </testcase>
    <testcase classname="Exercise Update Warning Component Tests should trigger reEvaluateExercise once" name="Exercise Update Warning Component Tests should trigger reEvaluateExercise once" time="0.03">
    </testcase>
    <testcase classname="Exercise Update Warning Component Tests should trigger clear once" name="Exercise Update Warning Component Tests should trigger clear once" time="0.016">
    </testcase>
    <testcase classname="Exercise Update Warning Component Tests should toggle deleteFeedback" name="Exercise Update Warning Component Tests should toggle deleteFeedback" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="SystemNotificationManagementDetailComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:51" time="2.115" tests="2">
    <testcase classname="SystemNotificationManagementDetailComponent should initialize" name="SystemNotificationManagementDetailComponent should initialize" time="0.1">
    </testcase>
    <testcase classname="SystemNotificationManagementDetailComponent should navigate to edit if edit is clicked" name="SystemNotificationManagementDetailComponent should navigate to edit if edit is clicked" time="0.095">
    </testcase>
  </testsuite>
  <testsuite name="CommitsInfoGroupComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:50" time="3.324" tests="1">
    <testcase classname="CommitsInfoGroupComponent should toggle isExpanded when clicking the expand button" name="CommitsInfoGroupComponent should toggle isExpanded when clicking the expand button" time="0.578">
    </testcase>
  </testsuite>
  <testsuite name="PrivacyComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:53" time="3.536" tests="1">
    <testcase classname="PrivacyComponent should load privacy statement on init in correct language" name="PrivacyComponent should load privacy statement on init in correct language" time="0.162">
    </testcase>
  </testsuite>
  <testsuite name="ExamLiveEventsButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:54" time="3.555" tests="2">
    <testcase classname="ExamLiveEventsButtonComponent should initialize eventCount based on all observed events" name="ExamLiveEventsButtonComponent should initialize eventCount based on all observed events" time="0.071">
    </testcase>
    <testcase classname="ExamLiveEventsButtonComponent should open dialog when new events are observed" name="ExamLiveEventsButtonComponent should open dialog when new events are observed" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="MonacoDiffEditorComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:56" time="1.684" tests="4">
    <testcase classname="MonacoDiffEditorComponent should dispose its listeners and subscriptions when destroyed" name="MonacoDiffEditorComponent should dispose its listeners and subscriptions when destroyed" time="0.165">
    </testcase>
    <testcase classname="MonacoDiffEditorComponent should update the size of its container" name="MonacoDiffEditorComponent should update the size of its container" time="0.056">
    </testcase>
    <testcase classname="MonacoDiffEditorComponent should set the text of the editor" name="MonacoDiffEditorComponent should set the text of the editor" time="0.095">
    </testcase>
    <testcase classname="MonacoDiffEditorComponent should notify about its readiness to display" name="MonacoDiffEditorComponent should notify about its readiness to display" time="0.3">
    </testcase>
  </testsuite>
  <testsuite name="CleanupServiceComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:53" time="5.043" tests="2">
    <testcase classname="CleanupServiceComponent should load last executions on init" name="CleanupServiceComponent should load last executions on init" time="0.116">
    </testcase>
    <testcase classname="CleanupServiceComponent should validate date ranges correctly" name="CleanupServiceComponent should validate date ranges correctly" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="StudentExamWorkingTimeComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:58" time="1.005" tests="5">
    <testcase classname="StudentExamWorkingTimeComponent should have a difference of zero if the student working time is the regular working time" name="StudentExamWorkingTimeComponent should have a difference of zero if the student working time is the regular working time" time="0.027">
    </testcase>
    <testcase classname="StudentExamWorkingTimeComponent should have a positive difference if the student is allowed to work longer" name="StudentExamWorkingTimeComponent should have a positive difference if the student is allowed to work longer" time="0.005">
    </testcase>
    <testcase classname="StudentExamWorkingTimeComponent should have a negative difference if the student has a shorter working time" name="StudentExamWorkingTimeComponent should have a negative difference if the student has a shorter working time" time="0.005">
    </testcase>
    <testcase classname="StudentExamWorkingTimeComponent should correctly calculate working time extensions over double the time" name="StudentExamWorkingTimeComponent should correctly calculate working time extensions over double the time" time="0.004">
    </testcase>
    <testcase classname="StudentExamWorkingTimeComponent should only count exams as test runs if they explicitly are" name="StudentExamWorkingTimeComponent should only count exams as test runs if they explicitly are" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackUtils" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:58" time="1.02" tests="2">
    <testcase classname="FeedbackUtils prepareFeedbackComponentParameters should determine automatic feedback information with latestDueDate being passed" name="FeedbackUtils prepareFeedbackComponentParameters should determine automatic feedback information with latestDueDate being passed" time="0.02">
    </testcase>
    <testcase classname="FeedbackUtils prepareFeedbackComponentParameters should determine automatic feedback information if latestDueDate is passed as undefined" name="FeedbackUtils prepareFeedbackComponentParameters should determine automatic feedback information if latestDueDate is passed as undefined" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="GradeStepBoundsPipe" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:58" time="1.544" tests="5">
    <testcase classname="GradeStepBoundsPipe should format non-last step percentage" name="GradeStepBoundsPipe should format non-last step percentage" time="0.002">
    </testcase>
    <testcase classname="GradeStepBoundsPipe should format last step percentage" name="GradeStepBoundsPipe should format last step percentage" time="0.001">
    </testcase>
    <testcase classname="GradeStepBoundsPipe should format non-last step points" name="GradeStepBoundsPipe should format non-last step points" time="0.001">
    </testcase>
    <testcase classname="GradeStepBoundsPipe should format last step points" name="GradeStepBoundsPipe should format last step points" time="0.001">
    </testcase>
    <testcase classname="GradeStepBoundsPipe should return a placeholder when formatting undefined points" name="GradeStepBoundsPipe should return a placeholder when formatting undefined points" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseDetailStatisticsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:53" time="6.381" tests="1">
    <testcase classname="ExerciseDetailStatisticsComponent should initialize chart data" name="ExerciseDetailStatisticsComponent should initialize chart data" time="0.093">
    </testcase>
  </testsuite>
  <testsuite name="StickyPopoverDirective" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:00" time="1.54" tests="3">
    <testcase classname="StickyPopoverDirective should open on hover" name="StickyPopoverDirective should open on hover" time="0.038">
    </testcase>
    <testcase classname="StickyPopoverDirective should display content on hover" name="StickyPopoverDirective should display content on hover" time="0.014">
    </testcase>
    <testcase classname="StickyPopoverDirective should close on leave" name="StickyPopoverDirective should close on leave" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupFreePeriodService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:59" time="1.912" tests="4">
    <testcase classname="TutorialGroupFreePeriodService getOneOfConfiguration" name="TutorialGroupFreePeriodService getOneOfConfiguration" time="0.009">
    </testcase>
    <testcase classname="TutorialGroupFreePeriodService create" name="TutorialGroupFreePeriodService create" time="0.004">
    </testcase>
    <testcase classname="TutorialGroupFreePeriodService update" name="TutorialGroupFreePeriodService update" time="0.003">
    </testcase>
    <testcase classname="TutorialGroupFreePeriodService delete" name="TutorialGroupFreePeriodService delete" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="ImportAllCompetenciesComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:00" time="1.874" tests="2">
    <testcase classname="ImportAllCompetenciesComponent should initialize" name="ImportAllCompetenciesComponent should initialize" time="0.323">
    </testcase>
    <testcase classname="ImportAllCompetenciesComponent should extract competency properties" name="ImportAllCompetenciesComponent should extract competency properties" time="0.139">
    </testcase>
  </testsuite>
  <testsuite name="ActivateComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:02" time="1.711" tests="3">
    <testcase classname="ActivateComponent calls activate.get with the key from params" name="ActivateComponent calls activate.get with the key from params" time="0.095">
    </testcase>
    <testcase classname="ActivateComponent should set set success to true upon successful activation" name="ActivateComponent should set set success to true upon successful activation" time="0.017">
    </testcase>
    <testcase classname="ActivateComponent should set set error to true upon activation failure" name="ActivateComponent should set set error to true upon activation failure" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Keyboard Utils" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:02" time="2.971" tests="15">
    <testcase classname="Keyboard Utils getPositionForKey should return correct position for ArrowUp" name="Keyboard Utils getPositionForKey should return correct position for ArrowUp" time="0.007">
    </testcase>
    <testcase classname="Keyboard Utils getPositionForKey should return correct position for ArrowRight" name="Keyboard Utils getPositionForKey should return correct position for ArrowRight" time="0.001">
    </testcase>
    <testcase classname="Keyboard Utils getPositionForKey should return correct position for ArrowDown" name="Keyboard Utils getPositionForKey should return correct position for ArrowDown" time="0.001">
    </testcase>
    <testcase classname="Keyboard Utils getPositionForKey should return correct position for ArrowLeft" name="Keyboard Utils getPositionForKey should return correct position for ArrowLeft" time="0">
    </testcase>
    <testcase classname="Keyboard Utils getPositionForKey should return default position for unknown key" name="Keyboard Utils getPositionForKey should return default position for unknown key" time="0.007">
    </testcase>
    <testcase classname="Keyboard Utils getInvertedPositionForKey should return correct inverted position for ArrowUp" name="Keyboard Utils getInvertedPositionForKey should return correct inverted position for ArrowUp" time="0.001">
    </testcase>
    <testcase classname="Keyboard Utils getInvertedPositionForKey should return correct inverted position for ArrowRight" name="Keyboard Utils getInvertedPositionForKey should return correct inverted position for ArrowRight" time="0.001">
    </testcase>
    <testcase classname="Keyboard Utils getInvertedPositionForKey should return correct inverted position for ArrowDown" name="Keyboard Utils getInvertedPositionForKey should return correct inverted position for ArrowDown" time="0">
    </testcase>
    <testcase classname="Keyboard Utils getInvertedPositionForKey should return correct inverted position for ArrowLeft" name="Keyboard Utils getInvertedPositionForKey should return correct inverted position for ArrowLeft" time="0.001">
    </testcase>
    <testcase classname="Keyboard Utils getInvertedPositionForKey should return default inverted position for unknown key" name="Keyboard Utils getInvertedPositionForKey should return default inverted position for unknown key" time="0.004">
    </testcase>
    <testcase classname="Keyboard Utils getEventForKey should return correct event for ArrowUp" name="Keyboard Utils getEventForKey should return correct event for ArrowUp" time="0.001">
    </testcase>
    <testcase classname="Keyboard Utils getEventForKey should return correct event for ArrowRight" name="Keyboard Utils getEventForKey should return correct event for ArrowRight" time="0.003">
    </testcase>
    <testcase classname="Keyboard Utils getEventForKey should return correct event for ArrowDown" name="Keyboard Utils getEventForKey should return correct event for ArrowDown" time="0.001">
    </testcase>
    <testcase classname="Keyboard Utils getEventForKey should return correct event for ArrowLeft" name="Keyboard Utils getEventForKey should return correct event for ArrowLeft" time="0.001">
    </testcase>
    <testcase classname="Keyboard Utils getEventForKey should return default event for unknown key" name="Keyboard Utils getEventForKey should return default event for unknown key" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseProblemComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:24:59" time="5.023" tests="1">
    <testcase classname="ProgrammingExerciseProblemComponent should initialize and store exercise" name="ProgrammingExerciseProblemComponent should initialize and store exercise" time="0.505">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:01" time="3.696" tests="3">
    <testcase classname="FeedbackModalComponent should load long feedback text if hasLongFeedbackText is true" name="FeedbackModalComponent should load long feedback text if hasLongFeedbackText is true" time="0.054">
    </testcase>
    <testcase classname="FeedbackModalComponent should initialize with the provided feedback detail" name="FeedbackModalComponent should initialize with the provided feedback detail" time="0.01">
    </testcase>
    <testcase classname="FeedbackModalComponent should call close on activeModal when close is triggered" name="FeedbackModalComponent should call close on activeModal when close is triggered" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Exercise Paging Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:05" time="0.943" tests="1">
    <testcase classname="Exercise Paging Service should find an element" name="Exercise Paging Service should find an element" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="SuspiciousSessionsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:06" time="1.438" tests="2">
    <testcase classname="SuspiciousSessionsComponent should contain correct link to student exam in table cell" name="SuspiciousSessionsComponent should contain correct link to student exam in table cell" time="0.054">
    </testcase>
    <testcase classname="SuspiciousSessionsComponent should correctly determine suspicious reasons" name="SuspiciousSessionsComponent should correctly determine suspicious reasons" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="LectureImportComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:05" time="2.129" tests="1">
    <testcase classname="LectureImportComponent should extract lecture properties" name="LectureImportComponent should extract lecture properties" time="0.272">
    </testcase>
  </testsuite>
  <testsuite name="Exercise Create Buttons Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:03" time="3.463" tests="3">
    <testcase classname="Exercise Create Buttons Component should open import modal" name="Exercise Create Buttons Component should open import modal" time="0.404">
    </testcase>
    <testcase classname="Exercise Create Buttons Component should open import modal" name="Exercise Create Buttons Component should open import modal" time="0.049">
    </testcase>
    <testcase classname="Exercise Create Buttons Component should open import modal" name="Exercise Create Buttons Component should open import modal" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="ImportCompetenciesTableComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:05" time="2.775" tests="3">
    <testcase classname="ImportCompetenciesTableComponent should initialize" name="ImportCompetenciesTableComponent should initialize" time="0.173">
    </testcase>
    <testcase classname="ImportCompetenciesTableComponent should change page" name="ImportCompetenciesTableComponent should change page" time="0.047">
    </testcase>
    <testcase classname="ImportCompetenciesTableComponent should change sort" name="ImportCompetenciesTableComponent should change sort" time="0.074">
    </testcase>
  </testsuite>
  <testsuite name="Example Submission Import Paging Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:07" time="0.707" tests="1">
    <testcase classname="Example Submission Import Paging Service should find submission" name="Example Submission Import Paging Service should find submission" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:07" time="0.84" tests="2">
    <testcase classname="Service Tests Logs Service Service methods should get the config" name="Service Tests Logs Service Service methods should get the config" time="0.01">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should get the env" name="Service Tests Logs Service Service methods should get the env" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="MeetingPatternPipe" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:07" time="0.748" tests="5">
    <testcase classname="MeetingPatternPipe should return an empty string if schedule is undefined" name="MeetingPatternPipe should return an empty string if schedule is undefined" time="0.005">
    </testcase>
    <testcase classname="MeetingPatternPipe should return an empty string" name="MeetingPatternPipe should return an empty string" time="0.001">
    </testcase>
    <testcase classname="MeetingPatternPipe should return a translated meeting pattern for a valid every week schedule" name="MeetingPatternPipe should return a translated meeting pattern for a valid every week schedule" time="0.002">
    </testcase>
    <testcase classname="MeetingPatternPipe should return a translated meeting pattern for a valid every two week schedule" name="MeetingPatternPipe should return a translated meeting pattern for a valid every two week schedule" time="0.001">
    </testcase>
    <testcase classname="MeetingPatternPipe should return a translated meeting pattern without meeting frequency by default" name="MeetingPatternPipe should return a translated meeting pattern without meeting frequency by default" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Exercise Filter Test" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:08" time="0.653" tests="5">
    <testcase classname="Exercise Filter Test should be empty on create" name="Exercise Filter Test should be empty on create" time="0.002">
    </testcase>
    <testcase classname="Exercise Filter Test should filter by name" name="Exercise Filter Test should filter by name" time="0.001">
    </testcase>
    <testcase classname="Exercise Filter Test should filter by category" name="Exercise Filter Test should filter by category" time="0.001">
    </testcase>
    <testcase classname="Exercise Filter Test should filter by type" name="Exercise Filter Test should filter by type" time="0.001">
    </testcase>
    <testcase classname="Exercise Filter Test should filter by all" name="Exercise Filter Test should filter by all" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="RangeSliderComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:08" time="1.464" tests="4">
    <testcase classname="RangeSliderComponent should emit the updated max value" name="RangeSliderComponent should emit the updated max value" time="0.289">
    </testcase>
    <testcase classname="RangeSliderComponent should emit the updated max value rounded up to next selectable value" name="RangeSliderComponent should emit the updated max value rounded up to next selectable value" time="0.105">
    </testcase>
    <testcase classname="RangeSliderComponent should emit the updated min value" name="RangeSliderComponent should emit the updated min value" time="0.147">
    </testcase>
    <testcase classname="RangeSliderComponent should emit the updated min value rounded down to next selectable value" name="RangeSliderComponent should emit the updated min value rounded down to next selectable value" time="0.153">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExercise Create Buttons Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:08" time="2.447" tests="2">
    <testcase classname="ProgrammingExercise Create Buttons Component should open import modal" name="ProgrammingExercise Create Buttons Component should open import modal" time="0.399">
    </testcase>
    <testcase classname="ProgrammingExercise Create Buttons Component should open import modal" name="ProgrammingExercise Create Buttons Component should open import modal" time="0.055">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:09" time="2.759" tests="1">
    <testcase classname="Component Tests ConfigurationComponent onInit should call load all on init" name="Component Tests ConfigurationComponent onInit should call load all on init" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Submission Export Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:11" time="0.747" tests="5">
    <testcase classname="Submission Export Service check exercise url for text exercise" name="Submission Export Service check exercise url for text exercise" time="0.009">
    </testcase>
    <testcase classname="Submission Export Service check exercise url for modeling exercise" name="Submission Export Service check exercise url for modeling exercise" time="0.003">
    </testcase>
    <testcase classname="Submission Export Service check exercise url for file upload exercise" name="Submission Export Service check exercise url for file upload exercise" time="0.003">
    </testcase>
    <testcase classname="Submission Export Service check exercise url for unsupported exercise types" name="Submission Export Service check exercise url for unsupported exercise types" time="0.011">
    </testcase>
    <testcase classname="Submission Export Service should export submissions" name="Submission Export Service should export submissions" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="OneToOneChatCreateDialogComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:09" time="2.572" tests="3">
    <testcase classname="OneToOneChatCreateDialogComponent should create" name="OneToOneChatCreateDialogComponent should create" time="0.213">
    </testcase>
    <testcase classname="OneToOneChatCreateDialogComponent should dismiss modal if cancel is selected" name="OneToOneChatCreateDialogComponent should dismiss modal if cancel is selected" time="0.054">
    </testcase>
    <testcase classname="OneToOneChatCreateDialogComponent should close the dialog with the selected user once one is selected" name="OneToOneChatCreateDialogComponent should close the dialog with the selected user once one is selected" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="GroupChatCreateDialogComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:08" time="4.098" tests="3">
    <testcase classname="GroupChatCreateDialogComponent should create" name="GroupChatCreateDialogComponent should create" time="0.28">
    </testcase>
    <testcase classname="GroupChatCreateDialogComponent should close the dialog with the selected users" name="GroupChatCreateDialogComponent should close the dialog with the selected users" time="0.097">
    </testcase>
    <testcase classname="GroupChatCreateDialogComponent should dismiss modal if cancel is selected" name="GroupChatCreateDialogComponent should dismiss modal if cancel is selected" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="Plagiarism Case Verdict Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:10" time="2.156" tests="10">
    <testcase classname="Plagiarism Case Verdict Component should return correct translation string" name="Plagiarism Case Verdict Component should return correct translation string" time="0.087">
    </testcase>
    <testcase classname="Plagiarism Case Verdict Component should return correct translation string" name="Plagiarism Case Verdict Component should return correct translation string" time="0.035">
    </testcase>
    <testcase classname="Plagiarism Case Verdict Component should return correct translation string" name="Plagiarism Case Verdict Component should return correct translation string" time="0.057">
    </testcase>
    <testcase classname="Plagiarism Case Verdict Component should return correct translation string" name="Plagiarism Case Verdict Component should return correct translation string" time="0.038">
    </testcase>
    <testcase classname="Plagiarism Case Verdict Component should return correct translation string" name="Plagiarism Case Verdict Component should return correct translation string" time="0.047">
    </testcase>
    <testcase classname="Plagiarism Case Verdict Component should return correct verdict badge class" name="Plagiarism Case Verdict Component should return correct verdict badge class" time="0.056">
    </testcase>
    <testcase classname="Plagiarism Case Verdict Component should return correct verdict badge class" name="Plagiarism Case Verdict Component should return correct verdict badge class" time="0.05">
    </testcase>
    <testcase classname="Plagiarism Case Verdict Component should return correct verdict badge class" name="Plagiarism Case Verdict Component should return correct verdict badge class" time="0.038">
    </testcase>
    <testcase classname="Plagiarism Case Verdict Component should return correct verdict badge class" name="Plagiarism Case Verdict Component should return correct verdict badge class" time="0.074">
    </testcase>
    <testcase classname="Plagiarism Case Verdict Component should return correct verdict badge class" name="Plagiarism Case Verdict Component should return correct verdict badge class" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="User Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:12" time="1.615" tests="5">
    <testcase classname="User Service Service methods should return Authorities" name="User Service Service methods should return Authorities" time="0.01">
    </testcase>
    <testcase classname="User Service Service methods should call correct URL to update lastNotificationRead" name="User Service Service methods should call correct URL to update lastNotificationRead" time="0.004">
    </testcase>
    <testcase classname="User Service Service methods should call correct URL to update notification visibility" name="User Service Service methods should call correct URL to update notification visibility" time="0.004">
    </testcase>
    <testcase classname="User Service Service methods should call correct URL to initialize LTI user" name="User Service Service methods should call correct URL to initialize LTI user" time="0.025">
    </testcase>
    <testcase classname="User Service Service methods should call correct URL to accept external LLM" name="User Service Service methods should call correct URL to accept external LLM" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="ProgressBarComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:12" time="2.069" tests="5">
    <testcase classname="ProgressBarComponent uses correct background" name="ProgressBarComponent uses correct background" time="0.062">
    </testcase>
    <testcase classname="ProgressBarComponent uses correct background" name="ProgressBarComponent uses correct background" time="0.034">
    </testcase>
    <testcase classname="ProgressBarComponent uses correct background" name="ProgressBarComponent uses correct background" time="0.033">
    </testcase>
    <testcase classname="ProgressBarComponent updates foreground color correctly based on theme and percentage" name="ProgressBarComponent updates foreground color correctly based on theme and percentage" time="0.018">
    </testcase>
    <testcase classname="ProgressBarComponent unsubscribes from theme service on destroy" name="ProgressBarComponent unsubscribes from theme service on destroy" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="ImageCropperModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:13" time="1.973" tests="4">
    <testcase classname="ImageCropperModalComponent should call onCancel when cancel button is clicked" name="ImageCropperModalComponent should call onCancel when cancel button is clicked" time="0.163">
    </testcase>
    <testcase classname="ImageCropperModalComponent should call onSave when save button is clicked" name="ImageCropperModalComponent should call onSave when save button is clicked" time="0.029">
    </testcase>
    <testcase classname="ImageCropperModalComponent should close the modal when onCancel is called" name="ImageCropperModalComponent should close the modal when onCancel is called" time="0.053">
    </testcase>
    <testcase classname="ImageCropperModalComponent should close the modal with cropped image when onSave is called" name="ImageCropperModalComponent should close the modal with cropped image when onSave is called" time="0.052">
    </testcase>
  </testsuite>
  <testsuite name="StatisticsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:12" time="2.938" tests="2">
    <testcase classname="StatisticsComponent should initialize" name="StatisticsComponent should initialize" time="0.112">
    </testcase>
    <testcase classname="StatisticsComponent should click Month button" name="StatisticsComponent should click Month button" time="0.068">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupsConfigurationService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:15" time="1.155" tests="3">
    <testcase classname="TutorialGroupsConfigurationService getOneOfCourse" name="TutorialGroupsConfigurationService getOneOfCourse" time="0.034">
    </testcase>
    <testcase classname="TutorialGroupsConfigurationService create" name="TutorialGroupsConfigurationService create" time="0.007">
    </testcase>
    <testcase classname="TutorialGroupsConfigurationService update" name="TutorialGroupsConfigurationService update" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="TextblockFeedbackDropdownComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:14" time="1.944" tests="3">
    <testcase classname="TextblockFeedbackDropdownComponent should create" name="TextblockFeedbackDropdownComponent should create" time="0.108">
    </testcase>
    <testcase classname="TextblockFeedbackDropdownComponent should update assessment correctly when using dropdown-menu" name="TextblockFeedbackDropdownComponent should update assessment correctly when using dropdown-menu" time="0.068">
    </testcase>
    <testcase classname="TextblockFeedbackDropdownComponent should display correct background colors for dropdown elements" name="TextblockFeedbackDropdownComponent should display correct background colors for dropdown elements" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseInstructorRepoDownloadComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:14" time="2.335" tests="3">
    <testcase classname="ProgrammingExerciseInstructorRepoDownloadComponent should initialize" name="ProgrammingExerciseInstructorRepoDownloadComponent should initialize" time="0.089">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorRepoDownloadComponent should not download when there is no exercise" name="ProgrammingExerciseInstructorRepoDownloadComponent should not download when there is no exercise" time="0.035">
    </testcase>
    <testcase classname="ProgrammingExerciseInstructorRepoDownloadComponent should download the repos" name="ProgrammingExerciseInstructorRepoDownloadComponent should download the repos" time="0.061">
    </testcase>
  </testsuite>
  <testsuite name="DifficultyPickerComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:15" time="2.051" tests="3">
    <testcase classname="DifficultyPickerComponent should create" name="DifficultyPickerComponent should create" time="0.132">
    </testcase>
    <testcase classname="DifficultyPickerComponent should set the difficulty level when setDifficulty is called" name="DifficultyPickerComponent should set the difficulty level when setDifficulty is called" time="0.023">
    </testcase>
    <testcase classname="DifficultyPickerComponent should emit a change event when difficulty is set" name="DifficultyPickerComponent should emit a change event when difficulty is set" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="IrisStatusService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:16" time="1.907" tests="3">
    <testcase classname="IrisStatusService should be created" name="IrisStatusService should be created" time="0.01">
    </testcase>
    <testcase classname="IrisStatusService should get active status" name="IrisStatusService should get active status" time="0.005">
    </testcase>
    <testcase classname="IrisStatusService should get current rate limit info" name="IrisStatusService should get current rate limit info" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="QuizExercise Create Buttons Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:16" time="2.026" tests="1">
    <testcase classname="QuizExercise Create Buttons Component should open import modal" name="QuizExercise Create Buttons Component should open import modal" time="0.152">
    </testcase>
  </testsuite>
  <testsuite name="Grading System Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:16" time="2.199" tests="3">
    <testcase classname="Grading System Component should initialize for course" name="Grading System Component should initialize for course" time="0.149">
    </testcase>
    <testcase classname="Grading System Component should initialize for exam" name="Grading System Component should initialize for exam" time="0.034">
    </testcase>
    <testcase classname="Grading System Component should store a reference to child component" name="Grading System Component should store a reference to child component" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExercise Re-Evaluate Button Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:17" time="1.943" tests="1">
    <testcase classname="ProgrammingExercise Re-Evaluate Button Component should reEvaluate exercise" name="ProgrammingExercise Re-Evaluate Button Component should reEvaluate exercise" time="0.084">
    </testcase>
  </testsuite>
  <testsuite name="Directive: SortDirective" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:18" time="0.933" tests="3">
    <testcase classname="Directive: SortDirective should update predicate, order and invoke callback function" name="Directive: SortDirective should update predicate, order and invoke callback function" time="0.075">
    </testcase>
    <testcase classname="Directive: SortDirective should change sort order to descending when same field is sorted again" name="Directive: SortDirective should change sort order to descending when same field is sorted again" time="0.013">
    </testcase>
    <testcase classname="Directive: SortDirective should change sort order to ascending when different field is sorted" name="Directive: SortDirective should change sort order to ascending when different field is sorted" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="QuizExercise Re-evaluate Warning Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:18" time="2.218" tests="1">
    <testcase classname="QuizExercise Re-evaluate Warning Component should initialize quiz exercise" name="QuizExercise Re-evaluate Warning Component should initialize quiz exercise" time="0.268">
    </testcase>
  </testsuite>
  <testsuite name="Exam Import Paging Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:19" time="2.876" tests="1">
    <testcase classname="Exam Import Paging Service should find an exam" name="Exam Import Paging Service should find an exam" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingDiffReportDetailComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:19" time="2.516" tests="2">
    <testcase classname="ProgrammingDiffReportDetailComponent should open git diff modal" name="ProgrammingDiffReportDetailComponent should open git diff modal" time="0.039">
    </testcase>
    <testcase classname="ProgrammingDiffReportDetailComponent should not open git diff modal" name="ProgrammingDiffReportDetailComponent should not open git diff modal" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="ImprintComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:19" time="2.632" tests="1">
    <testcase classname="ImprintComponent should load imprint on init in correct language" name="ImprintComponent should load imprint on init in correct language" time="0.073">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseStudentRepoDownloadComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:21" time="1.764" tests="3">
    <testcase classname="ProgrammingExerciseStudentRepoDownloadComponent should not attempt to download if the exercise id is missing" name="ProgrammingExerciseStudentRepoDownloadComponent should not attempt to download if the exercise id is missing" time="0.052">
    </testcase>
    <testcase classname="ProgrammingExerciseStudentRepoDownloadComponent should not attempt to download if the participation id is missing" name="ProgrammingExerciseStudentRepoDownloadComponent should not attempt to download if the participation id is missing" time="0.018">
    </testcase>
    <testcase classname="ProgrammingExerciseStudentRepoDownloadComponent should download the correct repository" name="ProgrammingExerciseStudentRepoDownloadComponent should download the correct repository" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="ConnectionWarning" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:21" time="1.503" tests="1">
    <testcase classname="ConnectionWarning should show the indicator and popover on dropped connection" name="ConnectionWarning should show the indicator and popover on dropped connection" time="0.087">
    </testcase>
  </testsuite>
  <testsuite name="ArtemisTimeAgoPipe" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:22" time="0.944" tests="7">
    <testcase classname="ArtemisTimeAgoPipe returns the correct time and switches the language correctly" name="ArtemisTimeAgoPipe returns the correct time and switches the language correctly" time="0.012">
    </testcase>
    <testcase classname="ArtemisTimeAgoPipe returns the correct time and switches the language correctly" name="ArtemisTimeAgoPipe returns the correct time and switches the language correctly" time="0.004">
    </testcase>
    <testcase classname="ArtemisTimeAgoPipe returns the correct time and switches the language correctly" name="ArtemisTimeAgoPipe returns the correct time and switches the language correctly" time="0.004">
    </testcase>
    <testcase classname="ArtemisTimeAgoPipe returns the correct time and switches the language correctly" name="ArtemisTimeAgoPipe returns the correct time and switches the language correctly" time="0.017">
    </testcase>
    <testcase classname="ArtemisTimeAgoPipe returns the correct time and switches the language correctly" name="ArtemisTimeAgoPipe returns the correct time and switches the language correctly" time="0.004">
    </testcase>
    <testcase classname="ArtemisTimeAgoPipe returns the correct time and switches the language correctly" name="ArtemisTimeAgoPipe returns the correct time and switches the language correctly" time="0.004">
    </testcase>
    <testcase classname="ArtemisTimeAgoPipe updates the output automatically as time passes, but removes the timer after destroy" name="ArtemisTimeAgoPipe updates the output automatically as time passes, but removes the timer after destroy" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="CodeEditorTutorAssessmentInlineFeedbackSuggestionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:21" time="1.649" tests="2">
    <testcase classname="CodeEditorTutorAssessmentInlineFeedbackSuggestionComponent should emit onAcceptSuggestion event when Accept button is clicked" name="CodeEditorTutorAssessmentInlineFeedbackSuggestionComponent should emit onAcceptSuggestion event when Accept button is clicked" time="0.101">
    </testcase>
    <testcase classname="CodeEditorTutorAssessmentInlineFeedbackSuggestionComponent should emit onDiscardSuggestion event when Discard button is clicked" name="CodeEditorTutorAssessmentInlineFeedbackSuggestionComponent should emit onDiscardSuggestion event when Discard button is clicked" time="0.039">
    </testcase>
  </testsuite>
  <testsuite name="MonacoEditorTheme" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:23" time="0.856" tests="1">
    <testcase classname="MonacoEditorTheme should correctly register a theme" name="MonacoEditorTheme should correctly register a theme" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="LinkPreviewService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:23" time="1.243" tests="2">
    <testcase classname="LinkPreviewService fetchLink should return link preview from HTTP response" name="LinkPreviewService fetchLink should return link preview from HTTP response" time="0.017">
    </testcase>
    <testcase classname="LinkPreviewService fetchLink should return cached link preview for the same URL" name="LinkPreviewService fetchLink should return cached link preview for the same URL" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="GitDiffFileComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:23" time="1.591" tests="1">
    <testcase classname="GitDiffFileComponent should initialize the content of the diff editor" name="GitDiffFileComponent should initialize the content of the diff editor" time="0.228">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackCollapseComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:23" time="1.932" tests="6">
    <testcase classname="FeedbackCollapseComponent should not truncate if not necessary" name="FeedbackCollapseComponent should not truncate if not necessary" time="0.002">
    </testcase>
    <testcase classname="FeedbackCollapseComponent should truncate if necessary" name="FeedbackCollapseComponent should truncate if necessary" time="0.001">
    </testcase>
    <testcase classname="FeedbackCollapseComponent should only show first line if truncated" name="FeedbackCollapseComponent should only show first line if truncated" time="0.001">
    </testcase>
    <testcase classname="FeedbackCollapseComponent should only show the first line of feedback if truncating necessary" name="FeedbackCollapseComponent should only show the first line of feedback if truncating necessary" time="0">
    </testcase>
    <testcase classname="FeedbackCollapseComponent should always set the preview text if the feedback has long feedback" name="FeedbackCollapseComponent should always set the preview text if the feedback has long feedback" time="0.001">
    </testcase>
    <testcase classname="FeedbackCollapseComponent should toggle properly" name="FeedbackCollapseComponent should toggle properly" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ErrorHandlerInterceptor" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:24" time="1.097" tests="7">
    <testcase classname="ErrorHandlerInterceptor should broadcast http errors" name="ErrorHandlerInterceptor should broadcast http errors" time="0.008">
    </testcase>
    <testcase classname="ErrorHandlerInterceptor should broadcast http errors" name="ErrorHandlerInterceptor should broadcast http errors" time="0.003">
    </testcase>
    <testcase classname="ErrorHandlerInterceptor should broadcast http errors" name="ErrorHandlerInterceptor should broadcast http errors" time="0.003">
    </testcase>
    <testcase classname="ErrorHandlerInterceptor should broadcast http errors" name="ErrorHandlerInterceptor should broadcast http errors" time="0.004">
    </testcase>
    <testcase classname="ErrorHandlerInterceptor should broadcast http errors" name="ErrorHandlerInterceptor should broadcast http errors" time="0.004">
    </testcase>
    <testcase classname="ErrorHandlerInterceptor should not broadcast an http error if status is 401 but url includes /api/core/public/account or /api/core/account" name="ErrorHandlerInterceptor should not broadcast an http error if status is 401 but url includes /api/core/public/account or /api/core/account" time="0.003">
    </testcase>
    <testcase classname="ErrorHandlerInterceptor should not broadcast an http error if status is 401 but url includes /api/core/public/account or /api/core/account" name="ErrorHandlerInterceptor should not broadcast an http error if status is 401 but url includes /api/core/public/account or /api/core/account" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="VerticalProgressBarComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:25" time="1.368" tests="2">
    <testcase classname="VerticalProgressBarComponent should keep borders in range [0,100]" name="VerticalProgressBarComponent should keep borders in range [0,100]" time="0.046">
    </testcase>
    <testcase classname="VerticalProgressBarComponent should change color" name="VerticalProgressBarComponent should change color" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Language Helper" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:25" time="1.097" tests="2">
    <testcase classname="Language Helper determinePreferredLanguages should respect user preference" name="Language Helper determinePreferredLanguages should respect user preference" time="0.034">
    </testcase>
    <testcase classname="Language Helper determinePreferredLanguage should return english if no other language matches" name="Language Helper determinePreferredLanguage should return english if no other language matches" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="GenericConfirmationDialogComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:23" time="3.654" tests="3">
    <testcase classname="GenericConfirmationDialogComponent should create" name="GenericConfirmationDialogComponent should create" time="0.278">
    </testcase>
    <testcase classname="GenericConfirmationDialogComponent should close modal if confirm is selected" name="GenericConfirmationDialogComponent should close modal if confirm is selected" time="0.102">
    </testcase>
    <testcase classname="GenericConfirmationDialogComponent should dismiss modal if cancel is selected" name="GenericConfirmationDialogComponent should dismiss modal if cancel is selected" time="0.089">
    </testcase>
  </testsuite>
  <testsuite name="Feature Overlay Component Tests" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:26" time="2.258" tests="2">
    <testcase classname="Feature Overlay Component Tests should display tooltip and add &quot;disabled&quot; class when enabled is false" name="Feature Overlay Component Tests should display tooltip and add &quot;disabled&quot; class when enabled is false" time="0.027">
    </testcase>
    <testcase classname="Feature Overlay Component Tests should not display tooltip nor add &quot;disabled&quot; class when enabled is true" name="Feature Overlay Component Tests should not display tooltip nor add &quot;disabled&quot; class when enabled is true" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Rating Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:26" time="2.857" tests="4">
    <testcase classname="Rating Service should create a Rating" name="Rating Service should create a Rating" time="0.023">
    </testcase>
    <testcase classname="Rating Service should get a Rating" name="Rating Service should get a Rating" time="0.008">
    </testcase>
    <testcase classname="Rating Service should update a Rating" name="Rating Service should update a Rating" time="0.007">
    </testcase>
    <testcase classname="Rating Service should get Ratings for Dashboard" name="Rating Service should get Ratings for Dashboard" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="PresentationScoreComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:27" time="1.863" tests="2">
    <testcase classname="PresentationScoreComponent should show the presentation score checkbox" name="PresentationScoreComponent should show the presentation score checkbox" time="0.029">
    </testcase>
    <testcase classname="PresentationScoreComponent should hide the presentation score checkbox" name="PresentationScoreComponent should hide the presentation score checkbox" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="OrganizationSelectorComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:26" time="2.991" tests="1">
    <testcase classname="OrganizationSelectorComponent should load organizations and filter out the already assigned ones" name="OrganizationSelectorComponent should load organizations and filter out the already assigned ones" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="ItemCountComponent test" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:29" time="0.803" tests="4">
    <testcase classname="ItemCountComponent test UI logic tests should initialize with zero" name="ItemCountComponent test UI logic tests should initialize with zero" time="0.041">
    </testcase>
    <testcase classname="ItemCountComponent test UI logic tests should set range from 0 to 0, total 0 if there are no elements" name="ItemCountComponent test UI logic tests should set range from 0 to 0, total 0 if there are no elements" time="0.008">
    </testcase>
    <testcase classname="ItemCountComponent test UI logic tests should change the content on page change" name="ItemCountComponent test UI logic tests should change the content on page change" time="0.005">
    </testcase>
    <testcase classname="ItemCountComponent test UI logic tests should set the second number to totalItems if this is the last page which contains less than itemsPerPage items" name="ItemCountComponent test UI logic tests should set the second number to totalItems if this is the last page which contains less than itemsPerPage items" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="ExpandableSectionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:28" time="1.499" tests="3">
    <testcase classname="ExpandableSectionComponent should get correct key" name="ExpandableSectionComponent should get correct key" time="0.088">
    </testcase>
    <testcase classname="ExpandableSectionComponent should load state from local storage on init" name="ExpandableSectionComponent should load state from local storage on init" time="0.024">
    </testcase>
    <testcase classname="ExpandableSectionComponent should toggle state on toggle of collapsed" name="ExpandableSectionComponent should toggle state on toggle of collapsed" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseCategory" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:29" time="0.78" tests="6">
    <testcase classname="ExerciseCategory equals should return true if the two exercise categories are equal" name="ExerciseCategory equals should return true if the two exercise categories are equal" time="0.001">
    </testcase>
    <testcase classname="ExerciseCategory equals should return false if the two exercise categories are not equal" name="ExerciseCategory equals should return false if the two exercise categories are not equal" time="0.001">
    </testcase>
    <testcase classname="ExerciseCategory compare should return 0 if the two exercise categories&apos; display text is the same" name="ExerciseCategory compare should return 0 if the two exercise categories&apos; display text is the same" time="0.001">
    </testcase>
    <testcase classname="ExerciseCategory compare should return -1 if the first exercise category&apos;s display text is smaller than the second exercise category&apos;s display text" name="ExerciseCategory compare should return -1 if the first exercise category&apos;s display text is smaller than the second exercise category&apos;s display text" time="0.001">
    </testcase>
    <testcase classname="ExerciseCategory compare should return 1 if the first exercise category&apos;s display text is larger than the second exercise category&apos;s display text" name="ExerciseCategory compare should return 1 if the first exercise category&apos;s display text is larger than the second exercise category&apos;s display text" time="0">
    </testcase>
    <testcase classname="ExerciseCategory compare should return -1 if the first exercise category is undefined" name="ExerciseCategory compare should return -1 if the first exercise category is undefined" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="UnitCreationCardComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:28" time="1.757" tests="2">
    <testcase classname="UnitCreationCardComponent should initialize" name="UnitCreationCardComponent should initialize" time="0.17">
    </testcase>
    <testcase classname="UnitCreationCardComponent should emit creation card event" name="UnitCreationCardComponent should emit creation card event" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="DifficultyBadge" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:30" time="1.666" tests="5">
    <testcase classname="DifficultyBadge should show an info badge if no difficulty level should be shown" name="DifficultyBadge should show an info badge if no difficulty level should be shown" time="0.04">
    </testcase>
    <testcase classname="DifficultyBadge should show no badge if the exercise has no difficulty level" name="DifficultyBadge should show no badge if the exercise has no difficulty level" time="0.017">
    </testcase>
    <testcase classname="DifficultyBadge should a success badge for easy exercises" name="DifficultyBadge should a success badge for easy exercises" time="0.005">
    </testcase>
    <testcase classname="DifficultyBadge should a warning badge for medium difficulty exercises" name="DifficultyBadge should a warning badge for medium difficulty exercises" time="0.008">
    </testcase>
    <testcase classname="DifficultyBadge should a danger badge for hard exercises" name="DifficultyBadge should a danger badge for hard exercises" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="ScienceService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:30" time="1.502" tests="1">
    <testcase classname="ScienceService should send a request to the server to log event" name="ScienceService should send a request to the server to log event" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="TeamsExportButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:30" time="2.396" tests="1">
    <testcase classname="TeamsExportButtonComponent exportTeams should call export teams from team service when called" name="TeamsExportButtonComponent exportTeams should call export teams from team service when called" time="0.361">
    </testcase>
  </testsuite>
  <testsuite name="ProgrammingExerciseExampleSolutionRepoDownloadComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:30" time="2.784" tests="3">
    <testcase classname="ProgrammingExerciseExampleSolutionRepoDownloadComponent should initialize" name="ProgrammingExerciseExampleSolutionRepoDownloadComponent should initialize" time="0.075">
    </testcase>
    <testcase classname="ProgrammingExerciseExampleSolutionRepoDownloadComponent should not download when there is no exercise" name="ProgrammingExerciseExampleSolutionRepoDownloadComponent should not download when there is no exercise" time="0.041">
    </testcase>
    <testcase classname="ProgrammingExerciseExampleSolutionRepoDownloadComponent should download the repos" name="ProgrammingExerciseExampleSolutionRepoDownloadComponent should download the repos" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="AssessmentComplaintAlertComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:32" time="1.165" tests="4">
    <testcase classname="AssessmentComplaintAlertComponent should create" name="AssessmentComplaintAlertComponent should create" time="0.046">
    </testcase>
    <testcase classname="AssessmentComplaintAlertComponent should not show anything without a complaint" name="AssessmentComplaintAlertComponent should not show anything without a complaint" time="0.007">
    </testcase>
    <testcase classname="AssessmentComplaintAlertComponent should show complaint alert text for complaint" name="AssessmentComplaintAlertComponent should show complaint alert text for complaint" time="0.008">
    </testcase>
    <testcase classname="AssessmentComplaintAlertComponent should show complaint alert text for more feedback request" name="AssessmentComplaintAlertComponent should show complaint alert text for more feedback request" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="ScienceDirective" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:32" time="1.26" tests="1">
    <testcase classname="ScienceDirective should log event on click" name="ScienceDirective should log event on click" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="SystemNotificationManagementResolveService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:32" time="0.736" tests="2">
    <testcase classname="SystemNotificationManagementResolveService should search for notification by id" name="SystemNotificationManagementResolveService should search for notification by id" time="0.016">
    </testcase>
    <testcase classname="SystemNotificationManagementResolveService should return new notification if no id is given" name="SystemNotificationManagementResolveService should return new notification if no id is given" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="IrisLogoComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:33" time="0.881" tests="13">
    <testcase classname="IrisLogoComponent should have size IrisLogoSize.BIG and look IrisLogoLookDirection.RIGHT if nothing is provided" name="IrisLogoComponent should have size IrisLogoSize.BIG and look IrisLogoLookDirection.RIGHT if nothing is provided" time="0.069">
    </testcase>
    <testcase classname="IrisLogoComponent should correctly set the logo size to fluid" name="IrisLogoComponent should correctly set the logo size to fluid" time="0.012">
    </testcase>
    <testcase classname="IrisLogoComponent should correctly set the logo size to text" name="IrisLogoComponent should correctly set the logo size to text" time="0.011">
    </testcase>
    <testcase classname="IrisLogoComponent should correctly set the logo size to small" name="IrisLogoComponent should correctly set the logo size to small" time="0.007">
    </testcase>
    <testcase classname="IrisLogoComponent should correctly set the logo size to medium" name="IrisLogoComponent should correctly set the logo size to medium" time="0.011">
    </testcase>
    <testcase classname="IrisLogoComponent should correctly set the logo size to big" name="IrisLogoComponent should correctly set the logo size to big" time="0.012">
    </testcase>
    <testcase classname="IrisLogoComponent should correctly set the look direction to left" name="IrisLogoComponent should correctly set the look direction to left" time="0.023">
    </testcase>
    <testcase classname="IrisLogoComponent should correctly set the look direction to right" name="IrisLogoComponent should correctly set the look direction to right" time="0.022">
    </testcase>
    <testcase classname="IrisLogoComponent should return correct class list for size text" name="IrisLogoComponent should return correct class list for size text" time="0.014">
    </testcase>
    <testcase classname="IrisLogoComponent should return correct class list for size small" name="IrisLogoComponent should return correct class list for size small" time="0.013">
    </testcase>
    <testcase classname="IrisLogoComponent should return correct class list for size medium" name="IrisLogoComponent should return correct class list for size medium" time="0.023">
    </testcase>
    <testcase classname="IrisLogoComponent should return correct class list for size big" name="IrisLogoComponent should return correct class list for size big" time="0.016">
    </testcase>
    <testcase classname="IrisLogoComponent should return correct class list for size fluid" name="IrisLogoComponent should return correct class list for size fluid" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="SearchFilterComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:33" time="2.154" tests="3">
    <testcase classname="SearchFilterComponent should create" name="SearchFilterComponent should create" time="0.403">
    </testcase>
    <testcase classname="SearchFilterComponent should call resetSearchValue when the reset icon is clicked" name="SearchFilterComponent should call resetSearchValue when the reset icon is clicked" time="0.22">
    </testcase>
    <testcase classname="SearchFilterComponent should emit the search value on keyup" name="SearchFilterComponent should emit the search value on keyup" time="0.183">
    </testcase>
  </testsuite>
  <testsuite name="OrganizationManagementResolve" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:34" time="1.51" tests="2">
    <testcase classname="OrganizationManagementResolve should search for organization by id" name="OrganizationManagementResolve should search for organization by id" time="0.013">
    </testcase>
    <testcase classname="OrganizationManagementResolve should return new organization if no id is given" name="OrganizationManagementResolve should return new organization if no id is given" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="LocalVCGuard" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:35" time="1.021" tests="3">
    <testcase classname="LocalVCGuard should allow access if PROFILE_LOCALVC is active" name="LocalVCGuard should allow access if PROFILE_LOCALVC is active" time="0.007">
    </testcase>
    <testcase classname="LocalVCGuard should not allow access if PROFILE_LOCALVC is not active" name="LocalVCGuard should not allow access if PROFILE_LOCALVC is not active" time="0.003">
    </testcase>
    <testcase classname="LocalVCGuard should not allow access and navigate to &quot;/&quot; if an error occurs while fetching profile information" name="LocalVCGuard should not allow access and navigate to &quot;/&quot; if an error occurs while fetching profile information" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="HealthModalComponentTest" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:33" time="3.11" tests="5">
    <testcase classname="HealthModalComponentTest should convert basic types to string" name="HealthModalComponentTest should convert basic types to string" time="0.117">
    </testcase>
    <testcase classname="HealthModalComponentTest passed object should still be parsable" name="HealthModalComponentTest passed object should still be parsable" time="0.013">
    </testcase>
    <testcase classname="HealthModalComponentTest should parse GB-value to String" name="HealthModalComponentTest should parse GB-value to String" time="0.009">
    </testcase>
    <testcase classname="HealthModalComponentTest should parse MB-value to String" name="HealthModalComponentTest should parse MB-value to String" time="0.009">
    </testcase>
    <testcase classname="HealthModalComponentTest should dismiss the modal if close button is clicked" name="HealthModalComponentTest should dismiss the modal if close button is clicked" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="StudentsUploadImagesButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:33" time="4.144" tests="1">
    <testcase classname="StudentsUploadImagesButtonComponent should initialize" name="StudentsUploadImagesButtonComponent should initialize" time="0.213">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupsCourseInformationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:36" time="1.412" tests="2">
    <testcase classname="TutorialGroupsCourseInformationComponent should create" name="TutorialGroupsCourseInformationComponent should create" time="0.128">
    </testcase>
    <testcase classname="TutorialGroupsCourseInformationComponent should add the number of registered students together" name="TutorialGroupsCourseInformationComponent should add the number of registered students together" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="CourseTutorialGroupCardComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:36" time="1.225" tests="1">
    <testcase classname="CourseTutorialGroupCardComponent should create" name="CourseTutorialGroupCardComponent should create" time="0.097">
    </testcase>
  </testsuite>
  <testsuite name="Delete Dialog Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:35" time="2.498" tests="1">
    <testcase classname="Delete Dialog Service should open delete dialog" name="Delete Dialog Service should open delete dialog" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Assessment progress label test" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:38" time="0.943" tests="4">
    <testcase classname="Assessment progress label test should show no submission when the array is empty" name="Assessment progress label test should show no submission when the array is empty" time="0.033">
    </testcase>
    <testcase classname="Assessment progress label test should ignore no assessed submissions" name="Assessment progress label test should ignore no assessed submissions" time="0.005">
    </testcase>
    <testcase classname="Assessment progress label test should ignore automatic assessment submissions" name="Assessment progress label test should ignore automatic assessment submissions" time="0.005">
    </testcase>
    <testcase classname="Assessment progress label test should count the manual submissions" name="Assessment progress label test should count the manual submissions" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="EmojiPickerComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:38" time="1.555" tests="2">
    <testcase classname="EmojiPickerComponent should react to theme changes" name="EmojiPickerComponent should react to theme changes" time="0.248">
    </testcase>
    <testcase classname="EmojiPickerComponent should emit an event on emoji select" name="EmojiPickerComponent should emit an event on emoji select" time="0.136">
    </testcase>
  </testsuite>
  <testsuite name="DataExportConfirmationDialogService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:39" time="1.858" tests="1">
    <testcase classname="DataExportConfirmationDialogService should open confirmation dialog" name="DataExportConfirmationDialogService should open confirmation dialog" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="ApollonDiagramImportDialog Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:38" time="3.791" tests="3">
    <testcase classname="ApollonDiagramImportDialog Component handleDetailOpen" name="ApollonDiagramImportDialog Component handleDetailOpen" time="0.205">
    </testcase>
    <testcase classname="ApollonDiagramImportDialog Component handleDetailClose" name="ApollonDiagramImportDialog Component handleDetailClose" time="0.021">
    </testcase>
    <testcase classname="ApollonDiagramImportDialog Component closeModal" name="ApollonDiagramImportDialog Component closeModal" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="External Submission Dialog" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:40" time="2.252" tests="1">
    <testcase classname="External Submission Dialog should open external submission dialog on click" name="External Submission Dialog should open external submission dialog on click" time="0.066">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseUnitComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:37" time="4.703" tests="1">
    <testcase classname="ExerciseUnitComponent should initialize and set input of course exercise row correctly" name="ExerciseUnitComponent should initialize and set input of course exercise row correctly" time="0.643">
    </testcase>
  </testsuite>
  <testsuite name="NotificationInterceptor" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:42" time="1.038" tests="2">
    <testcase classname="NotificationInterceptor should create a success alert if alert headers are given" name="NotificationInterceptor should create a success alert if alert headers are given" time="0.01">
    </testcase>
    <testcase classname="NotificationInterceptor should not spawn an alert if headers are missing" name="NotificationInterceptor should not spawn an alert if headers are missing" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="ModelingExplanationEditorComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:42" time="0.819" tests="2">
    <testcase classname="ModelingExplanationEditorComponent should initialize" name="ModelingExplanationEditorComponent should initialize" time="0.049">
    </testcase>
    <testcase classname="ModelingExplanationEditorComponent should change explanation value bidirectionally between component and template" name="ModelingExplanationEditorComponent should change explanation value bidirectionally between component and template" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="SshUserSettingsFingerprintsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:41" time="2.476" tests="1">
    <testcase classname="SshUserSettingsFingerprintsComponent should display fingerprints" name="SshUserSettingsFingerprintsComponent should display fingerprints" time="0.054">
    </testcase>
  </testsuite>
  <testsuite name="CourseAccessStorageService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:42" time="0.704" tests="2">
    <testcase classname="CourseAccessStorageService should store accessed course" name="CourseAccessStorageService should store accessed course" time="0.019">
    </testcase>
    <testcase classname="CourseAccessStorageService should retrieve last accessed courses and remove older courses" name="CourseAccessStorageService should retrieve last accessed courses and remove older courses" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="ExamModePickerComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:43" time="1.911" tests="3">
    <testcase classname="ExamModePickerComponent should be in readonly mode" name="ExamModePickerComponent should be in readonly mode" time="0.109">
    </testcase>
    <testcase classname="ExamModePickerComponent should set exam mode test" name="ExamModePickerComponent should set exam mode test" time="0.027">
    </testcase>
    <testcase classname="ExamModePickerComponent should set exam mode test false" name="ExamModePickerComponent should set exam mode test false" time="0.036">
    </testcase>
  </testsuite>
  <testsuite name="CompetencyRings" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:43" time="2.07" tests="3">
    <testcase classname="CompetencyRings should calculate percentage values" name="CompetencyRings should calculate percentage values" time="0.139">
    </testcase>
    <testcase classname="CompetencyRings should restrict number to percentage range" name="CompetencyRings should restrict number to percentage range" time="0.062">
    </testcase>
    <testcase classname="CompetencyRings should visualize using progress bars" name="CompetencyRings should visualize using progress bars" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="JhiCopyIconButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:43" time="2.2" tests="4">
    <testcase classname="JhiCopyIconButtonComponent should initialize" name="JhiCopyIconButtonComponent should initialize" time="0.108">
    </testcase>
    <testcase classname="JhiCopyIconButtonComponent should not be hidden with text" name="JhiCopyIconButtonComponent should not be hidden with text" time="0.058">
    </testcase>
    <testcase classname="JhiCopyIconButtonComponent should be hidden if text is empty" name="JhiCopyIconButtonComponent should be hidden if text is empty" time="0.066">
    </testcase>
    <testcase classname="JhiCopyIconButtonComponent should show it was copied on click" name="JhiCopyIconButtonComponent should show it was copied on click" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="GitDiffFilePanelTitleComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:45" time="1.293" tests="4">
    <testcase classname="GitDiffFilePanelTitleComponent should correctly set title and status" name="GitDiffFilePanelTitleComponent should correctly set title and status" time="0.036">
    </testcase>
    <testcase classname="GitDiffFilePanelTitleComponent should correctly set title and status" name="GitDiffFilePanelTitleComponent should correctly set title and status" time="0.023">
    </testcase>
    <testcase classname="GitDiffFilePanelTitleComponent should correctly set title and status" name="GitDiffFilePanelTitleComponent should correctly set title and status" time="0.006">
    </testcase>
    <testcase classname="GitDiffFilePanelTitleComponent should correctly set title and status" name="GitDiffFilePanelTitleComponent should correctly set title and status" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="AbstractScienceComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:45" time="1.212" tests="1">
    <testcase classname="AbstractScienceComponent should log event on call" name="AbstractScienceComponent should log event on call" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="PostTagSelectorComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:43" time="3.57" tests="2">
    <testcase classname="PostTagSelectorComponent should be initialized with empty list of tags" name="PostTagSelectorComponent should be initialized with empty list of tags" time="0.059">
    </testcase>
    <testcase classname="PostTagSelectorComponent should be initialized with existing list of tags" name="PostTagSelectorComponent should be initialized with existing list of tags" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="StandardizedCompetencyDetailComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:45" time="2.284" tests="2">
    <testcase classname="StandardizedCompetencyDetailComponent should initialize" name="StandardizedCompetencyDetailComponent should initialize" time="0.171">
    </testcase>
    <testcase classname="StandardizedCompetencyDetailComponent should close" name="StandardizedCompetencyDetailComponent should close" time="0.067">
    </testcase>
  </testsuite>
  <testsuite name="ProfilePictureComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:47" time="1.218" tests="4">
    <testcase classname="ProfilePictureComponent should create" name="ProfilePictureComponent should create" time="0.05">
    </testcase>
    <testcase classname="ProfilePictureComponent should update initials on change" name="ProfilePictureComponent should update initials on change" time="0.009">
    </testcase>
    <testcase classname="ProfilePictureComponent should update default image on change" name="ProfilePictureComponent should update default image on change" time="0.006">
    </testcase>
    <testcase classname="ProfilePictureComponent should update image size and font size on change" name="ProfilePictureComponent should update image size and font size on change" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="CodeEditorFileBrowserBadgeComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:46" time="2.939" tests="4">
    <testcase classname="CodeEditorFileBrowserBadgeComponent should correctly display the tooltip for a FEEDBACK_SUGGESTION badge" name="CodeEditorFileBrowserBadgeComponent should correctly display the tooltip for a FEEDBACK_SUGGESTION badge" time="0.027">
    </testcase>
    <testcase classname="CodeEditorFileBrowserBadgeComponent should return faLightbulb icon for a FEEDBACK_SUGGESTION badge" name="CodeEditorFileBrowserBadgeComponent should return faLightbulb icon for a FEEDBACK_SUGGESTION badge" time="0.013">
    </testcase>
    <testcase classname="CodeEditorFileBrowserBadgeComponent should not have an icon for an unknown badge type" name="CodeEditorFileBrowserBadgeComponent should not have an icon for an unknown badge type" time="0.007">
    </testcase>
    <testcase classname="CodeEditorFileBrowserBadgeComponent should not have a tooltip for an unknown badge type" name="CodeEditorFileBrowserBadgeComponent should not have a tooltip for an unknown badge type" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="InformationBoxComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:47" time="2.175" tests="3">
    <testcase classname="InformationBoxComponent should create" name="InformationBoxComponent should create" time="0.019">
    </testcase>
    <testcase classname="InformationBoxComponent should display the title" name="InformationBoxComponent should display the title" time="0.022">
    </testcase>
    <testcase classname="InformationBoxComponent should display the content" name="InformationBoxComponent should display the content" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="RemoveAuxiliaryRepositoryButton" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:47" time="3.138" tests="2">
    <testcase classname="RemoveAuxiliaryRepositoryButton should initialize" name="RemoveAuxiliaryRepositoryButton should initialize" time="0.089">
    </testcase>
    <testcase classname="RemoveAuxiliaryRepositoryButton should remove auxiliary repository" name="RemoveAuxiliaryRepositoryButton should remove auxiliary repository" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="Course Conversations Code Of Conduct Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:48" time="1.362" tests="1">
    <testcase classname="Course Conversations Code Of Conduct Component should initialize" name="Course Conversations Code Of Conduct Component should initialize" time="0.079">
    </testcase>
  </testsuite>
  <testsuite name="UpcomingExamsAndExercisesComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:49" time="1.021" tests="2">
    <testcase classname="UpcomingExamsAndExercisesComponent should render a component from the admin module" name="UpcomingExamsAndExercisesComponent should render a component from the admin module" time="0.096">
    </testcase>
    <testcase classname="UpcomingExamsAndExercisesComponent onInit should call load exercises and exams on init" name="UpcomingExamsAndExercisesComponent onInit should call load exercises and exams on init" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="DocumentationButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:49" time="1.363" tests="2">
    <testcase classname="DocumentationButtonComponent should initialize" name="DocumentationButtonComponent should initialize" time="0.05">
    </testcase>
    <testcase classname="DocumentationButtonComponent should return the correct translation string" name="DocumentationButtonComponent should return the correct translation string" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="ChannelIconComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:50" time="0.929" tests="4">
    <testcase classname="ChannelIconComponent should create" name="ChannelIconComponent should create" time="0.071">
    </testcase>
    <testcase classname="ChannelIconComponent should return faBullhorn when isAnnouncementChannel is true" name="ChannelIconComponent should return faBullhorn when isAnnouncementChannel is true" time="0.017">
    </testcase>
    <testcase classname="ChannelIconComponent should return faHashtag when isPublic is true, and is not announcement" name="ChannelIconComponent should return faHashtag when isPublic is true, and is not announcement" time="0.02">
    </testcase>
    <testcase classname="ChannelIconComponent should return faLock when isPublic is false, and is not announcement" name="ChannelIconComponent should return faLock when isPublic is false, and is not announcement" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="TestCasePassedBuildsChartComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:50" time="1.748" tests="4">
    <testcase classname="TestCasePassedBuildsChartComponent should show a tooltip with &quot;0% passed, 100% not executed&quot; when receiving no stats" name="TestCasePassedBuildsChartComponent should show a tooltip with &quot;0% passed, 100% not executed&quot; when receiving no stats" time="0.03">
    </testcase>
    <testcase classname="TestCasePassedBuildsChartComponent should show a tooltip with &quot;40% passed, 60% failed&quot; when receiving corresponding stats" name="TestCasePassedBuildsChartComponent should show a tooltip with &quot;40% passed, 60% failed&quot; when receiving corresponding stats" time="0.011">
    </testcase>
    <testcase classname="TestCasePassedBuildsChartComponent should show a tooltip with &quot;100% passed, 0% failed&quot; when receiving corresponding stats" name="TestCasePassedBuildsChartComponent should show a tooltip with &quot;100% passed, 0% failed&quot; when receiving corresponding stats" time="0.008">
    </testcase>
    <testcase classname="TestCasePassedBuildsChartComponent should show the default tooltip when given invalid inputs" name="TestCasePassedBuildsChartComponent should show the default tooltip when given invalid inputs" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="UsersImportButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:50" time="2.176" tests="1">
    <testcase classname="UsersImportButtonComponent should initialize" name="UsersImportButtonComponent should initialize" time="0.373">
    </testcase>
  </testsuite>
  <testsuite name="Build Log Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:51" time="2.019" tests="2">
    <testcase classname="Build Log Service Service methods should return a specific results build logs" name="Build Log Service Service methods should return a specific results build logs" time="0.011">
    </testcase>
    <testcase classname="Build Log Service Service methods should not pass request parameters if result ID not specified" name="Build Log Service Service methods should not pass request parameters if result ID not specified" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="BuildAgentClearDistributedDataComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:51" time="2.223" tests="3">
    <testcase classname="BuildAgentClearDistributedDataComponent should dismiss on cancel" name="BuildAgentClearDistributedDataComponent should dismiss on cancel" time="0.042">
    </testcase>
    <testcase classname="BuildAgentClearDistributedDataComponent should have button enabled when confirmation text is correct" name="BuildAgentClearDistributedDataComponent should have button enabled when confirmation text is correct" time="0.015">
    </testcase>
    <testcase classname="BuildAgentClearDistributedDataComponent should close on confirm" name="BuildAgentClearDistributedDataComponent should close on confirm" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="ExamUtils" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:53" time="1.167" tests="3">
    <testcase classname="ExamUtils isExamResultPublished should always be true for test runs" name="ExamUtils isExamResultPublished should always be true for test runs" time="0.013">
    </testcase>
    <testcase classname="ExamUtils isExamResultPublished should be false if publishReleaseDate is in the future" name="ExamUtils isExamResultPublished should be false if publishReleaseDate is in the future" time="0.008">
    </testcase>
    <testcase classname="ExamUtils isExamResultPublished should be true if publishReleaseDate is in the past" name="ExamUtils isExamResultPublished should be true if publishReleaseDate is in the past" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="CompetencyNodeComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:51" time="3.486" tests="5">
    <testcase classname="CompetencyNodeComponent should initialize and emit size update" name="CompetencyNodeComponent should initialize and emit size update" time="0.045">
    </testcase>
    <testcase classname="CompetencyNodeComponent should check if competency is green" name="CompetencyNodeComponent should check if competency is green" time="0.01">
    </testcase>
    <testcase classname="CompetencyNodeComponent should check if competency is yellow" name="CompetencyNodeComponent should check if competency is yellow" time="0.013">
    </testcase>
    <testcase classname="CompetencyNodeComponent should check if competency is gray" name="CompetencyNodeComponent should check if competency is gray" time="0.014">
    </testcase>
    <testcase classname="CompetencyNodeComponent should set dimensions" name="CompetencyNodeComponent should set dimensions" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="UserManagementResolve" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:54" time="1.022" tests="2">
    <testcase classname="UserManagementResolve should findUser the user" name="UserManagementResolve should findUser the user" time="0.018">
    </testcase>
    <testcase classname="UserManagementResolve should should return new user if no login is given" name="UserManagementResolve should should return new user if no login is given" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupRowComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:53" time="2.194" tests="1">
    <testcase classname="TutorialGroupRowComponent should create" name="TutorialGroupRowComponent should create" time="0.319">
    </testcase>
  </testsuite>
  <testsuite name="PostingButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:54" time="2.2" tests="4">
    <testcase classname="PostingButtonComponent should have icon shown if property set" name="PostingButtonComponent should have icon shown if property set" time="0.061">
    </testcase>
    <testcase classname="PostingButtonComponent should not have icon shown if property not set" name="PostingButtonComponent should not have icon shown if property not set" time="0.064">
    </testcase>
    <testcase classname="PostingButtonComponent should show spinner if loading" name="PostingButtonComponent should show spinner if loading" time="0.038">
    </testcase>
    <testcase classname="PostingButtonComponent should not show spinner if not loading" name="PostingButtonComponent should not show spinner if not loading" time="0.052">
    </testcase>
  </testsuite>
  <testsuite name="IncludedInScoreBadge" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:54" time="1.913" tests="4">
    <testcase classname="IncludedInScoreBadge should show no badge if no information about score inclusion is known" name="IncludedInScoreBadge should show no badge if no information about score inclusion is known" time="0.062">
    </testcase>
    <testcase classname="IncludedInScoreBadge should show a warning badge if the score is included as bonus" name="IncludedInScoreBadge should show a warning badge if the score is included as bonus" time="0.014">
    </testcase>
    <testcase classname="IncludedInScoreBadge should show a success badge if the score is fully included" name="IncludedInScoreBadge should show a success badge if the score is fully included" time="0.011">
    </testcase>
    <testcase classname="IncludedInScoreBadge should show a danger badge if the score is not included" name="IncludedInScoreBadge should show a danger badge if the score is not included" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="TableEditableFieldComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:55" time="1.165" tests="2">
    <testcase classname="TableEditableFieldComponent should render value as provided" name="TableEditableFieldComponent should render value as provided" time="0.126">
    </testcase>
    <testcase classname="TableEditableFieldComponent should show input and fire update event on enter" name="TableEditableFieldComponent should show input and fire update event on enter" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="User Management Detail Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:56" time="1.117" tests="1">
    <testcase classname="User Management Detail Component onInit should call load all on init" name="User Management Detail Component onInit should call load all on init" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="MetricsSystemComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:55" time="2.526" tests="1">
    <testcase classname="MetricsSystemComponent should convert milliseconds to durations" name="MetricsSystemComponent should convert milliseconds to durations" time="0.036">
    </testcase>
  </testsuite>
  <testsuite name="Modeling Exercise Group Cell Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:56" time="1.34" tests="2">
    <testcase classname="Modeling Exercise Group Cell Component should display diagram type" name="Modeling Exercise Group Cell Component should display diagram type" time="0.065">
    </testcase>
    <testcase classname="Modeling Exercise Group Cell Component should not display anything for other exercise types" name="Modeling Exercise Group Cell Component should not display anything for other exercise types" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:57" time="0.76" tests="2">
    <testcase classname="FeedbackService should filter feedbacks by test ids" name="FeedbackService should filter feedbacks by test ids" time="0.007">
    </testcase>
    <testcase classname="FeedbackService should get long feedback text from server" name="FeedbackService should get long feedback text from server" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="CourseForImportDtoPagingService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:57" time="1.199" tests="1">
    <testcase classname="CourseForImportDtoPagingService should get a paginated list of courses" name="CourseForImportDtoPagingService should get a paginated list of courses" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="findItem" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:58" time="1.675" tests="6">
    <testcase classname="findItem should not find item if root is undefined" name="findItem should not find item if root is undefined" time="0.004">
    </testcase>
    <testcase classname="findItem should find item" name="findItem should find item" time="0.001">
    </testcase>
    <testcase classname="findItem should not find item" name="findItem should not find item" time="0.001">
    </testcase>
    <testcase classname="findItemInList should not find item if list is undefined" name="findItemInList should not find item if list is undefined" time="0.001">
    </testcase>
    <testcase classname="findItemInList should find item" name="findItemInList should find item" time="0.001">
    </testcase>
    <testcase classname="findItemInList should not find item" name="findItemInList should not find item" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="User Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:58" time="0.83" tests="3">
    <testcase classname="User Service Service methods should call correct URL" name="User Service Service methods should call correct URL" time="0.011">
    </testcase>
    <testcase classname="User Service Service methods should return User" name="User Service Service methods should return User" time="0.005">
    </testcase>
    <testcase classname="User Service Service methods should propagate not found response" name="User Service Service methods should propagate not found response" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="TextExercise Row Buttons Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:58" time="1.78" tests="1">
    <testcase classname="TextExercise Row Buttons Component should delete exercise" name="TextExercise Row Buttons Component should delete exercise" time="0.052">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseUpdateNotificationComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:59" time="1.364" tests="2">
    <testcase classname="ExerciseUpdateNotificationComponent should emit event on inputChange" name="ExerciseUpdateNotificationComponent should emit event on inputChange" time="0.268">
    </testcase>
    <testcase classname="ExerciseUpdateNotificationComponent should have the correct minlength, type, class, name, and id" name="ExerciseUpdateNotificationComponent should have the correct minlength, type, class, name, and id" time="0.103">
    </testcase>
  </testsuite>
  <testsuite name="DetailOverviewNavigationBar" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:00" time="0.96" tests="2">
    <testcase classname="DetailOverviewNavigationBar should initialize" name="DetailOverviewNavigationBar should initialize" time="0.053">
    </testcase>
    <testcase classname="DetailOverviewNavigationBar should scroll into view" name="DetailOverviewNavigationBar should scroll into view" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="CollapsableAssessmentInstructionsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:56" time="4.662" tests="1">
    <testcase classname="CollapsableAssessmentInstructionsComponent should receive input properties correctly" name="CollapsableAssessmentInstructionsComponent should receive input properties correctly" time="0.346">
    </testcase>
  </testsuite>
  <testsuite name="ExternalCloningService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:01" time="0.721" tests="5">
    <testcase classname="ExternalCloningService should build source tree url correctly" name="ExternalCloningService should build source tree url correctly" time="0.008">
    </testcase>
    <testcase classname="ExternalCloningService should return undefined when cloneUrl is undefined" name="ExternalCloningService should return undefined when cloneUrl is undefined" time="0.003">
    </testcase>
    <testcase classname="ExternalCloningService should build ide deeplink url correctly" name="ExternalCloningService should build ide deeplink url correctly" time="0.004">
    </testcase>
    <testcase classname="ExternalCloningService should return undefined when {cloneUrl} is not contained in ide deeplink" name="ExternalCloningService should return undefined when {cloneUrl} is not contained in ide deeplink" time="0.003">
    </testcase>
    <testcase classname="ExternalCloningService should return undefined when cloneUrl is undefined but ide is defined" name="ExternalCloningService should return undefined when cloneUrl is undefined but ide is defined" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="ScoresStorageService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:01" time="0.656" tests="2">
    <testcase classname="ScoresStorageService should filter the correct result from the stored participation results" name="ScoresStorageService should filter the correct result from the stored participation results" time="0.008">
    </testcase>
    <testcase classname="ScoresStorageService should return an undefined participation result if the participation does not exist" name="ScoresStorageService should return an undefined participation result if the participation does not exist" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Exercise Scores Chart Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:01" time="0.812" tests="1">
    <testcase classname="Exercise Scores Chart Service should find all by course id" name="Exercise Scores Chart Service should find all by course id" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="AdditionalFeedbackComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:25:59" time="2.883" tests="2">
    <testcase classname="AdditionalFeedbackComponent should initialize" name="AdditionalFeedbackComponent should initialize" time="0.129">
    </testcase>
    <testcase classname="AdditionalFeedbackComponent should translate points" name="AdditionalFeedbackComponent should translate points" time="0.044">
    </testcase>
  </testsuite>
  <testsuite name="ChartExerciseTypeFilter" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:01" time="0.876" tests="1">
    <testcase classname="ChartExerciseTypeFilter should setup and execute exercise type filter correctly" name="ChartExerciseTypeFilter should setup and execute exercise type filter correctly" time="0.084">
    </testcase>
  </testsuite>
  <testsuite name="QuizReEvaluateService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:02" time="2.502" tests="1">
    <testcase classname="QuizReEvaluateService should send reevaluate request correctly" name="QuizReEvaluateService should send reevaluate request correctly" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="TableEditableFieldComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:02" time="2.604" tests="1">
    <testcase classname="TableEditableFieldComponent should render checkbox with its state as the boolean value provided and send an update on change" name="TableEditableFieldComponent should render checkbox with its state as the boolean value provided and send an update on change" time="0.053">
    </testcase>
  </testsuite>
  <testsuite name="AddAuxiliaryRepositoryButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:02" time="2.76" tests="2">
    <testcase classname="AddAuxiliaryRepositoryButtonComponent should initialize" name="AddAuxiliaryRepositoryButtonComponent should initialize" time="0.079">
    </testcase>
    <testcase classname="AddAuxiliaryRepositoryButtonComponent should add auxiliary repository" name="AddAuxiliaryRepositoryButtonComponent should add auxiliary repository" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="CustomPatternValidatorDirective" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:04" time="0.904" tests="2">
    <testcase classname="CustomPatternValidatorDirective should accept correct patterns" name="CustomPatternValidatorDirective should accept correct patterns" time="0.069">
    </testcase>
    <testcase classname="CustomPatternValidatorDirective should set error on incorrect patterns" name="CustomPatternValidatorDirective should set error on incorrect patterns" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="UnsavedChangesWarningComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:02" time="4.016" tests="3">
    <testcase classname="UnsavedChangesWarningComponent should close modal on clicking yes" name="UnsavedChangesWarningComponent should close modal on clicking yes" time="0.106">
    </testcase>
    <testcase classname="UnsavedChangesWarningComponent should dismiss modal on clicking no" name="UnsavedChangesWarningComponent should dismiss modal on clicking no" time="0.057">
    </testcase>
    <testcase classname="UnsavedChangesWarningComponent should dismiss modal on clicking close" name="UnsavedChangesWarningComponent should dismiss modal on clicking close" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="Reaction Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:05" time="0.829" tests="2">
    <testcase classname="Reaction Service Service methods should create a Reaction" name="Reaction Service Service methods should create a Reaction" time="0.009">
    </testcase>
    <testcase classname="Reaction Service Service methods should delete a Reaction" name="Reaction Service Service methods should delete a Reaction" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="CourseCompetencyRelationNodeComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:05" time="1.286" tests="1">
    <testcase classname="CourseCompetencyRelationNodeComponent should initialize and emit size update" name="CourseCompetencyRelationNodeComponent should initialize and emit size update" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Logs Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:06" time="0.788" tests="3">
    <testcase classname="Logs Service Service methods should call correct URL" name="Logs Service Service methods should call correct URL" time="0.019">
    </testcase>
    <testcase classname="Logs Service Service methods should return Logs" name="Logs Service Service methods should return Logs" time="0.005">
    </testcase>
    <testcase classname="Logs Service Service methods should change log level" name="Logs Service Service methods should change log level" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="ConfirmFeedbackChannelCreationModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:06" time="1.299" tests="3">
    <testcase classname="ConfirmFeedbackChannelCreationModalComponent should initialize with the provided affectedStudentsCount" name="ConfirmFeedbackChannelCreationModalComponent should initialize with the provided affectedStudentsCount" time="0.025">
    </testcase>
    <testcase classname="ConfirmFeedbackChannelCreationModalComponent should call close on activeModal with true when confirm is triggered" name="ConfirmFeedbackChannelCreationModalComponent should call close on activeModal with true when confirm is triggered" time="0.008">
    </testcase>
    <testcase classname="ConfirmFeedbackChannelCreationModalComponent should call dismiss on activeModal when dismiss is triggered" name="ConfirmFeedbackChannelCreationModalComponent should call dismiss on activeModal when dismiss is triggered" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="LectureWizardPeriodComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:06" time="2.141" tests="1">
    <testcase classname="LectureWizardPeriodComponent should initialize" name="LectureWizardPeriodComponent should initialize" time="0.243">
    </testcase>
  </testsuite>
  <testsuite name="TaxonomySelectComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:08" time="1.382" tests="2">
    <testcase classname="TaxonomySelectComponent should initialize" name="TaxonomySelectComponent should initialize" time="0.094">
    </testcase>
    <testcase classname="TaxonomySelectComponent should set taxonomy correcty" name="TaxonomySelectComponent should set taxonomy correcty" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="Audits Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:08" time="0.784" tests="2">
    <testcase classname="Audits Service Service methods should return Audits" name="Audits Service Service methods should return Audits" time="0.016">
    </testcase>
    <testcase classname="Audits Service Service methods should propagate not found response" name="Audits Service Service methods should propagate not found response" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="CoursePrerequisitesButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:07" time="2.966" tests="1">
    <testcase classname="CoursePrerequisitesButtonComponent should open modal with prerequisites for course" name="CoursePrerequisitesButtonComponent should open modal with prerequisites for course" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="IrisGuard" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:09" time="1.095" tests="2">
    <testcase classname="IrisGuard should allow access if PROFILE_IRIS is active" name="IrisGuard should allow access if PROFILE_IRIS is active" time="0.029">
    </testcase>
    <testcase classname="IrisGuard should not allow access if PROFILE_IRIS is not active" name="IrisGuard should not allow access if PROFILE_IRIS is not active" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="CourseFaqAccordionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:09" time="2.49" tests="1">
    <testcase classname="CourseFaqAccordionComponent should initialize" name="CourseFaqAccordionComponent should initialize" time="0.19">
    </testcase>
  </testsuite>
  <testsuite name="WordCountService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:10" time="1.386" tests="8">
    <testcase classname="WordCountService should be created" name="WordCountService should be created" time="0.01">
    </testcase>
    <testcase classname="WordCountService Text should contain 63 words" name="WordCountService Text should contain 63 words" time="0.001">
    </testcase>
    <testcase classname="WordCountService Empty Text should contain 0 words" name="WordCountService Empty Text should contain 0 words" time="0">
    </testcase>
    <testcase classname="WordCountService Null should contain 0 words" name="WordCountService Null should contain 0 words" time="0.007">
    </testcase>
    <testcase classname="WordCountService Undefined should contain 0 words" name="WordCountService Undefined should contain 0 words" time="0.001">
    </testcase>
    <testcase classname="WordCountService Null should contain 0 characters" name="WordCountService Null should contain 0 characters" time="0.001">
    </testcase>
    <testcase classname="WordCountService Undefined should contain 0 characters" name="WordCountService Undefined should contain 0 characters" time="0">
    </testcase>
    <testcase classname="WordCountService &quot;Hello&quot; should contain 5 characters" name="WordCountService &quot;Hello&quot; should contain 5 characters" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="debounce" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:10" time="2.752" tests="4">
    <testcase classname="debounce calls the callback after the specified delay" name="debounce calls the callback after the specified delay" time="0.002">
    </testcase>
    <testcase classname="debounce resets the delay if called again within the delay period" name="debounce resets the delay if called again within the delay period" time="0.004">
    </testcase>
    <testcase classname="debounce calls the callback with the correct arguments" name="debounce calls the callback with the correct arguments" time="0.001">
    </testcase>
    <testcase classname="debounce handles multiple calls correctly" name="debounce handles multiple calls correctly" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="StudentExamSummaryComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:05" time="7.505" tests="1">
    <testcase classname="StudentExamSummaryComponent should initialize" name="StudentExamSummaryComponent should initialize" time="2.504">
    </testcase>
  </testsuite>
  <testsuite name="SwitchEditModeButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:12" time="1.803" tests="2">
    <testcase classname="SwitchEditModeButtonComponent should initialize" name="SwitchEditModeButtonComponent should initialize" time="0.046">
    </testcase>
    <testcase classname="SwitchEditModeButtonComponent should emit to call passed method when button is clicked" name="SwitchEditModeButtonComponent should emit to call passed method when button is clicked" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="BuildAgentPauseAllModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:12" time="1.637" tests="2">
    <testcase classname="BuildAgentPauseAllModalComponent should dismiss on cancel" name="BuildAgentPauseAllModalComponent should dismiss on cancel" time="0.033">
    </testcase>
    <testcase classname="BuildAgentPauseAllModalComponent should close on confirm" name="BuildAgentPauseAllModalComponent should close on confirm" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="LtiCourseCardComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:13" time="0.794" tests="3">
    <testcase classname="LtiCourseCardComponent should create" name="LtiCourseCardComponent should create" time="0.056">
    </testcase>
    <testcase classname="LtiCourseCardComponent should set default color if no color is specified in course" name="LtiCourseCardComponent should set default color if no color is specified in course" time="0.018">
    </testcase>
    <testcase classname="LtiCourseCardComponent should use course color if specified" name="LtiCourseCardComponent should use course color if specified" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="File Upload Exercise Group Cell Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:13" time="0.847" tests="2">
    <testcase classname="File Upload Exercise Group Cell Component should display file pattern" name="File Upload Exercise Group Cell Component should display file pattern" time="0.061">
    </testcase>
    <testcase classname="File Upload Exercise Group Cell Component should not display anything for other exercise types" name="File Upload Exercise Group Cell Component should not display anything for other exercise types" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="SortIconComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:14" time="1.161" tests="3">
    <testcase classname="SortIconComponent should set isAscending to true when direction is Ascending" name="SortIconComponent should set isAscending to true when direction is Ascending" time="0.036">
    </testcase>
    <testcase classname="SortIconComponent should set isDescending to true when direction is Descending" name="SortIconComponent should set isDescending to true when direction is Descending" time="0.008">
    </testcase>
    <testcase classname="SortIconComponent should set both isAscending and isDescending to false when direction is &quot;none&quot;" name="SortIconComponent should set both isAscending and isDescending to false when direction is &quot;none&quot;" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="NgbTimeStringAdapter" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:13" time="1.732" tests="6">
    <testcase classname="NgbTimeStringAdapter fromModel should split hh:mm:ss correctly" name="NgbTimeStringAdapter fromModel should split hh:mm:ss correctly" time="0.002">
    </testcase>
    <testcase classname="NgbTimeStringAdapter fromModel should handle single digits" name="NgbTimeStringAdapter fromModel should handle single digits" time="0.002">
    </testcase>
    <testcase classname="NgbTimeStringAdapter fromModel should handle null" name="NgbTimeStringAdapter fromModel should handle null" time="0.001">
    </testcase>
    <testcase classname="NgbTimeStringAdapter toModel should pad single digits so that hh:mm:ss is created" name="NgbTimeStringAdapter toModel should pad single digits so that hh:mm:ss is created" time="0.001">
    </testcase>
    <testcase classname="NgbTimeStringAdapter toModel should convert model to hh:mm:ss" name="NgbTimeStringAdapter toModel should convert model to hh:mm:ss" time="0">
    </testcase>
    <testcase classname="NgbTimeStringAdapter toModel should handle null" name="NgbTimeStringAdapter toModel should handle null" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CourseSidebarService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:14" time="1.055" tests="5">
    <testcase classname="CourseSidebarService should be created" name="CourseSidebarService should be created" time="0.015">
    </testcase>
    <testcase classname="CourseSidebarService should emit closeSidebar event" name="CourseSidebarService should emit closeSidebar event" time="0.017">
    </testcase>
    <testcase classname="CourseSidebarService should emit openSidebar event" name="CourseSidebarService should emit openSidebar event" time="0.006">
    </testcase>
    <testcase classname="CourseSidebarService should emit toggleSidebar event" name="CourseSidebarService should emit toggleSidebar event" time="0.003">
    </testcase>
    <testcase classname="CourseSidebarService should emit events when subscribing" name="CourseSidebarService should emit events when subscribing" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="LocalCIGuard" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:15" time="1.399" tests="2">
    <testcase classname="LocalCIGuard should allow access if PROFILE_LOCALCI is active" name="LocalCIGuard should allow access if PROFILE_LOCALCI is active" time="0.024">
    </testcase>
    <testcase classname="LocalCIGuard should not allow access if PROFILE_LOCALCI is not active" name="LocalCIGuard should not allow access if PROFILE_LOCALCI is not active" time="0.068">
    </testcase>
  </testsuite>
  <testsuite name="ExerciseImportTabsComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:13" time="3.589" tests="1">
    <testcase classname="ExerciseImportTabsComponent should show first tab when opened" name="ExerciseImportTabsComponent should show first tab when opened" time="0.42">
    </testcase>
  </testsuite>
  <testsuite name="AdminFeatureToggleComponentTest" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:15" time="3.108" tests="3">
    <testcase classname="AdminFeatureToggleComponentTest constructor should not load toggles" name="AdminFeatureToggleComponentTest constructor should not load toggles" time="0.069">
    </testcase>
    <testcase classname="AdminFeatureToggleComponentTest onInit test if features mapped successfully" name="AdminFeatureToggleComponentTest onInit test if features mapped successfully" time="0.02">
    </testcase>
    <testcase classname="AdminFeatureToggleComponentTest onFeatureToggle test if feature disabled on toggle" name="AdminFeatureToggleComponentTest onFeatureToggle test if feature disabled on toggle" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="ExportButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:15" time="3.642" tests="1">
    <testcase classname="ExportButtonComponent should initialize" name="ExportButtonComponent should initialize" time="0.224">
    </testcase>
  </testsuite>
  <testsuite name="StateStorageService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:17" time="2.671" tests="2">
    <testcase classname="StateStorageService should store a new previous URL" name="StateStorageService should store a new previous URL" time="0.018">
    </testcase>
    <testcase classname="StateStorageService should retrieve the previous URL" name="StateStorageService should retrieve the previous URL" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="TutorialGroupUtilizationIndicatorComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:17" time="2.268" tests="1">
    <testcase classname="TutorialGroupUtilizationIndicatorComponent should create" name="TutorialGroupUtilizationIndicatorComponent should create" time="0.079">
    </testcase>
  </testsuite>
  <testsuite name="CodeEditorHeaderComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:18" time="1.629" tests="2">
    <testcase classname="CodeEditorHeaderComponent should only allow tab sizes between 1 and the maximum size" name="CodeEditorHeaderComponent should only allow tab sizes between 1 and the maximum size" time="0.036">
    </testcase>
    <testcase classname="CodeEditorHeaderComponent should notify when the tab size was validated" name="CodeEditorHeaderComponent should notify when the tab size was validated" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Quiz Exercise Group Cell Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:19" time="0.754" tests="2">
    <testcase classname="Quiz Exercise Group Cell Component should display number of quiz questions" name="Quiz Exercise Group Cell Component should display number of quiz questions" time="0.053">
    </testcase>
    <testcase classname="Quiz Exercise Group Cell Component should not display anything for other exercise types" name="Quiz Exercise Group Cell Component should not display anything for other exercise types" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="SubmissionVersion Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:19" time="0.655" tests="1">
    <testcase classname="SubmissionVersion Service should get submission versions for submission" name="SubmissionVersion Service should get submission versions for submission" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="Ide Model Tests" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:20" time="0.737" tests="4">
    <testcase classname="Ide Model Tests should create an Ide instance with the given name and deepLink" name="Ide Model Tests should create an Ide instance with the given name and deepLink" time="0.001">
    </testcase>
    <testcase classname="Ide Model Tests should return false if either Ide is undefined" name="Ide Model Tests should return false if either Ide is undefined" time="0.001">
    </testcase>
    <testcase classname="Ide Model Tests should return false if Ide deepLinks are different" name="Ide Model Tests should return false if Ide deepLinks are different" time="0.001">
    </testcase>
    <testcase classname="Ide Model Tests should return true if Ide deepLinks are the same" name="Ide Model Tests should return true if Ide deepLinks are the same" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Parse links service test" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:20" time="0.819" tests="4">
    <testcase classname="Parse links service test Parse Links Service Test should throw an error when passed an empty string" name="Parse links service test Parse Links Service Test should throw an error when passed an empty string" time="0.107">
    </testcase>
    <testcase classname="Parse links service test Parse Links Service Test should throw an error when passed without comma" name="Parse links service test Parse Links Service Test should throw an error when passed without comma" time="0.008">
    </testcase>
    <testcase classname="Parse links service test Parse Links Service Test should throw an error when passed without semicolon" name="Parse links service test Parse Links Service Test should throw an error when passed without semicolon" time="0.007">
    </testcase>
    <testcase classname="Parse links service test Parse Links Service Test should return links when headers are passed" name="Parse links service test Parse Links Service Test should return links when headers are passed" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="GitDiffLineStatComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:20" time="0.942" tests="7">
    <testcase classname="GitDiffLineStatComponent Should show 5-0 boxes" name="GitDiffLineStatComponent Should show 5-0 boxes" time="0.095">
    </testcase>
    <testcase classname="GitDiffLineStatComponent Should show 4-1 boxes" name="GitDiffLineStatComponent Should show 4-1 boxes" time="0.018">
    </testcase>
    <testcase classname="GitDiffLineStatComponent Should show 3-2 boxes" name="GitDiffLineStatComponent Should show 3-2 boxes" time="0.018">
    </testcase>
    <testcase classname="GitDiffLineStatComponent Should show 2-3 boxes" name="GitDiffLineStatComponent Should show 2-3 boxes" time="0.011">
    </testcase>
    <testcase classname="GitDiffLineStatComponent Should show 1-4 boxes" name="GitDiffLineStatComponent Should show 1-4 boxes" time="0.016">
    </testcase>
    <testcase classname="GitDiffLineStatComponent Should show 0-5 boxes" name="GitDiffLineStatComponent Should show 0-5 boxes" time="0.009">
    </testcase>
    <testcase classname="GitDiffLineStatComponent Should show 1-1 boxes" name="GitDiffLineStatComponent Should show 1-1 boxes" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="CourseChatbotComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:19" time="1.955" tests="2">
    <testcase classname="CourseChatbotComponent should create" name="CourseChatbotComponent should create" time="0.247">
    </testcase>
    <testcase classname="CourseChatbotComponent should call switchTo when courseId changes" name="CourseChatbotComponent should call switchTo when courseId changes" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="FormStatusBarComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:21" time="0.96" tests="1">
    <testcase classname="FormStatusBarComponent should scroll to correct headline" name="FormStatusBarComponent should scroll to correct headline" time="0.103">
    </testcase>
  </testsuite>
  <testsuite name="IconCardComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:21" time="1.13" tests="3">
    <testcase classname="IconCardComponent should create" name="IconCardComponent should create" time="0.108">
    </testcase>
    <testcase classname="IconCardComponent should display the default headerIcon and headline" name="IconCardComponent should display the default headerIcon and headline" time="0.045">
    </testcase>
    <testcase classname="IconCardComponent should display custom headerIcon and headline when inputs are set" name="IconCardComponent should display custom headerIcon and headline when inputs are set" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="TaskCountWarningComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:21" time="2.089" tests="1">
    <testcase classname="TaskCountWarningComponent should correctly compare the number of tasks" name="TaskCountWarningComponent should correctly compare the number of tasks" time="0.105">
    </testcase>
  </testsuite>
  <testsuite name="TimeRangeValidator" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:21" time="2.347" tests="4">
    <testcase classname="TimeRangeValidator should mark time range as invalid if start time is after end time" name="TimeRangeValidator should mark time range as invalid if start time is after end time" time="0.015">
    </testcase>
    <testcase classname="TimeRangeValidator should return null if start time is before end time" name="TimeRangeValidator should return null if start time is before end time" time="0.001">
    </testcase>
    <testcase classname="TimeRangeValidator should return null if start time is not set" name="TimeRangeValidator should return null if start time is not set" time="0.001">
    </testcase>
    <testcase classname="TimeRangeValidator should return null if end time is not set" name="TimeRangeValidator should return null if end time is not set" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="PasswordService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:23" time="1.157" tests="1">
    <testcase classname="PasswordService should set a new password for the current user" name="PasswordService should set a new password for the current user" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackContentPipe" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:22" time="2.283" tests="3">
    <testcase classname="FeedbackContentPipe should return the detail text if present" name="FeedbackContentPipe should return the detail text if present" time="0.002">
    </testcase>
    <testcase classname="FeedbackContentPipe should return the grading instruction feedback if no direct detail text is present" name="FeedbackContentPipe should return the grading instruction feedback if no direct detail text is present" time="0.001">
    </testcase>
    <testcase classname="FeedbackContentPipe should return the grading instruction feedback if no direct detail text is present" name="FeedbackContentPipe should return the grading instruction feedback if no direct detail text is present" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CachedRepositoryFilesServiceService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:23" time="1.275" tests="2">
    <testcase classname="CachedRepositoryFilesServiceService should emit event if cachedRepositoryFilesChanged is invoked" name="CachedRepositoryFilesServiceService should emit event if cachedRepositoryFilesChanged is invoked" time="0.011">
    </testcase>
    <testcase classname="CachedRepositoryFilesServiceService should return observable if getCachedRepositoryFilesObservable is invoked" name="CachedRepositoryFilesServiceService should return observable if getCachedRepositoryFilesObservable is invoked" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="LinkifyService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:24" time="0.686" tests="2">
    <testcase classname="LinkifyService find should return array of links in the given text" name="LinkifyService find should return array of links in the given text" time="0.009">
    </testcase>
    <testcase classname="LinkifyService should mark isLinkPreviewRemoved to true when links are wrapped with &lt;&gt;" name="LinkifyService should mark isLinkPreviewRemoved to true when links are wrapped with &lt;&gt;" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="CollapsibleCardComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:22" time="3.893" tests="1">
    <testcase classname="CollapsibleCardComponent should collapse and expand exercise when collapse button is clicked" name="CollapsibleCardComponent should collapse and expand exercise when collapse button is clicked" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="ActivateService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:25" time="0.913" tests="1">
    <testcase classname="ActivateService should send a request to the server to activate the user" name="ActivateService should send a request to the server to activate the user" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="createNestedRequestOption" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:24" time="1.793" tests="4">
    <testcase classname="createNestedRequestOption should create HttpParams with nested keys" name="createNestedRequestOption should create HttpParams with nested keys" time="0.006">
    </testcase>
    <testcase classname="createNestedRequestOption should create HttpParams without parent key" name="createNestedRequestOption should create HttpParams without parent key" time="0.001">
    </testcase>
    <testcase classname="createNestedRequestOption should append sort parameters" name="createNestedRequestOption should append sort parameters" time="0.002">
    </testcase>
    <testcase classname="createNestedRequestOption should handle empty request object" name="createNestedRequestOption should handle empty request object" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="NgbDateDayjsAdapter" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:25" time="1.836" tests="6">
    <testcase classname="NgbDateDayjsAdapter should convert valid dates to struct" name="NgbDateDayjsAdapter should convert valid dates to struct" time="0.002">
    </testcase>
    <testcase classname="NgbDateDayjsAdapter should return null for null inputs" name="NgbDateDayjsAdapter should return null for null inputs" time="0.012">
    </testcase>
    <testcase classname="NgbDateDayjsAdapter should return null for other objects that are not dayjs object" name="NgbDateDayjsAdapter should return null for other objects that are not dayjs object" time="0.001">
    </testcase>
    <testcase classname="NgbDateDayjsAdapter should return null for invalid dates" name="NgbDateDayjsAdapter should return null for invalid dates" time="0.001">
    </testcase>
    <testcase classname="NgbDateDayjsAdapter should convert date structs to dayjs correctly" name="NgbDateDayjsAdapter should convert date structs to dayjs correctly" time="0.001">
    </testcase>
    <testcase classname="NgbDateDayjsAdapter should return null from toModel if null is passed in" name="NgbDateDayjsAdapter should return null from toModel if null is passed in" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TranslateDirective" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:26" time="0.786" tests="1">
    <testcase classname="TranslateDirective should change HTML" name="TranslateDirective should change HTML" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="Exercise Group Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:26" time="0.637" tests="1">
    <testcase classname="Exercise Group Service should set additional parameters correctly in delete" name="Exercise Group Service should set additional parameters correctly in delete" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="matchesRegexFully" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:26" time="0.621" tests="7">
    <testcase classname="matchesRegexFully should return true if regex is undefined" name="matchesRegexFully should return true if regex is undefined" time="0.002">
    </testcase>
    <testcase classname="matchesRegexFully should return false if input is undefined" name="matchesRegexFully should return false if input is undefined" time="0.001">
    </testcase>
    <testcase classname="matchesRegexFully should return true for a full match" name="matchesRegexFully should return true for a full match" time="0.001">
    </testcase>
    <testcase classname="matchesRegexFully should return false for a partial match" name="matchesRegexFully should return false for a partial match" time="0.001">
    </testcase>
    <testcase classname="matchesRegexFully should return true for a match with regex special characters" name="matchesRegexFully should return true for a match with regex special characters" time="0.001">
    </testcase>
    <testcase classname="matchesRegexFully should return false for no match" name="matchesRegexFully should return false for no match" time="0.001">
    </testcase>
    <testcase classname="matchesRegexFully should handle regex without ^ and $" name="matchesRegexFully should handle regex without ^ and $" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="StandardizedCompetencyFilterComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:26" time="0.806" tests="1">
    <testcase classname="StandardizedCompetencyFilterComponent should initialize" name="StandardizedCompetencyFilterComponent should initialize" time="0.101">
    </testcase>
  </testsuite>
  <testsuite name="SshUserSettingsFingerprintsService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:27" time="0.852" tests="1">
    <testcase classname="SshUserSettingsFingerprintsService should get SSH fingerprints" name="SshUserSettingsFingerprintsService should get SSH fingerprints" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="KnowledgeAreaTreeComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:27" time="1.687" tests="1">
    <testcase classname="KnowledgeAreaTreeComponent should initialize" name="KnowledgeAreaTreeComponent should initialize" time="0.063">
    </testcase>
  </testsuite>
  <testsuite name="Plagiarism Results Service" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:27" time="1" tests="1">
    <testcase classname="Plagiarism Results Service should make GET request to retrieve number of plagiarism results" name="Plagiarism Results Service should make GET request to retrieve number of plagiarism results" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="FileTypeService" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:27" time="1.615" tests="5">
    <testcase classname="FileTypeService should correctly identify binary file content" name="FileTypeService should correctly identify binary file content" time="0.016">
    </testcase>
    <testcase classname="FileTypeService should correctly identify binary file content" name="FileTypeService should correctly identify binary file content" time="0.009">
    </testcase>
    <testcase classname="FileTypeService should correctly identify binary file content" name="FileTypeService should correctly identify binary file content" time="0.01">
    </testcase>
    <testcase classname="FileTypeService should correctly identify binary file content" name="FileTypeService should correctly identify binary file content" time="0.007">
    </testcase>
    <testcase classname="FileTypeService should correctly identify binary file content" name="FileTypeService should correctly identify binary file content" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="SecondCorrectionEnableButtonComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:28" time="0.922" tests="1">
    <testcase classname="SecondCorrectionEnableButtonComponent test call" name="SecondCorrectionEnableButtonComponent test call" time="0.051">
    </testcase>
  </testsuite>
  <testsuite name="CloseEditLectureModalComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:28" time="2.377" tests="1">
    <testcase classname="CloseEditLectureModalComponent should create" name="CloseEditLectureModalComponent should create" time="0.081">
    </testcase>
  </testsuite>
  <testsuite name="Fireworks" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:29" time="2.185" tests="2">
    <testcase classname="Fireworks should initialize" name="Fireworks should initialize" time="0.08">
    </testcase>
    <testcase classname="Fireworks should be visible" name="Fireworks should be visible" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Course Exercise Card Component" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:28" time="3.332" tests="1">
    <testcase classname="Course Exercise Card Component should initialize" name="Course Exercise Card Component should initialize" time="0.161">
    </testcase>
  </testsuite>
  <testsuite name="Exam Exercise Update Service Tests" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:31" time="2.465" tests="2">
    <testcase classname="Exam Exercise Update Service Tests should forward navigation call to observable" name="Exam Exercise Update Service Tests should forward navigation call to observable" time="0.009">
    </testcase>
    <testcase classname="Exam Exercise Update Service Tests should forward updateLiveExam calls to observable" name="Exam Exercise Update Service Tests should forward updateLiveExam calls to observable" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="QuotePipe" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:32" time="1.301" tests="5">
    <testcase classname="QuotePipe should return an empty string if given nothing" name="QuotePipe should return an empty string if given nothing" time="0.002">
    </testcase>
    <testcase classname="QuotePipe should return an empty string if given nothing" name="QuotePipe should return an empty string if given nothing" time="0.003">
    </testcase>
    <testcase classname="QuotePipe should wrap the text in quoted if non-empty" name="QuotePipe should wrap the text in quoted if non-empty" time="0">
    </testcase>
    <testcase classname="QuotePipe should not add the prefix in the empty case" name="QuotePipe should not add the prefix in the empty case" time="0.001">
    </testcase>
    <testcase classname="QuotePipe should add a prefix if specified" name="QuotePipe should add a prefix if specified" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="DragItemComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:33" time="0.825" tests="1">
    <testcase classname="DragItemComponent should initialize" name="DragItemComponent should initialize" time="0.065">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackNodeComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:33" time="1.468" tests="2">
    <testcase classname="FeedbackNodeComponent should set specific node type correctly for feedback item" name="FeedbackNodeComponent should set specific node type correctly for feedback item" time="0.002">
    </testcase>
    <testcase classname="FeedbackNodeComponent should set specific node type correctly for feedback group" name="FeedbackNodeComponent should set specific node type correctly for feedback group" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ReEvaluateShortAnswerQuestionComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:31" time="3.652" tests="1">
    <testcase classname="ReEvaluateShortAnswerQuestionComponent should initialize component" name="ReEvaluateShortAnswerQuestionComponent should initialize component" time="0.587">
    </testcase>
  </testsuite>
  <testsuite name="RemoveSecondsPipe" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:34" time="0.685" tests="3">
    <testcase classname="RemoveSecondsPipe should remove seconds from a time string" name="RemoveSecondsPipe should remove seconds from a time string" time="0.003">
    </testcase>
    <testcase classname="RemoveSecondsPipe should convert undefined to an empty string" name="RemoveSecondsPipe should convert undefined to an empty string" time="0.001">
    </testcase>
    <testcase classname="RemoveSecondsPipe should not change a time string without seconds" name="RemoveSecondsPipe should not change a time string without seconds" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="EmojiUtils" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:35" time="0.772" tests="9">
    <testcase classname="EmojiUtils should return the correct emoji sheet url" name="EmojiUtils should return the correct emoji sheet url" time="0.002">
    </testcase>
    <testcase classname="EmojiUtils should return the correct dark emoji url" name="EmojiUtils should return the correct dark emoji url" time="0.001">
    </testcase>
    <testcase classname="EmojiUtils should return the correct dark emoji url" name="EmojiUtils should return the correct dark emoji url" time="0.003">
    </testcase>
    <testcase classname="EmojiUtils should return the correct dark emoji url" name="EmojiUtils should return the correct dark emoji url" time="0">
    </testcase>
    <testcase classname="EmojiUtils should return the correct dark emoji url" name="EmojiUtils should return the correct dark emoji url" time="0.001">
    </testcase>
    <testcase classname="EmojiUtils should return nothing for emojis that are not be replaced" name="EmojiUtils should return nothing for emojis that are not be replaced" time="0">
    </testcase>
    <testcase classname="EmojiUtils should return nothing for emojis that are not be replaced" name="EmojiUtils should return nothing for emojis that are not be replaced" time="0.002">
    </testcase>
    <testcase classname="EmojiUtils should return nothing for emojis that are not be replaced" name="EmojiUtils should return nothing for emojis that are not be replaced" time="0.001">
    </testcase>
    <testcase classname="EmojiUtils should return nothing for emojis that are not be replaced" name="EmojiUtils should return nothing for emojis that are not be replaced" time="0">
    </testcase>
  </testsuite>
  <testsuite name="LearningPathExerciseComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:28" time="6.271" tests="1">
    <testcase classname="LearningPathExerciseComponent should initialize" name="LearningPathExerciseComponent should initialize" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="translation config" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:35" time="1.059" tests="2">
    <testcase classname="translation config should return the key with error prefix" name="translation config should return the key with error prefix" time="0.003">
    </testcase>
    <testcase classname="translation config translatePartialLoader should return a TranslateHttpLoader" name="translation config translatePartialLoader should return a TranslateHttpLoader" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="FitTextDirective" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:35" time="0.988" tests="1">
    <testcase classname="FitTextDirective should create an instance" name="FitTextDirective should create an instance" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="StarRatingComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:36" time="0.765" tests="1">
    <testcase classname="StarRatingComponent should create" name="StarRatingComponent should create" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="CryptoUtils" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:36" time="0.714" tests="2">
    <testcase classname="CryptoUtils sha1Hex should compute Hash for &quot;foo&quot;" name="CryptoUtils sha1Hex should compute Hash for &quot;foo&quot;" time="0.002">
    </testcase>
    <testcase classname="CryptoUtils sha1Hex should compute Hash for &quot;bar&quot;" name="CryptoUtils sha1Hex should compute Hash for &quot;bar&quot;" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ResizeableContainerComponent" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:35" time="1.852" tests="1">
    <testcase classname="ResizeableContainerComponent should create" name="ResizeableContainerComponent should create" time="0.101">
    </testcase>
  </testsuite>
  <testsuite name="Profile Info" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:36" time="0.721" tests="1">
    <testcase classname="Profile Info has editable build plan should have editable build plan editor for profile &quot;jenkins&quot;: true" name="Profile Info has editable build plan should have editable build plan editor for profile &quot;jenkins&quot;: true" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="filterNaN" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:37" time="1.121" tests="2">
    <testcase classname="filterNaN should return 0 for NaN" name="filterNaN should return 0 for NaN" time="0.002">
    </testcase>
    <testcase classname="filterNaN should return number for a number" name="filterNaN should return number for a number" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ConversationUtil" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:37" time="2.469" tests="1">
    <testcase classname="ConversationUtil should return the correct user label" name="ConversationUtil should return the correct user label" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="SemesterUtils" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:36" time="2.725" tests="1">
    <testcase classname="SemesterUtils getSemesters should get semesters around current year" name="SemesterUtils getSemesters should get semesters around current year" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="WeekDays" errors="0" failures="0" skipped="0" timestamp="2025-03-31T11:26:37" time="2.161" tests="1">
    <testcase classname="WeekDays should return the correct translation key" name="WeekDays should return the correct translation key" time="0.006">
    </testcase>
  </testsuite>
</testsuites>